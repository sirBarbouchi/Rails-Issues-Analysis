url,html_url,issue_url,id,node_id,user,created_at,updated_at,author_association,body,reactions,performed_via_github_app,issue_id
https://api.github.com/repos/rails/rails/issues/comments/1750107719,https://github.com/rails/rails/issues/49510#issuecomment-1750107719,https://api.github.com/repos/rails/rails/issues/49510,1750107719,IC_kwDNIULOaFCGRw,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-10-06T07:22:49Z,2023-10-06T07:22:49Z,MEMBER,It is likely duplicate with #49506 .,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1750107719/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49510
https://api.github.com/repos/rails/rails/issues/comments/1750115658,https://github.com/rails/rails/issues/49510#issuecomment-1750115658,https://api.github.com/repos/rails/rails/issues/49510,1750115658,IC_kwDNIULOaFClSg,"{'login': 'bblaal', 'id': 142652504, 'node_id': 'U_kgDOCIC0WA', 'avatar_url': 'https://avatars.githubusercontent.com/u/142652504?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bblaal', 'html_url': 'https://github.com/bblaal', 'followers_url': 'https://api.github.com/users/bblaal/followers', 'following_url': 'https://api.github.com/users/bblaal/following{/other_user}', 'gists_url': 'https://api.github.com/users/bblaal/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bblaal/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bblaal/subscriptions', 'organizations_url': 'https://api.github.com/users/bblaal/orgs', 'repos_url': 'https://api.github.com/users/bblaal/repos', 'events_url': 'https://api.github.com/users/bblaal/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bblaal/received_events', 'type': 'User', 'site_admin': False}",2023-10-06T07:29:42Z,2023-10-06T07:29:42Z,NONE,"even after using `require ""active_support/core_ext/hash""`, still getting the same error as shown above.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1750115658/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49510
https://api.github.com/repos/rails/rails/issues/comments/1750151517,https://github.com/rails/rails/issues/49510#issuecomment-1750151517,https://api.github.com/repos/rails/rails/issues/49510,1750151517,IC_kwDNIULOaFExXQ,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-10-06T07:58:48Z,2023-10-06T07:58:48Z,CONTRIBUTOR,"Duplicate of https://github.com/rails/rails/issues/49495.
You need to call `require ""active_support""`.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1750151517/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49510
https://api.github.com/repos/rails/rails/issues/comments/1749775352,https://github.com/rails/rails/pull/49503#issuecomment-1749775352,https://api.github.com/repos/rails/rails/issues/49503,1749775352,IC_kwDNIULOaEtz-A,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T23:08:06Z,2023-10-05T23:08:06Z,MEMBER,@byroot wdyt about backporting this?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749775352/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49503
https://api.github.com/repos/rails/rails/issues/comments/1749567525,https://github.com/rails/rails/issues/49502#issuecomment-1749567525,https://api.github.com/repos/rails/rails/issues/49502,1749567525,IC_kwDNIULOaEhIJQ,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T20:03:32Z,2023-10-05T20:03:32Z,CONTRIBUTOR,I was able to identity the problem - going to open a PR.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749567525/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,49502
https://api.github.com/repos/rails/rails/issues/comments/1749084158,https://github.com/rails/rails/issues/49500#issuecomment-1749084158,https://api.github.com/repos/rails/rails/issues/49500,1749084158,IC_kwDNIULOaEDn_g,"{'login': 'deanpcmad', 'id': 425200, 'node_id': 'MDQ6VXNlcjQyNTIwMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/425200?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/deanpcmad', 'html_url': 'https://github.com/deanpcmad', 'followers_url': 'https://api.github.com/users/deanpcmad/followers', 'following_url': 'https://api.github.com/users/deanpcmad/following{/other_user}', 'gists_url': 'https://api.github.com/users/deanpcmad/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/deanpcmad/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/deanpcmad/subscriptions', 'organizations_url': 'https://api.github.com/users/deanpcmad/orgs', 'repos_url': 'https://api.github.com/users/deanpcmad/repos', 'events_url': 'https://api.github.com/users/deanpcmad/events{/privacy}', 'received_events_url': 'https://api.github.com/users/deanpcmad/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T15:00:01Z,2023-10-05T15:00:01Z,NONE,"Having going back through the commits and testing against each ref, I've found that it's PR #49470 that has caused this","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749084158/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49500
https://api.github.com/repos/rails/rails/issues/comments/1749100170,https://github.com/rails/rails/issues/49500#issuecomment-1749100170,https://api.github.com/repos/rails/rails/issues/49500,1749100170,IC_kwDNIULOaEEmig,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T15:08:56Z,2023-10-05T15:10:11Z,MEMBER,"That is the intended behavior. It was mode to detect when the schema would not work in production. The model doesn't have a table, so either you remove action text from the application, or you install its migration and run them.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749100170/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,49500
https://api.github.com/repos/rails/rails/issues/comments/1749128785,https://github.com/rails/rails/issues/49500#issuecomment-1749128785,https://api.github.com/repos/rails/rails/issues/49500,1749128785,IC_kwDNIULOaEGWUQ,"{'login': 'deanpcmad', 'id': 425200, 'node_id': 'MDQ6VXNlcjQyNTIwMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/425200?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/deanpcmad', 'html_url': 'https://github.com/deanpcmad', 'followers_url': 'https://api.github.com/users/deanpcmad/followers', 'following_url': 'https://api.github.com/users/deanpcmad/following{/other_user}', 'gists_url': 'https://api.github.com/users/deanpcmad/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/deanpcmad/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/deanpcmad/subscriptions', 'organizations_url': 'https://api.github.com/users/deanpcmad/orgs', 'repos_url': 'https://api.github.com/users/deanpcmad/repos', 'events_url': 'https://api.github.com/users/deanpcmad/events{/privacy}', 'received_events_url': 'https://api.github.com/users/deanpcmad/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T15:24:37Z,2023-10-05T15:24:37Z,NONE,"This was a brand new Rails 7.1.0 app, which action text wasn't installed or activated though","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749128785/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49500
https://api.github.com/repos/rails/rails/issues/comments/1749136722,https://github.com/rails/rails/issues/49500#issuecomment-1749136722,https://api.github.com/repos/rails/rails/issues/49500,1749136722,IC_kwDNIULOaEG1Ug,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T15:28:55Z,2023-10-05T15:30:18Z,MEMBER,"> This was a brand new Rails 7.1.0 app, which action text wasn't installed or activated though

https://github.com/deanpcmad/blogtest/blob/62f67c3c773f27886cef80843ecee078d6c71603/config/application.rb#L3

`rails/all` initializes all of the Rails frameworks

Edit: I do agree that it seems a bit odd that tests will fail after running `rails new` without running `:install` for certain frameworks, that does seem like a bad user experience","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749136722/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49500
https://api.github.com/repos/rails/rails/issues/comments/1749174750,https://github.com/rails/rails/issues/49500#issuecomment-1749174750,https://api.github.com/repos/rails/rails/issues/49500,1749174750,IC_kwDNIULOaEJJ3g,"{'login': 'deanpcmad', 'id': 425200, 'node_id': 'MDQ6VXNlcjQyNTIwMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/425200?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/deanpcmad', 'html_url': 'https://github.com/deanpcmad', 'followers_url': 'https://api.github.com/users/deanpcmad/followers', 'following_url': 'https://api.github.com/users/deanpcmad/following{/other_user}', 'gists_url': 'https://api.github.com/users/deanpcmad/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/deanpcmad/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/deanpcmad/subscriptions', 'organizations_url': 'https://api.github.com/users/deanpcmad/orgs', 'repos_url': 'https://api.github.com/users/deanpcmad/repos', 'events_url': 'https://api.github.com/users/deanpcmad/events{/privacy}', 'received_events_url': 'https://api.github.com/users/deanpcmad/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T15:49:40Z,2023-10-05T15:50:02Z,NONE,"After setting the following in `config/application.rb`, tests now pass:

```ruby
require ""active_record/railtie""
# require ""active_storage/engine""
require ""action_controller/railtie""
require ""action_view/railtie""
require ""action_mailer/railtie""
require ""active_job/railtie""
require ""action_cable/engine""
# require ""action_mailbox/engine""
# require ""action_text/engine""
require ""rails/test_unit/railtie""
```

But you're right, it's not a good user experience. Especially for new users. I've wasted about 2 hours of work time trying to fix this as I thought it was an issue with CI :laughing: ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749174750/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,49500
https://api.github.com/repos/rails/rails/issues/comments/1749841334,https://github.com/rails/rails/issues/49500#issuecomment-1749841334,https://api.github.com/repos/rails/rails/issues/49500,1749841334,IC_kwDNIULOaEx1tg,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-10-06T00:48:21Z,2023-10-06T00:57:05Z,MEMBER,"Reopening as I don't think this is a good first run experience, but if it's the approach we are taking it should be in the getting started guide. Seems unlikely to me that every app will setup action text, active storage, and action mailbox before they attempt a CI run.

Edit: am I right in saying this issue does not exist in production, only in CI? As far as I know you can run `rails/all` in production even if you haven't created the action text tables, and it'll work fine as long as you don't access action text functionality.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749841334/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49500
https://api.github.com/repos/rails/rails/issues/comments/1749852915,https://github.com/rails/rails/issues/49500#issuecomment-1749852915,https://api.github.com/repos/rails/rails/issues/49500,1749852915,IC_kwDNIULOaEyi8w,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-10-06T01:06:08Z,2023-10-06T01:06:08Z,MEMBER,Thoughts on this? https://github.com/rails/rails/pull/49509,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749852915/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49500
https://api.github.com/repos/rails/rails/issues/comments/1748906255,https://github.com/rails/rails/issues/49499#issuecomment-1748906255,https://api.github.com/repos/rails/rails/issues/49499,1748906255,IC_kwDNIULOaD4xDw,"{'login': 'Earlopain', 'id': 14981592, 'node_id': 'MDQ6VXNlcjE0OTgxNTky', 'avatar_url': 'https://avatars.githubusercontent.com/u/14981592?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Earlopain', 'html_url': 'https://github.com/Earlopain', 'followers_url': 'https://api.github.com/users/Earlopain/followers', 'following_url': 'https://api.github.com/users/Earlopain/following{/other_user}', 'gists_url': 'https://api.github.com/users/Earlopain/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Earlopain/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Earlopain/subscriptions', 'organizations_url': 'https://api.github.com/users/Earlopain/orgs', 'repos_url': 'https://api.github.com/users/Earlopain/repos', 'events_url': 'https://api.github.com/users/Earlopain/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Earlopain/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T13:31:03Z,2023-10-05T13:34:43Z,CONTRIBUTOR,It seems this check behaves differently in esm. https://github.com/rails/rails/blob/2d271a4b901e7a7dae8ba4e5e83edfebdee278e8/actionview/app/javascript/rails-ujs/index.js#L152,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1748906255/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49499
https://api.github.com/repos/rails/rails/issues/comments/1749077931,https://github.com/rails/rails/issues/49499#issuecomment-1749077931,https://api.github.com/repos/rails/rails/issues/49499,1749077931,IC_kwDNIULOaEDPqw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T14:56:34Z,2023-10-05T14:56:34Z,MEMBER,Yeah. This is by design. You should not need to call `start` in your application. Rails does it automatically.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749077931/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49499
https://api.github.com/repos/rails/rails/issues/comments/1749086834,https://github.com/rails/rails/issues/49499#issuecomment-1749086834,https://api.github.com/repos/rails/rails/issues/49499,1749086834,IC_kwDNIULOaEDycg,"{'login': 'Earlopain', 'id': 14981592, 'node_id': 'MDQ6VXNlcjE0OTgxNTky', 'avatar_url': 'https://avatars.githubusercontent.com/u/14981592?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Earlopain', 'html_url': 'https://github.com/Earlopain', 'followers_url': 'https://api.github.com/users/Earlopain/followers', 'following_url': 'https://api.github.com/users/Earlopain/following{/other_user}', 'gists_url': 'https://api.github.com/users/Earlopain/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Earlopain/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Earlopain/subscriptions', 'organizations_url': 'https://api.github.com/users/Earlopain/orgs', 'repos_url': 'https://api.github.com/users/Earlopain/repos', 'events_url': 'https://api.github.com/users/Earlopain/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Earlopain/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T15:01:35Z,2023-10-05T15:04:38Z,CONTRIBUTOR,"Why close this? This wasn't the previous behaviour. Even the getting started guide says to explicitly call start.
![image](https://github.com/rails/rails/assets/14981592/2a1f7862-bb81-4e65-bbe6-28d0f1771c84)

To me this looks like an unintended change from #45546

It makes sense to automatically execute it when for example loading it through something like `<script src=""rails-ujs.js""`> but here you are in a different environment.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749086834/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49499
https://api.github.com/repos/rails/rails/issues/comments/1749092948,https://github.com/rails/rails/issues/49499#issuecomment-1749092948,https://api.github.com/repos/rails/rails/issues/49499,1749092948,IC_kwDNIULOaEEKVA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T15:04:45Z,2023-10-05T15:12:55Z,MEMBER,"Yeah I agree with @Earlopain, I think `start()` is only expected to be called automatically if compiling the js with Sprockets (or at least that was the intention of the if statement linked above

Edit: I'm happy to take a look at fixing this, but it may not be for a few days if anyone want to try before me","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749092948/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49499
https://api.github.com/repos/rails/rails/issues/comments/1749294218,https://github.com/rails/rails/issues/49494#issuecomment-1749294218,https://api.github.com/repos/rails/rails/issues/49494,1749294218,IC_kwDNIULOaEQcig,"{'login': 'Edouard-chin', 'id': 8122246, 'node_id': 'MDQ6VXNlcjgxMjIyNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8122246?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Edouard-chin', 'html_url': 'https://github.com/Edouard-chin', 'followers_url': 'https://api.github.com/users/Edouard-chin/followers', 'following_url': 'https://api.github.com/users/Edouard-chin/following{/other_user}', 'gists_url': 'https://api.github.com/users/Edouard-chin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Edouard-chin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Edouard-chin/subscriptions', 'organizations_url': 'https://api.github.com/users/Edouard-chin/orgs', 'repos_url': 'https://api.github.com/users/Edouard-chin/repos', 'events_url': 'https://api.github.com/users/Edouard-chin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Edouard-chin/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T16:44:46Z,2023-10-05T16:44:46Z,MEMBER,"Ah yeah that's true, I realise this could have been clearer.

Feel free to assign me on the issue @rafaelfranca ! ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749294218/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49494
https://api.github.com/repos/rails/rails/issues/comments/1747807064,https://github.com/rails/rails/issues/49489#issuecomment-1747807064,https://api.github.com/repos/rails/rails/issues/49489,1747807064,IC_kwDNIULOaC1rWA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-10-04T23:52:55Z,2023-10-04T23:52:55Z,MEMBER,"I'm not sure what is the problem here. Browsers know how to deal with mixed case header names. I know we could keep it consistent, but well, Rack makes that almost impossible without making Rails code a mess.

Does returning mixed case cause any bad behavior?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1747807064/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49489
https://api.github.com/repos/rails/rails/issues/comments/1747925186,https://github.com/rails/rails/issues/49489#issuecomment-1747925186,https://api.github.com/repos/rails/rails/issues/49489,1747925186,IC_kwDNIULOaC84wg,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T02:02:03Z,2023-10-05T03:06:25Z,MEMBER,"This seems like something we should specifically call out in the upgrading guide. For new apps which will get Rack 3 immediately, maybe we should update the `development.rb` template? Since it's only development, maybe we wait until Rack < 3 is dropped to change?

> Related, `Content-Length` appears to be mixed-case all the time (both static files and normal controller actions).

~Let me see if I can track this down, I was able to reproduce~

Rails correctly returns `content-length` all the way up to Puma, and I found where Puma changes it to `Content-Length`. I'll see if they are open to changing since I agree it's confusing.

I opened an issue: https://github.com/puma/puma/issues/3250","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1747925186/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49489
https://api.github.com/repos/rails/rails/issues/comments/1748319983,https://github.com/rails/rails/issues/49489#issuecomment-1748319983,https://api.github.com/repos/rails/rails/issues/49489,1748319983,IC_kwDNIULOaDU-7w,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T07:58:32Z,2023-10-05T07:58:32Z,MEMBER,But is there any behavior problem or is just annoying inconsistency? Does anything stop working because we are using inconsistent casing?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1748319983/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49489
https://api.github.com/repos/rails/rails/issues/comments/1749349754,https://github.com/rails/rails/issues/49489#issuecomment-1749349754,https://api.github.com/repos/rails/rails/issues/49489,1749349754,IC_kwDNIULOaET1eg,"{'login': 'zarqman', 'id': 22556, 'node_id': 'MDQ6VXNlcjIyNTU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/22556?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zarqman', 'html_url': 'https://github.com/zarqman', 'followers_url': 'https://api.github.com/users/zarqman/followers', 'following_url': 'https://api.github.com/users/zarqman/following{/other_user}', 'gists_url': 'https://api.github.com/users/zarqman/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zarqman/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zarqman/subscriptions', 'organizations_url': 'https://api.github.com/users/zarqman/orgs', 'repos_url': 'https://api.github.com/users/zarqman/repos', 'events_url': 'https://api.github.com/users/zarqman/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zarqman/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T17:25:10Z,2023-10-05T17:26:33Z,CONTRIBUTOR,"@skipkayhil, good catch on Puma and `content-length`!

@rafaelfranca, no, inconsistent casing won't break browsers as they process header names case-insensitively.

However, the Rack 3 spec says that header names must be lower-case. This can be relevant for any added middlewares that interact with headers. And in fact, that's how I ran across this. 

I maintain the `smart_assets` gem which provides middleware that looks for, and sometimes modifies, the `cache-control` header. I'm working on updating it for Rails 7.1 and Rack 3. When Rack 3 is in use, I was surprised to see the `Cache-Control` header still mixed-case, and had to invalidate my initial assumption that I could handle headers by detecting the version of the Rack gem (I was ending up with both a `Cache-Control` and `cache-control` header). That's no problem at all to handle on my end, and given the user configurability of `public_file_server.headers`, I'll probably have to anyway.

But, I thought it might have been something missed in the Rails 7.1 update related to Rack 3, and so I opened this issue.

> This seems like something we should specifically call out in the upgrading guide. For new apps which will get Rack 3 immediately, maybe we should update the development.rb template? Since it's only development, maybe we wait until Rack < 3 is dropped to change?

Given the expected mixed use of Rack 2 and 3 though the Rails 7.1 lifecycle, adding to the upgrade guide and updating the environment templates both seem favorable--especially with Rack 3 as the default for new apps. Note that this header is in the `test` template too.

That raises one more question: since `public_file_server.enabled = true` is the new default in `production` (#47137), should `public_file_server.headers` be added to the production template as well (possibly matching `test`'s `1.hour`)?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749349754/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49489
https://api.github.com/repos/rails/rails/issues/comments/1747828252,https://github.com/rails/rails/pull/49488#issuecomment-1747828252,https://api.github.com/repos/rails/rails/issues/49488,1747828252,IC_kwDNIULOaC2-HA,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T00:17:30Z,2023-10-05T00:17:30Z,MEMBER,It looks the base main branch is behind and some tests are failing.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1747828252/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49488
https://api.github.com/repos/rails/rails/issues/comments/1747877764,https://github.com/rails/rails/pull/49488#issuecomment-1747877764,https://api.github.com/repos/rails/rails/issues/49488,1747877764,IC_kwDNIULOaC5_hA,"{'login': 'pjambet', 'id': 717637, 'node_id': 'MDQ6VXNlcjcxNzYzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/717637?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/pjambet', 'html_url': 'https://github.com/pjambet', 'followers_url': 'https://api.github.com/users/pjambet/followers', 'following_url': 'https://api.github.com/users/pjambet/following{/other_user}', 'gists_url': 'https://api.github.com/users/pjambet/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/pjambet/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/pjambet/subscriptions', 'organizations_url': 'https://api.github.com/users/pjambet/orgs', 'repos_url': 'https://api.github.com/users/pjambet/repos', 'events_url': 'https://api.github.com/users/pjambet/events{/privacy}', 'received_events_url': 'https://api.github.com/users/pjambet/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T01:05:32Z,2023-10-05T01:05:32Z,CONTRIBUTOR,"Oops, my bad, just pushed after a rebase on latest main. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1747877764/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49488
https://api.github.com/repos/rails/rails/issues/comments/1747243347,https://github.com/rails/rails/pull/49485#issuecomment-1747243347,https://api.github.com/repos/rails/rails/issues/49485,1747243347,IC_kwDNIULOaCTRUw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-10-04T16:22:08Z,2023-10-04T16:22:08Z,CONTRIBUTOR,"Lgtm, but that was intentional - I was thinking that testing against one adapter would be enough.
In other PRs I saw that people mentioned that they use ActiveRecord's tests to test other adapters in their gems. So this test will probably fail (as SQL syntax error) for SQLServer or Oracle and more follow up PRs will be going 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1747243347/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49485
https://api.github.com/repos/rails/rails/issues/comments/1745098429,https://github.com/rails/rails/pull/49472#issuecomment-1745098429,https://api.github.com/repos/rails/rails/issues/49472,1745098429,IC_kwDNIULOaAQWvQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T14:29:40Z,2023-10-03T14:29:40Z,MEMBER,"There are a lot of mentions to `resourceful` in the documentation, why should we only change this one?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745098429/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49472
https://api.github.com/repos/rails/rails/issues/comments/1745172933,https://github.com/rails/rails/pull/49472#issuecomment-1745172933,https://api.github.com/repos/rails/rails/issues/49472,1745172933,IC_kwDNIULOaAU5xQ,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T15:06:48Z,2023-10-03T15:06:48Z,CONTRIBUTOR,"Here's a suggestion/idea:  What if we had a literal definition of what Resourceful is earlier in the docs and then folks can use context to infer the meaning throughout the rest of them?

Mateus, can you turn CI on for this PR?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745172933/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49472
https://api.github.com/repos/rails/rails/issues/comments/1745365145,https://github.com/rails/rails/pull/49472#issuecomment-1745365145,https://api.github.com/repos/rails/rails/issues/49472,1745365145,IC_kwDNIULOaAgomQ,"{'login': 'mateusdeap', 'id': 14188887, 'node_id': 'MDQ6VXNlcjE0MTg4ODg3', 'avatar_url': 'https://avatars.githubusercontent.com/u/14188887?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mateusdeap', 'html_url': 'https://github.com/mateusdeap', 'followers_url': 'https://api.github.com/users/mateusdeap/followers', 'following_url': 'https://api.github.com/users/mateusdeap/following{/other_user}', 'gists_url': 'https://api.github.com/users/mateusdeap/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mateusdeap/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mateusdeap/subscriptions', 'organizations_url': 'https://api.github.com/users/mateusdeap/orgs', 'repos_url': 'https://api.github.com/users/mateusdeap/repos', 'events_url': 'https://api.github.com/users/mateusdeap/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mateusdeap/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T16:51:42Z,2023-10-03T16:51:42Z,NONE,"@rafaelfranca Since I just kind of jumped on the issue based on the discussion, I can't really give an answer to that. But I'd suppose it would depend on the use.

However, maybe @paulreece's suggestion is worth looking into? I'm not super sure, however, where we could add that definition. Maybe as one of those attention blocks?

Also, to turn on CI I just need to remove the `[ci skip]` tag in the title? I thought that documentation changes should have CI off, according to the guidelines.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745365145/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49472
https://api.github.com/repos/rails/rails/issues/comments/1745372091,https://github.com/rails/rails/pull/49472#issuecomment-1745372091,https://api.github.com/repos/rails/rails/issues/49472,1745372091,IC_kwDNIULOaAhDuw,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T16:56:24Z,2023-10-03T16:56:24Z,CONTRIBUTOR,"Running CI makes sure the linters run, I think the new default will be to have CI run for Docs.

If Rafael doesn't think this PR is a good idea I'm sure you could update the contributing docs in regards to not skipping CI.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745372091/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49472
https://api.github.com/repos/rails/rails/issues/comments/1745375838,https://github.com/rails/rails/pull/49472#issuecomment-1745375838,https://api.github.com/repos/rails/rails/issues/49472,1745375838,IC_kwDNIULOaAhSXg,"{'login': 'mateusdeap', 'id': 14188887, 'node_id': 'MDQ6VXNlcjE0MTg4ODg3', 'avatar_url': 'https://avatars.githubusercontent.com/u/14188887?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mateusdeap', 'html_url': 'https://github.com/mateusdeap', 'followers_url': 'https://api.github.com/users/mateusdeap/followers', 'following_url': 'https://api.github.com/users/mateusdeap/following{/other_user}', 'gists_url': 'https://api.github.com/users/mateusdeap/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mateusdeap/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mateusdeap/subscriptions', 'organizations_url': 'https://api.github.com/users/mateusdeap/orgs', 'repos_url': 'https://api.github.com/users/mateusdeap/repos', 'events_url': 'https://api.github.com/users/mateusdeap/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mateusdeap/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T16:58:59Z,2023-10-03T16:58:59Z,NONE,"Yeah, I'm fine with whatever is decided. Guess I'll wait to see what's to be done then.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745375838/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49472
https://api.github.com/repos/rails/rails/issues/comments/1745742739,https://github.com/rails/rails/pull/49472#issuecomment-1745742739,https://api.github.com/repos/rails/rails/issues/49472,1745742739,IC_kwDNIULOaA3rkw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T21:19:35Z,2023-10-03T21:19:35Z,MEMBER,"> If Rafael doesn't think this PR is a good idea I'm sure you could update the contributing docs in regards to not skipping CI.

The current text:

> To do so, make changes to Rails guides source files (located [here](https://github.com/rails/rails/tree/main/guides/source) on GitHub) or RDoc comments in source code. Then open a pull request to apply your changes to the main branch. Use [ci skip] in your pull request title to avoid running the CI build for documentation changes.

You were actually correct to have `[ci skip]` in the PR title. As you can see, Github Actions have been running on each commit, which is what we want. Buildkite sees the `[ci skip]` in the PR title and does not run (since tests don't need to run for doc changes, and the whole thing takes 10-15 minutes)

What you _don't_ want is to include `[ci skip]` in the _commit message_, as this will skip Github Actions.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745742739/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49472
https://api.github.com/repos/rails/rails/issues/comments/1745788184,https://github.com/rails/rails/pull/49472#issuecomment-1745788184,https://api.github.com/repos/rails/rails/issues/49472,1745788184,IC_kwDNIULOaA6dGA,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T21:55:45Z,2023-10-03T21:55:45Z,CONTRIBUTOR,Ahhh thank you for clarifying!! Just ignore what I said earlier @mateusdeap. Apologies for the confusion.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745788184/reactions', 'total_count': 2, '+1': 1, '-1': 0, 'laugh': 1, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49472
https://api.github.com/repos/rails/rails/issues/comments/1744439725,https://github.com/rails/rails/issues/49468#issuecomment-1744439725,https://api.github.com/repos/rails/rails/issues/49468,1744439725,IC_kwDNIULOZ_oJrQ,"{'login': 'Jay0921', 'id': 12777550, 'node_id': 'MDQ6VXNlcjEyNzc3NTUw', 'avatar_url': 'https://avatars.githubusercontent.com/u/12777550?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Jay0921', 'html_url': 'https://github.com/Jay0921', 'followers_url': 'https://api.github.com/users/Jay0921/followers', 'following_url': 'https://api.github.com/users/Jay0921/following{/other_user}', 'gists_url': 'https://api.github.com/users/Jay0921/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Jay0921/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Jay0921/subscriptions', 'organizations_url': 'https://api.github.com/users/Jay0921/orgs', 'repos_url': 'https://api.github.com/users/Jay0921/repos', 'events_url': 'https://api.github.com/users/Jay0921/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Jay0921/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T08:16:16Z,2023-10-03T08:31:22Z,NONE,"@ghiculescu The uniqueness validation on Comment is run before any database operation. This is why you're encountering the error. You could add some logs within the callbacks to find out. I would say the expectation is wrong.

```
class Comment < ActiveRecord::Base
  belongs_to :post
  validate :check_uniqueness_of_title

  after_save do
    puts ""Created comment #{id}""
  end

  after_destroy do
    puts ""Destroyed comment #{id}""
  end

  def check_uniqueness_of_title
    if Comment.where(title: title, post_id: post_id).exists?
      puts ""#{title} has already been taken""
    end
  end
end
```

Results: 
```
Created comment 1
hi has already been taken
Destroyed comment 1
Created comment 2
```

However, I'm also not so sure about the expected behavior in this case. Ideally, we'd want to run the uniqueness validation after removing the first comment.

```
Created comment 1
Destroyed comment 1
validation goes here
Created comment 2
````","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1744439725/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49468
https://api.github.com/repos/rails/rails/issues/comments/1744913133,https://github.com/rails/rails/issues/49468#issuecomment-1744913133,https://api.github.com/repos/rails/rails/issues/49468,1744913133,IC_kwDNIULOaAFC7Q,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T12:54:56Z,2023-10-03T18:02:15Z,CONTRIBUTOR,"The issue seems valid to me. 
~~So we should skip the uniqueness validation if the record is marked for destruction, I think?~~

Upd: 🤦 Ah, sure, we mark for destruction one record, but validate another.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1744913133/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49468
https://api.github.com/repos/rails/rails/issues/comments/1745122523,https://github.com/rails/rails/issues/49468#issuecomment-1745122523,https://api.github.com/repos/rails/rails/issues/49468,1745122523,IC_kwDNIULOaAR02w,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T14:41:01Z,2023-10-03T14:41:01Z,MEMBER,"Validations will run before the save action, and the fact that a record is marked for destruction is only know by the save action. I don't think there is a way to solve this without coupling autosave behavior with validation behavior, but if you find a solution let's go ahead and fix.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745122523/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49468
https://api.github.com/repos/rails/rails/issues/comments/1745855458,https://github.com/rails/rails/issues/49468#issuecomment-1745855458,https://api.github.com/repos/rails/rails/issues/49468,1745855458,IC_kwDNIULOaA-j4g,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T22:59:48Z,2023-10-03T22:59:48Z,MEMBER,"> without coupling autosave behavior with validation behavior

Given that both behaviours are supported by Active Record, is coupling them a problem? Is it just that it's messy?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745855458/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49468
https://api.github.com/repos/rails/rails/issues/comments/1747811884,https://github.com/rails/rails/issues/49468#issuecomment-1747811884,https://api.github.com/repos/rails/rails/issues/49468,1747811884,IC_kwDNIULOaC1-LA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-10-04T23:59:47Z,2023-10-04T23:59:47Z,MEMBER,"Not necessarily, but today is inexistent, so we can change autosave or uniqueness validation without having to consider each other behavior. So adding it might need to be well justified.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1747811884/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49468
https://api.github.com/repos/rails/rails/issues/comments/1744048064,https://github.com/rails/rails/issues/49464#issuecomment-1744048064,https://api.github.com/repos/rails/rails/issues/49464,1744048064,IC_kwDNIULOZ_QPwA,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T02:03:02Z,2023-10-03T02:03:02Z,MEMBER,"Related to https://github.com/ruby/ruby/pull/8573
https://github.com/ruby/prism/pull/1533","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1744048064/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49464
https://api.github.com/repos/rails/rails/issues/comments/1743724927,https://github.com/rails/rails/issues/49459#issuecomment-1743724927,https://api.github.com/repos/rails/rails/issues/49459,1743724927,IC_kwDNIULOZ-8hfw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-10-02T20:35:12Z,2023-10-02T20:35:12Z,CONTRIBUTOR,"Rails 6 is not supported for bug fixes (see https://guides.rubyonrails.org/maintenance_policy.html). 
Can you verify this is still happening on rails 7? If so, can you create a reproduction script using https://github.com/rails/rails/blob/main/guides/bug_report_templates/active_record_gem.rb template?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1743724927/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1743836623,https://github.com/rails/rails/issues/49459#issuecomment-1743836623,https://api.github.com/repos/rails/rails/issues/49459,1743836623,IC_kwDNIULOZ_DVzw,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-10-02T22:06:12Z,2023-10-02T22:06:12Z,CONTRIBUTOR,"I think this is reproducible on `main` as well

>LIMIT 11 

is coming from pretty print:
https://github.com/rails/rails/blob/1f51409215f5a13644c4e948e3709a239a220fc9/activerecord/lib/active_record/relation.rb#L811

this is why just returning a relation in the console limits the select query.

However `connected_to` explicitly calls `.load` https://github.com/rails/rails/blob/5de585eae081be5f7b4484459fe0a2b737a9babc/activerecord/lib/active_record/connection_handling.rb#L362 if the block returns a relation which causes the load of the full collection.

I can't immediately tell if there is an easy fix for that which will be justified considering that this is a dev console problem only (though it may be used in prod)

I think generally it's a good habit to explicitly turn Active Record relations into arrays and eager load data by doing something like `ActiveRecord::Base.connected_to(role: :reading) { Customer.where(name: ""Roberto"").limit(10).to_a }` 

I wonder if Rails should consider avoid calling `.load` in `connected_to`  if the block returns just a relation and enforce the consumers to do that 🤔 


 
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1743836623/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1743852554,https://github.com/rails/rails/issues/49459#issuecomment-1743852554,https://api.github.com/repos/rails/rails/issues/49459,1743852554,IC_kwDNIULOZ_EUCg,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-10-02T22:22:31Z,2023-10-02T22:23:21Z,CONTRIBUTOR,"> I wonder if Rails should consider avoid calling .load in connected_to if the block returns just a relation and enforce the consumers to do that 🤔

I think `.load` is called because when the block returns, connection ""configuration is restored"" https://github.com/rails/rails/blob/5de585eae081be5f7b4484459fe0a2b737a9babc/activerecord/lib/active_record/connection_handling.rb#L364-L365 and if we will manually call `.load` on relation later, it will not use the correct connection configuration. So, probably, can't get rid of this.

> I think generally it's a good habit to explicitly turn Active Record relations into arrays and eager load data by doing something like

This looks like a way to go to me. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1743852554/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1743903943,https://github.com/rails/rails/issues/49459#issuecomment-1743903943,https://api.github.com/repos/rails/rails/issues/49459,1743903943,IC_kwDNIULOZ_Hcxw,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-10-02T23:16:45Z,2023-10-02T23:16:45Z,CONTRIBUTOR,">and if we will manually call .load on relation later, it will not use the correct connection configuration

I'll need to double check the documentation but I don't think Rails ever promises to preserve the connection config on the relation built within the block. So you either do the query from within the block or get an unloaded relation

`users_from_read_replica = ActiveRecord::Base.connected_to(role: :reading) { User.all }` doesn't feels like a needed API to me. It will currently work because of the hidden `.load` but I'd prefer applications to be more careful and intentional about distinguishing a relation (especially unloaded) and an array of AR objects.

This might be my personal take but I don't even like when applications do `all_users = User.all` as it's not completely true. These are not all users, at this moment this is just a relation that represents all users 

So I'm kind of leaning towards removing the `.load` (through a deprecation cycle) which will motivate applications to have a better understanding on where exactly the query is being performed

 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1743903943/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1744209020,https://github.com/rails/rails/issues/49459#issuecomment-1744209020,https://api.github.com/repos/rails/rails/issues/49459,1744209020,IC_kwDNIULOZ_aEfA,"{'login': 'taman9333', 'id': 29257107, 'node_id': 'MDQ6VXNlcjI5MjU3MTA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/29257107?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/taman9333', 'html_url': 'https://github.com/taman9333', 'followers_url': 'https://api.github.com/users/taman9333/followers', 'following_url': 'https://api.github.com/users/taman9333/following{/other_user}', 'gists_url': 'https://api.github.com/users/taman9333/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/taman9333/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/taman9333/subscriptions', 'organizations_url': 'https://api.github.com/users/taman9333/orgs', 'repos_url': 'https://api.github.com/users/taman9333/repos', 'events_url': 'https://api.github.com/users/taman9333/events{/privacy}', 'received_events_url': 'https://api.github.com/users/taman9333/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T04:54:01Z,2023-10-03T04:54:01Z,NONE,"I feel returning ActiveRecord Relation from connection config block is a little bit confusing, misleading and prone to errors.

This issue is not only related to rails console but also happens in production codebase.

We had a production issue where we hit memory limit of our pods and we didn't know what was the issue.
The code was something like that

```ruby
class SalesforceObjectRepo
  def self.find_by_class_id(class_id)
     ActiveRecord::Base.connected_to(role: :reading) { SalesforceObject.where(class_id: class_id) }
  end
end

class Client
  def processing_salesforce_objects(class_id)
    object_external_ids = get_salesforce_external_ids
    salesforce_objects = SalesforceObjectRepo.find_by_class_id(class_id).where(external_id: object_external_ids)
  end
end
```

We hit memory limit because `SalesforceObjectRepo.find_by_class_id(class_id)` was executing immediately and didn't chain `external_id: object_external_ids` condition, moreover the `SalesforceObjectRepo.find_by_class_id(class_id)` query will not implicitly add limit query which would mean fetching thousands/millions of records.

We have fixed this issue by including `external_id: object_external_ids` condition in `find_by_class_id` method.

However there are 2 points which I think are a little bit misleading

- queries that would run inside connection config block will not add a limit implicitly to query like queries that would run without connection config block
- connection config block would return ActiveRecord Relation instead of returning array

for the 2nd point when we return ActiveRecord Relation from connection config block instead of array then it would mean that we can chain other ActiveRecord queries and this will be confusing as a query like that
```ruby
SalesforceObjectRepo.find_by_class_id(class_id).where(external_id: object_external_ids)
```
Under the hood will execute 2 queries if I understand that correctly

- query that will run where(class_id: class_id) against read replica
- query that will run where(class_id: class_id, external_id: object_external_ids) against read/write replica","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1744209020/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1744361536,https://github.com/rails/rails/issues/49459#issuecomment-1744361536,https://api.github.com/repos/rails/rails/issues/49459,1744361536,IC_kwDNIULOZ_jYQA,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T07:29:30Z,2023-10-03T07:29:52Z,MEMBER,"> I'll need to double check the documentation but I don't think Rails ever promises to preserve the connection config on the relation built within the block. So you either do the query from within the block or get an unloaded relation

The `load` was added specifically to fix the problem where apps were doing this:

```ruby
x = ActiveRecord::Base.connected_to(role: :reading) do
  Dog.where(name: ""Arya"")
end

x.to_a # relation gets loaded on the writer, not the replica.
```

This was a real life problem in the GitHub monolith that we had to solve for because if you do this wrong you could take down the writer dbs by sending more queries than expected to them, especially if this was in a hot path. More details can be found in https://github.com/rails/rails/pull/38339.

> We had a production issue where we hit memory limit of our pods and we didn't know what was the issue.
> The code was something like that

FWIW I would argue that the `connected_to` call in that example is in the wrong place. It should be around all of `processing_salesforce_objects ` because otherwise you're asking Rails to do the `find_by_class_id` on the replica, and the remaining query on the writer.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1744361536/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1744425228,https://github.com/rails/rails/issues/49459#issuecomment-1744425228,https://api.github.com/repos/rails/rails/issues/49459,1744425228,IC_kwDNIULOZ_nRDA,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T08:09:07Z,2023-10-03T08:09:07Z,CONTRIBUTOR,">FWIW I would argue that the connected_to call in that example is in the wrong place.

I agree
I think overall methods like
```ruby
  def self.find_by_class_id(class_id)
     ActiveRecord::Base.connected_to(role: :reading) { SalesforceObject.where(class_id: class_id) }
  end
```
are wrong. Even for an implementation like

```ruby
  def self.find_by_class_id(class_id)
     SalesforceObject.where(class_id: class_id)
  end
```
I find the `find_by_class_id` name is completely misleading. The method is not trying to find anything. It just builds a relation that represents some objects which will be loaded from some other place. 

To be fair `connected_to` version does load the records because of the implicit `load` but I would prefer to avoid designing methods like this and try being as explicit as possible when it comes to showing where the query is expected to be executed","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1744425228/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1745025250,https://github.com/rails/rails/issues/49459#issuecomment-1745025250,https://api.github.com/repos/rails/rails/issues/49459,1745025250,IC_kwDNIULOaAL44g,"{'login': 'taman9333', 'id': 29257107, 'node_id': 'MDQ6VXNlcjI5MjU3MTA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/29257107?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/taman9333', 'html_url': 'https://github.com/taman9333', 'followers_url': 'https://api.github.com/users/taman9333/followers', 'following_url': 'https://api.github.com/users/taman9333/following{/other_user}', 'gists_url': 'https://api.github.com/users/taman9333/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/taman9333/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/taman9333/subscriptions', 'organizations_url': 'https://api.github.com/users/taman9333/orgs', 'repos_url': 'https://api.github.com/users/taman9333/repos', 'events_url': 'https://api.github.com/users/taman9333/events{/privacy}', 'received_events_url': 'https://api.github.com/users/taman9333/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T13:52:01Z,2023-10-03T13:52:01Z,NONE,"@nvasilevski
> I find the find_by_class_id name is completely misleading. The method is not trying to find anything. It just builds a relation that represents some objects which will be loaded from some other place.

Sorry but how you would implement something like that in a good pattern ? should I use `.to_a` at the end of the method to return Array instead of relation ?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745025250/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1745058126,https://github.com/rails/rails/issues/49459#issuecomment-1745058126,https://api.github.com/repos/rails/rails/issues/49459,1745058126,IC_kwDNIULOaAN5Tg,"{'login': 'taman9333', 'id': 29257107, 'node_id': 'MDQ6VXNlcjI5MjU3MTA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/29257107?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/taman9333', 'html_url': 'https://github.com/taman9333', 'followers_url': 'https://api.github.com/users/taman9333/followers', 'following_url': 'https://api.github.com/users/taman9333/following{/other_user}', 'gists_url': 'https://api.github.com/users/taman9333/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/taman9333/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/taman9333/subscriptions', 'organizations_url': 'https://api.github.com/users/taman9333/orgs', 'repos_url': 'https://api.github.com/users/taman9333/repos', 'events_url': 'https://api.github.com/users/taman9333/events{/privacy}', 'received_events_url': 'https://api.github.com/users/taman9333/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T14:08:51Z,2023-10-03T14:49:20Z,NONE,"~~@elainefang~~ Thanks a lot for the detailed explanation
> FWIW I would argue that the connected_to call in that example is in the wrong place. It should be around all of processing_salesforce_objects

Totally agree 💯 and that's how I resolved the issue however this was not clear in the documentation.

I have another question, not sure if that would make sense or not but is it possible that ActiveRecord relation would hold context where it should run the query against which database so that the following query that I mentioned in one of the comments above

```ruby
SalesforceObjectRepo.find_by_class_id(class_id).where(external_id: object_external_ids)
```

would run the whole query against read replica instead of running the first half which is included in the connected_to block in reading replica and the second half which is outside connected_to block in read/write replica

and if that would not make sense then why we don't return array from connected_to method so that client will not be able to chain other queries","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745058126/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1745059794,https://github.com/rails/rails/issues/49459#issuecomment-1745059794,https://api.github.com/repos/rails/rails/issues/49459,1745059794,IC_kwDNIULOaAN_0g,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T14:09:43Z,2023-10-03T14:09:43Z,CONTRIBUTOR,">should I use .to_a at the end of the method to return Array instead of relation ?

Personally I would prefer seeing the code with `to_a` or any explicit way of triggering the query especially when it's a newly added code as it makes it very clear what we expect to happen and when.

Perhaps a nicer API would be if a relation created from within a `connected_to` block preserved the configuration for its lifetime like:
```ruby
users_always_from_replica = ActiveRecord::Base.connected_to(role: :reading) { User.all }

users_always_from_replica.to_a # reads from replica

admins = users_always_from_replica.where(role: ""admin"").to_a # also reads from replica
```

But I understand if implementing such API is challenging ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745059794/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1745084259,https://github.com/rails/rails/issues/49459#issuecomment-1745084259,https://api.github.com/repos/rails/rails/issues/49459,1745084259,IC_kwDNIULOaAPfYw,"{'login': 'taman9333', 'id': 29257107, 'node_id': 'MDQ6VXNlcjI5MjU3MTA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/29257107?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/taman9333', 'html_url': 'https://github.com/taman9333', 'followers_url': 'https://api.github.com/users/taman9333/followers', 'following_url': 'https://api.github.com/users/taman9333/following{/other_user}', 'gists_url': 'https://api.github.com/users/taman9333/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/taman9333/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/taman9333/subscriptions', 'organizations_url': 'https://api.github.com/users/taman9333/orgs', 'repos_url': 'https://api.github.com/users/taman9333/repos', 'events_url': 'https://api.github.com/users/taman9333/events{/privacy}', 'received_events_url': 'https://api.github.com/users/taman9333/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T14:22:11Z,2023-10-03T14:49:06Z,NONE,"@nvasilevski totally agree and this was my question to ~~@elainefang~~.

it would be really nice if something like that would be implemented, and if not then I feel it would be better to return Array instead of Relation from connected_to method so that client will not be able to chain other active record queries as it will not make sense to chain other active record queries since it will run against the read/write replica","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745084259/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1745130110,https://github.com/rails/rails/issues/49459#issuecomment-1745130110,https://api.github.com/repos/rails/rails/issues/49459,1745130110,IC_kwDNIULOaASSfg,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T14:44:54Z,2023-10-03T14:44:54Z,MEMBER,"> But I understand if implementing such API is challenging

I tried implementing this awhile ago but it is EXTREMELY challenging. There's no place for Active Record to keep track of that connection in the context of an association. The role/shard is the _context_ in which a connection is looked up, but not the actual connection, and so there's no where outside a block to keep track of that context.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745130110/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1745132259,https://github.com/rails/rails/issues/49459#issuecomment-1745132259,https://api.github.com/repos/rails/rails/issues/49459,1745132259,IC_kwDNIULOaASa4w,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T14:46:02Z,2023-10-03T14:46:02Z,MEMBER,"FYI @taman9333 you're at mentioning the wrong person, my name is Eileen, not Elaine.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745132259/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 1, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1745136413,https://github.com/rails/rails/issues/49459#issuecomment-1745136413,https://api.github.com/repos/rails/rails/issues/49459,1745136413,IC_kwDNIULOaASrHQ,"{'login': 'taman9333', 'id': 29257107, 'node_id': 'MDQ6VXNlcjI5MjU3MTA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/29257107?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/taman9333', 'html_url': 'https://github.com/taman9333', 'followers_url': 'https://api.github.com/users/taman9333/followers', 'following_url': 'https://api.github.com/users/taman9333/following{/other_user}', 'gists_url': 'https://api.github.com/users/taman9333/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/taman9333/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/taman9333/subscriptions', 'organizations_url': 'https://api.github.com/users/taman9333/orgs', 'repos_url': 'https://api.github.com/users/taman9333/repos', 'events_url': 'https://api.github.com/users/taman9333/events{/privacy}', 'received_events_url': 'https://api.github.com/users/taman9333/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T14:48:09Z,2023-10-03T14:48:09Z,NONE,"@eileencodes really sorry for that 😓
if keeping track of the connection in the context of an association is hard to implement then would it make sense not to return relation from `connected_to` method ?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745136413/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1745146206,https://github.com/rails/rails/issues/49459#issuecomment-1745146206,https://api.github.com/repos/rails/rails/issues/49459,1745146206,IC_kwDNIULOaATRXg,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T14:53:00Z,2023-10-03T14:53:00Z,MEMBER,"> then would it make sense not to return relation from connected_to method ?

No because that would introduce a change in behavior that could have serious consequences on existing applications. The problem is explained in the [PR that implemented the `load`](https://github.com/rails/rails/pull/38339).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745146206/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1745164124,https://github.com/rails/rails/issues/49459#issuecomment-1745164124,https://api.github.com/repos/rails/rails/issues/49459,1745164124,IC_kwDNIULOaAUXXA,"{'login': 'taman9333', 'id': 29257107, 'node_id': 'MDQ6VXNlcjI5MjU3MTA3', 'avatar_url': 'https://avatars.githubusercontent.com/u/29257107?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/taman9333', 'html_url': 'https://github.com/taman9333', 'followers_url': 'https://api.github.com/users/taman9333/followers', 'following_url': 'https://api.github.com/users/taman9333/following{/other_user}', 'gists_url': 'https://api.github.com/users/taman9333/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/taman9333/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/taman9333/subscriptions', 'organizations_url': 'https://api.github.com/users/taman9333/orgs', 'repos_url': 'https://api.github.com/users/taman9333/repos', 'events_url': 'https://api.github.com/users/taman9333/events{/privacy}', 'received_events_url': 'https://api.github.com/users/taman9333/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T15:02:07Z,2023-10-03T15:02:07Z,NONE,"I see, however it's a little bit confusing returning active record relation so that client code can chain other queries which would run on a different connection","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745164124/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49459
https://api.github.com/repos/rails/rails/issues/comments/1742865102,https://github.com/rails/rails/pull/49455#issuecomment-1742865102,https://api.github.com/repos/rails/rails/issues/49455,1742865102,IC_kwDNIULOZ-ICzg,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-10-02T11:43:57Z,2023-10-02T11:43:57Z,CONTRIBUTOR,There will be quite a bit of cleanup to do before this can be merged.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742865102/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49455
https://api.github.com/repos/rails/rails/issues/comments/1742888812,https://github.com/rails/rails/pull/49455#issuecomment-1742888812,https://api.github.com/repos/rails/rails/issues/49455,1742888812,IC_kwDNIULOZ-JfbA,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-10-02T12:01:52Z,2023-10-02T12:01:52Z,MEMBER,@casperisfine If you want we can add a soft-fail job in CI then fix the failures incrementally?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742888812/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49455
https://api.github.com/repos/rails/rails/issues/comments/1742113851,https://github.com/rails/rails/pull/49445#issuecomment-1742113851,https://api.github.com/repos/rails/rails/issues/49445,1742113851,IC_kwDNIULOZ9aMOw,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-10-01T15:22:01Z,2023-10-01T15:22:01Z,CONTRIBUTOR,I couldn't find the background context for why analysis has been limited to a single analyzer. Is there somewhere other than https://github.com/rails/rails/commit/d4cdd4a05f9874127f5052eb7909c7d921ad046e where I could learn more about the original code?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742113851/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49445
https://api.github.com/repos/rails/rails/issues/comments/1742138067,https://github.com/rails/rails/pull/49445#issuecomment-1742138067,https://api.github.com/repos/rails/rails/issues/49445,1742138067,IC_kwDNIULOZ9bq0w,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-10-01T16:56:02Z,2023-10-01T20:02:17Z,MEMBER,"> I couldn't find the background context for why analysis has been limited to a single analyzer. Is there somewhere other than [d4cdd4a](https://github.com/rails/rails/commit/d4cdd4a05f9874127f5052eb7909c7d921ad046e) where I could learn more about the original code?

I've been looking at this recently, and was surprised by this at first as well.
I think it makes sense though, to just have a single analyzer:
- Each analyzer downloads the file. With a single analyzer you only have to download the file once.
- The `analyzed?` method returns true if the `metadata` of the Blob is present. If multiple analyzers can update the metadata, how do we know all analyzers have completed?

The existing inheritance implementation for the `ImageAnalyzer`, is a bit difficult to extend with extra metadata:
- You can't add a new key/value to just `ActiveStorage::ImageAnalyzer` as the returned `image` in the following block would need to have that key/value as well:
https://github.com/rails/rails/blob/a5f113f4332b3688d4431a97fa517d1b9517ceb0/activestorage/lib/active_storage/analyzer/image_analyzer.rb#L20
- You also can't add a new key/value in `ActiveStorage::ImageAnalyzer::Vips` as you also need to add it in `ActiveStorage::ImageAnalyzer` as well.
- You can't add a custom image analyzer to `ActiveStorage.analyzers` unless you remove the existing image analyzers, which otherwise get picked first.

We currently have the following monkeypatch to add more exif data. It required overriding the `metadata` method, and because the original method used a block we can't call `super`:
```ruby
ActiveStorage::Analyzer::ImageAnalyzer.class_eval do
  def metadata
    read_image do |image|
      if rotated_image?(image)
        metadata = { width: image.height, height: image.width }
      else
        metadata = { width: image.width, height: image.height }
      end
      exif = Exiftool.new(image.filename).to_hash
      metadata[:created_at] = get_created_at_from_exif(exif)
      metadata
    end
  end

  private

  def get_created_at_from_exif(exif)
    ...
  end
end
```

I'd like to move the subclasses to strategies instead, so you only need to subclass `ActiveStorage::ImageAnalyzer` if you want to add more metadata.

I'm also trying to move the Vips and ImageMagick logic into ImageProcessing:
https://github.com/janko/image_processing/pull/115","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742138067/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49445
https://api.github.com/repos/rails/rails/issues/comments/1741406503,https://github.com/rails/rails/issues/49434#issuecomment-1741406503,https://api.github.com/repos/rails/rails/issues/49434,1741406503,IC_kwDNIULOZ8vBJw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-09-29T19:51:16Z,2023-09-29T19:51:16Z,MEMBER,"Thank you for the issue. Just to make sure if this is going to block the Rails 7.1, did this behavior worked in 7.0 and is not broken on main, or it doesn't work in any version?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1741406503/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49434
https://api.github.com/repos/rails/rails/issues/comments/1741689729,https://github.com/rails/rails/issues/49434#issuecomment-1741689729,https://api.github.com/repos/rails/rails/issues/49434,1741689729,IC_kwDNIULOZ9ATgQ,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-09-30T06:04:48Z,2023-09-30T06:04:48Z,CONTRIBUTOR,">did this behavior worked in 7.0

fails for me on `main`,  `7.0.8` and `6.1.7.6`
So doesn't seem to be related to 7.1 release","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1741689729/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49434
https://api.github.com/repos/rails/rails/issues/comments/1741821133,https://github.com/rails/rails/issues/49434#issuecomment-1741821133,https://api.github.com/repos/rails/rails/issues/49434,1741821133,IC_kwDNIULOZ9IUzQ,"{'login': 'mariochavez', 'id': 59967, 'node_id': 'MDQ6VXNlcjU5OTY3', 'avatar_url': 'https://avatars.githubusercontent.com/u/59967?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mariochavez', 'html_url': 'https://github.com/mariochavez', 'followers_url': 'https://api.github.com/users/mariochavez/followers', 'following_url': 'https://api.github.com/users/mariochavez/following{/other_user}', 'gists_url': 'https://api.github.com/users/mariochavez/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mariochavez/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mariochavez/subscriptions', 'organizations_url': 'https://api.github.com/users/mariochavez/orgs', 'repos_url': 'https://api.github.com/users/mariochavez/repos', 'events_url': 'https://api.github.com/users/mariochavez/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mariochavez/received_events', 'type': 'User', 'site_admin': False}",2023-09-30T17:35:24Z,2023-09-30T17:35:24Z,CONTRIBUTOR,"Rafael, this is an issue with older versions of Rails, still present in 7.1 RC.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1741821133/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49434
https://api.github.com/repos/rails/rails/issues/comments/1742230496,https://github.com/rails/rails/issues/49434#issuecomment-1742230496,https://api.github.com/repos/rails/rails/issues/49434,1742230496,IC_kwDNIULOZ9hT4A,"{'login': 'willianveiga', 'id': 3410507, 'node_id': 'MDQ6VXNlcjM0MTA1MDc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3410507?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/willianveiga', 'html_url': 'https://github.com/willianveiga', 'followers_url': 'https://api.github.com/users/willianveiga/followers', 'following_url': 'https://api.github.com/users/willianveiga/following{/other_user}', 'gists_url': 'https://api.github.com/users/willianveiga/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/willianveiga/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/willianveiga/subscriptions', 'organizations_url': 'https://api.github.com/users/willianveiga/orgs', 'repos_url': 'https://api.github.com/users/willianveiga/repos', 'events_url': 'https://api.github.com/users/willianveiga/events{/privacy}', 'received_events_url': 'https://api.github.com/users/willianveiga/received_events', 'type': 'User', 'site_admin': False}",2023-10-01T23:01:05Z,2023-10-01T23:01:05Z,CONTRIBUTOR,"Meanwhile, you can keep the column name to workaround it:
```ruby
# ...
assert_kind_of Time, Post.group(:created_at).pluck(""MAX(created_at) AS created_at"").first
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742230496/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49434
https://api.github.com/repos/rails/rails/issues/comments/1747482736,https://github.com/rails/rails/issues/49434#issuecomment-1747482736,https://api.github.com/repos/rails/rails/issues/49434,1747482736,IC_kwDNIULOaCh4cA,"{'login': 'willianveiga', 'id': 3410507, 'node_id': 'MDQ6VXNlcjM0MTA1MDc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3410507?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/willianveiga', 'html_url': 'https://github.com/willianveiga', 'followers_url': 'https://api.github.com/users/willianveiga/followers', 'following_url': 'https://api.github.com/users/willianveiga/following{/other_user}', 'gists_url': 'https://api.github.com/users/willianveiga/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/willianveiga/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/willianveiga/subscriptions', 'organizations_url': 'https://api.github.com/users/willianveiga/orgs', 'repos_url': 'https://api.github.com/users/willianveiga/repos', 'events_url': 'https://api.github.com/users/willianveiga/events{/privacy}', 'received_events_url': 'https://api.github.com/users/willianveiga/received_events', 'type': 'User', 'site_admin': False}",2023-10-04T19:09:29Z,2023-10-04T19:09:29Z,CONTRIBUTOR,"If I got it right, the value is being returned as a string by the sqlite3 gem. Unless we convert types on the rails side, you should open an issue [here](https://github.com/sparklemotion/sqlite3-ruby/issues/new).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1747482736/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49434
https://api.github.com/repos/rails/rails/issues/comments/1750110023,https://github.com/rails/rails/issues/49434#issuecomment-1750110023,https://api.github.com/repos/rails/rails/issues/49434,1750110023,IC_kwDNIULOaFCPRw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-10-06T07:24:56Z,2023-10-06T07:24:56Z,MEMBER,"Yeah that sounds like a bug for sqlite3 gem, what do you think @flavorjones?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1750110023/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49434
https://api.github.com/repos/rails/rails/issues/comments/1740542114,https://github.com/rails/rails/pull/49425#issuecomment-1740542114,https://api.github.com/repos/rails/rails/issues/49425,1740542114,IC_kwDNIULOZ76Qog,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-09-29T08:54:05Z,2023-09-29T08:54:05Z,MEMBER,"There are definitely a lot in here that seem totally unnecessary... but I think I do prefer `klass || foo_klass` over `klass || foo_class` when both the plain and qualified name are being used together. I read klass as a noun, not a typo, so having to alternate mid-line based on whether this instance would be a syntax error makes for a higher cognitive load.

In particular, IMO `ensure_class_exists!` is far less clear about what it does (in an environment where there are a bunch of possible ""class""), vs `ensure_klass_exists!` -> ensure that the method `klass` has an extant value.

(Honestly, I think I just like ""klass"" universally inside associations, because [despite its origin] it feels less like a syntax-workaround misspelling of ""class"" and more like a domain concept -- everything is classes, but an association links together two _klasses_.)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1740542114/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49425
https://api.github.com/repos/rails/rails/issues/comments/1741446802,https://github.com/rails/rails/pull/49425#issuecomment-1741446802,https://api.github.com/repos/rails/rails/issues/49425,1741446802,IC_kwDNIULOZ8xekg,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-09-29T20:21:39Z,2023-09-29T20:21:39Z,MEMBER,"What are two klasses? Two `ActiveRecord::Base` descendants? Or two `model_classes`? It still seems like this concept of `klasses` is just a bad name for the thing they are trying to represent.

Even in associations this concept only exists because `Reflection` are trying to find the class related to the `class_name` (not `klass_name`) option and `class` isn't a valid method name.

In places were we have `klass || foo_klass`, I think I can see the value there, but maybe what needs to change is `klass` not the `foo_class`?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1741446802/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49425
https://api.github.com/repos/rails/rails/issues/comments/1735950392,https://github.com/rails/rails/pull/49388#issuecomment-1735950392,https://api.github.com/repos/rails/rails/issues/49388,1735950392,IC_kwDNIULOZ3iAOA,"{'login': 'seanlinsley', 'id': 688886, 'node_id': 'MDQ6VXNlcjY4ODg4Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/688886?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanlinsley', 'html_url': 'https://github.com/seanlinsley', 'followers_url': 'https://api.github.com/users/seanlinsley/followers', 'following_url': 'https://api.github.com/users/seanlinsley/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanlinsley/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanlinsley/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanlinsley/subscriptions', 'organizations_url': 'https://api.github.com/users/seanlinsley/orgs', 'repos_url': 'https://api.github.com/users/seanlinsley/repos', 'events_url': 'https://api.github.com/users/seanlinsley/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanlinsley/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T17:06:52Z,2023-09-26T17:40:54Z,CONTRIBUTOR,"There are failing tests that call e.g. `where(id: [3, 9223372036854775808])` on a bigint column, using values that are larger than the bigint column can contain. I assume this was relying on Postgres to fall back to numeric? Since the column can't contain values that large I'm not sure what the right thing to do here is.

There is also a test for a binary column that's somehow generating this SQL:
```sql
SELECT ""binaries"".* FROM ""binaries"" WHERE ""binaries"".""data"" = any('{""{:value=>\""\\xF0\\x9F\\xA5\\xA6\"", :format=>1}"",""{:value=>\""\\xF0\\x9F\\x8D\\xA6\"", :format=>1}""}')
```

There are also tests that fail because this query apparently isn't being cached.

Thoughts on how best to resolve these?

<details><summary>One option for the out-of-range errors is to skip values that fail to serialize:</summary>

```diff
diff --git a/activerecord/lib/active_record/connection_adapters/postgresql/oid/array.rb b/activerecord/lib/active_record/connection_adapters/postgresql/oid/array.rb
index e46e47102b..eab716d010 100644
--- a/activerecord/lib/active_record/connection_adapters/postgresql/oid/array.rb
+++ b/activerecord/lib/active_record/connection_adapters/postgresql/oid/array.rb
@@ -9,12 +9,13 @@ class Array < Type::Value # :nodoc:
 
           Data = Struct.new(:encoder, :values) # :nodoc:
 
-          attr_reader :subtype, :delimiter
+          attr_reader :subtype, :delimiter, :ignore_serialize_errors
           delegate :type, :user_input_in_time_zone, :limit, :precision, :scale, to: :subtype
 
-          def initialize(subtype, delimiter = "","")
+          def initialize(subtype, delimiter = "","", ignore_serialize_errors = false)
             @subtype = subtype
             @delimiter = delimiter
+            @ignore_serialize_errors = ignore_serialize_errors
 
             @pg_encoder = PG::TextEncoder::Array.new name: ""#{type}[]"", delimiter: delimiter
             @pg_decoder = PG::TextDecoder::Array.new name: ""#{type}[]"", delimiter: delimiter
@@ -79,7 +80,13 @@ def force_equality?(value)
           private
             def type_cast_array(value, method)
               if value.is_a?(::Array)
-                value.map { |item| type_cast_array(item, method) }
+                result = []
+                value.each do |item|
+                  result << type_cast_array(item, method)
+                rescue
+                  raise unless ignore_serialize_errors
+                end
+                result
               else
                 @subtype.public_send(method, value)
               end
diff --git a/activerecord/lib/arel/visitors/postgresql.rb b/activerecord/lib/arel/visitors/postgresql.rb
index e2699ebe38..20cd198c84 100644
--- a/activerecord/lib/arel/visitors/postgresql.rb
+++ b/activerecord/lib/arel/visitors/postgresql.rb
@@ -89,7 +89,7 @@ def visit_Arel_Nodes_HomogeneousIn(o, collector)
             collector << "" != all(""
           end
 
-          type_caster = ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(o.attribute.type_caster, "","")
+          type_caster = ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array.new(o.attribute.type_caster, "","", true)
           values = [type_caster.serialize(o.values)]
           proc_for_binds = -> value { ActiveModel::Attribute.with_cast_value(o.attribute.name, value, type_caster) }
           collector.add_binds(values, proc_for_binds, &bind_block)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1735950392/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1736429993,https://github.com/rails/rails/pull/49388#issuecomment-1736429993,https://api.github.com/repos/rails/rails/issues/49388,1736429993,IC_kwDNIULOZ3_RqQ,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T23:18:15Z,2023-09-26T23:18:15Z,MEMBER,"> I assume this was relying on Postgres to fall back to numeric?

This is the generated SQL in `test_to_sql_with_large_number`: `SELECT ""authors"".* FROM ""authors"" WHERE ""authors"".""id"" IN (3)`. So it looks like something in Rails is filtering out the impossible value. I think your code should do that too.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1736429993/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1736477661,https://github.com/rails/rails/pull/49388#issuecomment-1736477661,https://api.github.com/repos/rails/rails/issues/49388,1736477661,IC_kwDNIULOZ4CL3Q,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T00:27:36Z,2023-09-27T00:27:36Z,MEMBER,This _might_ be related? https://github.com/rails/rails/pull/49050,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1736477661/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1736641860,https://github.com/rails/rails/pull/49388#issuecomment-1736641860,https://api.github.com/repos/rails/rails/issues/49388,1736641860,IC_kwDNIULOZ4MNRA,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T04:11:10Z,2023-09-27T04:11:10Z,MEMBER,"Apart from `pg_stat_statements` handles them, is there any difference between `id = any('{1,2}')` and `id IN (1, 2)`? I'm wondering if we need a config for this or if it's safe to make it the only behaviour for postgres.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1736641860/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1737506056,https://github.com/rails/rails/pull/49388#issuecomment-1737506056,https://api.github.com/repos/rails/rails/issues/49388,1737506056,IC_kwDNIULOZ5A9CA,"{'login': 'seanlinsley', 'id': 688886, 'node_id': 'MDQ6VXNlcjY4ODg4Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/688886?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanlinsley', 'html_url': 'https://github.com/seanlinsley', 'followers_url': 'https://api.github.com/users/seanlinsley/followers', 'following_url': 'https://api.github.com/users/seanlinsley/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanlinsley/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanlinsley/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanlinsley/subscriptions', 'organizations_url': 'https://api.github.com/users/seanlinsley/orgs', 'repos_url': 'https://api.github.com/users/seanlinsley/repos', 'events_url': 'https://api.github.com/users/seanlinsley/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanlinsley/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T14:22:38Z,2023-09-28T00:31:55Z,CONTRIBUTOR,"`IN` and `any()` are similar in their behavior, though the performance varies. The ~70% performance boost seen in the benchmark is likely caused by Postgres being faster at parsing parameter values than parsing SQL.

https://pganalyze.com/blog/5mins-postgres-performance-in-lists-vs-any-operator-bind-parameters

https://www.postgresql.org/docs/current/functions-comparisons.html

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1737506056/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1741937492,https://github.com/rails/rails/pull/49388#issuecomment-1741937492,https://api.github.com/repos/rails/rails/issues/49388,1741937492,IC_kwDNIULOZ9PbVA,"{'login': 'andyatkinson', 'id': 2161008, 'node_id': 'MDQ6VXNlcjIxNjEwMDg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2161008?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andyatkinson', 'html_url': 'https://github.com/andyatkinson', 'followers_url': 'https://api.github.com/users/andyatkinson/followers', 'following_url': 'https://api.github.com/users/andyatkinson/following{/other_user}', 'gists_url': 'https://api.github.com/users/andyatkinson/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andyatkinson/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andyatkinson/subscriptions', 'organizations_url': 'https://api.github.com/users/andyatkinson/orgs', 'repos_url': 'https://api.github.com/users/andyatkinson/repos', 'events_url': 'https://api.github.com/users/andyatkinson/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andyatkinson/received_events', 'type': 'User', 'site_admin': False}",2023-10-01T03:06:55Z,2023-10-01T03:06:55Z,MEMBER,"I was searching PRs labeled PostgreSQL and noticed that tag wasn't on this PR, and isn't getting much use in general.

Can that tag be added to this PR? Can anyone do that? 

Are there more open PRs that can be tagged with PostgreSQL? Thanks. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1741937492/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1742159428,https://github.com/rails/rails/pull/49388#issuecomment-1742159428,https://api.github.com/repos/rails/rails/issues/49388,1742159428,IC_kwDNIULOZ9c-RA,"{'login': 'andyatkinson', 'id': 2161008, 'node_id': 'MDQ6VXNlcjIxNjEwMDg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2161008?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andyatkinson', 'html_url': 'https://github.com/andyatkinson', 'followers_url': 'https://api.github.com/users/andyatkinson/followers', 'following_url': 'https://api.github.com/users/andyatkinson/following{/other_user}', 'gists_url': 'https://api.github.com/users/andyatkinson/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andyatkinson/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andyatkinson/subscriptions', 'organizations_url': 'https://api.github.com/users/andyatkinson/orgs', 'repos_url': 'https://api.github.com/users/andyatkinson/repos', 'events_url': 'https://api.github.com/users/andyatkinson/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andyatkinson/received_events', 'type': 'User', 'site_admin': False}",2023-10-01T18:20:51Z,2023-10-01T18:20:51Z,MEMBER,"@seanlinsley At work we have a fairly large Rails 6.1 codebase (~100K LOC) and use PostgreSQL, PGSS, PgHero, and I advocate for more usage of it. Commonly we have these ""giant IN clause"" queries that are problematic because they're using hundreds or even thousands of values. If this PR improves the visibility on that and helps us fix those queries, that would be valuable to the platform health and performance. Typically these queries time out/get cancelled. I'm interested in this patch!

Will it be merged soon? Otherwise I can plan to set aside some time to try and test it in a pre-merge state. I have a Rails API here used for book examples that can run the latest versions of Rails: https://github.com/andyatkinson/rideshare where I also use PGSS and PgHero to visualize the data. Would there be any plans to back-port this functionality to Rails 6.1 after it's merged and stable?

Thanks.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742159428/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1742207181,https://github.com/rails/rails/pull/49388#issuecomment-1742207181,https://api.github.com/repos/rails/rails/issues/49388,1742207181,IC_kwDNIULOZ9f4zQ,"{'login': 'seanlinsley', 'id': 688886, 'node_id': 'MDQ6VXNlcjY4ODg4Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/688886?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanlinsley', 'html_url': 'https://github.com/seanlinsley', 'followers_url': 'https://api.github.com/users/seanlinsley/followers', 'following_url': 'https://api.github.com/users/seanlinsley/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanlinsley/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanlinsley/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanlinsley/subscriptions', 'organizations_url': 'https://api.github.com/users/seanlinsley/orgs', 'repos_url': 'https://api.github.com/users/seanlinsley/repos', 'events_url': 'https://api.github.com/users/seanlinsley/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanlinsley/received_events', 'type': 'User', 'site_admin': False}",2023-10-01T21:27:29Z,2023-10-01T21:28:53Z,CONTRIBUTOR,"Hi @andyatkinson, yes this change will collapse the hundreds / thousands of separate PGSS entries into a single one:

```sql
select pg_stat_statements_reset();
select count(*) from users where id in (1);
select count(*) from users where id in (1,2);
select count(*) from users where id in (1,2,3);
select count(*) from users where id = any('{1}');
select count(*) from users where id = any('{1,2}');
select count(*) from users where id = any('{1,2,3}');
```
```sql
select calls, query from pg_stat_statements order by query;
 calls |                       query                       
-------+---------------------------------------------------
     3 | select count(*) from users where id = any($1)
     1 | select count(*) from users where id in ($1)
     1 | select count(*) from users where id in ($1,$2)
     1 | select count(*) from users where id in ($1,$2,$3)
     1 | select pg_stat_statements_reset()
```

We're currently testing this on production using a 6.1 backport: https://github.com/pganalyze/rails/commits/any-backport. Feel free to use it, though I'd recommend keeping it on your own fork so you won't be impacted if that branch goes away in the future.

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742207181/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1743201721,https://github.com/rails/rails/pull/49388#issuecomment-1743201721,https://api.github.com/repos/rails/rails/issues/49388,1743201721,IC_kwDNIULOZ-cluQ,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-10-02T15:10:16Z,2023-10-02T15:10:16Z,MEMBER,"> Would there be any plans to back-port this functionality to Rails 6.1 after it's merged and stable?

At this point 6.1 only receives security fixes, and bug fixes are only backported to 7.0. This is a pretty large change so I wouldn't expect it to be available until 7.2","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1743201721/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1744794104,https://github.com/rails/rails/pull/49388#issuecomment-1744794104,https://api.github.com/repos/rails/rails/issues/49388,1744794104,IC_kwDNIULOZ_9x-A,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T11:44:06Z,2023-10-03T11:44:06Z,CONTRIBUTOR,"IMHO this is too ""drastic"" change just because of `pg_stat_statements` use-case and should be fixed at `pg_stat_statements` itself. It is in progress at https://commitfest.postgresql.org/45/2837/. I can try to do review in there and ask around how to move that forward.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1744794104/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1745037241,https://github.com/rails/rails/pull/49388#issuecomment-1745037241,https://api.github.com/repos/rails/rails/issues/49388,1745037241,IC_kwDNIULOaAMnuQ,"{'login': 'seanlinsley', 'id': 688886, 'node_id': 'MDQ6VXNlcjY4ODg4Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/688886?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanlinsley', 'html_url': 'https://github.com/seanlinsley', 'followers_url': 'https://api.github.com/users/seanlinsley/followers', 'following_url': 'https://api.github.com/users/seanlinsley/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanlinsley/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanlinsley/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanlinsley/subscriptions', 'organizations_url': 'https://api.github.com/users/seanlinsley/orgs', 'repos_url': 'https://api.github.com/users/seanlinsley/repos', 'events_url': 'https://api.github.com/users/seanlinsley/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanlinsley/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T13:58:13Z,2023-10-03T14:07:01Z,CONTRIBUTOR,"@simi while it would be great for Postgres to fix this upstream, there have been years of discussions over that (and previous attempts), so it's not guaranteed that patch will be committed.

Even if it is committed, this PR may be worthwhile because it allows the use of prepared statements, and is a good deal faster as seen in the benchmark.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745037241/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1745802775,https://github.com/rails/rails/pull/49388#issuecomment-1745802775,https://api.github.com/repos/rails/rails/issues/49388,1745802775,IC_kwDNIULOaA7WFw,"{'login': 'msakrejda', 'id': 159100, 'node_id': 'MDQ6VXNlcjE1OTEwMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/159100?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/msakrejda', 'html_url': 'https://github.com/msakrejda', 'followers_url': 'https://api.github.com/users/msakrejda/followers', 'following_url': 'https://api.github.com/users/msakrejda/following{/other_user}', 'gists_url': 'https://api.github.com/users/msakrejda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/msakrejda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/msakrejda/subscriptions', 'organizations_url': 'https://api.github.com/users/msakrejda/orgs', 'repos_url': 'https://api.github.com/users/msakrejda/repos', 'events_url': 'https://api.github.com/users/msakrejda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/msakrejda/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T22:08:08Z,2023-10-03T22:08:08Z,NONE,">Apart from pg_stat_statements handles them, is there any difference between id = any('{1,2}') and id IN (1, 2)? I'm wondering if we need a config for this or if it's safe to make it the only behaviour for postgres.

@ghiculescu I work with @seanlinsley and I [e-mailed the Postgres developer list about this](https://www.postgresql.org/message-id/flat/CAOtHd0BNMci_2ZyoTKuCvOrrtebi%3D%3DvwKU0PsqhX%3DDucfVmNEg%40mail.gmail.com) and got a response. The gist of it is

>If all the values in the IN form were being sent to the backend as constants of the same datatype, I think you're okay to consider it as exactly equivalent to =ANY.

As far as I can tell, non-constant expressions (e.g., `User.where(id: User.select(:id))`) still end up as IN lists (please correct me if I'm wrong), so this should be fine.

The Postgres e-mail also had the suggestion to add an explicit cast here and some recommended reading in the Postgres source code; I will review that.

And for what it's worth, I agree with Sean that the fate of the Postgres patch is uncertain and that the performance improvements are worthwhile. Plus, in the best case, the patch won't be out until Postgres 17 (which will take years to upgrade to).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745802775/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1746109859,https://github.com/rails/rails/pull/49388#issuecomment-1746109859,https://api.github.com/repos/rails/rails/issues/49388,1746109859,IC_kwDNIULOaBOFow,"{'login': 'msakrejda', 'id': 159100, 'node_id': 'MDQ6VXNlcjE1OTEwMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/159100?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/msakrejda', 'html_url': 'https://github.com/msakrejda', 'followers_url': 'https://api.github.com/users/msakrejda/followers', 'following_url': 'https://api.github.com/users/msakrejda/following{/other_user}', 'gists_url': 'https://api.github.com/users/msakrejda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/msakrejda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/msakrejda/subscriptions', 'organizations_url': 'https://api.github.com/users/msakrejda/orgs', 'repos_url': 'https://api.github.com/users/msakrejda/repos', 'events_url': 'https://api.github.com/users/msakrejda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/msakrejda/received_events', 'type': 'User', 'site_admin': False}",2023-10-04T04:21:04Z,2023-10-04T04:21:04Z,NONE,"I've read through [the function mentioned on the Postgres list](https://github.com/postgres/postgres/blob/77d0ad6c46c518234b9ce0a5be1f61a25f1bf753/src/backend/parser/parse_expr.c#L1104-L1260) that transforms an IN expression to an array expression. My C is limited, but it looks like the cases that can't be translated directly have to do with edge cases like mixed types in the IN list. I don't think that's an issue here?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1746109859/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1746226124,https://github.com/rails/rails/pull/49388#issuecomment-1746226124,https://api.github.com/repos/rails/rails/issues/49388,1746226124,IC_kwDNIULOaBVLzA,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2023-10-04T06:35:56Z,2023-10-04T06:35:56Z,CONTRIBUTOR,"> @simi while it would be great for Postgres to fix this upstream, there have been years of discussions over that (and previous attempts), so it's not guaranteed that patch will be committed.
> 
> Even if it is committed, this PR may be worthwhile because it allows the use of prepared statements, and is a good deal faster as seen in the benchmark.

@seanlinsley Performance boost seems like a good argument in here. :rocket: Would it be possible to remove `pg_stat_statements` comments from code then?

> Apart from `pg_stat_statements` handles them, is there any difference between `id = any('{1,2}')` and `id IN (1, 2)`? I'm wondering if we need a config for this or if it's safe to make it the only behaviour for postgres.

@ghiculescu I was also thinking about need of making this configurable and switch this as default behaviour later, but I'm not sure if SQL queries are guaranteed to be stable across `ActiveRecord` minor/patch versions. Also, currently, this config will make it a little easier to test since branching would not be needed at various places.

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1746226124/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1746904761,https://github.com/rails/rails/pull/49388#issuecomment-1746904761,https://api.github.com/repos/rails/rails/issues/49388,1746904761,IC_kwDNIULOaB-muQ,"{'login': 'seanlinsley', 'id': 688886, 'node_id': 'MDQ6VXNlcjY4ODg4Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/688886?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanlinsley', 'html_url': 'https://github.com/seanlinsley', 'followers_url': 'https://api.github.com/users/seanlinsley/followers', 'following_url': 'https://api.github.com/users/seanlinsley/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanlinsley/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanlinsley/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanlinsley/subscriptions', 'organizations_url': 'https://api.github.com/users/seanlinsley/orgs', 'repos_url': 'https://api.github.com/users/seanlinsley/repos', 'events_url': 'https://api.github.com/users/seanlinsley/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanlinsley/received_events', 'type': 'User', 'site_admin': False}",2023-10-04T13:41:28Z,2023-10-04T13:41:28Z,CONTRIBUTOR,">I've read through [the function mentioned on the Postgres list](https://github.com/postgres/postgres/blob/77d0ad6c46c518234b9ce0a5be1f61a25f1bf753/src/backend/parser/parse_expr.c#L1104-L1260) that transforms an IN expression to an array expression. My C is limited, but it looks like the cases that can't be translated directly have to do with edge cases like mixed types in the IN list. I don't think that's an issue here?

@msakrejda this PR patches `HomogeneousIn`, which like the name suggests only contains values of the same type. For example, `where(id: [1, 2, nil])` generates `WHERE (id = any('{1,2}') OR id IS NULL)`. So we should be good there.

>@seanlinsley Performance boost seems like a good argument in here. 🚀 Would it be possible to remove pg_stat_statements comments from code then?

@simi well, the soonest Postgres might normalize `IN` list queries properly is in ~11 months for v17, so it's likely that users upgrading to Rails 7.2 will see this PR reduce their pg_stat_statements churn. But I will update the code comment and changelog to point out the performance improvement.

>@ghiculescu I was also thinking about need of making this configurable and switch this as default behaviour later, but I'm not sure if SQL queries are guaranteed to be stable across ActiveRecord minor/patch versions. Also, currently, this config will make it a little easier to test since branching would not be needed at various places.

@simi unless we can find a reason why users would need the old behavior, I do not think this should be configurable since `any` looks to be better than `IN` in several ways, with no downsides.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1746904761/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49388
https://api.github.com/repos/rails/rails/issues/comments/1734715859,https://github.com/rails/rails/pull/49377#issuecomment-1734715859,https://api.github.com/repos/rails/rails/issues/49377,1734715859,IC_kwDNIULOZ2Wp0w,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T02:02:55Z,2023-09-26T02:02:55Z,MEMBER,How much slower are the new calls?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1734715859/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49377
https://api.github.com/repos/rails/rails/issues/comments/1734724024,https://github.com/rails/rails/pull/49377#issuecomment-1734724024,https://api.github.com/repos/rails/rails/issues/49377,1734724024,IC_kwDNIULOZ2XJuA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T02:15:47Z,2023-09-26T02:15:47Z,MEMBER,"Simple benchmark shows me it is almost 2 slower


```
# frozen_string_literal: true

require ""bundler/setup""

require ""action_view""
require ""minitest/autorun""
require ""benchmark/ips""

class Foo
  include ActionView::Helpers
end

helpers = Foo.new

Benchmark.ips do |x|
  x.report(""tag"") { helpers.tag(""a"", href: ""foo"") }
  x.report(""tag_builder"") { helpers.tag.a(href: ""foo"") }
  x.compare!
end
```

```
Warming up --------------------------------------
                 tag    48.738k i/100ms
         tag_builder    29.990k i/100ms
Calculating -------------------------------------
                 tag    441.345k (±21.9%) i/s -      2.096M in   5.067122s
         tag_builder    265.445k (±23.2%) i/s -      1.230M in   5.085887s

Comparison:
                 tag:   441344.9 i/s
         tag_builder:   265445.4 i/s - 1.66x  (± 0.00) slower
```

I don't think it is worthy changing internal usage.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1734724024/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49377
https://api.github.com/repos/rails/rails/issues/comments/1735898651,https://github.com/rails/rails/pull/49377#issuecomment-1735898651,https://api.github.com/repos/rails/rails/issues/49377,1735898651,IC_kwDNIULOZ3e2Gw,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T16:33:30Z,2023-09-26T16:33:30Z,CONTRIBUTOR,"@rafaelfranca thank you so much for your detailed review, especially the benchmark.

I would love to address these performance issues enough to make my recent batch of TagBuilder pull requests more viable.

I've opened https://github.com/rails/rails/pull/49390 to explore what it'd be like to dynamically define methods to avoid calls to `#method_missing`. I'd really appreciate feedback on the approach. https://github.com/rails/rails/pull/49390 only explores void and self-closing elements, but if it's deemed to be worth exploring, I'm happy to work on elements with content too.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1735898651/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49377
https://api.github.com/repos/rails/rails/issues/comments/1749027874,https://github.com/rails/rails/pull/49377#issuecomment-1749027874,https://api.github.com/repos/rails/rails/issues/49377,1749027874,IC_kwDNIULOaEAMIg,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T14:30:24Z,2023-10-05T14:35:28Z,CONTRIBUTOR,"In response to https://github.com/rails/rails/pull/49377#issuecomment-1734724024, I've opened https://github.com/rails/rails/pull/49390. With that being merged, I consider the  following to be the remaining barriers to this work progressing:

1. The `ActiveModel` tag helper: https://github.com/rails/rails/pull/49377#discussion_r1336545269
2. Rendering open `<form>` elements requiring String manipulation ([comment](https://github.com/rails/rails/pull/49377/files#diff-35ff9932cd62aff4f22fa9fb8fc9ea39005108d86e8854c8d7a9567cc3871bc7))

While 1. is a common enough issue to make exploring alternatives a good idea, I wonder if 2. might be addressed by a change like https://github.com/rails/rails/pull/44275.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749027874/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49377
https://api.github.com/repos/rails/rails/issues/comments/1733213987,https://github.com/rails/rails/pull/49376#issuecomment-1733213987,https://api.github.com/repos/rails/rails/issues/49376,1733213987,IC_kwDNIULOZ06_Iw,"{'login': 'fractaledmind', 'id': 5077225, 'node_id': 'MDQ6VXNlcjUwNzcyMjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5077225?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fractaledmind', 'html_url': 'https://github.com/fractaledmind', 'followers_url': 'https://api.github.com/users/fractaledmind/followers', 'following_url': 'https://api.github.com/users/fractaledmind/following{/other_user}', 'gists_url': 'https://api.github.com/users/fractaledmind/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fractaledmind/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fractaledmind/subscriptions', 'organizations_url': 'https://api.github.com/users/fractaledmind/orgs', 'repos_url': 'https://api.github.com/users/fractaledmind/repos', 'events_url': 'https://api.github.com/users/fractaledmind/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fractaledmind/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T08:58:33Z,2023-09-25T08:58:33Z,CONTRIBUTOR,"Could the test failure be a flaky test? I can't reproduce locally and the error (`SQLite3::IOException: disk I/O error`) is a reflection of an OS-level problem: 

> his is what SQLite returns when it gets a hardware error while trying to do something.
— https://sqlite.org/forum/info/f0740edfea56d61b733d83e469a55436df66f34defb219ff806dccceb0e086eb

Could we retry the build?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1733213987/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49376
https://api.github.com/repos/rails/rails/issues/comments/1733366504,https://github.com/rails/rails/pull/49376#issuecomment-1733366504,https://api.github.com/repos/rails/rails/issues/49376,1733366504,IC_kwDNIULOZ1ES6A,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T10:12:06Z,2023-09-25T10:36:16Z,MEMBER,"> Could the test failure be a flaky test? I can't reproduce locally and the error (`SQLite3::IOException: disk I/O error`) is a reflection of an OS-level problem:
> 
> Could we retry the build?

I've issued a rebuild. :pray:

*Edit*: The rebuild failed, but this test is also [flaking on main](https://buildkite.com/rails/rails/builds/99978#018aca6a-35cb-40dd-b802-6e520a52b670/1092-1105).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1733366504/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49376
https://api.github.com/repos/rails/rails/issues/comments/1736051373,https://github.com/rails/rails/pull/49376#issuecomment-1736051373,https://api.github.com/repos/rails/rails/issues/49376,1736051373,IC_kwDNIULOZ3oKrQ,"{'login': 'fractaledmind', 'id': 5077225, 'node_id': 'MDQ6VXNlcjUwNzcyMjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5077225?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fractaledmind', 'html_url': 'https://github.com/fractaledmind', 'followers_url': 'https://api.github.com/users/fractaledmind/followers', 'following_url': 'https://api.github.com/users/fractaledmind/following{/other_user}', 'gists_url': 'https://api.github.com/users/fractaledmind/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fractaledmind/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fractaledmind/subscriptions', 'organizations_url': 'https://api.github.com/users/fractaledmind/orgs', 'repos_url': 'https://api.github.com/users/fractaledmind/repos', 'events_url': 'https://api.github.com/users/fractaledmind/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fractaledmind/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T18:17:25Z,2023-09-26T18:17:25Z,CONTRIBUTOR,"@zzak the fix for this flaky test is in main, can we rebuild this PR?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1736051373/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49376
https://api.github.com/repos/rails/rails/issues/comments/1736605659,https://github.com/rails/rails/pull/49376#issuecomment-1736605659,https://api.github.com/repos/rails/rails/issues/49376,1736605659,IC_kwDNIULOZ4J_2w,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T03:10:15Z,2023-09-27T03:10:15Z,MEMBER,@fractaledmind Could you rebase please? :bow:,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1736605659/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49376
https://api.github.com/repos/rails/rails/issues/comments/1733066586,https://github.com/rails/rails/pull/49371#issuecomment-1733066586,https://api.github.com/repos/rails/rails/issues/49371,1733066586,IC_kwDNIULOZ0x_Wg,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T07:21:34Z,2023-09-25T07:21:34Z,MEMBER,"Thanks for working on this @seanpdoyle.
Is it possible to split this into two separate PR's?
First replace internal usage of 'tag with positional arguments', then add the deprecation.
This should result in less `ActionView.deprecator.silence` churn.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1733066586/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49371
https://api.github.com/repos/rails/rails/issues/comments/1733391848,https://github.com/rails/rails/pull/49371#issuecomment-1733391848,https://api.github.com/repos/rails/rails/issues/49371,1733391848,IC_kwDNIULOZ1F16A,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T10:29:15Z,2023-09-25T10:29:15Z,MEMBER,"I think keeping it as a single commit/PR is fine, and maybe better to keep the context in one place 🤔 

Unless there is a very good reason, I also think we should avoid prescribing work for contributors who are volunteering their time.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1733391848/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49371
https://api.github.com/repos/rails/rails/issues/comments/1733440138,https://github.com/rails/rails/pull/49371#issuecomment-1733440138,https://api.github.com/repos/rails/rails/issues/49371,1733440138,IC_kwDNIULOZ1Iyig,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T11:01:40Z,2023-09-25T11:05:50Z,MEMBER,"> I think keeping it as a single commit/PR is fine, and maybe better to keep the context in one place 🤔

But shouldn't we try to at least to convert all internal usages for the positional tag in a single commit?
Some of these are now silenced instead, passing the burden of converting these to the person that will eventually remove the deprecated code.

Also, the internal usage removal could be merged into the 7.1 release candidate. The deprecation is probably for 7.2/8.0, as I think no more deprecations will be added to 7.1.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1733440138/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49371
https://api.github.com/repos/rails/rails/issues/comments/1733484502,https://github.com/rails/rails/pull/49371#issuecomment-1733484502,https://api.github.com/repos/rails/rails/issues/49371,1733484502,IC_kwDNIULOZ1Lf1g,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T11:32:09Z,2023-09-25T11:32:09Z,CONTRIBUTOR,"> Thanks for working on this @seanpdoyle.
> Is it possible to split this into two separate PR's?
> First replace internal usage of 'tag with positional arguments', then add the deprecation.
> This should result in less `ActionView.deprecator.silence` churn.

@p8 ohhhhh, believe me, I tried this 🙂!

This commit _does_ change as many of the calls as possible without making substantive changes to the test suite (other than adding `silence` blocks as well).

To give an example, the following diff:

```diff
diff --git a/actionview/lib/action_view/helpers/asset_tag_helper.rb b/actionview/lib/action_view/helpers/asset_tag_helper.rb
index 66f6b1ea1b..37905afd05 100644
--- a/actionview/lib/action_view/helpers/asset_tag_helper.rb
+++ b/actionview/lib/action_view/helpers/asset_tag_helper.rb
@@ -298,7 +298,7 @@ def auto_discovery_link_tag(type = :rss, url_options = {}, tag_options = {})
       #   # => <link href=""/assets/mb-icon.png"" rel=""apple-touch-icon"" type=""image/png"" />
       def favicon_link_tag(source = ""favicon.ico"", options = {})
         ActionView.deprecator.silence do
-          tag(""link"", {
+          tag.link(**{
             rel: ""icon"",
             type: ""image/x-icon"",
             href: path_to_image(source, skip_pipeline: options.delete(:skip_pipeline))

```

resulted in a test failure in `railties/`:

```
Failure:                                                     
ApplicationTests::AssetDebuggingTest#test_public_path_and_tag_methods_are_not_over-written_by_the_asset_pipeline [test/app
lication/asset_debugging_test.rb:102]:                                                                                    Expected `favicon_link_tag` to produce a match to (?-mix:<link rel=""icon"" type=""image\/x-icon"" href=""\/images\/doesnotexis
t"" \/>), but did not: <link rel=""icon"" type=""image/x-icon"" href=""/images/doesnotexist"">                                   .                                                            
Expected /<link rel=""icon"" type=""image\/x-icon"" href=""\/images\/doesnotexist"" \/>/ to match # encoding: ASCII-8BIT        #    valid: true                                                                                                          
""<link rel=\""icon\"" type=\""image/x-icon\"" href=\""/images/doesnotexist\"">\n"".
```

It's subtle, but the new `tag.link` call renders the `<link>` element as an open tag, and the tests expect it to be self-closing (i.e. `<link />`).

It's a fairly trivial change, but it's a change in behavior nonetheless. My motivation to separate out the deprecations from the internal replacements so that each of the test changes could be proposed on their own.

> Some of these are now silenced instead, passing the burden of converting these to the person that will eventually remove the deprecated code.

I'm more than happy to proposed a second PR with those changes (even while the deprecation one is open)!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1733484502/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49371
https://api.github.com/repos/rails/rails/issues/comments/1733684485,https://github.com/rails/rails/pull/49371#issuecomment-1733684485,https://api.github.com/repos/rails/rails/issues/49371,1733684485,IC_kwDNIULOZ1XtBQ,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T13:11:40Z,2023-09-25T13:11:40Z,CONTRIBUTOR,"@p8 I've opened https://github.com/rails/rails/pull/49377 to remove internal calls. It relies on this commit, but if we decide to merge that ahead of the deprecations, I can change it to be a single atomic commit.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1733684485/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,49371
https://api.github.com/repos/rails/rails/issues/comments/1733732246,https://github.com/rails/rails/pull/49371#issuecomment-1733732246,https://api.github.com/repos/rails/rails/issues/49371,1733732246,IC_kwDNIULOZ1anlg,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T13:38:27Z,2023-09-25T13:38:27Z,MEMBER,"> @p8 ohhhhh, believe me, I tried this 🙂!

Ah I see 😄 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1733732246/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49371
https://api.github.com/repos/rails/rails/issues/comments/1734417556,https://github.com/rails/rails/pull/49371#issuecomment-1734417556,https://api.github.com/repos/rails/rails/issues/49371,1734417556,IC_kwDNIULOZ2EclA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T20:29:02Z,2023-09-25T20:29:02Z,MEMBER,"We can't add new deprecation after the beta, so this will only be included in 7.2","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1734417556/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49371
https://api.github.com/repos/rails/rails/issues/comments/1734139688,https://github.com/rails/rails/pull/49369#issuecomment-1734139688,https://api.github.com/repos/rails/rails/issues/49369,1734139688,IC_kwDNIULOZ1zfKA,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T17:01:04Z,2023-09-25T17:01:04Z,CONTRIBUTOR,"@p8 elsewhere, [you mentioned](https://github.com/rails/rails/pull/49371#issuecomment-1733440138) that it's unlikely for any more deprecations to be included in the 7.1 release.

Is this diff an exception to that, since the `TagBuilder` class is marked as `:nodoc:`?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1734139688/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49369
https://api.github.com/repos/rails/rails/issues/comments/1734132062,https://github.com/rails/rails/pull/49368#issuecomment-1734132062,https://api.github.com/repos/rails/rails/issues/49368,1734132062,IC_kwDNIULOZ1zBXg,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T16:55:38Z,2023-09-25T16:55:38Z,CONTRIBUTOR,"@zzak I've attached some screenshots of the documentation pages:

**There isn't a documentation method for `attributes` defined on `TagBuilder`**:

![Screenshot 2023-09-25 at 12 52 16 PM](https://github.com/rails/rails/assets/2575027/a26ce740-591f-4ee1-b8f3-275d565b9d88)

There are now `tag.*` and `tag.attributes` entries:

![Screenshot 2023-09-25 at 12 52 25 PM](https://github.com/rails/rails/assets/2575027/a723ea6d-34f5-4008-b9ca-8831592b0226)

The `tag.attributes` method:

![Screenshot 2023-09-25 at 12 53 03 PM](https://github.com/rails/rails/assets/2575027/20dd9e11-90c0-4395-b8f4-03c6b6b91456)

The `tag.*` method:

![Screenshot 2023-09-25 at 12 53 20 PM](https://github.com/rails/rails/assets/2575027/d2f7f6fb-6ba4-4150-adcd-5bd42de9c564)

The table of contents:

![Screenshot 2023-09-25 at 12 53 40 PM](https://github.com/rails/rails/assets/2575027/5c307609-d8fa-4cb9-ba93-66abe2fcee00)

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1734132062/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49368
https://api.github.com/repos/rails/rails/issues/comments/1749538434,https://github.com/rails/rails/pull/49368#issuecomment-1749538434,https://api.github.com/repos/rails/rails/issues/49368,1749538434,IC_kwDNIULOaEfWgg,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T19:43:34Z,2023-10-05T19:44:17Z,CONTRIBUTOR,"@rafaelfranca @zzak I've incorporated your feedback into this diff. I've added RDoc methods for each of the generated element methods.

This PR description/title used to have `[ci skip]`, but no longer does. The full test suite should execute, since there are changes to the TagBuilder's inheritance. Build kite isn't executing as a GitHub Action. Is that something either one of you could remedy, or do I need to open a new pull request?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749538434/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49368
https://api.github.com/repos/rails/rails/issues/comments/1732399831,https://github.com/rails/rails/pull/49360#issuecomment-1732399831,https://api.github.com/repos/rails/rails/issues/49360,1732399831,IC_kwDNIULOZ0JS1w,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-09-23T20:07:21Z,2023-09-23T20:07:21Z,MEMBER,Drafted because rubygems/rubygems#6985 hasn't quite been released yet,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732399831/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49360
https://api.github.com/repos/rails/rails/issues/comments/1732509050,https://github.com/rails/rails/pull/49360#issuecomment-1732509050,https://api.github.com/repos/rails/rails/issues/49360,1732509050,IC_kwDNIULOZ0P9eg,"{'login': 'sinsoku', 'id': 248174, 'node_id': 'MDQ6VXNlcjI0ODE3NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/248174?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sinsoku', 'html_url': 'https://github.com/sinsoku', 'followers_url': 'https://api.github.com/users/sinsoku/followers', 'following_url': 'https://api.github.com/users/sinsoku/following{/other_user}', 'gists_url': 'https://api.github.com/users/sinsoku/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sinsoku/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sinsoku/subscriptions', 'organizations_url': 'https://api.github.com/users/sinsoku/orgs', 'repos_url': 'https://api.github.com/users/sinsoku/repos', 'events_url': 'https://api.github.com/users/sinsoku/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sinsoku/received_events', 'type': 'User', 'site_admin': False}",2023-09-24T07:25:46Z,2023-09-24T07:26:48Z,CONTRIBUTOR,"@skipkayhil 
`bundle install` requires `.ruby-version`, so you should modify the Dockerfile as well.
I think you should modify the following parts.
https://github.com/rails/rails/blob/d99e355390ec3abea129eed88f003ef2171c5177/railties/lib/rails/generators/rails/app/templates/Dockerfile.tt#L42-L46","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732509050/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49360
https://api.github.com/repos/rails/rails/issues/comments/1732510409,https://github.com/rails/rails/pull/49360#issuecomment-1732510409,https://api.github.com/repos/rails/rails/issues/49360,1732510409,IC_kwDNIULOZ0QCyQ,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2023-09-24T07:34:16Z,2023-09-24T07:34:16Z,CONTRIBUTOR,"> @skipkayhil `bundle install` requires `.ruby-version`, so you should modify the Dockerfile as well. I think you should modify the following parts.
> 
> https://github.com/rails/rails/blob/d99e355390ec3abea129eed88f003ef2171c5177/railties/lib/rails/generators/rails/app/templates/Dockerfile.tt#L42-L46

Indeed this is one of the caveats of `.ruby-version` support in Bundler. It should be copied next to `Gemfile` to production container even it's original purpose is mostly for development. :shrug: ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732510409/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49360
https://api.github.com/repos/rails/rails/issues/comments/1732168270,https://github.com/rails/rails/issues/49355#issuecomment-1732168270,https://api.github.com/repos/rails/rails/issues/49355,1732168270,IC_kwDNIULOZz7KTg,"{'login': 'EnotPoloskun', 'id': 1088050, 'node_id': 'MDQ6VXNlcjEwODgwNTA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1088050?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/EnotPoloskun', 'html_url': 'https://github.com/EnotPoloskun', 'followers_url': 'https://api.github.com/users/EnotPoloskun/followers', 'following_url': 'https://api.github.com/users/EnotPoloskun/following{/other_user}', 'gists_url': 'https://api.github.com/users/EnotPoloskun/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/EnotPoloskun/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/EnotPoloskun/subscriptions', 'organizations_url': 'https://api.github.com/users/EnotPoloskun/orgs', 'repos_url': 'https://api.github.com/users/EnotPoloskun/repos', 'events_url': 'https://api.github.com/users/EnotPoloskun/events{/privacy}', 'received_events_url': 'https://api.github.com/users/EnotPoloskun/received_events', 'type': 'User', 'site_admin': False}",2023-09-23T01:17:44Z,2023-09-23T01:18:57Z,NONE,"I believe that potential workaround for that issue is defining scoped association for `has_many through` to use. E.g in my example `Invoice` model should be changed to following

```ruby
class Invoice < ActiveRecord::Base
  has_many :invoice_payments
  has_many :charge_invoice_payments, -> { where(source_type: ""Charge"") }, class_name: ""InvoicePayment""
  has_many :charges, through: :charge_invoice_payments, source: :source, source_type: ""Charge""
end
```

and tests will pass.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732168270/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49355
https://api.github.com/repos/rails/rails/issues/comments/1732316021,https://github.com/rails/rails/issues/49355#issuecomment-1732316021,https://api.github.com/repos/rails/rails/issues/49355,1732316021,IC_kwDNIULOZ0ELdQ,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-09-23T13:13:26Z,2023-09-23T13:14:31Z,CONTRIBUTOR,"I can confirm the error occurs from the reproduction script on the current development branch for `7.x`.

Possibly related to:
[49197](https://github.com/rails/rails/issues/49197)
[49084](https://github.com/rails/rails/issues/49084)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732316021/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49355
https://api.github.com/repos/rails/rails/issues/comments/1738070554,https://github.com/rails/rails/issues/49354#issuecomment-1738070554,https://api.github.com/repos/rails/rails/issues/49354,1738070554,IC_kwDNIULOZ5jaGg,"{'login': 'hahmed', 'id': 658005, 'node_id': 'MDQ6VXNlcjY1ODAwNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/658005?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hahmed', 'html_url': 'https://github.com/hahmed', 'followers_url': 'https://api.github.com/users/hahmed/followers', 'following_url': 'https://api.github.com/users/hahmed/following{/other_user}', 'gists_url': 'https://api.github.com/users/hahmed/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hahmed/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hahmed/subscriptions', 'organizations_url': 'https://api.github.com/users/hahmed/orgs', 'repos_url': 'https://api.github.com/users/hahmed/repos', 'events_url': 'https://api.github.com/users/hahmed/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hahmed/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T20:59:57Z,2023-09-27T20:59:57Z,CONTRIBUTOR,"Hey @nkokkos any chance you could link to a repo that reproduces this issue? That will really help, thank you.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1738070554/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49354
https://api.github.com/repos/rails/rails/issues/comments/1731514179,https://github.com/rails/rails/issues/49353#issuecomment-1731514179,https://api.github.com/repos/rails/rails/issues/49353,1731514179,IC_kwDNIULOZzTPQw,"{'login': 'alpaca-tc', 'id': 1688137, 'node_id': 'MDQ6VXNlcjE2ODgxMzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1688137?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/alpaca-tc', 'html_url': 'https://github.com/alpaca-tc', 'followers_url': 'https://api.github.com/users/alpaca-tc/followers', 'following_url': 'https://api.github.com/users/alpaca-tc/following{/other_user}', 'gists_url': 'https://api.github.com/users/alpaca-tc/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/alpaca-tc/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/alpaca-tc/subscriptions', 'organizations_url': 'https://api.github.com/users/alpaca-tc/orgs', 'repos_url': 'https://api.github.com/users/alpaca-tc/repos', 'events_url': 'https://api.github.com/users/alpaca-tc/events{/privacy}', 'received_events_url': 'https://api.github.com/users/alpaca-tc/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T14:24:30Z,2023-09-22T14:26:44Z,CONTRIBUTOR,"If you use `#find_or_create_by`, the value of the argument passed is used to create the record.

```
Alert.create_with(status: :active).find_or_create_by(status: :pending).status #=> ""pending""
```

If you use `#first_or_create`, the value of create_with will be used, which is the behavior you expect.

```
Alert.create_with(status: :active).where(status: :pending).first_or_create.status #=> ""active""
Alert.create_with(status: :active).where(status: [:pending, :active]).first_or_create.status #=> ""active""
```
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1731514179/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49353
https://api.github.com/repos/rails/rails/issues/comments/1731592274,https://github.com/rails/rails/issues/49353#issuecomment-1731592274,https://api.github.com/repos/rails/rails/issues/49353,1731592274,IC_kwDNIULOZzYAUg,"{'login': 'jean-francois-labbe', 'id': 1558372, 'node_id': 'MDQ6VXNlcjE1NTgzNzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1558372?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jean-francois-labbe', 'html_url': 'https://github.com/jean-francois-labbe', 'followers_url': 'https://api.github.com/users/jean-francois-labbe/followers', 'following_url': 'https://api.github.com/users/jean-francois-labbe/following{/other_user}', 'gists_url': 'https://api.github.com/users/jean-francois-labbe/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jean-francois-labbe/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jean-francois-labbe/subscriptions', 'organizations_url': 'https://api.github.com/users/jean-francois-labbe/orgs', 'repos_url': 'https://api.github.com/users/jean-francois-labbe/repos', 'events_url': 'https://api.github.com/users/jean-francois-labbe/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jean-francois-labbe/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T15:14:04Z,2023-09-22T15:14:04Z,CONTRIBUTOR,"Thanks for the answer.

`first_or_create` doesn't seem to be documented.

This is confusing that `Alert.create_with(status: :active).find_or_create_by(status: :pending).status #=> ""pending""` I would expect the `create_with` attributes to override the `find_or_create_by` attributes when creating the record.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1731592274/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49353
https://api.github.com/repos/rails/rails/issues/comments/1732294868,https://github.com/rails/rails/issues/49353#issuecomment-1732294868,https://api.github.com/repos/rails/rails/issues/49353,1732294868,IC_kwDNIULOZ0C41A,"{'login': 'alpaca-tc', 'id': 1688137, 'node_id': 'MDQ6VXNlcjE2ODgxMzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1688137?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/alpaca-tc', 'html_url': 'https://github.com/alpaca-tc', 'followers_url': 'https://api.github.com/users/alpaca-tc/followers', 'following_url': 'https://api.github.com/users/alpaca-tc/following{/other_user}', 'gists_url': 'https://api.github.com/users/alpaca-tc/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/alpaca-tc/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/alpaca-tc/subscriptions', 'organizations_url': 'https://api.github.com/users/alpaca-tc/orgs', 'repos_url': 'https://api.github.com/users/alpaca-tc/repos', 'events_url': 'https://api.github.com/users/alpaca-tc/events{/privacy}', 'received_events_url': 'https://api.github.com/users/alpaca-tc/received_events', 'type': 'User', 'site_admin': False}",2023-09-23T12:08:17Z,2023-09-23T12:08:17Z,CONTRIBUTOR,"oh...sorry, I didn't know first_or_create is a private API.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732294868/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49353
https://api.github.com/repos/rails/rails/issues/comments/1732392067,https://github.com/rails/rails/issues/49353#issuecomment-1732392067,https://api.github.com/repos/rails/rails/issues/49353,1732392067,IC_kwDNIULOZ0I0gw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-09-23T19:22:15Z,2023-09-27T23:09:33Z,CONTRIBUTOR,"> ### Expected behavior
> When using `create_with(status: :pending)` followed by `find_or_create_by(device: device, status: [:pending, :active])` with an array of enum values I would expect the find to use the array of enum values and in case it needs to create a record it would use the value provided in `create_with`.

For a chain of `create_with(attributes1)` followed by `find_or_create_by(attributes2)`, I would expect that when the record was not found, the new record is created with `attributes1.merge(attributes2)` attributes. So this is not an issue, but a correct behaviour, imo.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732392067/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49353
https://api.github.com/repos/rails/rails/issues/comments/1738119163,https://github.com/rails/rails/issues/49351#issuecomment-1738119163,https://api.github.com/repos/rails/rails/issues/49351,1738119163,IC_kwDNIULOZ5mX-w,"{'login': 'hahmed', 'id': 658005, 'node_id': 'MDQ6VXNlcjY1ODAwNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/658005?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hahmed', 'html_url': 'https://github.com/hahmed', 'followers_url': 'https://api.github.com/users/hahmed/followers', 'following_url': 'https://api.github.com/users/hahmed/following{/other_user}', 'gists_url': 'https://api.github.com/users/hahmed/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hahmed/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hahmed/subscriptions', 'organizations_url': 'https://api.github.com/users/hahmed/orgs', 'repos_url': 'https://api.github.com/users/hahmed/repos', 'events_url': 'https://api.github.com/users/hahmed/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hahmed/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T21:44:00Z,2023-09-27T21:44:00Z,CONTRIBUTOR,"The tests for the db tasks look like they are [in railties](https://github.com/rails/rails/blob/7c03e4f1b7553084f34318a9efc2793137de36f4/railties/test/application/rake/migrations_test.rb#L7)

Let's say you have an app with a schema (primary) already, and if you run `bin/rails db:migrate:primary` whilst having a secondary database setup in database.yml it does not create the `secondary_schema.rb`, taking that into account I think this makes sense 🤔
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1738119163/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49351
https://api.github.com/repos/rails/rails/issues/comments/1730499809,https://github.com/rails/rails/pull/49348#issuecomment-1730499809,https://api.github.com/repos/rails/rails/issues/49348,1730499809,IC_kwDNIULOZyVU4Q,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T23:43:41Z,2023-09-21T23:43:41Z,MEMBER,"> Composite primary keys are not supported, should it be supported in this PR ?

Without commenting on the concept in general, I'd say yes, if fixtures support composite primary keys then you should probably be able to go in the reverse direction too.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1730499809/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,49348
https://api.github.com/repos/rails/rails/issues/comments/1736245511,https://github.com/rails/rails/pull/49346#issuecomment-1736245511,https://api.github.com/repos/rails/rails/issues/49346,1736245511,IC_kwDNIULOZ30BBw,"{'login': 'fractaledmind', 'id': 5077225, 'node_id': 'MDQ6VXNlcjUwNzcyMjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5077225?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fractaledmind', 'html_url': 'https://github.com/fractaledmind', 'followers_url': 'https://api.github.com/users/fractaledmind/followers', 'following_url': 'https://api.github.com/users/fractaledmind/following{/other_user}', 'gists_url': 'https://api.github.com/users/fractaledmind/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fractaledmind/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fractaledmind/subscriptions', 'organizations_url': 'https://api.github.com/users/fractaledmind/orgs', 'repos_url': 'https://api.github.com/users/fractaledmind/repos', 'events_url': 'https://api.github.com/users/fractaledmind/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fractaledmind/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T20:27:59Z,2023-09-26T20:27:59Z,CONTRIBUTOR,@skipkayhil Addressed your one comment. Everything should be good to go now ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1736245511/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49346
https://api.github.com/repos/rails/rails/issues/comments/1729681668,https://github.com/rails/rails/pull/49339#issuecomment-1729681668,https://api.github.com/repos/rails/rails/issues/49339,1729681668,IC_kwDNIULOZxjZBA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T14:19:50Z,2023-09-21T14:25:27Z,MEMBER,"Thanks for the PR.
Maybe someone would like to not raise error on a `staging` environment as well. Setting `production_only` would not work in that case.
 
So I think maybe a `raise_error` flag would be more flexible than a `production_only` flag.
It also better describes the behaviour.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1729681668/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49339
https://api.github.com/repos/rails/rails/issues/comments/1729722660,https://github.com/rails/rails/pull/49339#issuecomment-1729722660,https://api.github.com/repos/rails/rails/issues/49339,1729722660,IC_kwDNIULOZxl5JA,"{'login': 'andrewn617', 'id': 39735028, 'node_id': 'MDQ6VXNlcjM5NzM1MDI4', 'avatar_url': 'https://avatars.githubusercontent.com/u/39735028?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andrewn617', 'html_url': 'https://github.com/andrewn617', 'followers_url': 'https://api.github.com/users/andrewn617/followers', 'following_url': 'https://api.github.com/users/andrewn617/following{/other_user}', 'gists_url': 'https://api.github.com/users/andrewn617/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andrewn617/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andrewn617/subscriptions', 'organizations_url': 'https://api.github.com/users/andrewn617/orgs', 'repos_url': 'https://api.github.com/users/andrewn617/repos', 'events_url': 'https://api.github.com/users/andrewn617/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andrewn617/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T14:39:49Z,2023-09-21T14:39:49Z,CONTRIBUTOR,"> So I think maybe a raise_error flag would be more flexible than a production_only flag.

I am not sure if I am understanding your suggestion. In this case how would we know if we are in a genuine production environment or a staging environment? 

I am also not sure if I think it describes the method better since `handle(raise_error: true)` seems oxymoronic, if we are raising an error then we are not handling it. `handle(production_only: true)` makes sense, in other words we are handling errors in production only otherwise they are unhandled.

Another idea I had was to do it based on `app.config.consider_all_requests_local` though I am not sure if a staging environment would have that set to `true` or `false`. Since staging environment is not really a rails concept as far as I know it is hard for me to know what to expect that environment to be like. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1729722660/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49339
https://api.github.com/repos/rails/rails/issues/comments/1729760432,https://github.com/rails/rails/pull/49339#issuecomment-1729760432,https://api.github.com/repos/rails/rails/issues/49339,1729760432,IC_kwDNIULOZxoMsA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T14:59:38Z,2023-09-21T15:02:51Z,MEMBER,"It would be a setting that can be set in config/environments/test.rb, similar to:
https://github.com/rails/rails/blob/585e0ca284169cd1496fd0a30659fb9bd5852d0a/railties/lib/rails/generators/rails/app/templates/config/environments/test.rb.tt#L31-L32

So maybe something like:
```ruby
config.error_reporter.show_exceptions = true
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1729760432/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49339
https://api.github.com/repos/rails/rails/issues/comments/1729773236,https://github.com/rails/rails/pull/49339#issuecomment-1729773236,https://api.github.com/repos/rails/rails/issues/49339,1729773236,IC_kwDNIULOZxo-tA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T15:05:18Z,2023-09-21T15:05:18Z,MEMBER,"You can also define your own ErrorReporter for Test that raises:
https://edgeguides.rubyonrails.org/error_reporting.html#subscribing-to-the-reporter","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1729773236/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49339
https://api.github.com/repos/rails/rails/issues/comments/1729849242,https://github.com/rails/rails/pull/49339#issuecomment-1729849242,https://api.github.com/repos/rails/rails/issues/49339,1729849242,IC_kwDNIULOZxtnmg,"{'login': 'andrewn617', 'id': 39735028, 'node_id': 'MDQ6VXNlcjM5NzM1MDI4', 'avatar_url': 'https://avatars.githubusercontent.com/u/39735028?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andrewn617', 'html_url': 'https://github.com/andrewn617', 'followers_url': 'https://api.github.com/users/andrewn617/followers', 'following_url': 'https://api.github.com/users/andrewn617/following{/other_user}', 'gists_url': 'https://api.github.com/users/andrewn617/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andrewn617/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andrewn617/subscriptions', 'organizations_url': 'https://api.github.com/users/andrewn617/orgs', 'repos_url': 'https://api.github.com/users/andrewn617/repos', 'events_url': 'https://api.github.com/users/andrewn617/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andrewn617/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T15:47:19Z,2023-09-21T15:47:19Z,CONTRIBUTOR,"Sure I can move it to the environment so it can be configured more flexibly. I am struggling with the naming though since `handle(raise_error: true)` seems like it will always raise, when really what we want to capture is it will only raise in certain environments.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1729849242/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49339
https://api.github.com/repos/rails/rails/issues/comments/1730162170,https://github.com/rails/rails/pull/49339#issuecomment-1730162170,https://api.github.com/repos/rails/rails/issues/49339,1730162170,IC_kwDNIULOZyAt-g,"{'login': 'andrewn617', 'id': 39735028, 'node_id': 'MDQ6VXNlcjM5NzM1MDI4', 'avatar_url': 'https://avatars.githubusercontent.com/u/39735028?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andrewn617', 'html_url': 'https://github.com/andrewn617', 'followers_url': 'https://api.github.com/users/andrewn617/followers', 'following_url': 'https://api.github.com/users/andrewn617/following{/other_user}', 'gists_url': 'https://api.github.com/users/andrewn617/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andrewn617/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andrewn617/subscriptions', 'organizations_url': 'https://api.github.com/users/andrewn617/orgs', 'repos_url': 'https://api.github.com/users/andrewn617/repos', 'events_url': 'https://api.github.com/users/andrewn617/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andrewn617/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T19:19:41Z,2023-09-21T19:19:41Z,CONTRIBUTOR,"@p8 I have been working on this more, and I think it might be simpler if we do away with the configuration entirely.  It seems confusing to have a configuration and a parameter to the method. If I do `handle(raise: true)` I except it to always raise, but that's not true if we go with the configuration. 

Instead what if we have an `if` parameter to the `handle` method. Then you could do:

```
Rails.error.handle(if: Rails.env.production?) do
  raise Foo
end
```

What do you think of this approach?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1730162170/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49339
https://api.github.com/repos/rails/rails/issues/comments/1734095751,https://github.com/rails/rails/pull/49337#issuecomment-1734095751,https://api.github.com/repos/rails/rails/issues/49337,1734095751,IC_kwDNIULOZ1wzhw,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T16:32:34Z,2023-09-25T16:32:34Z,MEMBER,"I've been thinking more about this and I don't think this is that helpful to add to the error. A statement invalid is rarely due to a bad connection setup, what value does it add to know anything about the connection here? ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1734095751/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49337
https://api.github.com/repos/rails/rails/issues/comments/1742161135,https://github.com/rails/rails/pull/49337#issuecomment-1742161135,https://api.github.com/repos/rails/rails/issues/49337,1742161135,IC_kwDNIULOZ9dE7w,"{'login': 'andyatkinson', 'id': 2161008, 'node_id': 'MDQ6VXNlcjIxNjEwMDg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2161008?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andyatkinson', 'html_url': 'https://github.com/andyatkinson', 'followers_url': 'https://api.github.com/users/andyatkinson/followers', 'following_url': 'https://api.github.com/users/andyatkinson/following{/other_user}', 'gists_url': 'https://api.github.com/users/andyatkinson/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andyatkinson/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andyatkinson/subscriptions', 'organizations_url': 'https://api.github.com/users/andyatkinson/orgs', 'repos_url': 'https://api.github.com/users/andyatkinson/repos', 'events_url': 'https://api.github.com/users/andyatkinson/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andyatkinson/received_events', 'type': 'User', 'site_admin': False}",2023-10-01T18:28:22Z,2023-10-01T18:29:19Z,MEMBER,"Speculating here @fatkodima @eileencodes, but I see the database name and role name are included in the message, so I was thinking about errors for those. Would it mainly be initial configuration types of errors when an app is getting connected to the DB for the first time? Maybe the `DATABASE_URL` has the incorrect database name, role name, or the role isn't authorized (e.g. bad password).

Maybe some example errors that simulate a bad connection, and how the error text changes with this PR, would help in showing how the text is improved relative to what's there now, and confirm that the text would help when debugging those types of errors.

Thanks!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742161135/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49337
https://api.github.com/repos/rails/rails/issues/comments/1742162686,https://github.com/rails/rails/pull/49337#issuecomment-1742162686,https://api.github.com/repos/rails/rails/issues/49337,1742162686,IC_kwDNIULOZ9dK_g,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-10-01T18:34:18Z,2023-10-01T18:34:18Z,CONTRIBUTOR,"> Would it mainly be initial configuration types of errors when an app is getting connected to the DB for the first time?

This change is for errors that happen after the connection was established. Errors like timeout errors, foreign key constraint errors etc.

See the linked issue for the discussion and examples of how it can be useful. There were 2 approaches discussed - message changing (this PR) and a more complicated. But we haven't agreed on the approach yet.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742162686/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49337
https://api.github.com/repos/rails/rails/issues/comments/1742183974,https://github.com/rails/rails/pull/49337#issuecomment-1742183974,https://api.github.com/repos/rails/rails/issues/49337,1742183974,IC_kwDNIULOZ9eeJg,"{'login': 'andyatkinson', 'id': 2161008, 'node_id': 'MDQ6VXNlcjIxNjEwMDg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2161008?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andyatkinson', 'html_url': 'https://github.com/andyatkinson', 'followers_url': 'https://api.github.com/users/andyatkinson/followers', 'following_url': 'https://api.github.com/users/andyatkinson/following{/other_user}', 'gists_url': 'https://api.github.com/users/andyatkinson/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andyatkinson/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andyatkinson/subscriptions', 'organizations_url': 'https://api.github.com/users/andyatkinson/orgs', 'repos_url': 'https://api.github.com/users/andyatkinson/repos', 'events_url': 'https://api.github.com/users/andyatkinson/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andyatkinson/received_events', 'type': 'User', 'site_admin': False}",2023-10-01T19:56:33Z,2023-10-01T19:56:33Z,MEMBER,"Ah thanks, I didn't read through the linked issue. In general I often find StatementInvalid is very broad and am interested in more specific errors for things like constraint violations or query cancellations that this PR is targeting.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742183974/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49337
https://api.github.com/repos/rails/rails/issues/comments/1742184941,https://github.com/rails/rails/pull/49337#issuecomment-1742184941,https://api.github.com/repos/rails/rails/issues/49337,1742184941,IC_kwDNIULOZ9eh7Q,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-10-01T20:00:25Z,2023-10-01T20:00:25Z,CONTRIBUTOR,There are already error classes for these (children of `StatementInvalid`). You can find them in https://github.com/rails/rails/blob/main/activerecord/lib/active_record/errors.rb,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742184941/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49337
https://api.github.com/repos/rails/rails/issues/comments/1727872842,https://github.com/rails/rails/pull/49332#issuecomment-1727872842,https://api.github.com/repos/rails/rails/issues/49332,1727872842,IC_kwDNIULOZv0_Sg,"{'login': 'versality', 'id': 1486626, 'node_id': 'MDQ6VXNlcjE0ODY2MjY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1486626?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/versality', 'html_url': 'https://github.com/versality', 'followers_url': 'https://api.github.com/users/versality/followers', 'following_url': 'https://api.github.com/users/versality/following{/other_user}', 'gists_url': 'https://api.github.com/users/versality/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/versality/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/versality/subscriptions', 'organizations_url': 'https://api.github.com/users/versality/orgs', 'repos_url': 'https://api.github.com/users/versality/repos', 'events_url': 'https://api.github.com/users/versality/events{/privacy}', 'received_events_url': 'https://api.github.com/users/versality/received_events', 'type': 'User', 'site_admin': False}",2023-09-20T14:42:43Z,2023-09-20T14:42:43Z,NONE,"I fully agree with the change. It is rather confusing that an `update` method ignore the scope on which the `update` is called.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1727872842/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49332
https://api.github.com/repos/rails/rails/issues/comments/1731531356,https://github.com/rails/rails/pull/49332#issuecomment-1731531356,https://api.github.com/repos/rails/rails/issues/49332,1731531356,IC_kwDNIULOZzUSXA,"{'login': 'raszi', 'id': 76983, 'node_id': 'MDQ6VXNlcjc2OTgz', 'avatar_url': 'https://avatars.githubusercontent.com/u/76983?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/raszi', 'html_url': 'https://github.com/raszi', 'followers_url': 'https://api.github.com/users/raszi/followers', 'following_url': 'https://api.github.com/users/raszi/following{/other_user}', 'gists_url': 'https://api.github.com/users/raszi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/raszi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/raszi/subscriptions', 'organizations_url': 'https://api.github.com/users/raszi/orgs', 'repos_url': 'https://api.github.com/users/raszi/repos', 'events_url': 'https://api.github.com/users/raszi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/raszi/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T14:34:51Z,2023-09-22T14:34:51Z,NONE,"Good point! I had a test for those cases but then some of the tests were failing, then I failed to refactor them correctly. Let me add proper tests.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1731531356/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49332
https://api.github.com/repos/rails/rails/issues/comments/1731541176,https://github.com/rails/rails/pull/49332#issuecomment-1731541176,https://api.github.com/repos/rails/rails/issues/49332,1731541176,IC_kwDNIULOZzU4uA,"{'login': 'raszi', 'id': 76983, 'node_id': 'MDQ6VXNlcjc2OTgz', 'avatar_url': 'https://avatars.githubusercontent.com/u/76983?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/raszi', 'html_url': 'https://github.com/raszi', 'followers_url': 'https://api.github.com/users/raszi/followers', 'following_url': 'https://api.github.com/users/raszi/following{/other_user}', 'gists_url': 'https://api.github.com/users/raszi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/raszi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/raszi/subscriptions', 'organizations_url': 'https://api.github.com/users/raszi/orgs', 'repos_url': 'https://api.github.com/users/raszi/repos', 'events_url': 'https://api.github.com/users/raszi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/raszi/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T14:41:01Z,2023-09-22T14:41:01Z,NONE,"Okay, I did have a test for that but then I made it symmetrical to `ActiveRecord::Persistence` and now it is throwing an error:

https://github.com/rails/rails/blob/f16c941c8e99db857a06a916ea340b1244c999cf/activerecord/test/cases/relation/update_all_test.rb#L182-L192 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1731541176/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49332
https://api.github.com/repos/rails/rails/issues/comments/1732106451,https://github.com/rails/rails/pull/49332#issuecomment-1732106451,https://api.github.com/repos/rails/rails/issues/49332,1732106451,IC_kwDNIULOZz3Y0w,"{'login': 'raszi', 'id': 76983, 'node_id': 'MDQ6VXNlcjc2OTgz', 'avatar_url': 'https://avatars.githubusercontent.com/u/76983?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/raszi', 'html_url': 'https://github.com/raszi', 'followers_url': 'https://api.github.com/users/raszi/followers', 'following_url': 'https://api.github.com/users/raszi/following{/other_user}', 'gists_url': 'https://api.github.com/users/raszi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/raszi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/raszi/subscriptions', 'organizations_url': 'https://api.github.com/users/raszi/orgs', 'repos_url': 'https://api.github.com/users/raszi/repos', 'events_url': 'https://api.github.com/users/raszi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/raszi/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T22:51:23Z,2023-09-22T23:05:59Z,NONE,"I added new tests first, then the old started to fail, so I decided to update them instead. I can change them of course as you suggested.

I can add a test case covering the with single id as well.

But I cannot keep `test_update_with_ids_on_relation` as is, since that is calling `update` on a `none` scope and any update on that with ids should fail. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732106451/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49332
https://api.github.com/repos/rails/rails/issues/comments/1732251806,https://github.com/rails/rails/pull/49332#issuecomment-1732251806,https://api.github.com/repos/rails/rails/issues/49332,1732251806,IC_kwDNIULOZ0AQng,"{'login': 'raszi', 'id': 76983, 'node_id': 'MDQ6VXNlcjc2OTgz', 'avatar_url': 'https://avatars.githubusercontent.com/u/76983?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/raszi', 'html_url': 'https://github.com/raszi', 'followers_url': 'https://api.github.com/users/raszi/followers', 'following_url': 'https://api.github.com/users/raszi/following{/other_user}', 'gists_url': 'https://api.github.com/users/raszi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/raszi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/raszi/subscriptions', 'organizations_url': 'https://api.github.com/users/raszi/orgs', 'repos_url': 'https://api.github.com/users/raszi/repos', 'events_url': 'https://api.github.com/users/raszi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/raszi/received_events', 'type': 'User', 'site_admin': False}",2023-09-23T08:21:42Z,2023-09-23T08:21:42Z,NONE,I did adjustments on the tests as you suggested.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732251806/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49332
https://api.github.com/repos/rails/rails/issues/comments/1750286521,https://github.com/rails/rails/pull/49332#issuecomment-1750286521,https://api.github.com/repos/rails/rails/issues/49332,1750286521,IC_kwDNIULOaFNAuQ,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-10-06T09:34:32Z,2023-10-06T09:34:32Z,MEMBER,@raszi Could you please [squash your commits](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#squashing-commits)? :bow:,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1750286521/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49332
https://api.github.com/repos/rails/rails/issues/comments/1750290792,https://github.com/rails/rails/pull/49332#issuecomment-1750290792,https://api.github.com/repos/rails/rails/issues/49332,1750290792,IC_kwDNIULOaFNRaA,"{'login': 'raszi', 'id': 76983, 'node_id': 'MDQ6VXNlcjc2OTgz', 'avatar_url': 'https://avatars.githubusercontent.com/u/76983?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/raszi', 'html_url': 'https://github.com/raszi', 'followers_url': 'https://api.github.com/users/raszi/followers', 'following_url': 'https://api.github.com/users/raszi/following{/other_user}', 'gists_url': 'https://api.github.com/users/raszi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/raszi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/raszi/subscriptions', 'organizations_url': 'https://api.github.com/users/raszi/orgs', 'repos_url': 'https://api.github.com/users/raszi/repos', 'events_url': 'https://api.github.com/users/raszi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/raszi/received_events', 'type': 'User', 'site_admin': False}",2023-10-06T09:37:24Z,2023-10-06T09:37:24Z,NONE,"> @raszi Could you please [squash your commits](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#squashing-commits)? 🙇

Sure, I can do that. Does that mean I need to open a new PR or should I force push to this branch?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1750290792/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49332
https://api.github.com/repos/rails/rails/issues/comments/1728363097,https://github.com/rails/rails/issues/49331#issuecomment-1728363097,https://api.github.com/repos/rails/rails/issues/49331,1728363097,IC_kwDNIULOZwS6WQ,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-09-20T20:13:03Z,2023-09-20T20:13:03Z,CONTRIBUTOR,Agreed on the usefulness. Took a stab at it - https://github.com/rails/rails/pull/49337.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1728363097/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,49331
https://api.github.com/repos/rails/rails/issues/comments/1734336215,https://github.com/rails/rails/issues/49331#issuecomment-1734336215,https://api.github.com/repos/rails/rails/issues/49331,1734336215,IC_kwDNIULOZ1_e1w,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T19:26:08Z,2023-09-25T19:26:08Z,MEMBER,"What's the use case to know the connection where the query failed? Applications don't usually establish a connection right before running a query, that's the job of the connection model to do. When you have a StatementInvalid error it's usually bad syntax or something else to do with the query rather than the connection. I don't feel like a lot of value is added in adding this information since it doesn't help you figure out what's wrong with the query.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1734336215/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49331
https://api.github.com/repos/rails/rails/issues/comments/1734355988,https://github.com/rails/rails/issues/49331#issuecomment-1734355988,https://api.github.com/repos/rails/rails/issues/49331,1734355988,IC_kwDNIULOZ2AsFA,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T19:41:20Z,2023-09-25T19:41:51Z,CONTRIBUTOR,"A few examples I can think of (not sure how realistic):

1. An example from the issue description - if we have configured timeouts on some dbs, but forgot on others, then the thrown error will point to the right db and speed up debugging (investigation)
2. If we have similarly named tables in a few dbs, then the error thrown (for example, for mismatched foreign keys or not null violation) will point to the right database
3. If we have migration ran on a primary and for some reason it was not propagated to the replica and is not detected, then we will quickly get the info about the erroring db 

If we have only 1 database, that is definitely not useful.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1734355988/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49331
https://api.github.com/repos/rails/rails/issues/comments/1734475613,https://github.com/rails/rails/issues/49331#issuecomment-1734475613,https://api.github.com/repos/rails/rails/issues/49331,1734475613,IC_kwDNIULOZ2H_XQ,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T21:17:28Z,2023-09-25T21:17:36Z,MEMBER,Oh I just remembered we already have the connection pool set on the error in 7.1 when https://github.com/rails/rails/pull/48295 was implemented.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1734475613/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49331
https://api.github.com/repos/rails/rails/issues/comments/1734687162,https://github.com/rails/rails/issues/49331#issuecomment-1734687162,https://api.github.com/repos/rails/rails/issues/49331,1734687162,IC_kwDNIULOZ2U5ug,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-09-26T01:21:22Z,2023-09-26T01:21:22Z,MEMBER,"Yeah, I think I'm still at https://github.com/rails/rails/pull/48295#issuecomment-1570721170

Inserting it into the message isn't totally unreasonable (though I think putting it before the actual error, as #49337 currently does, _is_ unreasonable)... but I'd really prefer to explore non-message-mangling ways we can convey additional exception-carried context through error reporting.

---

For example, what would it look like if we invented a hash-returning `Exception#context` method, and then taught our error reporting to include that information?

I was originally thinking this would exist _next to_ ErrorReporter's context (meaning this method should have a different name), and I think I'm still slightly leaning that way (keeping ""extra information about what went wrong"" separate from ""extra information about what we were doing at the time""), but it also seems possible they're the same thing, and ErrorReporter could just:

```
full_context = full_context.merge(error.context) if error.respond_to?(:context)
```

cc @byroot 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1734687162/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49331
https://api.github.com/repos/rails/rails/issues/comments/1734904989,https://github.com/rails/rails/issues/49331#issuecomment-1734904989,https://api.github.com/repos/rails/rails/issues/49331,1734904989,IC_kwDNIULOZ2iMnQ,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T06:27:07Z,2023-09-26T06:27:07Z,MEMBER,"> 🤔

So, IMO including the pool name in AR error messages make sense, as in multi-db scenarios, it allows to see at a glance if the errors are localized to a specific pool.

That said, I assume 99%+ of Rails app only have one database.

> what would it look like if we invented a hash-returning Exception#context method, and then taught our error reporting to include that information?

Yeah, I like that. Maybe something a bit less generic than `#context` to avoid conflicts, but it's a very nice interface to extend error reports.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1734904989/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49331
https://api.github.com/repos/rails/rails/issues/comments/1735559214,https://github.com/rails/rails/issues/49331#issuecomment-1735559214,https://api.github.com/repos/rails/rails/issues/49331,1735559214,IC_kwDNIULOZ3KILg,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T13:36:18Z,2023-09-26T13:36:18Z,CONTRIBUTOR,"This is all about being quickly when errors happens.

For instance, if I need to check the backtrace, at least I have to open the exception in my exception tracker platform.

If it's right on the exception message, it can be read right away from chat tools, email subject and etc, no additional steps.

Also, if not using the exception message and instead we need to capture that info from the exception and propagate somehow to the exception tracker mechanism:

1. We need to do that in different ways for different exception platforms
2. The same will happen for different projects
3. And it also might change from version to version on Rails upgrades

All of that doesn't happen if the exception message is changed from:

```
ActiveRecord::StatementInvalid
PG::ConnectionBad: PQconsumeInput() FATAL:  terminating connection due to idle-in-transaction timeout
ERROR:  server conn crashed?
SSL connection has been closed unexpectedly
PG::ConnectionBad
```

To (or similar):

```
ActiveRecord::StatementInvalid
SPEC: primary
PG::ConnectionBad: PQconsumeInput() FATAL:  terminating connection due to idle-in-transaction timeout
ERROR:  server conn crashed?
SSL connection has been closed unexpectedly
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1735559214/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49331
https://api.github.com/repos/rails/rails/issues/comments/1735562866,https://github.com/rails/rails/issues/49331#issuecomment-1735562866,https://api.github.com/repos/rails/rails/issues/49331,1735562866,IC_kwDNIULOZ3KWcg,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T13:38:26Z,2023-09-26T13:38:26Z,CONTRIBUTOR,"Our use case:

```ruby
ActiveRecord::Base.transaction do # primary
  Auditing.transaction do # another one
    # PG::ConnectionBad: PQconsumeInput() FATAL:  terminating connection due to idle-in-transaction timeout
    # which one did raise that?
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1735562866/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49331
https://api.github.com/repos/rails/rails/issues/comments/1735675006,https://github.com/rails/rails/issues/49331#issuecomment-1735675006,https://api.github.com/repos/rails/rails/issues/49331,1735675006,IC_kwDNIULOZ3RMfg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T14:35:25Z,2023-09-26T14:35:25Z,MEMBER,"> This is all about being quickly when errors happens.

Yes I agree. If you see a spike of error, it's nice to be able to tell at a glance which DB is down.

> Our use case:

So it's totally orthogonal to the issue you filed, but note that this is an anti-pattern, you are nesting two transaction from two systems, which means if one deadlock it can also bring down the other one with it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1735675006/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49331
https://api.github.com/repos/rails/rails/issues/comments/1737315762,https://github.com/rails/rails/issues/49331#issuecomment-1737315762,https://api.github.com/repos/rails/rails/issues/49331,1737315762,IC_kwDNIULOZ41Vsg,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T12:38:29Z,2023-09-27T12:38:29Z,CONTRIBUTOR,"That's the idea indeed, it's not perfect but I want the primary transaction to fail if the secondary transaction fails for whatever reason.

There's a small possibility of a race condition that the second (or inner transaction, depending on how you read it) can complete but not the first one but it's very rare and never happened to us.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1737315762/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49331
https://api.github.com/repos/rails/rails/issues/comments/1738778374,https://github.com/rails/rails/issues/49331#issuecomment-1738778374,https://api.github.com/repos/rails/rails/issues/49331,1738778374,IC_kwDNIULOZ6OnBg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-09-28T09:17:10Z,2023-09-28T09:17:10Z,MEMBER,"> There's a small possibility of a race condition that the second

I'm not talking of race conditions, I'm talking of holding locks on two distinct servers. This works fine most of the time but can lead to catastrophic outages. But that's not the topic of this issue, so I won't insist.

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1738778374/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49331
https://api.github.com/repos/rails/rails/issues/comments/1727599772,https://github.com/rails/rails/issues/49328#issuecomment-1727599772,https://api.github.com/repos/rails/rails/issues/49328,1727599772,IC_kwDNIULOZvkUnA,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-09-20T12:11:01Z,2023-09-20T12:11:01Z,CONTRIBUTOR,"This was fixed in https://github.com/rails/rails/pull/47107. 
@jonathanhefner Can you backport this to `7-0-stable`? ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1727599772/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49328
https://api.github.com/repos/rails/rails/issues/comments/1727693478,https://github.com/rails/rails/issues/49327#issuecomment-1727693478,https://api.github.com/repos/rails/rails/issues/49327,1727693478,IC_kwDNIULOZvqCpg,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-09-20T13:07:04Z,2023-09-20T13:07:04Z,CONTRIBUTOR,"Hey Yusuke!  

So I took a look at the Guides and it looks like `resourceful` is defined [here](https://guides.rubyonrails.org/routing.html#crud-verbs-and-actions).

>[2.2 CRUD, Verbs, and Actions](https://guides.rubyonrails.org/routing.html#crud-verbs-and-actions)
In Rails, a resourceful route provides a mapping between HTTP verbs and URLs to controller actions. By convention, each action also maps to a specific CRUD operation in a database. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1727693478/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49327
https://api.github.com/repos/rails/rails/issues/comments/1730738753,https://github.com/rails/rails/issues/49327#issuecomment-1730738753,https://api.github.com/repos/rails/rails/issues/49327,1730738753,IC_kwDNIULOZyj6QQ,"{'login': 'YusukeSuzuki', 'id': 657060, 'node_id': 'MDQ6VXNlcjY1NzA2MA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/657060?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/YusukeSuzuki', 'html_url': 'https://github.com/YusukeSuzuki', 'followers_url': 'https://api.github.com/users/YusukeSuzuki/followers', 'following_url': 'https://api.github.com/users/YusukeSuzuki/following{/other_user}', 'gists_url': 'https://api.github.com/users/YusukeSuzuki/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/YusukeSuzuki/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/YusukeSuzuki/subscriptions', 'organizations_url': 'https://api.github.com/users/YusukeSuzuki/orgs', 'repos_url': 'https://api.github.com/users/YusukeSuzuki/repos', 'events_url': 'https://api.github.com/users/YusukeSuzuki/events{/privacy}', 'received_events_url': 'https://api.github.com/users/YusukeSuzuki/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T03:03:47Z,2023-09-22T03:03:47Z,NONE,"The word Resourceful, however, appears abruptly before the clause.

> [2 Resource Routing: the Rails Default](https://guides.rubyonrails.org/routing.html#resource-routing-the-rails-default)
> Resource routing allows you to quickly declare all of the common routes for a given resourceful controller.

The description in 2.2 is a description of a resourceful route, not a definition. Resourceful route does ~~"" is a description, and ""Resourceful route is what does ~~"" is a definition.

After all, is it correct to say that a resourceful route is one that routes the 8 specified requests for a resource, and a resourceful controller is one that is complete with the 8 specified actions?

I don't know what Resourceful refers to and I'm totally confused by this chapter.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1730738753/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49327
https://api.github.com/repos/rails/rails/issues/comments/1731337389,https://github.com/rails/rails/issues/49327#issuecomment-1731337389,https://api.github.com/repos/rails/rails/issues/49327,1731337389,IC_kwDNIULOZzIcrQ,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T12:32:13Z,2023-09-22T12:37:35Z,CONTRIBUTOR,"Yusuke, thank you for clarifying your confusion.  In the future when raising an issue if you could quote the specific area of the docs that are confusing you that would be more helpful. 

> The description in 2.2 is a description of a resourceful route, not a definition. Resourceful route does ~~"" is a description, and ""Resourceful route is what does ~~"" is a definition.

I disagree with you here.  This is an unnecessary distinction in semantics.  The guide tells you that a `resourceful route` provides a mapping between HTTP verbs and URLS to controller actions.  This _defines_ what a `resourceful route` is.  The definition could be more detailed sure, but you still are told what the meaning of the phrase is. 

The guides then go on to give you a table mapping for the HTTP CRUD verbs to each route, further [defining](https://guides.rubyonrails.org/routing.html#crud-verbs-and-actions) it.

> After all, is it correct to say that a resourceful route is one that routes the 8 specified requests for a resource, and a resourceful controller is one that is complete with the 8 specified actions?

Almost, if you read the definition again that I quoted earlier it tells you that `a resourceful route provides a mapping between HTTP verbs and URLs to controller actions`.  Extrapolating this to your definition it would be more like ""a resourceful route is one that routes an HTTP verb/URL to a Controller Action""(singular).  When you specify `resources: photos` in your `routes.rb` it is telling you that for each route in the table from the link above you are now getting a controller action made available to you as well as a URL for it.  Of course you would then have to specifically create the controller action yourself depending on how you are creating things in your rails app.

All this to say I think you are maybe confused by the phrase `resourceful controller`.  I think that could be defined further if you find it helpful.  Feel free to add more to define `resourceful routes` if you think that would be helpful as well.  I'd suggest opening a PR for the Docs and submitting your suggested changes.

P.S. I'm more than happy to help you with your PR for defining this further.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1731337389/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49327
https://api.github.com/repos/rails/rails/issues/comments/1744853530,https://github.com/rails/rails/issues/49327#issuecomment-1744853530,https://api.github.com/repos/rails/rails/issues/49327,1744853530,IC_kwDNIULOaABaGg,"{'login': 'mateusdeap', 'id': 14188887, 'node_id': 'MDQ6VXNlcjE0MTg4ODg3', 'avatar_url': 'https://avatars.githubusercontent.com/u/14188887?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mateusdeap', 'html_url': 'https://github.com/mateusdeap', 'followers_url': 'https://api.github.com/users/mateusdeap/followers', 'following_url': 'https://api.github.com/users/mateusdeap/following{/other_user}', 'gists_url': 'https://api.github.com/users/mateusdeap/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mateusdeap/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mateusdeap/subscriptions', 'organizations_url': 'https://api.github.com/users/mateusdeap/orgs', 'repos_url': 'https://api.github.com/users/mateusdeap/repos', 'events_url': 'https://api.github.com/users/mateusdeap/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mateusdeap/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T12:21:46Z,2023-10-03T12:22:39Z,NONE,"So, I may be just intruding, but since I was looking for issues to help on, I'd like to chime in with my own 2 cents.

Maybe just saying:

> Resource routing allows you to quickly declare all of the common routes for a given  controller.

Would be clearer, since then it doesn't seem like we're talking about some special controller type. A resourceful controller is just a plain controller. Or better yet, if you go back to what REST is supposed to be about, maybe saying `resource controller` is more accurate, since, as I understand it, the doc is just trying to single out controllers responsible for interfacing the client with a given resource (as opposed to controllers that might be more geared toward some form of state management or something), and saying that a controller is resourceful can be understood from context, but might be an improper term.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1744853530/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49327
https://api.github.com/repos/rails/rails/issues/comments/1744913938,https://github.com/rails/rails/issues/49327#issuecomment-1744913938,https://api.github.com/repos/rails/rails/issues/49327,1744913938,IC_kwDNIULOaAFGEg,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T12:55:22Z,2023-10-03T12:55:22Z,CONTRIBUTOR,"Hey Mateus,

Thanks for sharing your thoughts.  I think that's a totally reasonable addition to the Docs and an excellent assessment of the situation.  Feel free to open a PR adding in your change.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1744913938/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49327
https://api.github.com/repos/rails/rails/issues/comments/1745024735,https://github.com/rails/rails/issues/49327#issuecomment-1745024735,https://api.github.com/repos/rails/rails/issues/49327,1745024735,IC_kwDNIULOaAL23w,"{'login': 'mateusdeap', 'id': 14188887, 'node_id': 'MDQ6VXNlcjE0MTg4ODg3', 'avatar_url': 'https://avatars.githubusercontent.com/u/14188887?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mateusdeap', 'html_url': 'https://github.com/mateusdeap', 'followers_url': 'https://api.github.com/users/mateusdeap/followers', 'following_url': 'https://api.github.com/users/mateusdeap/following{/other_user}', 'gists_url': 'https://api.github.com/users/mateusdeap/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mateusdeap/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mateusdeap/subscriptions', 'organizations_url': 'https://api.github.com/users/mateusdeap/orgs', 'repos_url': 'https://api.github.com/users/mateusdeap/repos', 'events_url': 'https://api.github.com/users/mateusdeap/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mateusdeap/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T13:51:45Z,2023-10-03T13:51:45Z,NONE,@paulreece Done,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1745024735/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49327
https://api.github.com/repos/rails/rails/issues/comments/1728926894,https://github.com/rails/rails/issues/49324#issuecomment-1728926894,https://api.github.com/repos/rails/rails/issues/49324,1728926894,IC_kwDNIULOZw1Urg,"{'login': 'maniSHarma7575', 'id': 39980734, 'node_id': 'MDQ6VXNlcjM5OTgwNzM0', 'avatar_url': 'https://avatars.githubusercontent.com/u/39980734?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/maniSHarma7575', 'html_url': 'https://github.com/maniSHarma7575', 'followers_url': 'https://api.github.com/users/maniSHarma7575/followers', 'following_url': 'https://api.github.com/users/maniSHarma7575/following{/other_user}', 'gists_url': 'https://api.github.com/users/maniSHarma7575/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/maniSHarma7575/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/maniSHarma7575/subscriptions', 'organizations_url': 'https://api.github.com/users/maniSHarma7575/orgs', 'repos_url': 'https://api.github.com/users/maniSHarma7575/repos', 'events_url': 'https://api.github.com/users/maniSHarma7575/events{/privacy}', 'received_events_url': 'https://api.github.com/users/maniSHarma7575/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T06:23:54Z,2023-09-21T06:24:42Z,NONE,"Hi @ghiculescu and @humphreyja 

I tried to reproduce this issue

1. Here is the output of the script:

```
Fetching gem metadata from https://rubygems.org/...........
Resolving dependencies...
-- create_table(:events, {:force=>true})
D, [2023-09-21T11:45:42.525828 #50679] DEBUG -- :    (0.0ms)  DROP TABLE IF EXISTS ""events""
D, [2023-09-21T11:45:42.526594 #50679] DEBUG -- :    (0.3ms)  CREATE TABLE ""events"" (""id"" integer PRIMARY KEY AUTOINCREMENT NOT NULL, ""name"" varchar, ""created_at"" datetime(6) NOT NULL, ""updated_at"" datetime(6) NOT NULL)
   -> 0.0086s
-- create_table(:posts, {:force=>true})
D, [2023-09-21T11:45:42.526711 #50679] DEBUG -- :    (0.0ms)  DROP TABLE IF EXISTS ""posts""
D, [2023-09-21T11:45:42.526786 #50679] DEBUG -- :    (0.0ms)  CREATE TABLE ""posts"" (""id"" integer PRIMARY KEY AUTOINCREMENT NOT NULL, ""author_id"" integer, ""results"" varchar, ""created_at"" datetime(6) NOT NULL, ""updated_at"" datetime(6) NOT NULL)
   -> 0.0002s
-- create_table(:comments, {:force=>true})
D, [2023-09-21T11:45:42.527294 #50679] DEBUG -- :    (0.0ms)  DROP TABLE IF EXISTS ""comments""
D, [2023-09-21T11:45:42.527363 #50679] DEBUG -- :    (0.0ms)  CREATE TABLE ""comments"" (""id"" integer PRIMARY KEY AUTOINCREMENT NOT NULL, ""post_id"" integer, ""description"" varchar, ""created_at"" datetime(6) NOT NULL, ""updated_at"" datetime(6) NOT NULL)
   -> 0.0006s
D, [2023-09-21T11:45:42.548147 #50679] DEBUG -- :    (0.1ms)  CREATE TABLE ""ar_internal_metadata"" (""key"" varchar NOT NULL PRIMARY KEY, ""value"" varchar, ""created_at"" datetime(6) NOT NULL, ""updated_at"" datetime(6) NOT NULL)
D, [2023-09-21T11:45:42.554990 #50679] DEBUG -- :   ActiveRecord::InternalMetadata Load (0.1ms)  SELECT ""ar_internal_metadata"".* FROM ""ar_internal_metadata"" WHERE ""ar_internal_metadata"".""key"" = ? LIMIT ?  [[""key"", ""environment""], [""LIMIT"", 1]]
D, [2023-09-21T11:45:42.558851 #50679] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T11:45:42.558973 #50679] DEBUG -- :   ActiveRecord::InternalMetadata Create (0.0ms)  INSERT INTO ""ar_internal_metadata"" (""key"", ""value"", ""created_at"", ""updated_at"") VALUES (?, ?, ?, ?)  [[""key"", ""environment""], [""value"", ""development""], [""created_at"", ""2023-09-21 06:15:42.558652""], [""updated_at"", ""2023-09-21 06:15:42.558652""]]
D, [2023-09-21T11:45:42.559049 #50679] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
Run options: --seed 8849

# Running:

D, [2023-09-21T11:45:42.591054 #50679] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T11:45:42.591213 #50679] DEBUG -- :   Post Create (0.1ms)  INSERT INTO ""posts"" (""created_at"", ""updated_at"") VALUES (?, ?)  [[""created_at"", ""2023-09-21 06:15:42.590912""], [""updated_at"", ""2023-09-21 06:15:42.590912""]]
D, [2023-09-21T11:45:42.591308 #50679] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T11:45:42.592407 #50679] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T11:45:42.592466 #50679] DEBUG -- :   Event Create (0.0ms)  INSERT INTO ""events"" (""name"", ""created_at"", ""updated_at"") VALUES (?, ?, ?)  [[""name"", ""POST""], [""created_at"", ""2023-09-21 06:15:42.592329""], [""updated_at"", ""2023-09-21 06:15:42.592329""]]
D, [2023-09-21T11:45:42.592512 #50679] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T11:45:42.595973 #50679] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T11:45:42.596049 #50679] DEBUG -- :   Comment Create (0.0ms)  INSERT INTO ""comments"" (""post_id"", ""created_at"", ""updated_at"") VALUES (?, ?, ?)  [[""post_id"", 1], [""created_at"", ""2023-09-21 06:15:42.595574""], [""updated_at"", ""2023-09-21 06:15:42.595574""]]
D, [2023-09-21T11:45:42.596336 #50679] DEBUG -- :   Post Update (0.0ms)  UPDATE ""posts"" SET ""updated_at"" = ? WHERE ""posts"".""id"" = ?  [[""updated_at"", ""2023-09-21 06:15:42.596124""], [""id"", 1]]
D, [2023-09-21T11:45:42.596375 #50679] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T11:45:42.596520 #50679] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T11:45:42.596576 #50679] DEBUG -- :   Event Create (0.0ms)  INSERT INTO ""events"" (""name"", ""created_at"", ""updated_at"") VALUES (?, ?, ?)  [[""name"", ""POST""], [""created_at"", ""2023-09-21 06:15:42.596458""], [""updated_at"", ""2023-09-21 06:15:42.596458""]]
D, [2023-09-21T11:45:42.596615 #50679] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T11:45:42.596748 #50679] DEBUG -- :   Event Load (0.0ms)  SELECT ""events"".* FROM ""events""
D, [2023-09-21T11:45:42.596888 #50679] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T11:45:42.596930 #50679] DEBUG -- :   Event Destroy (0.0ms)  DELETE FROM ""events"" WHERE ""events"".""id"" = ?  [[""id"", 1]]
D, [2023-09-21T11:45:42.596968 #50679] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T11:45:42.597033 #50679] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T11:45:42.597065 #50679] DEBUG -- :   Event Destroy (0.0ms)  DELETE FROM ""events"" WHERE ""events"".""id"" = ?  [[""id"", 2]]
D, [2023-09-21T11:45:42.597093 #50679] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T11:45:42.597218 #50679] DEBUG -- :   Event Count (0.0ms)  SELECT COUNT(*) FROM ""events""
D, [2023-09-21T11:45:42.597394 #50679] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T11:45:42.597444 #50679] DEBUG -- :   Comment Update (0.0ms)  UPDATE ""comments"" SET ""description"" = ?, ""updated_at"" = ? WHERE ""comments"".""id"" = ?  [[""description"", ""something...""], [""updated_at"", ""2023-09-21 06:15:42.597303""], [""id"", 1]]
D, [2023-09-21T11:45:42.597597 #50679] DEBUG -- :   Post Update (0.0ms)  UPDATE ""posts"" SET ""updated_at"" = ? WHERE ""posts"".""id"" = ?  [[""updated_at"", ""2023-09-21 06:15:42.597492""], [""id"", 1]]
D, [2023-09-21T11:45:42.597839 #50679] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T11:45:42.597968 #50679] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T11:45:42.598020 #50679] DEBUG -- :   Event Create (0.0ms)  INSERT INTO ""events"" (""name"", ""created_at"", ""updated_at"") VALUES (?, ?, ?)  [[""name"", ""POST""], [""created_at"", ""2023-09-21 06:15:42.597909""], [""updated_at"", ""2023-09-21 06:15:42.597909""]]
D, [2023-09-21T11:45:42.598057 #50679] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T11:45:42.598136 #50679] DEBUG -- :   Event Count (0.0ms)  SELECT COUNT(*) FROM ""events""
F

Failure:
BugTest#test_relational_touch_should_skip_hook_but_still_touch_parents [bug_reproduce.rb:71]:
should still have no events in the database as we do not want to track touch only events.
Expected: 0
  Actual: 1


rails test bug_reproduce.rb:62



Finished in 0.009168s, 109.0750 runs/s, 218.1501 assertions/s.
1 runs, 2 assertions, 1 failures, 0 errors, 0 skips
```

If we look at the output for sql query executed

```
D, [2023-09-21T11:45:42.597394 #50679] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T11:45:42.597444 #50679] DEBUG -- :   Comment Update (0.0ms)  UPDATE ""comments"" SET ""description"" = ?, ""updated_at"" = ? WHERE ""comments"".""id"" = ?  [[""description"", ""something...""], [""updated_at"", ""2023-09-21 06:15:42.597303""], [""id"", 1]]
D, [2023-09-21T11:45:42.597597 #50679] DEBUG -- :   Post Update (0.0ms)  UPDATE ""posts"" SET ""updated_at"" = ? WHERE ""posts"".""id"" = ?  [[""updated_at"", ""2023-09-21 06:15:42.597492""], [""id"", 1]]
D, [2023-09-21T11:45:42.597839 #50679] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T11:45:42.597968 #50679] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T11:45:42.598020 #50679] DEBUG -- :   Event Create (0.0ms)  INSERT INTO ""events"" (""name"", ""created_at"", ""updated_at"") VALUES (?, ?, ?)  [[""name"", ""POST""], [""created_at"", ""2023-09-21 06:15:42.597909""], [""updated_at"", ""2023-09-21 06:15:42.597909""]]
```

On updating comments `description`, Post `updated_at` is getting changed in database.

But `saved_changes.keys` value is **`['id', 'created_at', 'updated_at']`**
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1728926894/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49324
https://api.github.com/repos/rails/rails/issues/comments/1729899334,https://github.com/rails/rails/issues/49324#issuecomment-1729899334,https://api.github.com/repos/rails/rails/issues/49324,1729899334,IC_kwDNIULOZxwrRg,"{'login': 'humphreyja', 'id': 6947247, 'node_id': 'MDQ6VXNlcjY5NDcyNDc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6947247?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/humphreyja', 'html_url': 'https://github.com/humphreyja', 'followers_url': 'https://api.github.com/users/humphreyja/followers', 'following_url': 'https://api.github.com/users/humphreyja/following{/other_user}', 'gists_url': 'https://api.github.com/users/humphreyja/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/humphreyja/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/humphreyja/subscriptions', 'organizations_url': 'https://api.github.com/users/humphreyja/orgs', 'repos_url': 'https://api.github.com/users/humphreyja/repos', 'events_url': 'https://api.github.com/users/humphreyja/events{/privacy}', 'received_events_url': 'https://api.github.com/users/humphreyja/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T16:18:32Z,2023-09-21T16:18:32Z,NONE,"@maniSHarma7575 I'm not sure what `saved_changes.keys` you are looking at, I was referring to `saved_changes` on the Post object that gets touched when comments are changed. You can see in the query output that the Post `updated_at` is being changed in the database but `saved_changes.keys` is empty/does not include `updated_at` even though it was committed to the database. Because of that missing, an Event is being created.

For example, if you called `Post.touch` it would not create an event because calling `touch` directly (not through a `belongs_to ... touch: true`) does actually put `updated_at` in the `saved_changes.keys`.  It is that behavior that is missing for relational belongs_to ... touch: true that I'm addressing here.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1729899334/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49324
https://api.github.com/repos/rails/rails/issues/comments/1729910854,https://github.com/rails/rails/issues/49324#issuecomment-1729910854,https://api.github.com/repos/rails/rails/issues/49324,1729910854,IC_kwDNIULOZxxYRg,"{'login': 'maniSHarma7575', 'id': 39980734, 'node_id': 'MDQ6VXNlcjM5OTgwNzM0', 'avatar_url': 'https://avatars.githubusercontent.com/u/39980734?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/maniSHarma7575', 'html_url': 'https://github.com/maniSHarma7575', 'followers_url': 'https://api.github.com/users/maniSHarma7575/followers', 'following_url': 'https://api.github.com/users/maniSHarma7575/following{/other_user}', 'gists_url': 'https://api.github.com/users/maniSHarma7575/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/maniSHarma7575/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/maniSHarma7575/subscriptions', 'organizations_url': 'https://api.github.com/users/maniSHarma7575/orgs', 'repos_url': 'https://api.github.com/users/maniSHarma7575/repos', 'events_url': 'https://api.github.com/users/maniSHarma7575/events{/privacy}', 'received_events_url': 'https://api.github.com/users/maniSHarma7575/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T16:26:28Z,2023-09-21T16:38:24Z,NONE,"@humphreyja I am also referring to `saved_changes` for the Post object. It's not empty for me.

 it's `saved_changes.keys` value is `['id', 'created_at', 'updated_at']`


Modified Script

```
class Post < ActiveRecord::Base
  has_many :comments

  after_commit :create_change_event, unless: :touched_only?

  def create_change_event
    Event.create(name: 'POST')
  end

  def touched_only?
    puts ""*"" * 100
    puts saved_changes.keys
    puts ""*"" * 100
    saved_changes.keys == ['updated_at']
  end
end
```

Output:

```
D, [2023-09-21T22:02:19.878544 #40203] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T22:02:19.878669 #40203] DEBUG -- :   Event Count (0.0ms)  SELECT COUNT(*) FROM ""events""
D, [2023-09-21T22:02:19.878887 #40203] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T22:02:19.878927 #40203] DEBUG -- :   Comment Update (0.0ms)  UPDATE ""comments"" SET ""description"" = ?, ""updated_at"" = ? WHERE ""comments"".""id"" = ?  [[""description"", ""something...""], [""updated_at"", ""2023-09-21 16:32:19.878756""], [""id"", 1]]
D, [2023-09-21T22:02:19.879094 #40203] DEBUG -- :   Post Update (0.0ms)  UPDATE ""posts"" SET ""updated_at"" = ? WHERE ""posts"".""id"" = ?  [[""updated_at"", ""2023-09-21 16:32:19.878973""], [""id"", 1]]
D, [2023-09-21T22:02:19.879130 #40203] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
****************************************************************************************************
id
created_at
updated_at
****************************************************************************************************
D, [2023-09-21T22:02:19.879304 #40203] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T22:02:19.879343 #40203] DEBUG -- :   Event Create (0.0ms)  INSERT INTO ""events"" (""name"", ""created_at"", ""updated_at"") VALUES (?, ?, ?)  [[""name"", ""POST""], [""created_at"", ""2023-09-21 16:32:19.879224""], [""updated_at"", ""2023-09-21 16:32:19.879224""]]
D, [2023-09-21T22:02:19.879384 #40203] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T22:02:19.879459 #40203] DEBUG -- :   Event Count (0.0ms)  SELECT COUNT(*) FROM ""events""
F

Failure:
BugTest#test_relational_touch_should_skip_hook_but_still_touch_parents [bug_reproduce.rb:76]:
should still have no events in the database as we do not want to track touch only events.
Expected: 0
  Actual: 1


bin/rails test bug_reproduce.rb:67



Finished in 0.013770s, 72.6216 runs/s, 145.2433 assertions/s.
1 runs, 2 assertions, 1 failures, 0 errors, 0 skips
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1729910854/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49324
https://api.github.com/repos/rails/rails/issues/comments/1729924953,https://github.com/rails/rails/issues/49324#issuecomment-1729924953,https://api.github.com/repos/rails/rails/issues/49324,1729924953,IC_kwDNIULOZxyPWQ,"{'login': 'humphreyja', 'id': 6947247, 'node_id': 'MDQ6VXNlcjY5NDcyNDc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6947247?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/humphreyja', 'html_url': 'https://github.com/humphreyja', 'followers_url': 'https://api.github.com/users/humphreyja/followers', 'following_url': 'https://api.github.com/users/humphreyja/following{/other_user}', 'gists_url': 'https://api.github.com/users/humphreyja/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/humphreyja/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/humphreyja/subscriptions', 'organizations_url': 'https://api.github.com/users/humphreyja/orgs', 'repos_url': 'https://api.github.com/users/humphreyja/repos', 'events_url': 'https://api.github.com/users/humphreyja/events{/privacy}', 'received_events_url': 'https://api.github.com/users/humphreyja/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T16:34:36Z,2023-09-21T16:34:36Z,NONE,"@maniSHarma7575 If that was the case then your test would have passed.... You can see from your SQL output that the event is created which means that `saved_changes.keys` is empty. Also `id` should never be in `saved_changes.keys` unless you are creating the object or actually updating the ID, so I suspect you are looking at an old version of Post. reload that object and call an update on comments and you'll see what I am talking about.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1729924953/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49324
https://api.github.com/repos/rails/rails/issues/comments/1729926609,https://github.com/rails/rails/issues/49324#issuecomment-1729926609,https://api.github.com/repos/rails/rails/issues/49324,1729926609,IC_kwDNIULOZxyV0Q,"{'login': 'maniSHarma7575', 'id': 39980734, 'node_id': 'MDQ6VXNlcjM5OTgwNzM0', 'avatar_url': 'https://avatars.githubusercontent.com/u/39980734?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/maniSHarma7575', 'html_url': 'https://github.com/maniSHarma7575', 'followers_url': 'https://api.github.com/users/maniSHarma7575/followers', 'following_url': 'https://api.github.com/users/maniSHarma7575/following{/other_user}', 'gists_url': 'https://api.github.com/users/maniSHarma7575/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/maniSHarma7575/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/maniSHarma7575/subscriptions', 'organizations_url': 'https://api.github.com/users/maniSHarma7575/orgs', 'repos_url': 'https://api.github.com/users/maniSHarma7575/repos', 'events_url': 'https://api.github.com/users/maniSHarma7575/events{/privacy}', 'received_events_url': 'https://api.github.com/users/maniSHarma7575/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T16:35:53Z,2023-09-21T16:37:55Z,NONE,"> @maniSHarma7575 If that was the case then your test would have passed.... You can see from your SQL output that the event is created which means that `saved_changes.keys` is empty. Also `id` should never be in `saved_changes.keys` unless you are creating the object or actually updating the ID, so I suspect you are looking at an old version of Post. reload that object and call an update on comments and you'll see what I am talking about.

@humphreyja 
Modified Script (I have modified the Post class to print the values in the saved_changes.keys)

```
class Post < ActiveRecord::Base
  has_many :comments

  after_commit :create_change_event, unless: :touched_only?

  def create_change_event
    Event.create(name: 'POST')
  end

  def touched_only?
    puts ""*"" * 100
    puts saved_changes.keys
    puts ""*"" * 100
    saved_changes.keys == ['updated_at']
  end
end
```

Output:

```
D, [2023-09-21T22:02:19.878544 #40203] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T22:02:19.878669 #40203] DEBUG -- :   Event Count (0.0ms)  SELECT COUNT(*) FROM ""events""
D, [2023-09-21T22:02:19.878887 #40203] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T22:02:19.878927 #40203] DEBUG -- :   Comment Update (0.0ms)  UPDATE ""comments"" SET ""description"" = ?, ""updated_at"" = ? WHERE ""comments"".""id"" = ?  [[""description"", ""something...""], [""updated_at"", ""2023-09-21 16:32:19.878756""], [""id"", 1]]
D, [2023-09-21T22:02:19.879094 #40203] DEBUG -- :   Post Update (0.0ms)  UPDATE ""posts"" SET ""updated_at"" = ? WHERE ""posts"".""id"" = ?  [[""updated_at"", ""2023-09-21 16:32:19.878973""], [""id"", 1]]
D, [2023-09-21T22:02:19.879130 #40203] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
****************************************************************************************************
id
created_at
updated_at
****************************************************************************************************
D, [2023-09-21T22:02:19.879304 #40203] DEBUG -- :   TRANSACTION (0.0ms)  begin transaction
D, [2023-09-21T22:02:19.879343 #40203] DEBUG -- :   Event Create (0.0ms)  INSERT INTO ""events"" (""name"", ""created_at"", ""updated_at"") VALUES (?, ?, ?)  [[""name"", ""POST""], [""created_at"", ""2023-09-21 16:32:19.879224""], [""updated_at"", ""2023-09-21 16:32:19.879224""]]
D, [2023-09-21T22:02:19.879384 #40203] DEBUG -- :   TRANSACTION (0.0ms)  commit transaction
D, [2023-09-21T22:02:19.879459 #40203] DEBUG -- :   Event Count (0.0ms)  SELECT COUNT(*) FROM ""events""
F

Failure:
BugTest#test_relational_touch_should_skip_hook_but_still_touch_parents [bug_reproduce.rb:76]:
should still have no events in the database as we do not want to track touch only events.
Expected: 0
  Actual: 1


bin/rails test bug_reproduce.rb:67



Finished in 0.013770s, 72.6216 runs/s, 145.2433 assertions/s.
1 runs, 2 assertions, 1 failures, 0 errors, 0 skips
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1729926609/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49324
https://api.github.com/repos/rails/rails/issues/comments/1729962292,https://github.com/rails/rails/issues/49324#issuecomment-1729962292,https://api.github.com/repos/rails/rails/issues/49324,1729962292,IC_kwDNIULOZx0hNA,"{'login': 'humphreyja', 'id': 6947247, 'node_id': 'MDQ6VXNlcjY5NDcyNDc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6947247?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/humphreyja', 'html_url': 'https://github.com/humphreyja', 'followers_url': 'https://api.github.com/users/humphreyja/followers', 'following_url': 'https://api.github.com/users/humphreyja/following{/other_user}', 'gists_url': 'https://api.github.com/users/humphreyja/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/humphreyja/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/humphreyja/subscriptions', 'organizations_url': 'https://api.github.com/users/humphreyja/orgs', 'repos_url': 'https://api.github.com/users/humphreyja/repos', 'events_url': 'https://api.github.com/users/humphreyja/events{/privacy}', 'received_events_url': 'https://api.github.com/users/humphreyja/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T16:57:32Z,2023-09-21T16:57:32Z,NONE,"@maniSHarma7575 Ok this is pretty interesting. Those changes are definitely coming from when the post is created. I'll update the test script to reload the post and you will see what I mean. But this does bring up an interesting point, `saved_changes` aren't reloaded at all when calling a relational touch. Those are left over from when it was created even though `after_commit` is being called again on it. That's a bit unexpected.


```ruby
class BugTest < Minitest::Test
  def test_relational_touch_should_skip_hook_but_still_touch_parents
    post = Post.create!
    comment = Comment.create!(post:)
    Event.destroy_all
    post.reload # <--- ADD THIS

    assert_equal 0, Event.count, 'should have no events in the database'

    comment.update(description: 'something...')
    # Post should not create a new updated event because it was touched only
    assert_equal 0, Event.count, 'should still have no events in the database as we do not want to track touch only events'
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1729962292/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49324
https://api.github.com/repos/rails/rails/issues/comments/1730828783,https://github.com/rails/rails/issues/49324#issuecomment-1730828783,https://api.github.com/repos/rails/rails/issues/49324,1730828783,IC_kwDNIULOZypZ7w,"{'login': 'maniSHarma7575', 'id': 39980734, 'node_id': 'MDQ6VXNlcjM5OTgwNzM0', 'avatar_url': 'https://avatars.githubusercontent.com/u/39980734?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/maniSHarma7575', 'html_url': 'https://github.com/maniSHarma7575', 'followers_url': 'https://api.github.com/users/maniSHarma7575/followers', 'following_url': 'https://api.github.com/users/maniSHarma7575/following{/other_user}', 'gists_url': 'https://api.github.com/users/maniSHarma7575/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/maniSHarma7575/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/maniSHarma7575/subscriptions', 'organizations_url': 'https://api.github.com/users/maniSHarma7575/orgs', 'repos_url': 'https://api.github.com/users/maniSHarma7575/repos', 'events_url': 'https://api.github.com/users/maniSHarma7575/events{/privacy}', 'received_events_url': 'https://api.github.com/users/maniSHarma7575/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T05:37:44Z,2023-09-22T05:52:34Z,NONE,"@humphreyja You are right. It's empty on using `post.reload`

While I was investigating the issue, I found this:

https://github.com/rails/rails/blob/26d24d6dc3b33b7071e1d00acaf3b281f97d6aea/activerecord/lib/active_record/attribute_methods/dirty.rb#L205-L208","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1730828783/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49324
https://api.github.com/repos/rails/rails/issues/comments/1733010053,https://github.com/rails/rails/issues/49324#issuecomment-1733010053,https://api.github.com/repos/rails/rails/issues/49324,1733010053,IC_kwDNIULOZ0uihQ,"{'login': 'maniSHarma7575', 'id': 39980734, 'node_id': 'MDQ6VXNlcjM5OTgwNzM0', 'avatar_url': 'https://avatars.githubusercontent.com/u/39980734?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/maniSHarma7575', 'html_url': 'https://github.com/maniSHarma7575', 'followers_url': 'https://api.github.com/users/maniSHarma7575/followers', 'following_url': 'https://api.github.com/users/maniSHarma7575/following{/other_user}', 'gists_url': 'https://api.github.com/users/maniSHarma7575/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/maniSHarma7575/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/maniSHarma7575/subscriptions', 'organizations_url': 'https://api.github.com/users/maniSHarma7575/orgs', 'repos_url': 'https://api.github.com/users/maniSHarma7575/repos', 'events_url': 'https://api.github.com/users/maniSHarma7575/events{/privacy}', 'received_events_url': 'https://api.github.com/users/maniSHarma7575/received_events', 'type': 'User', 'site_admin': False}",2023-09-25T06:38:23Z,2023-09-25T06:40:03Z,NONE,@ghiculescu Is it supposed to work this way?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1733010053/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49324
https://api.github.com/repos/rails/rails/issues/comments/1749107336,https://github.com/rails/rails/pull/49314#issuecomment-1749107336,https://api.github.com/repos/rails/rails/issues/49314,1749107336,IC_kwDNIULOaEFCiA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T15:12:57Z,2023-10-05T15:12:57Z,MEMBER,"I don't like APIs that expect people to add exception lists. If you want to normalize attributes, why you don't explicitly don't tell which one?

This also forces the framework to loads the schema when loading the model instead when it is really necessary.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749107336/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49314
https://api.github.com/repos/rails/rails/issues/comments/1749117806,https://github.com/rails/rails/pull/49314#issuecomment-1749117806,https://api.github.com/repos/rails/rails/issues/49314,1749117806,IC_kwDNIULOaEFrbg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-10-05T15:19:05Z,2023-10-05T15:19:05Z,MEMBER,"@rafaelfranca I don't like the except either but I think being able to apply à normalization to all the fields of the same type makes sense.

This PR certainly shouldn't be merged as is but I think a similarish feature would be nice to have.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749117806/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49314
https://api.github.com/repos/rails/rails/issues/comments/1724280775,https://github.com/rails/rails/pull/49301#issuecomment-1724280775,https://api.github.com/repos/rails/rails/issues/49301,1724280775,IC_kwDNIULOZsZvxw,"{'login': 'bensheldon', 'id': 47554, 'node_id': 'MDQ6VXNlcjQ3NTU0', 'avatar_url': 'https://avatars.githubusercontent.com/u/47554?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bensheldon', 'html_url': 'https://github.com/bensheldon', 'followers_url': 'https://api.github.com/users/bensheldon/followers', 'following_url': 'https://api.github.com/users/bensheldon/following{/other_user}', 'gists_url': 'https://api.github.com/users/bensheldon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bensheldon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bensheldon/subscriptions', 'organizations_url': 'https://api.github.com/users/bensheldon/orgs', 'repos_url': 'https://api.github.com/users/bensheldon/repos', 'events_url': 'https://api.github.com/users/bensheldon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bensheldon/received_events', 'type': 'User', 'site_admin': True}",2023-09-18T19:57:15Z,2023-09-18T19:57:15Z,CONTRIBUTOR,"Could this comment also note something like: Calling `perform_now` will not invoke the configured backend adapter, unless the job's execution subsequently invokes a `retry_on` handler.

(this is most common misunderstanding I see) ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1724280775/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49301
https://api.github.com/repos/rails/rails/issues/comments/1731302877,https://github.com/rails/rails/pull/49301#issuecomment-1731302877,https://api.github.com/repos/rails/rails/issues/49301,1731302877,IC_kwDNIULOZzGV3Q,"{'login': 'freesteph', 'id': 107635, 'node_id': 'MDQ6VXNlcjEwNzYzNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/107635?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/freesteph', 'html_url': 'https://github.com/freesteph', 'followers_url': 'https://api.github.com/users/freesteph/followers', 'following_url': 'https://api.github.com/users/freesteph/following{/other_user}', 'gists_url': 'https://api.github.com/users/freesteph/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/freesteph/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/freesteph/subscriptions', 'organizations_url': 'https://api.github.com/users/freesteph/orgs', 'repos_url': 'https://api.github.com/users/freesteph/repos', 'events_url': 'https://api.github.com/users/freesteph/events{/privacy}', 'received_events_url': 'https://api.github.com/users/freesteph/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T12:03:49Z,2023-09-22T12:05:46Z,NONE,"> Could this comment also note something like: Calling `perform_now` will not invoke the configured backend adapter, unless the job's execution subsequently invokes a `retry_on` handler.
> 
> (this is most common misunderstanding I see)


Hi Ben, I don't know enough about this to write clearly about it. I'm going to stick with the initial proposal for now, if that's okay.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1731302877/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49301
https://api.github.com/repos/rails/rails/issues/comments/1731308276,https://github.com/rails/rails/pull/49301#issuecomment-1731308276,https://api.github.com/repos/rails/rails/issues/49301,1731308276,IC_kwDNIULOZzGq9A,"{'login': 'freesteph', 'id': 107635, 'node_id': 'MDQ6VXNlcjEwNzYzNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/107635?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/freesteph', 'html_url': 'https://github.com/freesteph', 'followers_url': 'https://api.github.com/users/freesteph/followers', 'following_url': 'https://api.github.com/users/freesteph/following{/other_user}', 'gists_url': 'https://api.github.com/users/freesteph/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/freesteph/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/freesteph/subscriptions', 'organizations_url': 'https://api.github.com/users/freesteph/orgs', 'repos_url': 'https://api.github.com/users/freesteph/repos', 'events_url': 'https://api.github.com/users/freesteph/events{/privacy}', 'received_events_url': 'https://api.github.com/users/freesteph/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T12:08:05Z,2023-09-22T12:08:05Z,NONE,"> > Could this comment also note something like: Calling `perform_now` will not invoke the configured backend adapter, unless the job's execution subsequently invokes a `retry_on` handler.
> > (this is most common misunderstanding I see)
> 
> Hi Ben, I don't know enough about this to write clearly about it. I'm going to stick with the initial proposal for now, if that's okay.

Never mind, I've given it a shot let me know what you think.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1731308276/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49301
https://api.github.com/repos/rails/rails/issues/comments/1731314581,https://github.com/rails/rails/pull/49301#issuecomment-1731314581,https://api.github.com/repos/rails/rails/issues/49301,1731314581,IC_kwDNIULOZzHDlQ,"{'login': 'freesteph', 'id': 107635, 'node_id': 'MDQ6VXNlcjEwNzYzNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/107635?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/freesteph', 'html_url': 'https://github.com/freesteph', 'followers_url': 'https://api.github.com/users/freesteph/followers', 'following_url': 'https://api.github.com/users/freesteph/following{/other_user}', 'gists_url': 'https://api.github.com/users/freesteph/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/freesteph/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/freesteph/subscriptions', 'organizations_url': 'https://api.github.com/users/freesteph/orgs', 'repos_url': 'https://api.github.com/users/freesteph/repos', 'events_url': 'https://api.github.com/users/freesteph/events{/privacy}', 'received_events_url': 'https://api.github.com/users/freesteph/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T12:13:25Z,2023-09-22T12:13:25Z,NONE,"> > > Could this comment also note something like: Calling `perform_now` will not invoke the configured backend adapter, unless the job's execution subsequently invokes a `retry_on` handler.
> > > (this is most common misunderstanding I see)
> > 
> > 
> > Hi Ben, I don't know enough about this to write clearly about it. I'm going to stick with the initial proposal for now, if that's okay.
> 
> Never mind, I've given it a shot let me know what you think.

No sorry what I've written is confusing so I'm going to stick with the initial PR. Sorry about the noise 😄.

Since `perform_now` is actually not mentioned in the guide maybe better to leave it out.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1731314581/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49301
https://api.github.com/repos/rails/rails/issues/comments/1731512966,https://github.com/rails/rails/pull/49301#issuecomment-1731512966,https://api.github.com/repos/rails/rails/issues/49301,1731512966,IC_kwDNIULOZzTKhg,"{'login': 'bensheldon', 'id': 47554, 'node_id': 'MDQ6VXNlcjQ3NTU0', 'avatar_url': 'https://avatars.githubusercontent.com/u/47554?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bensheldon', 'html_url': 'https://github.com/bensheldon', 'followers_url': 'https://api.github.com/users/bensheldon/followers', 'following_url': 'https://api.github.com/users/bensheldon/following{/other_user}', 'gists_url': 'https://api.github.com/users/bensheldon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bensheldon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bensheldon/subscriptions', 'organizations_url': 'https://api.github.com/users/bensheldon/orgs', 'repos_url': 'https://api.github.com/users/bensheldon/repos', 'events_url': 'https://api.github.com/users/bensheldon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bensheldon/received_events', 'type': 'User', 'site_admin': True}",2023-09-22T14:23:46Z,2023-09-22T14:23:46Z,CONTRIBUTOR,@freesteph no worries.  I'll work on my own PR. Thanks for considering it though 🙇🏻 ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1731512966/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,49301
https://api.github.com/repos/rails/rails/issues/comments/1732312369,https://github.com/rails/rails/pull/49301#issuecomment-1732312369,https://api.github.com/repos/rails/rails/issues/49301,1732312369,IC_kwDNIULOZ0D9MQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-09-23T12:54:46Z,2023-09-23T12:55:07Z,MEMBER,"> Since `perform_now` is actually not mentioned in the guide maybe better to leave it out.

As `perform_now` is perfectly valid way to run a job, I think we should still mention it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732312369/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49301
https://api.github.com/repos/rails/rails/issues/comments/1731785337,https://github.com/rails/rails/pull/49297#issuecomment-1731785337,https://api.github.com/repos/rails/rails/issues/49297,1731785337,IC_kwDNIULOZzjyeQ,"{'login': 'hannahramadan', 'id': 76922290, 'node_id': 'MDQ6VXNlcjc2OTIyMjkw', 'avatar_url': 'https://avatars.githubusercontent.com/u/76922290?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hannahramadan', 'html_url': 'https://github.com/hannahramadan', 'followers_url': 'https://api.github.com/users/hannahramadan/followers', 'following_url': 'https://api.github.com/users/hannahramadan/following{/other_user}', 'gists_url': 'https://api.github.com/users/hannahramadan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hannahramadan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hannahramadan/subscriptions', 'organizations_url': 'https://api.github.com/users/hannahramadan/orgs', 'repos_url': 'https://api.github.com/users/hannahramadan/repos', 'events_url': 'https://api.github.com/users/hannahramadan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hannahramadan/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T17:26:50Z,2023-09-22T17:26:50Z,NONE,@skipkayhil @p8 The docs are updated and commits squashed! Please let me know if anything else is needed.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1731785337/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49297
https://api.github.com/repos/rails/rails/issues/comments/1741450932,https://github.com/rails/rails/pull/49297#issuecomment-1741450932,https://api.github.com/repos/rails/rails/issues/49297,1741450932,IC_kwDNIULOZ8xutA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-09-29T20:26:10Z,2023-09-29T20:26:10Z,MEMBER,"It doesn't seem that instrumentation is tested a lot in ActionPack.
This seems like a nice example to duplicate.
https://github.com/rails/rails/blob/180e60119602650fb4af068daabc994a09f4259d/actionpack/test/controller/caching_test.rb#L257-L270","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1741450932/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49297
https://api.github.com/repos/rails/rails/issues/comments/1719567654,https://github.com/rails/rails/issues/49273#issuecomment-1719567654,https://api.github.com/repos/rails/rails/issues/49273,1719567654,IC_kwDNIULOZn6FJg,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-09-14T14:30:04Z,2023-09-14T14:30:04Z,CONTRIBUTOR,I will do a PR to validate the complexity.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1719567654/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49273
https://api.github.com/repos/rails/rails/issues/comments/1719966192,https://github.com/rails/rails/issues/49273#issuecomment-1719966192,https://api.github.com/repos/rails/rails/issues/49273,1719966192,IC_kwDNIULOZoSZ8A,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-09-14T18:46:48Z,2023-09-14T18:46:48Z,CONTRIBUTOR,"Hey there, would you mind creating a small [reproduction script](https://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report) so that we can confirm the bug and test locally?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1719966192/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49273
https://api.github.com/repos/rails/rails/issues/comments/1744903984,https://github.com/rails/rails/issues/49273#issuecomment-1744903984,https://api.github.com/repos/rails/rails/issues/49273,1744903984,IC_kwDNIULOaAEfMA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-10-03T12:51:05Z,2023-10-03T12:51:05Z,NONE,"This issue has been automatically closed because there has been no follow-up response from the original author. We currently don't have enough information in order to take action. Please reach out if you have any additional information that will help us move this issue forward.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1744903984/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49273
https://api.github.com/repos/rails/rails/issues/comments/1744994417,https://github.com/rails/rails/issues/49273#issuecomment-1744994417,https://api.github.com/repos/rails/rails/issues/49273,1744994417,IC_kwDNIULOaAKAcQ,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-10-03T13:35:45Z,2023-10-03T13:35:45Z,CONTRIBUTOR,Not stale.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1744994417/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49273
https://api.github.com/repos/rails/rails/issues/comments/1718088012,https://github.com/rails/rails/issues/49254#issuecomment-1718088012,https://api.github.com/repos/rails/rails/issues/49254,1718088012,IC_kwDNIULOZmfxTA,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-09-13T18:05:30Z,2023-09-13T18:05:30Z,CONTRIBUTOR,I suggest opening a PR on the Docs and then adding the information you think would be helpful in the Guide.  I'm sure it would get added as long as it makes sense in the context of the rest of the Guide. ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1718088012/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49254
https://api.github.com/repos/rails/rails/issues/comments/1716748409,https://github.com/rails/rails/pull/49245#issuecomment-1716748409,https://api.github.com/repos/rails/rails/issues/49245,1716748409,IC_kwDNIULOZlOAeQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-09-13T00:14:59Z,2023-09-13T00:14:59Z,MEMBER,"This changes the place where the log message is printed, which is too late compared to before this change. Other middleware could print before this point, which would make then out of place.

I think the right place to print this is in the Rack application entrypoint instead of inside the controller.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1716748409/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49245
https://api.github.com/repos/rails/rails/issues/comments/1716757276,https://github.com/rails/rails/pull/49245#issuecomment-1716757276,https://api.github.com/repos/rails/rails/issues/49245,1716757276,IC_kwDNIULOZlOjHA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-09-13T00:22:08Z,2023-09-13T00:22:08Z,MEMBER,"This isn't as simple as I thought, but I also don't think we can more this logging to after all middleware are processed. This for sure will break my application since we rely on this line to know when a request started and group all lines after it inside a request. Moving this to after all middleware are processed will mean that all logs that middleware print will be considered part of the previous request.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1716757276/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49245
https://api.github.com/repos/rails/rails/issues/comments/1726759994,https://github.com/rails/rails/pull/49245#issuecomment-1726759994,https://api.github.com/repos/rails/rails/issues/49245,1726759994,IC_kwDNIULOZuxEOg,"{'login': 'soulcutter', 'id': 97257, 'node_id': 'MDQ6VXNlcjk3MjU3', 'avatar_url': 'https://avatars.githubusercontent.com/u/97257?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/soulcutter', 'html_url': 'https://github.com/soulcutter', 'followers_url': 'https://api.github.com/users/soulcutter/followers', 'following_url': 'https://api.github.com/users/soulcutter/following{/other_user}', 'gists_url': 'https://api.github.com/users/soulcutter/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/soulcutter/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/soulcutter/subscriptions', 'organizations_url': 'https://api.github.com/users/soulcutter/orgs', 'repos_url': 'https://api.github.com/users/soulcutter/repos', 'events_url': 'https://api.github.com/users/soulcutter/events{/privacy}', 'received_events_url': 'https://api.github.com/users/soulcutter/received_events', 'type': 'User', 'site_admin': False}",2023-09-20T01:45:03Z,2023-09-20T01:45:03Z,NONE,"I found this when investigating the lograge-style issue, that this log line is very hard to remove. A fix for that might be to extract a method which does the logging, and then it would be removable via minimal monkey-patching. A marginal improvement, for sure.

That doesn't solve the other issues, though. The RemoteIp dependency is a tricky problem. Thank you for taking a crack at solving this.

> we rely on this line to know when a request started and group all lines after it inside a request. Moving this to after all middleware are processed will mean that all logs that middleware print will be considered part of the previous request.

I can see how this would potentially change the order. I'm not sure there's a way around changing the order to fix the problems referenced in the PR description.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1726759994/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49245
https://api.github.com/repos/rails/rails/issues/comments/1728472350,https://github.com/rails/rails/pull/49245#issuecomment-1728472350,https://api.github.com/repos/rails/rails/issues/49245,1728472350,IC_kwDNIULOZwZlHg,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-09-20T21:49:11Z,2023-09-20T21:49:11Z,MEMBER,I'm thinking that the best way to fix the issues above with the additional requirement of not moving _when_ the `Started...` message is logged would be to just split the class in place in the stack (assuming that we shouldn't move `ShowExceptions` and the `Notification` part of `Rack::Logger` now as it would be larger breaking change imo). I'll think about it some more and hopefully update the PR soon,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1728472350/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49245
https://api.github.com/repos/rails/rails/issues/comments/1718813604,https://github.com/rails/rails/pull/49240#issuecomment-1718813604,https://api.github.com/repos/rails/rails/issues/49240,1718813604,IC_kwDNIULOZnMDpA,"{'login': 'deepakmahakale', 'id': 14993828, 'node_id': 'MDQ6VXNlcjE0OTkzODI4', 'avatar_url': 'https://avatars.githubusercontent.com/u/14993828?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/deepakmahakale', 'html_url': 'https://github.com/deepakmahakale', 'followers_url': 'https://api.github.com/users/deepakmahakale/followers', 'following_url': 'https://api.github.com/users/deepakmahakale/following{/other_user}', 'gists_url': 'https://api.github.com/users/deepakmahakale/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/deepakmahakale/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/deepakmahakale/subscriptions', 'organizations_url': 'https://api.github.com/users/deepakmahakale/orgs', 'repos_url': 'https://api.github.com/users/deepakmahakale/repos', 'events_url': 'https://api.github.com/users/deepakmahakale/events{/privacy}', 'received_events_url': 'https://api.github.com/users/deepakmahakale/received_events', 'type': 'User', 'site_admin': False}",2023-09-14T06:03:25Z,2023-09-14T06:03:25Z,CONTRIBUTOR,@rafaelfranca thoughts on this?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1718813604/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49240
https://api.github.com/repos/rails/rails/issues/comments/1714823382,https://github.com/rails/rails/issues/49227#issuecomment-1714823382,https://api.github.com/repos/rails/rails/issues/49227,1714823382,IC_kwDNIULOZjYg1g,"{'login': 'bensheldon', 'id': 47554, 'node_id': 'MDQ6VXNlcjQ3NTU0', 'avatar_url': 'https://avatars.githubusercontent.com/u/47554?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bensheldon', 'html_url': 'https://github.com/bensheldon', 'followers_url': 'https://api.github.com/users/bensheldon/followers', 'following_url': 'https://api.github.com/users/bensheldon/following{/other_user}', 'gists_url': 'https://api.github.com/users/bensheldon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bensheldon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bensheldon/subscriptions', 'organizations_url': 'https://api.github.com/users/bensheldon/orgs', 'repos_url': 'https://api.github.com/users/bensheldon/repos', 'events_url': 'https://api.github.com/users/bensheldon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bensheldon/received_events', 'type': 'User', 'site_admin': True}",2023-09-12T01:17:11Z,2023-09-12T01:17:47Z,CONTRIBUTOR,"I'm familiar with this. This happens because anytime a Executor/Reloader context closes, it resets the CurrentAttributes:

https://github.com/rails/rails/blob/5a92880f29226200019406a4369cce3668083b2a/activesupport/lib/active_support/railtie.rb#L48-L50

ActiveJob wraps every job execution with an Reloader:

https://github.com/rails/rails/blob/5a92880f29226200019406a4369cce3668083b2a/activejob/lib/active_job/railtie.rb#L63-L71

btw, the change in #37568 was undone in #40626, which has an explanation for why.

What I'm unsure about (and is likely what you're having trouble reproducing in your test) is that doubly-wrapped executors should be a noop:

https://github.com/rails/rails/blob/5a92880f29226200019406a4369cce3668083b2a/activesupport/lib/active_support/reloader.rb#L71-L72

 So if you're running the job inline in a controller action, it will already be wrapped in an executor, so it should not reset the CurrentAttributes. But what I think is maybe the problem here is that Active Job specifically uses a _Reloader_ (it's the only place directly in the Rails framework that does) which may have different behavior. e.g. (I have not tried this):
 
 ```ruby
 Rails.application.executor.wrap
   Current.user = ""test""
   Rails.application.reloader.wrap
     assert_equal(""test"", Current.user, ""FIRST"")
   end
   assert_equal(""test"", Current.user, ""SECOND"")
 end
 ```
 
 Hopefully those are some helpful points 🤗 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1714823382/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49227
https://api.github.com/repos/rails/rails/issues/comments/1714848177,https://github.com/rails/rails/issues/49227#issuecomment-1714848177,https://api.github.com/repos/rails/rails/issues/49227,1714848177,IC_kwDNIULOZjaBsQ,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-09-12T01:54:19Z,2023-09-12T01:54:19Z,MEMBER,"> Active Job specifically uses a Reloader (it's the only place directly in the Rails framework that does)

Requests do too.. there's just a bit more indirection (no `wrap`) because of the Rack API -- https://github.com/rails/rails/blob/b67bdfb8032d5b88d0a1912e8cef70aa73f6cee9/railties/lib/rails/application/default_middleware_stack.rb#L66

Granted, that _is_ wrapped in a conditional that won't be true in a test environment. (Only because it's easy, and known to be a no-op -- there's no need to specifically avoid `reloader.wrap` in non-reloading environments.)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1714848177/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49227
https://api.github.com/repos/rails/rails/issues/comments/1715151047,https://github.com/rails/rails/issues/49227#issuecomment-1715151047,https://api.github.com/repos/rails/rails/issues/49227,1715151047,IC_kwDNIULOZjsgxw,"{'login': 'Earlopain', 'id': 14981592, 'node_id': 'MDQ6VXNlcjE0OTgxNTky', 'avatar_url': 'https://avatars.githubusercontent.com/u/14981592?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Earlopain', 'html_url': 'https://github.com/Earlopain', 'followers_url': 'https://api.github.com/users/Earlopain/followers', 'following_url': 'https://api.github.com/users/Earlopain/following{/other_user}', 'gists_url': 'https://api.github.com/users/Earlopain/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Earlopain/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Earlopain/subscriptions', 'organizations_url': 'https://api.github.com/users/Earlopain/orgs', 'repos_url': 'https://api.github.com/users/Earlopain/repos', 'events_url': 'https://api.github.com/users/Earlopain/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Earlopain/received_events', 'type': 'User', 'site_admin': False}",2023-09-12T07:27:20Z,2023-09-12T07:28:36Z,CONTRIBUTOR,"Thank you @bensheldon, that has given me some pointers into what to look at more closely.

Running tests through rails there are two executors active. The first is `Rails.application.executor` from `ActiveSupport::Executor::TestHelper`, the second is `ActiveSupport::Reloader` from `initializer ""active_job.set_reloader_hook""`. Both run, they are not considered active because they are not the same object.
The flow is not all that clear to me but I assume that each test is wrapped in an executor because of [executor_around_test_case](https://guides.rubyonrails.org/configuring.html#config-active-support-executor-around-test-case) _and_ jobs that are being executed inline are as well. I traced the calls by printing `caller` in ``before_reset` of the current attributes.

My self-contained test script doesn't run executors at all. But even knowing about them I can't figure out how to simulate that behaviour. Perhaps someone else is able to.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1715151047/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49227
https://api.github.com/repos/rails/rails/issues/comments/1715543147,https://github.com/rails/rails/issues/49227#issuecomment-1715543147,https://api.github.com/repos/rails/rails/issues/49227,1715543147,IC_kwDNIULOZkEcaw,"{'login': 'Earlopain', 'id': 14981592, 'node_id': 'MDQ6VXNlcjE0OTgxNTky', 'avatar_url': 'https://avatars.githubusercontent.com/u/14981592?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Earlopain', 'html_url': 'https://github.com/Earlopain', 'followers_url': 'https://api.github.com/users/Earlopain/followers', 'following_url': 'https://api.github.com/users/Earlopain/following{/other_user}', 'gists_url': 'https://api.github.com/users/Earlopain/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Earlopain/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Earlopain/subscriptions', 'organizations_url': 'https://api.github.com/users/Earlopain/orgs', 'repos_url': 'https://api.github.com/users/Earlopain/repos', 'events_url': 'https://api.github.com/users/Earlopain/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Earlopain/received_events', 'type': 'User', 'site_admin': False}",2023-09-12T11:25:58Z,2023-09-12T11:25:58Z,CONTRIBUTOR,"I managed to produce a single-file reproduction script

```rb
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""active_support/railtie""
require ""active_job/railtie""
require ""minitest/autorun""

class TestApp < Rails::Application
  config.load_defaults 7.1

  config.active_job.queue_adapter = :inline
  config.eager_load = false
end

Rails.application.initialize!

class Current < ActiveSupport::CurrentAttributes
  attribute :user
end

class DummyJob < ActiveJob::Base
  def perform
  end
end

class CurrentAttributeTest < ActiveSupport::TestCase
  test ""CurrentAttributes"" do
    Current.user = ""test""
    DummyJob.perform_later

    assert_equal(""test"", Current.user, ""CurrentAttributes reset"")
  end
end

```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1715543147/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49227
https://api.github.com/repos/rails/rails/issues/comments/1714431390,https://github.com/rails/rails/pull/49223#issuecomment-1714431390,https://api.github.com/repos/rails/rails/issues/49223,1714431390,IC_kwDNIULOZjAlng,"{'login': 'LA-Toth', 'id': 1297651, 'node_id': 'MDQ6VXNlcjEyOTc2NTE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1297651?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/LA-Toth', 'html_url': 'https://github.com/LA-Toth', 'followers_url': 'https://api.github.com/users/LA-Toth/followers', 'following_url': 'https://api.github.com/users/LA-Toth/following{/other_user}', 'gists_url': 'https://api.github.com/users/LA-Toth/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/LA-Toth/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/LA-Toth/subscriptions', 'organizations_url': 'https://api.github.com/users/LA-Toth/orgs', 'repos_url': 'https://api.github.com/users/LA-Toth/repos', 'events_url': 'https://api.github.com/users/LA-Toth/events{/privacy}', 'received_events_url': 'https://api.github.com/users/LA-Toth/received_events', 'type': 'User', 'site_admin': False}",2023-09-11T19:07:12Z,2023-09-11T19:07:12Z,NONE,"Thanks for your reply, it forced me to revisit the change I created based on debugging. The code change is not needed, as the `Array(['dir1', 'dir2'])` is the same as `['dir1', 'dir2']`. 

Even without the actual code change I would like to send a documentation update, but I'm not sure where should I change it.
The comments I modified are in the [Root's documentation](https://api.rubyonrails.org/classes/Rails/Paths/Root.html), but additional locations would be useful, like the [Helpers module](https://api.rubyonrails.org/classes/ActionController/Helpers.html)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1714431390/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49223
https://api.github.com/repos/rails/rails/issues/comments/1714680190,https://github.com/rails/rails/pull/49223#issuecomment-1714680190,https://api.github.com/repos/rails/rails/issues/49223,1714680190,IC_kwDNIULOZjPxfg,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-09-11T22:41:20Z,2023-09-11T22:41:20Z,MEMBER,"I see there is some related content in the `Rails::Engine` doc: https://edgeapi.rubyonrails.org/classes/Rails/Engine.html#class-Rails::Engine-label-Paths (are you using an Engine for organization?). I also see that https://edgeapi.rubyonrails.org/classes/Rails/Paths/Path.html#method-i-3C-3C doesn't have much documentation at all

I'm not sure `Rails::Paths::Root` is the right place to add this, as it seems more like an implementation detail than a configuration entrypoint.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1714680190/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49223
https://api.github.com/repos/rails/rails/issues/comments/1715100131,https://github.com/rails/rails/pull/49223#issuecomment-1715100131,https://api.github.com/repos/rails/rails/issues/49223,1715100131,IC_kwDNIULOZjpZ4w,"{'login': 'LA-Toth', 'id': 1297651, 'node_id': 'MDQ6VXNlcjEyOTc2NTE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1297651?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/LA-Toth', 'html_url': 'https://github.com/LA-Toth', 'followers_url': 'https://api.github.com/users/LA-Toth/followers', 'following_url': 'https://api.github.com/users/LA-Toth/following{/other_user}', 'gists_url': 'https://api.github.com/users/LA-Toth/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/LA-Toth/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/LA-Toth/subscriptions', 'organizations_url': 'https://api.github.com/users/LA-Toth/orgs', 'repos_url': 'https://api.github.com/users/LA-Toth/repos', 'events_url': 'https://api.github.com/users/LA-Toth/events{/privacy}', 'received_events_url': 'https://api.github.com/users/LA-Toth/received_events', 'type': 'User', 'site_admin': False}",2023-09-12T06:48:04Z,2023-09-12T06:48:04Z,NONE,"`Root` seems to be an implementation detail, but it's quite detailed that there are multiple keyword args for the `add` method. 
`Engine` (the superclass of `Application`) seems to be the best to mention the purpose of the arrays, but I think it's important to show that in `Root`, too, especially if someone with a debugger finds that type.

The app I use is a bit strange, it's a legacy app started with Rails 2. In fact it is not one, but multiple Rails apps, with a `common` directory containing e.g. the common helpers, while the app-specific helpers are in their expected locations, not in `common`. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1715100131/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49223
https://api.github.com/repos/rails/rails/issues/comments/1737459227,https://github.com/rails/rails/pull/49223#issuecomment-1737459227,https://api.github.com/repos/rails/rails/issues/49223,1737459227,IC_kwDNIULOZ4-GGw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T13:59:05Z,2023-09-27T13:59:05Z,MEMBER,"I also don't think this is the right place to document this, also why not just use `config.helpers_paths`?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1737459227/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49223
https://api.github.com/repos/rails/rails/issues/comments/1714294976,https://github.com/rails/rails/pull/49217#issuecomment-1714294976,https://api.github.com/repos/rails/rails/issues/49217,1714294976,IC_kwDNIULOZi4QwA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-09-11T17:24:08Z,2023-09-11T17:26:40Z,MEMBER,"> LGTM. But there are other possibilities for each extensions right?

Not sure I understand the question, but there are methods like this for the most common file types:
https://github.com/rails/rails/blob/1b97206dd3f7d4b6943bcff79eabb53c76e8ba79/activestorage/app/models/active_storage/blob.rb#L189-L207

https://github.com/rails/rails/pull/49198 tries to make it extendable.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1714294976/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49217
https://api.github.com/repos/rails/rails/issues/comments/1710466817,https://github.com/rails/rails/pull/49189#issuecomment-1710466817,https://api.github.com/repos/rails/rails/issues/49189,1710466817,IC_kwDNIULOZfOnAQ,"{'login': 'ccutrer', 'id': 191320, 'node_id': 'MDQ6VXNlcjE5MTMyMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/191320?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ccutrer', 'html_url': 'https://github.com/ccutrer', 'followers_url': 'https://api.github.com/users/ccutrer/followers', 'following_url': 'https://api.github.com/users/ccutrer/following{/other_user}', 'gists_url': 'https://api.github.com/users/ccutrer/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ccutrer/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ccutrer/subscriptions', 'organizations_url': 'https://api.github.com/users/ccutrer/orgs', 'repos_url': 'https://api.github.com/users/ccutrer/repos', 'events_url': 'https://api.github.com/users/ccutrer/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ccutrer/received_events', 'type': 'User', 'site_admin': False}",2023-09-07T16:37:18Z,2023-09-07T16:37:18Z,CONTRIBUTOR,I just realized I need to invalidate the schema cache when an extension changes. I'll implement that this afternoon.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1710466817/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49189
https://api.github.com/repos/rails/rails/issues/comments/1710661643,https://github.com/rails/rails/pull/49189#issuecomment-1710661643,https://api.github.com/repos/rails/rails/issues/49189,1710661643,IC_kwDNIULOZfagCw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-09-07T19:24:42Z,2023-09-07T19:24:42Z,CONTRIBUTOR,"Imo, this seems very specialized to PostgreSQL (like https://github.com/rails/rails/pull/45776) and better be implemented as a gem. These additional features are rarely needed to implement them into the core and can be done via custom SQL.
Let's look also for other people thoughts.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1710661643/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49189
https://api.github.com/repos/rails/rails/issues/comments/1710702203,https://github.com/rails/rails/pull/49189#issuecomment-1710702203,https://api.github.com/repos/rails/rails/issues/49189,1710702203,IC_kwDNIULOZfc-ew,"{'login': 'ccutrer', 'id': 191320, 'node_id': 'MDQ6VXNlcjE5MTMyMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/191320?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ccutrer', 'html_url': 'https://github.com/ccutrer', 'followers_url': 'https://api.github.com/users/ccutrer/followers', 'following_url': 'https://api.github.com/users/ccutrer/following{/other_user}', 'gists_url': 'https://api.github.com/users/ccutrer/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ccutrer/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ccutrer/subscriptions', 'organizations_url': 'https://api.github.com/users/ccutrer/orgs', 'repos_url': 'https://api.github.com/users/ccutrer/repos', 'events_url': 'https://api.github.com/users/ccutrer/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ccutrer/received_events', 'type': 'User', 'site_admin': False}",2023-09-07T20:03:11Z,2023-09-07T20:03:11Z,CONTRIBUTOR,"While I normally agree with you (and a lot of this implementation is actually coming from a separate gem, that I then noticed Rails already has partial support for), these methods already exist in Rails, and I'm just making them feature complete. There are actually a surprising lot of tests in Rails that use a variety of extensions - hstore, citext, postgres_fdw, ltree, pg_hint_plan, uuid_ossp, and pgcrypto. To the point that the `:uuid` type for primary keys defaults to using an extension, and the docs advise you to use these methods to enable the extension in your migrations. So it doesn't seem feasible to remove Postgres extension management from Rails core and only have it in a gem, and it seems really weird to have a _partial_ implementation in core, then have a separate gem completely override it to give full functionality.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1710702203/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49189
https://api.github.com/repos/rails/rails/issues/comments/1742161735,https://github.com/rails/rails/pull/49189#issuecomment-1742161735,https://api.github.com/repos/rails/rails/issues/49189,1742161735,IC_kwDNIULOZ9dHRw,"{'login': 'andyatkinson', 'id': 2161008, 'node_id': 'MDQ6VXNlcjIxNjEwMDg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2161008?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andyatkinson', 'html_url': 'https://github.com/andyatkinson', 'followers_url': 'https://api.github.com/users/andyatkinson/followers', 'following_url': 'https://api.github.com/users/andyatkinson/following{/other_user}', 'gists_url': 'https://api.github.com/users/andyatkinson/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andyatkinson/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andyatkinson/subscriptions', 'organizations_url': 'https://api.github.com/users/andyatkinson/orgs', 'repos_url': 'https://api.github.com/users/andyatkinson/repos', 'events_url': 'https://api.github.com/users/andyatkinson/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andyatkinson/received_events', 'type': 'User', 'site_admin': False}",2023-10-01T18:30:40Z,2023-10-01T18:30:40Z,MEMBER,"Can the PostgreSQL tag get added to this PR? I don't know how to do that, if there is a bot action, or only core team members with permission to modify tags.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742161735/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49189
https://api.github.com/repos/rails/rails/issues/comments/1742165266,https://github.com/rails/rails/pull/49189#issuecomment-1742165266,https://api.github.com/repos/rails/rails/issues/49189,1742165266,IC_kwDNIULOZ9dVEg,"{'login': 'andyatkinson', 'id': 2161008, 'node_id': 'MDQ6VXNlcjIxNjEwMDg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2161008?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andyatkinson', 'html_url': 'https://github.com/andyatkinson', 'followers_url': 'https://api.github.com/users/andyatkinson/followers', 'following_url': 'https://api.github.com/users/andyatkinson/following{/other_user}', 'gists_url': 'https://api.github.com/users/andyatkinson/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andyatkinson/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andyatkinson/subscriptions', 'organizations_url': 'https://api.github.com/users/andyatkinson/orgs', 'repos_url': 'https://api.github.com/users/andyatkinson/repos', 'events_url': 'https://api.github.com/users/andyatkinson/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andyatkinson/received_events', 'type': 'User', 'site_admin': False}",2023-10-01T18:44:41Z,2023-10-01T18:44:41Z,MEMBER,">  So it doesn't seem feasible to remove Postgres extension management from Rails core and only have it in a gem, and it seems really weird to have a partial implementation in core, then have a separate gem completely override it to give full functionality.

I agree with the rationale here. There is currently support for PostgreSQL extensions in Active Record, and indeed some functionality like using hstore or generating UUID values using an extension (although that could alternatively be done with `select gen_random_uuid();` without the extension), or creating a GiST index, require extensions. PostgreSQL is an extensible database, and it's part of its success with developers. An example from the last year is the pgvector extension which has rapidly gained wide cloud hosted PostgreSQL support, so developers can use it as part of building their AI apps.

These extensions may be crucial to the functionality or performance (e.g. a GiST index and the `pg_trgm` extension) of a Rails app.

I do also agree this PR is PostgreSQL-specific. I'm not sure whether it makes sense to ""x_feature_supported?"" types of conditional checks for them. Although I do support the general sentiment to enhance the PostgreSQL extensions support in Active  Record, making it closer to what's possible with direct `CREATE EXTENSION` types of commands Docs: https://www.postgresql.org/docs/current/sql-createextension.html

I could also see an alternative of covering this information in Rails Guides for Active Record and PostgreSQL https://guides.rubyonrails.org/active_record_postgresql.html, showing how to enable the extension per database, how to change the database where it's loaded, how to use `CASCADE`.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742165266/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49189
https://api.github.com/repos/rails/rails/issues/comments/1725481738,https://github.com/rails/rails/pull/49187#issuecomment-1725481738,https://api.github.com/repos/rails/rails/issues/49187,1725481738,IC_kwDNIULOZtjDCg,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-09-19T13:10:55Z,2023-09-19T13:10:55Z,MEMBER,@alpaca-tc What do you think about this pull request? I'm asking this question because you have authored #46192 and #47655 .,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1725481738/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49187
https://api.github.com/repos/rails/rails/issues/comments/1727131257,https://github.com/rails/rails/pull/49187#issuecomment-1727131257,https://api.github.com/repos/rails/rails/issues/49187,1727131257,IC_kwDNIULOZvHueQ,"{'login': 'alpaca-tc', 'id': 1688137, 'node_id': 'MDQ6VXNlcjE2ODgxMzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1688137?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/alpaca-tc', 'html_url': 'https://github.com/alpaca-tc', 'followers_url': 'https://api.github.com/users/alpaca-tc/followers', 'following_url': 'https://api.github.com/users/alpaca-tc/following{/other_user}', 'gists_url': 'https://api.github.com/users/alpaca-tc/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/alpaca-tc/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/alpaca-tc/subscriptions', 'organizations_url': 'https://api.github.com/users/alpaca-tc/orgs', 'repos_url': 'https://api.github.com/users/alpaca-tc/repos', 'events_url': 'https://api.github.com/users/alpaca-tc/events{/privacy}', 'received_events_url': 'https://api.github.com/users/alpaca-tc/received_events', 'type': 'User', 'site_admin': False}",2023-09-20T07:31:31Z,2023-09-20T08:16:22Z,CONTRIBUTOR,"@yahonda  I think the `#set_constraints` support is a good idea. I also like the method interface was nice. :+1:

As for `#defer_constraints`, I am not sure if it should be supported in Rails. I think it would be nice to let users extend it in their own applications. 

- 1. I feel uncomfortable that `#immediate_constraints`, which does the opposite of `#defer_constraints`, does not exist. 
- 2. As in the following code, depending on the kind of exception that occurs in the `#defer_constraints` block, the behavior is not as expected.

```ruby
begin
  Post.connection.defer_constraints do
    raise 'a'
  end
rescue
  # The user expects the constraint to be back to IMMEDIATE, but it remains DEFERRABLE.
end
```
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1727131257/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49187
https://api.github.com/repos/rails/rails/issues/comments/1710053623,https://github.com/rails/rails/pull/49185#issuecomment-1710053623,https://api.github.com/repos/rails/rails/issues/49185,1710053623,IC_kwDNIULOZe1Y9w,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-09-07T12:21:08Z,2023-09-07T12:21:08Z,CONTRIBUTOR,"I remember it was proposed before (2 times), but was rejected by @rafaelfranca. 
I was not able to quickly find these PRs, maybe you will.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1710053623/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49185
https://api.github.com/repos/rails/rails/issues/comments/1710095487,https://github.com/rails/rails/pull/49185#issuecomment-1710095487,https://api.github.com/repos/rails/rails/issues/49185,1710095487,IC_kwDNIULOZe38fw,"{'login': 'deepakmahakale', 'id': 14993828, 'node_id': 'MDQ6VXNlcjE0OTkzODI4', 'avatar_url': 'https://avatars.githubusercontent.com/u/14993828?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/deepakmahakale', 'html_url': 'https://github.com/deepakmahakale', 'followers_url': 'https://api.github.com/users/deepakmahakale/followers', 'following_url': 'https://api.github.com/users/deepakmahakale/following{/other_user}', 'gists_url': 'https://api.github.com/users/deepakmahakale/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/deepakmahakale/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/deepakmahakale/subscriptions', 'organizations_url': 'https://api.github.com/users/deepakmahakale/orgs', 'repos_url': 'https://api.github.com/users/deepakmahakale/repos', 'events_url': 'https://api.github.com/users/deepakmahakale/events{/privacy}', 'received_events_url': 'https://api.github.com/users/deepakmahakale/received_events', 'type': 'User', 'site_admin': False}",2023-09-07T12:49:26Z,2023-09-07T12:49:26Z,CONTRIBUTOR,"I will definitely check 👍 

Given that people are raising the PRs for this feature, can we consider adding this support?

This also makes it more consistent with other methods to add columns and provide an optional index option.


","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1710095487/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49185
https://api.github.com/repos/rails/rails/issues/comments/1710158525,https://github.com/rails/rails/pull/49185#issuecomment-1710158525,https://api.github.com/repos/rails/rails/issues/49185,1710158525,IC_kwDNIULOZe7yvQ,"{'login': 'akhilgkrishnan', 'id': 22231095, 'node_id': 'MDQ6VXNlcjIyMjMxMDk1', 'avatar_url': 'https://avatars.githubusercontent.com/u/22231095?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akhilgkrishnan', 'html_url': 'https://github.com/akhilgkrishnan', 'followers_url': 'https://api.github.com/users/akhilgkrishnan/followers', 'following_url': 'https://api.github.com/users/akhilgkrishnan/following{/other_user}', 'gists_url': 'https://api.github.com/users/akhilgkrishnan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akhilgkrishnan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akhilgkrishnan/subscriptions', 'organizations_url': 'https://api.github.com/users/akhilgkrishnan/orgs', 'repos_url': 'https://api.github.com/users/akhilgkrishnan/repos', 'events_url': 'https://api.github.com/users/akhilgkrishnan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akhilgkrishnan/received_events', 'type': 'User', 'site_admin': False}",2023-09-07T13:31:03Z,2023-09-07T13:37:51Z,CONTRIBUTOR,"> I remember it was proposed before (2 times), but was rejected by @rafaelfranca. I was not able to quickly find these PRs, maybe you will.

https://github.com/rails/rails/pull/20616#issuecomment-144870870 https://github.com/rails/rails/pull/17584","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1710158525/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49185
https://api.github.com/repos/rails/rails/issues/comments/1717421821,https://github.com/rails/rails/pull/49185#issuecomment-1717421821,https://api.github.com/repos/rails/rails/issues/49185,1717421821,IC_kwDNIULOZl3G_Q,"{'login': 'shalvah', 'id': 14361073, 'node_id': 'MDQ6VXNlcjE0MzYxMDcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/14361073?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/shalvah', 'html_url': 'https://github.com/shalvah', 'followers_url': 'https://api.github.com/users/shalvah/followers', 'following_url': 'https://api.github.com/users/shalvah/following{/other_user}', 'gists_url': 'https://api.github.com/users/shalvah/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/shalvah/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/shalvah/subscriptions', 'organizations_url': 'https://api.github.com/users/shalvah/orgs', 'repos_url': 'https://api.github.com/users/shalvah/repos', 'events_url': 'https://api.github.com/users/shalvah/events{/privacy}', 'received_events_url': 'https://api.github.com/users/shalvah/received_events', 'type': 'User', 'site_admin': False}",2023-09-13T11:09:36Z,2023-09-13T11:09:36Z,CONTRIBUTOR,"It seems like the major objection was conceptual (add_column should only add a column). If we decide to keep it that way, could we at least raise an error if unsupported options (like `index`) are passed? It's a common cause of confusion.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1717421821/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49185
https://api.github.com/repos/rails/rails/issues/comments/1732205235,https://github.com/rails/rails/pull/49160#issuecomment-1732205235,https://api.github.com/repos/rails/rails/issues/49160,1732205235,IC_kwDNIULOZz9asw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-09-23T04:15:11Z,2023-09-23T04:15:11Z,MEMBER,"Just a couple of thoughts, in no particular order:

* `false` is the correct API here
* I think we generally don't use validations/errors for internal API like this, exceptions are preferred
* `save!` variations already raise an exception, perhaps it could be more specific?
* The name `raise_when_saving_already_destroyed` is more understandable

Probably getting confirmation on that errors vs. exception context is a good place to ask in [discord](https://rubyonrails.org/2022/6/13/rails-discord-server-is-now-open-to-the-public).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732205235/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49160
https://api.github.com/repos/rails/rails/issues/comments/1706714851,https://github.com/rails/rails/issues/49147#issuecomment-1706714851,https://api.github.com/repos/rails/rails/issues/49147,1706714851,IC_kwDNIULOZbpm4w,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-09-05T14:18:27Z,2023-09-05T14:19:07Z,MEMBER,So I see the reproduction but I don't quite get why an application would be calling `Post.reset_column_information` in this way and then read from the cache. `Post.reset_column_information` is intended to be called in a migration. Can you help me understand the use case?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1706714851/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49147
https://api.github.com/repos/rails/rails/issues/comments/1706719421,https://github.com/rails/rails/issues/49147#issuecomment-1706719421,https://api.github.com/repos/rails/rails/issues/49147,1706719421,IC_kwDNIULOZbp4vQ,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-09-05T14:20:59Z,2023-09-05T14:22:27Z,CONTRIBUTOR,"I think this bug report may benefit from a little bit more context on when the issue can happen in a real-world app. Currently in order for this bug to appear the application must be lazy loaded which often implies development environment or the code should be calling `reset_column_information` from a place where it makes sense

If the use-case is extremely unique and scoped to development env only perhaps Rails should recommend calling  `define_attribute_methods` manually after `reset_column_information` similarly how Active Model expects applications/libraries to manually define methods back after calling `undefine_attribute_methods`

But if the use-case is more common then it's definitely worth fixing ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1706719421/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49147
https://api.github.com/repos/rails/rails/issues/comments/1706776547,https://github.com/rails/rails/issues/49147#issuecomment-1706776547,https://api.github.com/repos/rails/rails/issues/49147,1706776547,IC_kwDNIULOZbtX4w,"{'login': 'such', 'id': 1303925, 'node_id': 'MDQ6VXNlcjEzMDM5MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1303925?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/such', 'html_url': 'https://github.com/such', 'followers_url': 'https://api.github.com/users/such/followers', 'following_url': 'https://api.github.com/users/such/following{/other_user}', 'gists_url': 'https://api.github.com/users/such/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/such/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/such/subscriptions', 'organizations_url': 'https://api.github.com/users/such/orgs', 'repos_url': 'https://api.github.com/users/such/repos', 'events_url': 'https://api.github.com/users/such/events{/privacy}', 'received_events_url': 'https://api.github.com/users/such/received_events', 'type': 'User', 'site_admin': False}",2023-09-05T14:53:39Z,2023-09-05T14:53:39Z,NONE,"This happens in a real world application.

Use case: sometimes in the lifecycle of our app runtime, the first time we encounter a `Post` object is through cache deserialization. When this is the case if fails in the way described above. We are not calling `reset_column_information` ourselves in our application. This is only to simulate a restart of the app in the test. The application is question uses the production environment and `config.eager_load = true`.

`define_attribute_methods` is only called the first time `initialize` or `initialize_with` is called. My understanding is that It is always lazy.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1706776547/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49147
https://api.github.com/repos/rails/rails/issues/comments/1706892656,https://github.com/rails/rails/issues/49147#issuecomment-1706892656,https://api.github.com/repos/rails/rails/issues/49147,1706892656,IC_kwDNIULOZb0dcA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-09-05T15:56:42Z,2023-09-05T15:58:16Z,MEMBER,"[No. It isn't lazy](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/railtie.rb#L180). It is happening because you application is not properly configured. Make sure the application has access to the production database on boot, or make sure you are using the schema cache and `check_schema_cache_dump_version` is set to false.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1706892656/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49147
https://api.github.com/repos/rails/rails/issues/comments/1707282230,https://github.com/rails/rails/issues/49147#issuecomment-1707282230,https://api.github.com/repos/rails/rails/issues/49147,1707282230,IC_kwDNIULOZcMPNg,"{'login': 'such', 'id': 1303925, 'node_id': 'MDQ6VXNlcjEzMDM5MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1303925?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/such', 'html_url': 'https://github.com/such', 'followers_url': 'https://api.github.com/users/such/followers', 'following_url': 'https://api.github.com/users/such/following{/other_user}', 'gists_url': 'https://api.github.com/users/such/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/such/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/such/subscriptions', 'organizations_url': 'https://api.github.com/users/such/orgs', 'repos_url': 'https://api.github.com/users/such/repos', 'events_url': 'https://api.github.com/users/such/events{/privacy}', 'received_events_url': 'https://api.github.com/users/such/received_events', 'type': 'User', 'site_admin': False}",2023-09-05T20:41:34Z,2023-09-05T20:41:34Z,NONE,"According to the comment: 

```
          # Additionally if `check_schema_cache_dump_version` is enabled (which is the default),
          # loading the schema cache dump trigger a database connection to compare the schema
          # versions.
          # This means the attribute methods will be lazily defined whent the model is accessed,
          # likely as part of the first few requests or jobs. 
```

So I'm using the default config (`check_schema_cache_dump_version`), meaning it is lazy, right?

The app does have access to the production db on boot. I don't see why I should use the schema cache and set `check_schema_cache_dump_version` to false.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1707282230/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49147
https://api.github.com/repos/rails/rails/issues/comments/1707291283,https://github.com/rails/rails/issues/49147#issuecomment-1707291283,https://api.github.com/repos/rails/rails/issues/49147,1707291283,IC_kwDNIULOZcMykw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-09-05T20:48:34Z,2023-09-05T20:50:17Z,MEMBER,"Because that is the recommended, resilient way to deploy Rails applications. And it is the right way to fix the issue you are describing.

defining the attribute methods when deserializing from cache will add performance overhead to every user of the framework every time a cache entry is deserialized.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1707291283/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49147
https://api.github.com/repos/rails/rails/issues/comments/1707298145,https://github.com/rails/rails/issues/49147#issuecomment-1707298145,https://api.github.com/repos/rails/rails/issues/49147,1707298145,IC_kwDNIULOZcNNYQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-09-05T20:55:04Z,2023-09-05T20:55:04Z,MEMBER,"I'm reopening just for the case someone come up with a better solution that doesn't add overhead to every single cache deserialization.

And also because using the schema cache, while it is the recommended, isn't the default, neither easy to do.

But I don't think there is a better solution than starting relying on the schema cache.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1707298145/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49147
https://api.github.com/repos/rails/rails/issues/comments/1708593636,https://github.com/rails/rails/issues/49147#issuecomment-1708593636,https://api.github.com/repos/rails/rails/issues/49147,1708593636,IC_kwDNIULOZdcR5A,"{'login': 'such', 'id': 1303925, 'node_id': 'MDQ6VXNlcjEzMDM5MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1303925?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/such', 'html_url': 'https://github.com/such', 'followers_url': 'https://api.github.com/users/such/followers', 'following_url': 'https://api.github.com/users/such/following{/other_user}', 'gists_url': 'https://api.github.com/users/such/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/such/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/such/subscriptions', 'organizations_url': 'https://api.github.com/users/such/orgs', 'repos_url': 'https://api.github.com/users/such/repos', 'events_url': 'https://api.github.com/users/such/events{/privacy}', 'received_events_url': 'https://api.github.com/users/such/received_events', 'type': 'User', 'site_admin': False}",2023-09-06T15:22:26Z,2023-09-06T15:22:26Z,NONE,"`define_attribute_method` does not add that much overhead because it starts with this guard:

```ruby
return false if @attribute_methods_generated
```

also it is already called everytime an object is fetched from the DB it seems.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1708593636/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49147
https://api.github.com/repos/rails/rails/issues/comments/1703611332,https://github.com/rails/rails/pull/49115#issuecomment-1703611332,https://api.github.com/repos/rails/rails/issues/49115,1703611332,IC_kwDNIULOZYsLxA,"{'login': 'smathy', 'id': 50139, 'node_id': 'MDQ6VXNlcjUwMTM5', 'avatar_url': 'https://avatars.githubusercontent.com/u/50139?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/smathy', 'html_url': 'https://github.com/smathy', 'followers_url': 'https://api.github.com/users/smathy/followers', 'following_url': 'https://api.github.com/users/smathy/following{/other_user}', 'gists_url': 'https://api.github.com/users/smathy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/smathy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/smathy/subscriptions', 'organizations_url': 'https://api.github.com/users/smathy/orgs', 'repos_url': 'https://api.github.com/users/smathy/repos', 'events_url': 'https://api.github.com/users/smathy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/smathy/received_events', 'type': 'User', 'site_admin': False}",2023-09-02T01:04:35Z,2023-09-02T01:04:35Z,CONTRIBUTOR,"Ok moved the class methods, and fixed the `private_class_method`, and then switched to using `send`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1703611332/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49115
https://api.github.com/repos/rails/rails/issues/comments/1724146516,https://github.com/rails/rails/pull/49115#issuecomment-1724146516,https://api.github.com/repos/rails/rails/issues/49115,1724146516,IC_kwDNIULOZsRjVA,"{'login': 'smathy', 'id': 50139, 'node_id': 'MDQ6VXNlcjUwMTM5', 'avatar_url': 'https://avatars.githubusercontent.com/u/50139?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/smathy', 'html_url': 'https://github.com/smathy', 'followers_url': 'https://api.github.com/users/smathy/followers', 'following_url': 'https://api.github.com/users/smathy/following{/other_user}', 'gists_url': 'https://api.github.com/users/smathy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/smathy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/smathy/subscriptions', 'organizations_url': 'https://api.github.com/users/smathy/orgs', 'repos_url': 'https://api.github.com/users/smathy/repos', 'events_url': 'https://api.github.com/users/smathy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/smathy/received_events', 'type': 'User', 'site_admin': False}",2023-09-18T18:22:49Z,2023-09-18T18:22:49Z,CONTRIBUTOR,Anything else I can add here? (I just rebased),"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1724146516/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49115
https://api.github.com/repos/rails/rails/issues/comments/1703825031,https://github.com/rails/rails/issues/49104#issuecomment-1703825031,https://api.github.com/repos/rails/rails/issues/49104,1703825031,IC_kwDNIULOZY5Ohw,"{'login': 'akhilgkrishnan', 'id': 22231095, 'node_id': 'MDQ6VXNlcjIyMjMxMDk1', 'avatar_url': 'https://avatars.githubusercontent.com/u/22231095?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akhilgkrishnan', 'html_url': 'https://github.com/akhilgkrishnan', 'followers_url': 'https://api.github.com/users/akhilgkrishnan/followers', 'following_url': 'https://api.github.com/users/akhilgkrishnan/following{/other_user}', 'gists_url': 'https://api.github.com/users/akhilgkrishnan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akhilgkrishnan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akhilgkrishnan/subscriptions', 'organizations_url': 'https://api.github.com/users/akhilgkrishnan/orgs', 'repos_url': 'https://api.github.com/users/akhilgkrishnan/repos', 'events_url': 'https://api.github.com/users/akhilgkrishnan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akhilgkrishnan/received_events', 'type': 'User', 'site_admin': False}",2023-09-02T12:51:28Z,2023-09-02T12:51:47Z,CONTRIBUTOR,"```ruby
class DirectUploadsController < ActiveStorage::DirectUploadsController
  skip_forgery_protection
  before_action :authenticate!

  def authenticate!
    @token = request.headers['Authorization']&.split&.last

    if @token != ""secret""
      response_body = { error: ""Authentication failed"" }
      render json: response_body, status: :unauthorized
    end
  end
end
```

You can try this to get your expected behavior.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1703825031/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49104
https://api.github.com/repos/rails/rails/issues/comments/1703833761,https://github.com/rails/rails/issues/49104#issuecomment-1703833761,https://api.github.com/repos/rails/rails/issues/49104,1703833761,IC_kwDNIULOZY5woQ,"{'login': 'alexandergitter', 'id': 816758, 'node_id': 'MDQ6VXNlcjgxNjc1OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/816758?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/alexandergitter', 'html_url': 'https://github.com/alexandergitter', 'followers_url': 'https://api.github.com/users/alexandergitter/followers', 'following_url': 'https://api.github.com/users/alexandergitter/following{/other_user}', 'gists_url': 'https://api.github.com/users/alexandergitter/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/alexandergitter/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/alexandergitter/subscriptions', 'organizations_url': 'https://api.github.com/users/alexandergitter/orgs', 'repos_url': 'https://api.github.com/users/alexandergitter/repos', 'events_url': 'https://api.github.com/users/alexandergitter/events{/privacy}', 'received_events_url': 'https://api.github.com/users/alexandergitter/received_events', 'type': 'User', 'site_admin': False}",2023-09-02T13:26:58Z,2023-09-02T13:26:58Z,NONE,"Thank you for the suggestion! But that doesn't change anything when it comes to the Javascript part - `error` is still just a simple string.
Afaict this is the relevant part in the implementation: https://github.com/rails/rails/blob/v7.0.7.2/activestorage/app/assets/javascripts/activestorage.esm.js#L562, so what gets returned from the backend doesn't really matter.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1703833761/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49104
https://api.github.com/repos/rails/rails/issues/comments/1703834205,https://github.com/rails/rails/issues/49104#issuecomment-1703834205,https://api.github.com/repos/rails/rails/issues/49104,1703834205,IC_kwDNIULOZY5yXQ,"{'login': 'akhilgkrishnan', 'id': 22231095, 'node_id': 'MDQ6VXNlcjIyMjMxMDk1', 'avatar_url': 'https://avatars.githubusercontent.com/u/22231095?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akhilgkrishnan', 'html_url': 'https://github.com/akhilgkrishnan', 'followers_url': 'https://api.github.com/users/akhilgkrishnan/followers', 'following_url': 'https://api.github.com/users/akhilgkrishnan/following{/other_user}', 'gists_url': 'https://api.github.com/users/akhilgkrishnan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akhilgkrishnan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akhilgkrishnan/subscriptions', 'organizations_url': 'https://api.github.com/users/akhilgkrishnan/orgs', 'repos_url': 'https://api.github.com/users/akhilgkrishnan/repos', 'events_url': 'https://api.github.com/users/akhilgkrishnan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akhilgkrishnan/received_events', 'type': 'User', 'site_admin': False}",2023-09-02T13:29:23Z,2023-09-02T17:06:02Z,CONTRIBUTOR,"Yeah, that makes sense. I checked the codebase already. 
IMO, it's not a good idea to respond to an error with a JSON-like structure from a front-end code base.

And this is more just like a feature request.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1703834205/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49104
https://api.github.com/repos/rails/rails/issues/comments/1702485498,https://github.com/rails/rails/issues/49098#issuecomment-1702485498,https://api.github.com/repos/rails/rails/issues/49098,1702485498,IC_kwDNIULOZXnd-g,"{'login': 'akhilgkrishnan', 'id': 22231095, 'node_id': 'MDQ6VXNlcjIyMjMxMDk1', 'avatar_url': 'https://avatars.githubusercontent.com/u/22231095?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akhilgkrishnan', 'html_url': 'https://github.com/akhilgkrishnan', 'followers_url': 'https://api.github.com/users/akhilgkrishnan/followers', 'following_url': 'https://api.github.com/users/akhilgkrishnan/following{/other_user}', 'gists_url': 'https://api.github.com/users/akhilgkrishnan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akhilgkrishnan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akhilgkrishnan/subscriptions', 'organizations_url': 'https://api.github.com/users/akhilgkrishnan/orgs', 'repos_url': 'https://api.github.com/users/akhilgkrishnan/repos', 'events_url': 'https://api.github.com/users/akhilgkrishnan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akhilgkrishnan/received_events', 'type': 'User', 'site_admin': False}",2023-09-01T09:52:33Z,2023-09-01T09:59:34Z,CONTRIBUTOR,"```ruby
# frozen_string_literal: true

require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  gem 'rails', '7.0.5'
  gem 'sqlite3'
  gem 'debug'
  gem 'paper_trail'
end

require 'active_record/railtie'
require 'active_storage/engine'
require 'tmpdir'
require 'minitest/autorun'
require 'paper_trail'

class TestApp < Rails::Application
  # Important configuration
  config.api_only = true

  config.root = __dir__
  config.hosts << 'example.org'
  config.eager_load = false
  secrets.secret_key_base = 'secret_key_base'

  config.logger = Logger.new($stdout)
  Rails.logger = config.logger

  config.active_storage.service = :local
  config.active_storage.service_configurations = {
    local: {
      root: Dir.tmpdir,
      service: 'Disk'
    }
  }
end

db_dir = Dir.mktmpdir('test', Dir.tmpdir)
ENV['DATABASE_URL'] = ""sqlite3:#{db_dir}/db.sqlite3""

Rails.application.initialize!

# Enable PaperTrail
PaperTrail.config.enabled = true
PaperTrail.config.version_limit = 3

require ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s

ActiveRecord::Schema.define do
  CreateActiveStorageTables.new.change

  create_table :users, force: true do |t|
    t.string :name
  end

  create_table :versions do |t|
    t.string   :item_type, null: false
    t.integer  :item_id, null: false
    t.string   :event, null: false
    t.string   :whodunnit
    t.text     :object
    t.datetime :created_at
  end

  add_index :versions, %i[item_type item_id]
end

class User < ActiveRecord::Base
  has_paper_trail
  has_one_attached :profile

  after_update :my_callback

  private
  def my_callback
    Rails.logger.info 'after_update callback triggered'
  end
end

# Create a Minitest test to verify the callback behavior
class UserTest < Minitest::Test
  def setup
    @user = User.create
  end

  def test_after_update_callback
    assert_equal 1, @user.versions.count
    @user.name = ""Akhil""
    @user.profile.attach(io: StringIO.new('Test file content'), filename: 'test.txt')

    @user.save
    assert_equal 2, @user.versions.count
  end
end

```

I tried to reproduce this, and I can confirm that the after_update callback is indeed called both when attaching a file and when saving the model. This behavior is expected because attaching a file to the model instance is considered an update action in ActiveRecord.

Ref: https://github.com/rails/rails/issues/45567","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1702485498/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49098
https://api.github.com/repos/rails/rails/issues/comments/1722730796,https://github.com/rails/rails/issues/49098#issuecomment-1722730796,https://api.github.com/repos/rails/rails/issues/49098,1722730796,IC_kwDNIULOZq7JLA,"{'login': 'natematykiewicz', 'id': 5104186, 'node_id': 'MDQ6VXNlcjUxMDQxODY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5104186?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/natematykiewicz', 'html_url': 'https://github.com/natematykiewicz', 'followers_url': 'https://api.github.com/users/natematykiewicz/followers', 'following_url': 'https://api.github.com/users/natematykiewicz/following{/other_user}', 'gists_url': 'https://api.github.com/users/natematykiewicz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/natematykiewicz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/natematykiewicz/subscriptions', 'organizations_url': 'https://api.github.com/users/natematykiewicz/orgs', 'repos_url': 'https://api.github.com/users/natematykiewicz/repos', 'events_url': 'https://api.github.com/users/natematykiewicz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/natematykiewicz/received_events', 'type': 'User', 'site_admin': False}",2023-09-18T04:16:19Z,2023-09-18T04:16:19Z,CONTRIBUTOR,"Hi! 👋🏻 Author of the referenced issue ([and PR](https://github.com/rails/rails/pull/45579/files)) here.

What you're referring to as a bug ""is not a bug, it's a feature!"".

You said:
> - Upload an attachment to the model and save.
> - Observe that two versions are created in PaperTrail instead of one.


So, there's a lot more to it than this. Really what's happening here is:

1. Insert model record
2. Insert PaperTrail record
3. Insert ActiveStorage::Blob
4. Upload file to ActiveStorage Service (such as S3), using the blob's `key`
5. Enqueue ActiveStorage::AnalyzeJob for the ActiveStorage::Blob
6. Insert ActiveStorage::Attachment to link the ActiveStorage::Blob to your model record
7. ActiveStorage::AnalyzeJob runs at some point in the future, which updates the `metadata` on the ActiveStorage::Blob record
8. ActiveStorage::Blob `touch`es ActiveStorage::Attachment, because the `metadata` field changed
9. ActiveStorage::Attachment `touch`es your model record because it was `touch`ed
10. Another PaperTrail record is inserted, because your record was `touch`ed

Step 8 here is very important to solve a race condition, because if a cache entry of your record created is between steps 6 and 7, without the `touch` on step 8, that cache entry is not invalidated and many of the important analyzer features will be missed in your cache entry until something else updates on your model. This will result in hard to debug caching issues.

I'm not sure what the Rails team wants to do about this issue you've raised, but opting out of this feature _will_ re-introduce a race condition caching bug.

> i.e.: Imagine I have an after_update that runs or schedules a long-running process, this will be triggered twice just because the attachment is touched the record.

One way to mitigate this is to only run your callback if certain fields change (using the `if:` option). Maybe that means `updated_at` alone isn't enough to schedule that long-running process.

Now, I will say, it does seem like a bug that `after_update` callbacks are running. I'd expect `after_touch` to run, but not `after_update`.

The entire reason your model record gets updated _should_ be this line:
https://github.com/rails/rails/blob/a967d355c6fee9ad9b8bd115d43bc8b0fc207e7e/activestorage/app/models/active_storage/attachment.rb#L27

So, why is `after_update` running?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1722730796/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49098
https://api.github.com/repos/rails/rails/issues/comments/1722760614,https://github.com/rails/rails/issues/49098#issuecomment-1722760614,https://api.github.com/repos/rails/rails/issues/49098,1722760614,IC_kwDNIULOZq89pg,"{'login': 'natematykiewicz', 'id': 5104186, 'node_id': 'MDQ6VXNlcjUxMDQxODY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5104186?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/natematykiewicz', 'html_url': 'https://github.com/natematykiewicz', 'followers_url': 'https://api.github.com/users/natematykiewicz/followers', 'following_url': 'https://api.github.com/users/natematykiewicz/following{/other_user}', 'gists_url': 'https://api.github.com/users/natematykiewicz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/natematykiewicz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/natematykiewicz/subscriptions', 'organizations_url': 'https://api.github.com/users/natematykiewicz/orgs', 'repos_url': 'https://api.github.com/users/natematykiewicz/repos', 'events_url': 'https://api.github.com/users/natematykiewicz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/natematykiewicz/received_events', 'type': 'User', 'site_admin': False}",2023-09-18T05:03:20Z,2023-09-18T05:04:46Z,CONTRIBUTOR,"Oh! It's not my PR. My PR is not in Rails 7.0. It'll be in 7.1
https://github.com/rails/rails/blob/v7.0.8/activestorage/app/models/active_storage/blob.rb

I ran this:
```ruby
# frozen_string_literal: true

require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  gem 'rails', '7.0.8'
  gem 'sqlite3'
  gem 'debug'
end

require 'active_record/railtie'
require 'active_storage/engine'
require 'tmpdir'
require 'minitest/autorun'

class TestApp < Rails::Application
  # Important configuration
  config.api_only = true

  config.root = __dir__
  config.hosts << 'example.org'
  config.eager_load = false
  secrets.secret_key_base = 'secret_key_base'

  config.logger = Logger.new($stdout)
  Rails.logger = config.logger

  config.active_storage.service = :local
  config.active_storage.service_configurations = {
    local: {
      root: Dir.tmpdir,
      service: 'Disk'
    }
  }
end

db_dir = Dir.mktmpdir('test', Dir.tmpdir)
ENV['DATABASE_URL'] = ""sqlite3:#{db_dir}/db.sqlite3""

Rails.application.initialize!

require ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s

ActiveRecord::Schema.define do
  CreateActiveStorageTables.new.change

  create_table :users, force: true do |t|
    t.string :name
    t.boolean :update_callback_ran, default: false, null: false
  end
end

class User < ActiveRecord::Base
  has_one_attached :profile

  before_update :my_callback

  private
  def my_callback
    puts caller
    self.update_callback_ran = true
  end
end

# Create a Minitest test to verify the callback behavior
class UserTest < Minitest::Test
  def setup
    @user = User.create!(name: 'Nate')
  end

  def test_after_update_callback
    assert_equal @user.update_callback_ran, false

    @user.profile.attach(io: StringIO.new('Test file content'), filename: 'test.txt')

    assert_equal @user.update_callback_ran, true
  end
end
```

It fails on the last line of the test. My `puts caller` points me to this:
https://github.com/rails/rails/blob/fc734f28e65ef8829a1a939ee6702c1f349a1d5a/activestorage/lib/active_storage/attached/one.rb#L58-L59

This isn't `touch`ing the model. It's setting a couple associations and then saving the record (an `update`).

record.#{attachment_name}=

https://github.com/rails/rails/blob/fc734f28e65ef8829a1a939ee6702c1f349a1d5a/activestorage/lib/active_storage/attached/model.rb#L60-L67

record's `after_save`

https://github.com/rails/rails/blob/fc734f28e65ef8829a1a939ee6702c1f349a1d5a/activestorage/lib/active_storage/attached/model.rb#L75

ActiveStorage::Attached::Changes::CreateOne's `save`

https://github.com/rails/rails/blob/fc734f28e65ef8829a1a939ee6702c1f349a1d5a/activestorage/lib/active_storage/attached/changes/create_one.rb#L32-L35

The 2 associations it sets and saves
https://github.com/rails/rails/blob/fc734f28e65ef8829a1a939ee6702c1f349a1d5a/activestorage/lib/active_storage/attached/model.rb#L70-L71

So the act of inserting the associated records is the ""update"".

Here's a simpler example that also demonstrates the ""update"" run.

```ruby
# frozen_string_literal: true

require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  gem 'rails', '7.0.8'
  gem 'sqlite3'
  gem 'debug'
end

require 'active_record/railtie'
require 'active_storage/engine'
require 'tmpdir'
require 'minitest/autorun'

class TestApp < Rails::Application
  # Important configuration
  config.api_only = true

  config.root = __dir__
  config.hosts << 'example.org'
  config.eager_load = false
  secrets.secret_key_base = 'secret_key_base'

  config.logger = Logger.new($stdout)
  Rails.logger = config.logger

  config.active_storage.service = :local
  config.active_storage.service_configurations = {
    local: {
      root: Dir.tmpdir,
      service: 'Disk'
    }
  }
end

db_dir = Dir.mktmpdir('test', Dir.tmpdir)
ENV['DATABASE_URL'] = ""sqlite3:#{db_dir}/db.sqlite3""

Rails.application.initialize!

require ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s

ActiveRecord::Schema.define do
  CreateActiveStorageTables.new.change

  create_table :users, force: true do |t|
    t.string :name
    t.boolean :update_callback_ran, default: false, null: false
  end

  create_table :things, force: true do |t|
    t.string :title
    t.references :user
  end
end

class Thing < ActiveRecord::Base
  belongs_to :user
end

class User < ActiveRecord::Base
  has_one :thing

  before_update :my_callback

  private
  def my_callback
    puts caller
    self.update_callback_ran = true
  end
end

# Create a Minitest test to verify the callback behavior
class UserTest < Minitest::Test
  def setup
    @user = User.create!(name: 'Nate')
  end

  def test_after_update_callback
    assert_equal @user.update_callback_ran, false

    thing = Thing.new(title: 'Hello', user: @user)
    @user.thing = thing
    @user.save!

    assert_equal @user.update_callback_ran, true
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1722760614/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49098
https://api.github.com/repos/rails/rails/issues/comments/1699529951,https://github.com/rails/rails/issues/49084#issuecomment-1699529951,https://api.github.com/repos/rails/rails/issues/49084,1699529951,IC_kwDNIULOZUzE3w,"{'login': 'akhilgkrishnan', 'id': 22231095, 'node_id': 'MDQ6VXNlcjIyMjMxMDk1', 'avatar_url': 'https://avatars.githubusercontent.com/u/22231095?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akhilgkrishnan', 'html_url': 'https://github.com/akhilgkrishnan', 'followers_url': 'https://api.github.com/users/akhilgkrishnan/followers', 'following_url': 'https://api.github.com/users/akhilgkrishnan/following{/other_user}', 'gists_url': 'https://api.github.com/users/akhilgkrishnan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akhilgkrishnan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akhilgkrishnan/subscriptions', 'organizations_url': 'https://api.github.com/users/akhilgkrishnan/orgs', 'repos_url': 'https://api.github.com/users/akhilgkrishnan/repos', 'events_url': 'https://api.github.com/users/akhilgkrishnan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akhilgkrishnan/received_events', 'type': 'User', 'site_admin': False}",2023-08-30T16:52:31Z,2023-08-30T17:02:38Z,CONTRIBUTOR,"I tried to reproduce this in older rails versions 6.0, 6.1, main and also got the same issue.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1699529951/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49084
https://api.github.com/repos/rails/rails/issues/comments/1700899000,https://github.com/rails/rails/issues/49084#issuecomment-1700899000,https://api.github.com/repos/rails/rails/issues/49084,1700899000,IC_kwDNIULOZWGouA,"{'login': 'kshnurov', 'id': 498185, 'node_id': 'MDQ6VXNlcjQ5ODE4NQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/498185?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kshnurov', 'html_url': 'https://github.com/kshnurov', 'followers_url': 'https://api.github.com/users/kshnurov/followers', 'following_url': 'https://api.github.com/users/kshnurov/following{/other_user}', 'gists_url': 'https://api.github.com/users/kshnurov/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kshnurov/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kshnurov/subscriptions', 'organizations_url': 'https://api.github.com/users/kshnurov/orgs', 'repos_url': 'https://api.github.com/users/kshnurov/repos', 'events_url': 'https://api.github.com/users/kshnurov/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kshnurov/received_events', 'type': 'User', 'site_admin': False}",2023-08-31T11:55:53Z,2023-08-31T11:59:28Z,NONE,"> I tried to reproduce this in older rails versions 6.0, 6.1, main and also got the same issue.

Indeed. Probably didn't run into it before cause the real code had `.preload(:announcement_references, :companies, :companies => :categories)`, which works.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1700899000/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49084
https://api.github.com/repos/rails/rails/issues/comments/1711357458,https://github.com/rails/rails/issues/49084#issuecomment-1711357458,https://api.github.com/repos/rails/rails/issues/49084,1711357458,IC_kwDNIULOZgE-Eg,"{'login': 'inkstak', 'id': 474554, 'node_id': 'MDQ6VXNlcjQ3NDU1NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/474554?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/inkstak', 'html_url': 'https://github.com/inkstak', 'followers_url': 'https://api.github.com/users/inkstak/followers', 'following_url': 'https://api.github.com/users/inkstak/following{/other_user}', 'gists_url': 'https://api.github.com/users/inkstak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/inkstak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/inkstak/subscriptions', 'organizations_url': 'https://api.github.com/users/inkstak/orgs', 'repos_url': 'https://api.github.com/users/inkstak/repos', 'events_url': 'https://api.github.com/users/inkstak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/inkstak/received_events', 'type': 'User', 'site_admin': False}",2023-09-08T09:22:55Z,2023-09-08T09:22:55Z,NONE,I opened a similar issue #49197 that may or may not be related.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1711357458/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49084
https://api.github.com/repos/rails/rails/issues/comments/1702877530,https://github.com/rails/rails/pull/49079#issuecomment-1702877530,https://api.github.com/repos/rails/rails/issues/49079,1702877530,IC_kwDNIULOZX_ZWg,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-09-01T14:49:47Z,2023-09-01T14:49:47Z,MEMBER,Can you add `Fix #49009` to the PR description so that it links to the issue?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1702877530/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49079
https://api.github.com/repos/rails/rails/issues/comments/1702891837,https://github.com/rails/rails/pull/49079#issuecomment-1702891837,https://api.github.com/repos/rails/rails/issues/49079,1702891837,IC_kwDNIULOZYARPQ,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-09-01T14:58:27Z,2023-09-01T14:58:27Z,CONTRIBUTOR,Done!,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1702891837/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49079
https://api.github.com/repos/rails/rails/issues/comments/1695835896,https://github.com/rails/rails/issues/49052#issuecomment-1695835896,https://api.github.com/repos/rails/rails/issues/49052,1695835896,IC_kwDNIULOZRRm-A,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-08-28T14:48:24Z,2023-08-28T14:48:24Z,MEMBER,Hi @pospieszynski can you please provide a demo application that reproduces the behavior you're seeing? Thanks!,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1695835896/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49052
https://api.github.com/repos/rails/rails/issues/comments/1696198479,https://github.com/rails/rails/issues/49052#issuecomment-1696198479,https://api.github.com/repos/rails/rails/issues/49052,1696198479,IC_kwDNIULOZRnvTw,"{'login': 'pospieszynski', 'id': 15077823, 'node_id': 'MDQ6VXNlcjE1MDc3ODIz', 'avatar_url': 'https://avatars.githubusercontent.com/u/15077823?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/pospieszynski', 'html_url': 'https://github.com/pospieszynski', 'followers_url': 'https://api.github.com/users/pospieszynski/followers', 'following_url': 'https://api.github.com/users/pospieszynski/following{/other_user}', 'gists_url': 'https://api.github.com/users/pospieszynski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/pospieszynski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/pospieszynski/subscriptions', 'organizations_url': 'https://api.github.com/users/pospieszynski/orgs', 'repos_url': 'https://api.github.com/users/pospieszynski/repos', 'events_url': 'https://api.github.com/users/pospieszynski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/pospieszynski/received_events', 'type': 'User', 'site_admin': False}",2023-08-28T18:48:28Z,2023-08-28T18:48:28Z,NONE,"Hi @eileencodes thanks for the reply, 

Sure here is the [sample app](https://github.com/pospieszynski/testapp) with the cats & dogs shards. I added a simple `NotificationsChannel` channel and a test (`notifications_channel_test.rb`) just to trigger the ActionCable logic. When triggered, it prints the current_shard in Connection class which is "":default""

I don't think the `shard_resolver` is even invoked in specs but when it is used with a frontend that uses websockets connection it is called although its return value is apparently not used.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1696198479/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49052
https://api.github.com/repos/rails/rails/issues/comments/1697405223,https://github.com/rails/rails/issues/49052#issuecomment-1697405223,https://api.github.com/repos/rails/rails/issues/49052,1697405223,IC_kwDNIULOZSxZJw,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-08-29T13:03:12Z,2023-08-29T13:03:12Z,MEMBER,"> I don't think the shard_resolver is even invoked in specs but when it is used with a frontend that uses websockets connection it is called although its return value is apparently not used.

It should be if you're using an integration test and the resolver is defined in application.rb or environments/test.rb. That will include the middleware because it's a full request.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1697405223/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49052
https://api.github.com/repos/rails/rails/issues/comments/1697886980,https://github.com/rails/rails/issues/49052#issuecomment-1697886980,https://api.github.com/repos/rails/rails/issues/49052,1697886980,IC_kwDNIULOZTOzBA,"{'login': 'pospieszynski', 'id': 15077823, 'node_id': 'MDQ6VXNlcjE1MDc3ODIz', 'avatar_url': 'https://avatars.githubusercontent.com/u/15077823?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/pospieszynski', 'html_url': 'https://github.com/pospieszynski', 'followers_url': 'https://api.github.com/users/pospieszynski/followers', 'following_url': 'https://api.github.com/users/pospieszynski/following{/other_user}', 'gists_url': 'https://api.github.com/users/pospieszynski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/pospieszynski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/pospieszynski/subscriptions', 'organizations_url': 'https://api.github.com/users/pospieszynski/orgs', 'repos_url': 'https://api.github.com/users/pospieszynski/repos', 'events_url': 'https://api.github.com/users/pospieszynski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/pospieszynski/received_events', 'type': 'User', 'site_admin': False}",2023-08-29T17:50:12Z,2023-08-29T17:50:12Z,NONE,"I see @eileencodes, were you able to verify it's a bug?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1697886980/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49052
https://api.github.com/repos/rails/rails/issues/comments/1697979071,https://github.com/rails/rails/issues/49052#issuecomment-1697979071,https://api.github.com/repos/rails/rails/issues/49052,1697979071,IC_kwDNIULOZTUavw,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-08-29T19:02:46Z,2023-08-29T19:02:46Z,MEMBER,"No, I haven't had time to look at this yet.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1697979071/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49052
https://api.github.com/repos/rails/rails/issues/comments/1703265044,https://github.com/rails/rails/issues/49052#issuecomment-1703265044,https://api.github.com/repos/rails/rails/issues/49052,1703265044,IC_kwDNIULOZYXDFA,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-09-01T20:04:59Z,2023-09-01T20:04:59Z,MEMBER,"I took a look at this and am kind of confused. I don't see websockets being used at all in a request. And since the test isn't running a request I don't think the middleware is installed. So this doesn't seem like it's reproducing the issue as described.

Additionally, the connections aren't quite set up correctly. ActiveRecord base must have a default connection, so it's going to use `cats`. If ActiveRecord::Base should have a different schema than the AnimalsRecord then there should be an additional connection defined first and connected in `ApplicationRecord`. Once you do that the shards need their own migration directory since ApplicaitonRecord will use db/migrate. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1703265044/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49052
https://api.github.com/repos/rails/rails/issues/comments/1703283455,https://github.com/rails/rails/issues/49052#issuecomment-1703283455,https://api.github.com/repos/rails/rails/issues/49052,1703283455,IC_kwDNIULOZYYK_w,"{'login': 'pospieszynski', 'id': 15077823, 'node_id': 'MDQ6VXNlcjE1MDc3ODIz', 'avatar_url': 'https://avatars.githubusercontent.com/u/15077823?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/pospieszynski', 'html_url': 'https://github.com/pospieszynski', 'followers_url': 'https://api.github.com/users/pospieszynski/followers', 'following_url': 'https://api.github.com/users/pospieszynski/following{/other_user}', 'gists_url': 'https://api.github.com/users/pospieszynski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/pospieszynski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/pospieszynski/subscriptions', 'organizations_url': 'https://api.github.com/users/pospieszynski/orgs', 'repos_url': 'https://api.github.com/users/pospieszynski/repos', 'events_url': 'https://api.github.com/users/pospieszynski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/pospieszynski/received_events', 'type': 'User', 'site_admin': False}",2023-09-01T20:25:10Z,2023-09-01T20:25:10Z,NONE,"Hello @eileencodes , thanks for the reply

> And since the test isn't running a request I don't think the middleware is installed

Can you suggest me some resources showing how to properly test the `ActionCable` channel so that It runs the whole ws request? I was looking into [Rails guides](https://guides.rubyonrails.org/testing.html#testing-action-cable) and the way they describe tests does not seem to run the whole request stack, just the channel functions so it was difficult to reproduce in specs. The way I came across that was when I was using AC with my frontend app so it was more of a real life scenario.

> If ActiveRecord::Base should have a different schema than the AnimalsRecord then there should be an additional connection defined first and connected in ApplicationRecord.

I'm not sure I understood this part. This setup was expected to have the same schemas for cats and dogs, just use separate db as shards when connecting via `AnimalsRecord`.


","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1703283455/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49052
https://api.github.com/repos/rails/rails/issues/comments/1706650187,https://github.com/rails/rails/issues/49052#issuecomment-1706650187,https://api.github.com/repos/rails/rails/issues/49052,1706650187,IC_kwDNIULOZblqSw,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-09-05T13:42:43Z,2023-09-05T13:42:43Z,MEMBER,"> Can you suggest me some resources showing how to properly test the ActionCable channel so that It runs the whole ws request?

I honestly have no idea, I've never actually used Action Cable. I don't need a test though, if it works in the rails server I can debug from there too. I just don't see any logs for Action Cable with the server started either.

> I'm not sure I understood this part. This setup was expected to have the same schemas for cats and dogs, just use separate db as shards when connecting via AnimalsRecord.

`ActiveRecord::Base` is required to have a connection and since there isn't a `connects_to` in `ApplicationRecord`, it will use cats because it takes the first config. The connection will be established here: https://github.com/rails/rails/blob/main/activerecord/lib/active_record/railtie.rb#L304. So if `cats` and `dogs` are shards, there needs to be another connection that's defined for `ActiveRecord::Base`. This is usually the connection used to route to shards.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1706650187/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49052
https://api.github.com/repos/rails/rails/issues/comments/1736474970,https://github.com/rails/rails/pull/49050#issuecomment-1736474970,https://api.github.com/repos/rails/rails/issues/49050,1736474970,IC_kwDNIULOZ4CBWg,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-09-27T00:24:33Z,2023-09-27T00:24:33Z,MEMBER,"The description here says a lot about what the previous change did and what broke, but I've struggled to follow the reasoning of the change. Is the following accurate?

* The value supplied to (the block returned by) `proc_for_binds` has already been typecast to database format
* `with_cast_value` expects its value to be in application format (the ""rich type"" actually matching the Type)
* This difference is hidden for many default types (integer, string, etc) because the two formats are equivalent
* We need a bind attribute that knows it has already been cast, so it can still say which attribute name it belongs to, but will make no further conversion when asked for the DB value

Does `FromDatabase` do that?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1736474970/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49050
https://api.github.com/repos/rails/rails/issues/comments/1694545591,https://github.com/rails/rails/pull/49049#issuecomment-1694545591,https://api.github.com/repos/rails/rails/issues/49049,1694545591,IC_kwDNIULOZQC2tw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-08-27T01:55:26Z,2023-08-27T01:55:26Z,MEMBER,There's an open issue to fix the `sqlite` errors #49048 if that's what made you push the revert 🙂 ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1694545591/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49049
https://api.github.com/repos/rails/rails/issues/comments/1694546006,https://github.com/rails/rails/pull/49049#issuecomment-1694546006,https://api.github.com/repos/rails/rails/issues/49049,1694546006,IC_kwDNIULOZQC4Vg,"{'login': 'josh-m-sharpe', 'id': 39473, 'node_id': 'MDQ6VXNlcjM5NDcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/39473?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/josh-m-sharpe', 'html_url': 'https://github.com/josh-m-sharpe', 'followers_url': 'https://api.github.com/users/josh-m-sharpe/followers', 'following_url': 'https://api.github.com/users/josh-m-sharpe/following{/other_user}', 'gists_url': 'https://api.github.com/users/josh-m-sharpe/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/josh-m-sharpe/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/josh-m-sharpe/subscriptions', 'organizations_url': 'https://api.github.com/users/josh-m-sharpe/orgs', 'repos_url': 'https://api.github.com/users/josh-m-sharpe/repos', 'events_url': 'https://api.github.com/users/josh-m-sharpe/events{/privacy}', 'received_events_url': 'https://api.github.com/users/josh-m-sharpe/received_events', 'type': 'User', 'site_admin': False}",2023-08-27T01:58:21Z,2023-08-27T01:58:21Z,CONTRIBUTOR,@skipkayhil yep.  just undid that.  seems clean minus that one issue.  thanks!,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1694546006/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49049
https://api.github.com/repos/rails/rails/issues/comments/1701685684,https://github.com/rails/rails/pull/49049#issuecomment-1701685684,https://api.github.com/repos/rails/rails/issues/49049,1701685684,IC_kwDNIULOZW2ptA,"{'login': 'josh-m-sharpe', 'id': 39473, 'node_id': 'MDQ6VXNlcjM5NDcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/39473?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/josh-m-sharpe', 'html_url': 'https://github.com/josh-m-sharpe', 'followers_url': 'https://api.github.com/users/josh-m-sharpe/followers', 'following_url': 'https://api.github.com/users/josh-m-sharpe/following{/other_user}', 'gists_url': 'https://api.github.com/users/josh-m-sharpe/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/josh-m-sharpe/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/josh-m-sharpe/subscriptions', 'organizations_url': 'https://api.github.com/users/josh-m-sharpe/orgs', 'repos_url': 'https://api.github.com/users/josh-m-sharpe/repos', 'events_url': 'https://api.github.com/users/josh-m-sharpe/events{/privacy}', 'received_events_url': 'https://api.github.com/users/josh-m-sharpe/received_events', 'type': 'User', 'site_admin': False}",2023-08-31T19:44:58Z,2023-08-31T19:44:58Z,CONTRIBUTOR,@skipkayhil 👋 this PR is finally green - thought nothing really changed on my end.  think it has just been other tests failing. are there any other next steps here?  thanks!,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1701685684/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49049
https://api.github.com/repos/rails/rails/issues/comments/1718227416,https://github.com/rails/rails/pull/49049#issuecomment-1718227416,https://api.github.com/repos/rails/rails/issues/49049,1718227416,IC_kwDNIULOZmoR2A,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-09-13T19:51:10Z,2023-09-13T19:51:10Z,MEMBER,Ref #49259,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1718227416/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49049
https://api.github.com/repos/rails/rails/issues/comments/1694252302,https://github.com/rails/rails/pull/49036#issuecomment-1694252302,https://api.github.com/repos/rails/rails/issues/49036,1694252302,IC_kwDNIULOZPw9Dg,"{'login': 'brunoprietog', 'id': 46098928, 'node_id': 'MDQ6VXNlcjQ2MDk4OTI4', 'avatar_url': 'https://avatars.githubusercontent.com/u/46098928?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/brunoprietog', 'html_url': 'https://github.com/brunoprietog', 'followers_url': 'https://api.github.com/users/brunoprietog/followers', 'following_url': 'https://api.github.com/users/brunoprietog/following{/other_user}', 'gists_url': 'https://api.github.com/users/brunoprietog/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/brunoprietog/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/brunoprietog/subscriptions', 'organizations_url': 'https://api.github.com/users/brunoprietog/orgs', 'repos_url': 'https://api.github.com/users/brunoprietog/repos', 'events_url': 'https://api.github.com/users/brunoprietog/events{/privacy}', 'received_events_url': 'https://api.github.com/users/brunoprietog/received_events', 'type': 'User', 'site_admin': False}",2023-08-26T10:27:33Z,2023-08-26T10:27:33Z,CONTRIBUTOR,"Interesting! What do you think about adding an argument like column to the has_rich_text class method? Something like `has_rich_text :content, column: true` or `has_rich_text :content, column: :rich_text_content` instehad? I feel it's clearer instead of creating another class method for something so similar.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1694252302/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49036
https://api.github.com/repos/rails/rails/issues/comments/1694592922,https://github.com/rails/rails/pull/49036#issuecomment-1694592922,https://api.github.com/repos/rails/rails/issues/49036,1694592922,IC_kwDNIULOZQFvmg,"{'login': 'brunoenten', 'id': 722037, 'node_id': 'MDQ6VXNlcjcyMjAzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/722037?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/brunoenten', 'html_url': 'https://github.com/brunoenten', 'followers_url': 'https://api.github.com/users/brunoenten/followers', 'following_url': 'https://api.github.com/users/brunoenten/following{/other_user}', 'gists_url': 'https://api.github.com/users/brunoenten/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/brunoenten/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/brunoenten/subscriptions', 'organizations_url': 'https://api.github.com/users/brunoenten/orgs', 'repos_url': 'https://api.github.com/users/brunoenten/repos', 'events_url': 'https://api.github.com/users/brunoenten/events{/privacy}', 'received_events_url': 'https://api.github.com/users/brunoenten/received_events', 'type': 'User', 'site_admin': False}",2023-08-27T07:21:43Z,2023-08-27T07:21:43Z,NONE,"That was my first approach but I couldn't immediately think of a way to integrate that cleanly in the existing code.
I'm going to give it more thought. I agree that would be a much better API.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1694592922/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49036
https://api.github.com/repos/rails/rails/issues/comments/1694629198,https://github.com/rails/rails/pull/49036#issuecomment-1694629198,https://api.github.com/repos/rails/rails/issues/49036,1694629198,IC_kwDNIULOZQH9Tg,"{'login': 'brunoenten', 'id': 722037, 'node_id': 'MDQ6VXNlcjcyMjAzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/722037?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/brunoenten', 'html_url': 'https://github.com/brunoenten', 'followers_url': 'https://api.github.com/users/brunoenten/followers', 'following_url': 'https://api.github.com/users/brunoenten/following{/other_user}', 'gists_url': 'https://api.github.com/users/brunoenten/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/brunoenten/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/brunoenten/subscriptions', 'organizations_url': 'https://api.github.com/users/brunoenten/orgs', 'repos_url': 'https://api.github.com/users/brunoenten/repos', 'events_url': 'https://api.github.com/users/brunoenten/events{/privacy}', 'received_events_url': 'https://api.github.com/users/brunoenten/received_events', 'type': 'User', 'site_admin': False}",2023-08-27T10:25:16Z,2023-08-27T10:25:16Z,NONE,Ok I think I've managed to do something relatively clean. What do you think?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1694629198/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49036
https://api.github.com/repos/rails/rails/issues/comments/1694663718,https://github.com/rails/rails/pull/49036#issuecomment-1694663718,https://api.github.com/repos/rails/rails/issues/49036,1694663718,IC_kwDNIULOZQKEJg,"{'login': 'brunoenten', 'id': 722037, 'node_id': 'MDQ6VXNlcjcyMjAzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/722037?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/brunoenten', 'html_url': 'https://github.com/brunoenten', 'followers_url': 'https://api.github.com/users/brunoenten/followers', 'following_url': 'https://api.github.com/users/brunoenten/following{/other_user}', 'gists_url': 'https://api.github.com/users/brunoenten/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/brunoenten/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/brunoenten/subscriptions', 'organizations_url': 'https://api.github.com/users/brunoenten/orgs', 'repos_url': 'https://api.github.com/users/brunoenten/repos', 'events_url': 'https://api.github.com/users/brunoenten/events{/privacy}', 'received_events_url': 'https://api.github.com/users/brunoenten/received_events', 'type': 'User', 'site_admin': False}",2023-08-27T13:02:59Z,2023-08-27T13:02:59Z,NONE,"Thanks for the review. I've applied all your suggestions.

Regarding encryption, generator and installation, I think it would be reasonable to iterate on this functioning version.
I'd also love to hear from core team before we go further.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1694663718/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,49036
https://api.github.com/repos/rails/rails/issues/comments/1694719352,https://github.com/rails/rails/pull/48993#issuecomment-1694719352,https://api.github.com/repos/rails/rails/issues/48993,1694719352,IC_kwDNIULOZQNdeA,"{'login': 'f3ndot', 'id': 740289, 'node_id': 'MDQ6VXNlcjc0MDI4OQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/740289?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/f3ndot', 'html_url': 'https://github.com/f3ndot', 'followers_url': 'https://api.github.com/users/f3ndot/followers', 'following_url': 'https://api.github.com/users/f3ndot/following{/other_user}', 'gists_url': 'https://api.github.com/users/f3ndot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/f3ndot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/f3ndot/subscriptions', 'organizations_url': 'https://api.github.com/users/f3ndot/orgs', 'repos_url': 'https://api.github.com/users/f3ndot/repos', 'events_url': 'https://api.github.com/users/f3ndot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/f3ndot/received_events', 'type': 'User', 'site_admin': False}",2023-08-27T17:21:36Z,2023-08-27T17:29:57Z,CONTRIBUTOR,"@Flixt I think you raise a good point. Migrating from one hash algorithm to another is fraught with security pitfalls and can drastically reduce the overall difficulty to crack passwords, so it's important to get right. To that end, either Rails endeavours to make that decision on behalf of the developer, or the documentation provides guidance that mirrors [OWASP's Password Storage Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#upgrading-legacy-hashes) or security industry's best practices.

I may get this slightly wrong, but generally the (most accepted?) approach is:

1. Create a ""pepper"", a decently long global constant secret value **kept outside of the DB layer** (placing in `secrets.yml` can be good enough). The point is SQL Injections or DB compromise should not be able to obtain the secret.
2. Take all the rows of the old-hashed attribute (e.g. `sha1`) and layer/wrap in the new algorithm (e.g. `bcrypt`), suffixing the pepper. e.g. `bcrypt(sha1($password).$pepper)` or more accurately `bcrypt($existing_attr_value.$pepper)`.
3. Business logic should first try to authenticate the user by comparing against just the new hash and then fallback to try the layered hash (e.g. try `bcrypt($password)` first then try `bcrypt(sha1($password).$pepper)` if first failed).
4. When a user signs in successfully on the fallback, replace the combined/layered hash with just the new algorithm's hash (e.g. `bcrypt($password)`).

The goal of the pepper is to prevent ""[password shucking](https://www.youtube.com/watch?v=OQD3qDYMyYQ)"" and is good defense in depth for very little effort.

Note that is just but one approach with pros and cons. Other approaches include forcefully resetting all passwords for users, requiring them to change or re-input their existing password to forcefully update all rows, or maintaining incremental hash changes but not bothering with layering. I'm sure there are also other approaches to peppering that isn't a simple suffixing, such as HMAC with the pepper as the key/secret.

I don't have a hard preference, but I think that password hash migration can be a deepish topic with different approaches and trying to shoehorn that into Rails may be too cumbersome. I lean towards documentation as an approach.

I agree whatever the outcome, be it providing migration tooling, documentation, or nothing at all it should take place outside this PR.

**EDIT:** I should quickly point out that while most discussions on updating password hashes are centred around migrating off of legacy or insecure hashing algos (e.g. `md5` or `sha1`), their approaches and strategies can apply to migrating between two generally accepted and safe password hashing algos (e.g. `bcrypt` to `argon2id` and vice-versa). Though that may tip the scales on _which_ acceptable migration approach is used, depending on pros/cons.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1694719352/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48993
https://api.github.com/repos/rails/rails/issues/comments/1695312275,https://github.com/rails/rails/pull/48993#issuecomment-1695312275,https://api.github.com/repos/rails/rails/issues/48993,1695312275,IC_kwDNIULOZQxpkw,"{'login': 'Flixt', 'id': 1724355, 'node_id': 'MDQ6VXNlcjE3MjQzNTU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1724355?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Flixt', 'html_url': 'https://github.com/Flixt', 'followers_url': 'https://api.github.com/users/Flixt/followers', 'following_url': 'https://api.github.com/users/Flixt/following{/other_user}', 'gists_url': 'https://api.github.com/users/Flixt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Flixt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Flixt/subscriptions', 'organizations_url': 'https://api.github.com/users/Flixt/orgs', 'repos_url': 'https://api.github.com/users/Flixt/repos', 'events_url': 'https://api.github.com/users/Flixt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Flixt/received_events', 'type': 'User', 'site_admin': False}",2023-08-28T09:00:56Z,2023-08-28T09:00:56Z,CONTRIBUTOR,"I agree migrating from one password hashing algorithm to another can be cumbersome and contain security relevant pitfalls, but I also tend to say that this is exactly something Rails excels at. Making hard stuff less hard :) .. anyway.. I think we should hear some more pros/cons and then decide wether it is worth it to implement tooling around that problem in a separate PR.

I personally think that migrating password hashing algorithms is not something that is done every day / very often and that it is not worth it to maintain code for tooling around it to automate the process. We can just describe the process that is needed and link to other sources with correct approaches to the topic.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1695312275/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48993
https://api.github.com/repos/rails/rails/issues/comments/1685203599,https://github.com/rails/rails/pull/48986#issuecomment-1685203599,https://api.github.com/repos/rails/rails/issues/48986,1685203599,IC_kwDNIULOZHIqjw,"{'login': 'joshuay03', 'id': 54629302, 'node_id': 'MDQ6VXNlcjU0NjI5MzAy', 'avatar_url': 'https://avatars.githubusercontent.com/u/54629302?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joshuay03', 'html_url': 'https://github.com/joshuay03', 'followers_url': 'https://api.github.com/users/joshuay03/followers', 'following_url': 'https://api.github.com/users/joshuay03/following{/other_user}', 'gists_url': 'https://api.github.com/users/joshuay03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joshuay03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joshuay03/subscriptions', 'organizations_url': 'https://api.github.com/users/joshuay03/orgs', 'repos_url': 'https://api.github.com/users/joshuay03/repos', 'events_url': 'https://api.github.com/users/joshuay03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joshuay03/received_events', 'type': 'User', 'site_admin': False}",2023-08-20T06:51:32Z,2023-08-25T08:22:49Z,CONTRIBUTOR,"Looking into 2 failing tests...

The [first failure](https://buildkite.com/rails/rails/builds/98886#018a11ac-7aa0-4099-a46d-0610fe96f0c7/1075-1086) is a bit of an edge-case, and seems to have been introduced in https://github.com/rails/rails/pull/36671. Here's the test:
https://github.com/rails/rails/blob/5e2d79b5cc71ceedd6b3821cf868583256629211/activerecord/test/cases/autosave_association_test.rb#L476-L488

I don't see how we can allow for the changes in this PR and also this case.

**Status:** Unresolved ❌

<hr>

The assertion for the [second failure](https://buildkite.com/rails/rails/builds/98886#018a11ac-7aa0-4099-a46d-0610fe96f0c7/1075-1096) makes sense to me. Here's the test:
https://github.com/rails/rails/blob/5e2d79b5cc71ceedd6b3821cf868583256629211/activerecord/test/cases/autosave_association_test.rb#L2121-L2126

Here's the association in question:
~https://github.com/rails/rails/blob/20af938f397454c809cd60f37de35c242c271290/activerecord/test/models/pirate.rb#L7~

Seeing as the child isn't a new record, it seems like we shouldn't be validating this according to the docs for `has_and_belongs_to_many`, still looking into why this broke:
~https://github.com/rails/rails/blob/153eae8995c2de3d1bafc0fb13ae5a3250703a3d/activerecord/lib/active_record/associations.rb#L2031-L2033~

Ah, I missed some logic for handling new records when I removed the dependance on `#associated_records_to_validate_or_save `. Now fixed in [this commit](https://github.com/rails/rails/compare/bf7f520cbe2775cad05b106e83441b93f61e5c93..4d02a909c2b41930d761a6245fffaa3c94069a68).

I've also put back the condition for custom validation context which should override the new record check.

**Status:** Resolved ✅","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1685203599/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48986
https://api.github.com/repos/rails/rails/issues/comments/1690870137,https://github.com/rails/rails/issues/48968#issuecomment-1690870137,https://api.github.com/repos/rails/rails/issues/48968,1690870137,IC_kwDNIULOZMiheQ,"{'login': 'Jay0921', 'id': 12777550, 'node_id': 'MDQ6VXNlcjEyNzc3NTUw', 'avatar_url': 'https://avatars.githubusercontent.com/u/12777550?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Jay0921', 'html_url': 'https://github.com/Jay0921', 'followers_url': 'https://api.github.com/users/Jay0921/followers', 'following_url': 'https://api.github.com/users/Jay0921/following{/other_user}', 'gists_url': 'https://api.github.com/users/Jay0921/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Jay0921/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Jay0921/subscriptions', 'organizations_url': 'https://api.github.com/users/Jay0921/orgs', 'repos_url': 'https://api.github.com/users/Jay0921/repos', 'events_url': 'https://api.github.com/users/Jay0921/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Jay0921/received_events', 'type': 'User', 'site_admin': False}",2023-08-24T01:52:41Z,2023-08-24T01:52:41Z,NONE,"@sergioisidoro For a starter, I've created a simple test for your case, and everything looks good to me so far. Do you have more details about the `InitializeTodo` service that I should be aware of?

```
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", ""7.0.4""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""

ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")

ActiveRecord::Schema.define do
  create_table :tasks, force: true do |t|
  end

  create_table :things_todos, force: true do |t|
    t.references :task, null: false, foreign_key: false
  end
end

class Task < ActiveRecord::Base
  has_many :things_todos, dependent: :destroy

  after_create :init_things_todo

  def init_things_todo
    3.times { things_todos.create! }
  end
end

class ThingsTodo < ActiveRecord::Base
  belongs_to :task
end

class BugTest < Minitest::Test
  def test_dependent_destroy
    task = Task.create!

    assert_equal 1, Task.count
    assert_equal 3, task.things_todos.count
    assert_equal 3, ThingsTodo.count

    task.destroy!
    assert_equal 0, ThingsTodo.count
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1690870137/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48968
https://api.github.com/repos/rails/rails/issues/comments/1691528610,https://github.com/rails/rails/issues/48968#issuecomment-1691528610,https://api.github.com/repos/rails/rails/issues/48968,1691528610,IC_kwDNIULOZNKtog,"{'login': 'sergioisidoro', 'id': 5014629, 'node_id': 'MDQ6VXNlcjUwMTQ2Mjk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5014629?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sergioisidoro', 'html_url': 'https://github.com/sergioisidoro', 'followers_url': 'https://api.github.com/users/sergioisidoro/followers', 'following_url': 'https://api.github.com/users/sergioisidoro/following{/other_user}', 'gists_url': 'https://api.github.com/users/sergioisidoro/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sergioisidoro/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sergioisidoro/subscriptions', 'organizations_url': 'https://api.github.com/users/sergioisidoro/orgs', 'repos_url': 'https://api.github.com/users/sergioisidoro/repos', 'events_url': 'https://api.github.com/users/sergioisidoro/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sergioisidoro/received_events', 'type': 'User', 'site_admin': False}",2023-08-24T11:48:37Z,2023-08-24T11:53:58Z,CONTRIBUTOR,"First of all sorry my example was more of pseudo code, not the actual code. I provided the code to illustrate my situation, and ended up making a few mistakes.

This is a better assertion.

```.rb
irb(main):070:0> task = Task.create!
=> #<Task:0x0000ffff8ac48e90 id: 6>
irb(main):071:0> task.id
=> 6
irb(main):072:0> task.things_todos
=> []
irb(main):073:0> ThingsTodo.create(task_id: 6)
=> #<ThingsTodo:0x0000ffff882b2e50 id: 6, task_id: 6>
irb(main):074:0> task.destroy
=> #<Task:0x0000ffff8ac48e90 id: 6>
irb(main):075:0> ThingsTodo.where(task_id: 6)
=> [#<ThingsTodo:0x0000ffff882bb690 id: 6, task_id: 6>]
irb(main):076:0> ThingsTodo.where(task_id: 6).first.task
=> nil
```

Note that this only works if `things_todos` is accessed just before the call to create the related objects is executed. If we do not call `things_todos` the `ThingsTodo` will not be cached, and so when we destroy the object a new query will be made, and correctly delete the associated stuff .

A test case would be:
```.rb
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", ""7.0.4""
  gem ""sqlite3""
  gem ""minitest""
  gem ""timeout"", ""0.4.0""
end

require ""active_record""
require ""minitest/autorun""

ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")

ActiveRecord::Schema.define do
  create_table :tasks, force: true do |t|
  end

  create_table :things_todos, force: true do |t|
    t.references :task, null: false, foreign_key: false
  end
end

class Task < ActiveRecord::Base
  has_many :things_todos, dependent: :destroy 

  after_create :init_things_todo

  def init_things_todo
    # Caches things todo in the object. <<<<<<<<<--------------------------------------------------------------
    puts self.things_todos
    3.times { ThingsTodo.create(task_id: self.id) }
  end
end

class ThingsTodo < ActiveRecord::Base
  belongs_to :task
end

class BugTest < Minitest::Test
  def test_dependent_destroy
    task = Task.create!
    assert_equal 3, ThingsTodo.count

    task.destroy!
    assert_equal 0, ThingsTodo.count
  end
end
```
Is resulting me in 
```
Failure:                                 
BugTest#test_dependent_destroy [(irb):167]:
Expected: 0
  Actual: 3
```

**TLDR - We need to load `things_todos` in the object cache by accessing it, before destroying for the situation to appear**","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1691528610/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48968
https://api.github.com/repos/rails/rails/issues/comments/1689311400,https://github.com/rails/rails/pull/48957#issuecomment-1689311400,https://api.github.com/repos/rails/rails/issues/48957,1689311400,IC_kwDNIULOZLDYqA,"{'login': 'cmaruz', 'id': 1709692, 'node_id': 'MDQ6VXNlcjE3MDk2OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1709692?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/cmaruz', 'html_url': 'https://github.com/cmaruz', 'followers_url': 'https://api.github.com/users/cmaruz/followers', 'following_url': 'https://api.github.com/users/cmaruz/following{/other_user}', 'gists_url': 'https://api.github.com/users/cmaruz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/cmaruz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/cmaruz/subscriptions', 'organizations_url': 'https://api.github.com/users/cmaruz/orgs', 'repos_url': 'https://api.github.com/users/cmaruz/repos', 'events_url': 'https://api.github.com/users/cmaruz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/cmaruz/received_events', 'type': 'User', 'site_admin': False}",2023-08-23T05:38:39Z,2023-08-23T05:38:39Z,CONTRIBUTOR,"cc: @tenderlove, @byroot ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1689311400/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48957
https://api.github.com/repos/rails/rails/issues/comments/1736593294,https://github.com/rails/rails/pull/48957#issuecomment-1736593294,https://api.github.com/repos/rails/rails/issues/48957,1736593294,IC_kwDNIULOZ4JPjg,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T02:51:31Z,2023-09-27T02:51:31Z,MEMBER,"@cmaruz Build is failing, could you take a look? :bow:

https://buildkite.com/rails/rails/builds/99163#018a3c4e-42cc-4132-baf4-58d424793ac3/1066-1255

```
bin/rails test /rails/actionpack/test/dispatch/debug_exceptions_test.rb:645

Error:
--
  | DebugExceptionsTest#test_display_backtrace_when_error_type_is_SyntaxError_wrapped_by_ActionView::Template::Error:
  | NoMethodError: undefined method `path' for #<SyntaxError: (eval):1: syntax error, unexpected end-of-input>
  | /rails/activesupport/lib/active_support/syntax_error_proxy.rb:46:in `parse_message_for_trace'
  | /rails/activesupport/lib/active_support/syntax_error_proxy.rb:35:in `backtrace_locations'
  | /rails/actionpack/lib/action_dispatch/middleware/exception_wrapper.rb:274:in `build_backtrace'
```
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1736593294/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48957
https://api.github.com/repos/rails/rails/issues/comments/1679773847,https://github.com/rails/rails/issues/48946#issuecomment-1679773847,https://api.github.com/repos/rails/rails/issues/48946,1679773847,IC_kwDNIULOZB9Qlw,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-08-15T23:54:39Z,2023-08-15T23:54:39Z,MEMBER,This behavior has been introduced via https://github.com/rails/rails/commit/81295f94c29645b2467b927ac0742ce485d19285 ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1679773847/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48946
https://api.github.com/repos/rails/rails/issues/comments/1681077897,https://github.com/rails/rails/issues/48946#issuecomment-1681077897,https://api.github.com/repos/rails/rails/issues/48946,1681077897,IC_kwDNIULOZDM2iQ,"{'login': 'midnightmonster', 'id': 57948, 'node_id': 'MDQ6VXNlcjU3OTQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/57948?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/midnightmonster', 'html_url': 'https://github.com/midnightmonster', 'followers_url': 'https://api.github.com/users/midnightmonster/followers', 'following_url': 'https://api.github.com/users/midnightmonster/following{/other_user}', 'gists_url': 'https://api.github.com/users/midnightmonster/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/midnightmonster/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/midnightmonster/subscriptions', 'organizations_url': 'https://api.github.com/users/midnightmonster/orgs', 'repos_url': 'https://api.github.com/users/midnightmonster/repos', 'events_url': 'https://api.github.com/users/midnightmonster/events{/privacy}', 'received_events_url': 'https://api.github.com/users/midnightmonster/received_events', 'type': 'User', 'site_admin': False}",2023-08-16T18:20:15Z,2023-08-16T18:22:11Z,NONE,"We ran into this at `""#{day_job}""` via our extensive use of [activerecord-summarize](https://github.com/midnightmonster/activerecord-summarize), which uses `pluck` under the hood. I've made a new release of `activerecord-summarize` to work around the issue by transparently adding aliases to all aggregate function result columns, but it still seems bad for ActiveRecord to regress on this.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1681077897/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48946
https://api.github.com/repos/rails/rails/issues/comments/1681708788,https://github.com/rails/rails/issues/48945#issuecomment-1681708788,https://api.github.com/repos/rails/rails/issues/48945,1681708788,IC_kwDNIULOZDzW9A,"{'login': 'shouichi', 'id': 99586, 'node_id': 'MDQ6VXNlcjk5NTg2', 'avatar_url': 'https://avatars.githubusercontent.com/u/99586?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/shouichi', 'html_url': 'https://github.com/shouichi', 'followers_url': 'https://api.github.com/users/shouichi/followers', 'following_url': 'https://api.github.com/users/shouichi/following{/other_user}', 'gists_url': 'https://api.github.com/users/shouichi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/shouichi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/shouichi/subscriptions', 'organizations_url': 'https://api.github.com/users/shouichi/orgs', 'repos_url': 'https://api.github.com/users/shouichi/repos', 'events_url': 'https://api.github.com/users/shouichi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/shouichi/received_events', 'type': 'User', 'site_admin': False}",2023-08-17T06:38:50Z,2023-08-17T06:38:50Z,CONTRIBUTOR,We're affected by this bug too. It seems like https://github.com/rails/rails/pull/48861 introduced this bug.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1681708788/reactions', 'total_count': 2, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 2, 'rocket': 0, 'eyes': 0}",,48945
https://api.github.com/repos/rails/rails/issues/comments/1682605950,https://github.com/rails/rails/issues/48945#issuecomment-1682605950,https://api.github.com/repos/rails/rails/issues/48945,1682605950,IC_kwDNIULOZEqHfg,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-08-17T16:33:18Z,2023-08-17T16:33:18Z,CONTRIBUTOR,"I'm currently looking into this, I'm hopeful we will find a working solution for everyone soon!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1682605950/reactions', 'total_count': 3, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 3, 'rocket': 0, 'eyes': 0}",,48945
https://api.github.com/repos/rails/rails/issues/comments/1688652460,https://github.com/rails/rails/issues/48945#issuecomment-1688652460,https://api.github.com/repos/rails/rails/issues/48945,1688652460,IC_kwDNIULOZKbKrA,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-08-22T17:50:57Z,2023-08-22T17:50:57Z,CONTRIBUTOR,@shouichi Is your use case that is erroring out utilizing `or` too?  If not could you please copy and paste your use case too.  As I'm addressing this in the AST I want to make sure I am correcting this in the right places.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1688652460/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48945
https://api.github.com/repos/rails/rails/issues/comments/1689072804,https://github.com/rails/rails/issues/48945#issuecomment-1689072804,https://api.github.com/repos/rails/rails/issues/48945,1689072804,IC_kwDNIULOZK00pA,"{'login': 'shouichi', 'id': 99586, 'node_id': 'MDQ6VXNlcjk5NTg2', 'avatar_url': 'https://avatars.githubusercontent.com/u/99586?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/shouichi', 'html_url': 'https://github.com/shouichi', 'followers_url': 'https://api.github.com/users/shouichi/followers', 'following_url': 'https://api.github.com/users/shouichi/following{/other_user}', 'gists_url': 'https://api.github.com/users/shouichi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/shouichi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/shouichi/subscriptions', 'organizations_url': 'https://api.github.com/users/shouichi/orgs', 'repos_url': 'https://api.github.com/users/shouichi/repos', 'events_url': 'https://api.github.com/users/shouichi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/shouichi/received_events', 'type': 'User', 'site_admin': False}",2023-08-23T00:00:48Z,2023-08-23T00:00:48Z,CONTRIBUTOR,"@paulreece Thank you for the investigation! We use both `where.missing` and `or`.  Feel free to ping me if you need more information.

```
Contract.liable_on(reported_on).
  where.missing(:termination).
  or(Termination.where(terminated_on: (reported_on + 1.day)...)
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1689072804/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,48945
https://api.github.com/repos/rails/rails/issues/comments/1689188047,https://github.com/rails/rails/issues/48945#issuecomment-1689188047,https://api.github.com/repos/rails/rails/issues/48945,1689188047,IC_kwDNIULOZK72zw,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-08-23T02:50:37Z,2023-08-23T02:50:37Z,CONTRIBUTOR,Thank you! I have narrowed it down quite a bit and should have a PR in soon!  ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1689188047/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 1, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48945
https://api.github.com/repos/rails/rails/issues/comments/1689248842,https://github.com/rails/rails/issues/48945#issuecomment-1689248842,https://api.github.com/repos/rails/rails/issues/48945,1689248842,IC_kwDNIULOZK_kSg,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-08-23T04:06:00Z,2023-08-23T04:06:00Z,MEMBER,"I'll be happy to be proven wrong, but just to set expectations, I think this might be a pretty fundamental problem in how `missing` interacts with the maybe-auto-alias behaviour on `where` keys.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1689248842/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48945
https://api.github.com/repos/rails/rails/issues/comments/1689260457,https://github.com/rails/rails/issues/48945#issuecomment-1689260457,https://api.github.com/repos/rails/rails/issues/48945,1689260457,IC_kwDNIULOZLARqQ,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-08-23T04:24:10Z,2023-08-23T04:24:10Z,MEMBER,"^ignore my mention, I have too many tabs open 😅 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1689260457/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48945
https://api.github.com/repos/rails/rails/issues/comments/1690731176,https://github.com/rails/rails/issues/48945#issuecomment-1690731176,https://api.github.com/repos/rails/rails/issues/48945,1690731176,IC_kwDNIULOZMaCqA,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-08-23T22:34:04Z,2023-08-23T22:35:35Z,CONTRIBUTOR,"As I alluded to in the PR that you closed, if the `missing` method is unaware that an alias has taken place, it ultimately can't know what to correctly put in the `where!` clause of this.  If you're referring to  `aliased_table_for`, it isn't called in the stack until well after `missing` so there's no knowledge there for it to be able to insert the right key in the `where` clause.  The Nodes in the `where_clause` from the `missing` method have already been created at the point the `aliased_table_for` method is called.  This leaves said Nodes stuck with whatever got assigned to it in the `where` clause of the `missing` method.   I'm interested to hear ideas on how to approach this that don't involve checking the state of the tree.  ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1690731176/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48945
https://api.github.com/repos/rails/rails/issues/comments/1688626654,https://github.com/rails/rails/issues/48944#issuecomment-1688626654,https://api.github.com/repos/rails/rails/issues/48944,1688626654,IC_kwDNIULOZKZl3g,"{'login': 'Flixt', 'id': 1724355, 'node_id': 'MDQ6VXNlcjE3MjQzNTU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1724355?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Flixt', 'html_url': 'https://github.com/Flixt', 'followers_url': 'https://api.github.com/users/Flixt/followers', 'following_url': 'https://api.github.com/users/Flixt/following{/other_user}', 'gists_url': 'https://api.github.com/users/Flixt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Flixt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Flixt/subscriptions', 'organizations_url': 'https://api.github.com/users/Flixt/orgs', 'repos_url': 'https://api.github.com/users/Flixt/repos', 'events_url': 'https://api.github.com/users/Flixt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Flixt/received_events', 'type': 'User', 'site_admin': False}",2023-08-22T17:30:11Z,2023-09-04T14:10:19Z,CONTRIBUTOR,"TL; DR; 

I was able to verify this behavior. At least for me it was never the way I though `select` would work, but the confusion/issue is totally understandable when one come from a more SQLy point of view. Not sure this is a bug though.

---

I understand/share the confusion here, but I also think this is not how the `select` method is supposed to work (at least currently it is not). The arguments to `select` are, so to speak, mapped into the retrieved rows/records. 

E.g.

```ruby
10.times { |i| Post.create! id: i + 10 }

Post.first.comments << Comment.create!
Post.first.comments << Comment.create!

join_with_select = Post.left_joins(:comments).select(""comments.id as comment_id, posts.*"")
pp join_with_select.to_a.map { |p| [p.id, p.comment_id] }
```

would give something like (I let start the Post ids from 10 so one can spot the difference):

```ruby
[[10, 1],
 [10, 2],
 [11, nil],
 [12, nil],
 [13, nil],
 [14, nil],
 [15, nil],
 [16, nil],
 [17, nil],
 [18, nil],
 [19, nil]]
```

When using `Post.left_joins(:comments).select(""posts.*, comments.id"")`, ActiveRecord will retrieve the columns
`id, id` and the second `id` (from the comments table) is used as `id` attribute for the Post model (`init_with_attributes` is used under the hood).

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1688626654/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48944
https://api.github.com/repos/rails/rails/issues/comments/1679126092,https://github.com/rails/rails/issues/48939#issuecomment-1679126092,https://api.github.com/repos/rails/rails/issues/48939,1679126092,IC_kwDNIULOZBVuTA,"{'login': 'smathy', 'id': 50139, 'node_id': 'MDQ6VXNlcjUwMTM5', 'avatar_url': 'https://avatars.githubusercontent.com/u/50139?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/smathy', 'html_url': 'https://github.com/smathy', 'followers_url': 'https://api.github.com/users/smathy/followers', 'following_url': 'https://api.github.com/users/smathy/following{/other_user}', 'gists_url': 'https://api.github.com/users/smathy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/smathy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/smathy/subscriptions', 'organizations_url': 'https://api.github.com/users/smathy/orgs', 'repos_url': 'https://api.github.com/users/smathy/repos', 'events_url': 'https://api.github.com/users/smathy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/smathy/received_events', 'type': 'User', 'site_admin': False}",2023-08-15T15:25:16Z,2023-08-15T15:25:16Z,CONTRIBUTOR,"This is a larger bug than you think, HABTM doesn't validate its options at all.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1679126092/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 1, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48939
https://api.github.com/repos/rails/rails/issues/comments/1687904021,https://github.com/rails/rails/issues/48939#issuecomment-1687904021,https://api.github.com/repos/rails/rails/issues/48939,1687904021,IC_kwDNIULOZJtfFQ,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-08-22T10:15:11Z,2023-08-22T10:15:11Z,MEMBER,"As far as I understand, this is an expected behavior so far as explained at https://github.com/rails/rails/issues/32291#issuecomment-374216313

> HABTM intentionally doesn't support dependent options ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1687904021/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48939
https://api.github.com/repos/rails/rails/issues/comments/1688157198,https://github.com/rails/rails/issues/48939#issuecomment-1688157198,https://api.github.com/repos/rails/rails/issues/48939,1688157198,IC_kwDNIULOZJ88Dg,"{'login': 'nhorton', 'id': 204146, 'node_id': 'MDQ6VXNlcjIwNDE0Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/204146?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nhorton', 'html_url': 'https://github.com/nhorton', 'followers_url': 'https://api.github.com/users/nhorton/followers', 'following_url': 'https://api.github.com/users/nhorton/following{/other_user}', 'gists_url': 'https://api.github.com/users/nhorton/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nhorton/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nhorton/subscriptions', 'organizations_url': 'https://api.github.com/users/nhorton/orgs', 'repos_url': 'https://api.github.com/users/nhorton/repos', 'events_url': 'https://api.github.com/users/nhorton/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nhorton/received_events', 'type': 'User', 'site_admin': False}",2023-08-22T13:08:54Z,2023-08-22T13:08:54Z,CONTRIBUTOR,"I don't mind it not supporting it, but accepting the argument and silently
ignoring it is really misleading. It needs to error so developers know it
is not doing anything with it. Otherwise it is very trust-eroding that
associations work.

On Tue, Aug 22, 2023, 4:15 AM Yasuo Honda ***@***.***> wrote:

> As far as I understand, this is an expected behavior so far as explained
> at #32291 (comment)
> <https://github.com/rails/rails/issues/32291#issuecomment-374216313>
>
> HABTM intentionally doesn't support dependent options
>
> —
> Reply to this email directly, view it on GitHub
> <https://github.com/rails/rails/issues/48939#issuecomment-1687904021>, or
> unsubscribe
> <https://github.com/notifications/unsubscribe-auth/AABR24S2FFSLVXEIDHV3PALXWSBDZANCNFSM6AAAAAA3QCGZU4>
> .
> You are receiving this because you authored the thread.Message ID:
> ***@***.***>
>
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1688157198/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48939
https://api.github.com/repos/rails/rails/issues/comments/1703329236,https://github.com/rails/rails/issues/48939#issuecomment-1703329236,https://api.github.com/repos/rails/rails/issues/48939,1703329236,IC_kwDNIULOZYa91A,"{'login': 'smathy', 'id': 50139, 'node_id': 'MDQ6VXNlcjUwMTM5', 'avatar_url': 'https://avatars.githubusercontent.com/u/50139?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/smathy', 'html_url': 'https://github.com/smathy', 'followers_url': 'https://api.github.com/users/smathy/followers', 'following_url': 'https://api.github.com/users/smathy/following{/other_user}', 'gists_url': 'https://api.github.com/users/smathy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/smathy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/smathy/subscriptions', 'organizations_url': 'https://api.github.com/users/smathy/orgs', 'repos_url': 'https://api.github.com/users/smathy/repos', 'events_url': 'https://api.github.com/users/smathy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/smathy/received_events', 'type': 'User', 'site_admin': False}",2023-09-01T21:18:04Z,2023-09-01T21:18:04Z,CONTRIBUTOR,I took a crack at a fix: #49115,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1703329236/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48939
https://api.github.com/repos/rails/rails/issues/comments/1682575934,https://github.com/rails/rails/pull/48932#issuecomment-1682575934,https://api.github.com/repos/rails/rails/issues/48932,1682575934,IC_kwDNIULOZEoSPg,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-08-17T16:14:25Z,2023-08-17T16:15:13Z,CONTRIBUTOR,"@eileencodes, thanks for the feedback!  I saw that there was a bug report posted about this yesterday and am currently troubleshooting ways for all of these edge cases to cooperate together.  I'll keep you posted!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1682575934/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48932
https://api.github.com/repos/rails/rails/issues/comments/1674214253,https://github.com/rails/rails/pull/48921#issuecomment-1674214253,https://api.github.com/repos/rails/rails/issues/48921,1674214253,IC_kwDNIULOY8p7bQ,"{'login': 'bf4', 'id': 142914, 'node_id': 'MDQ6VXNlcjE0MjkxNA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/142914?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bf4', 'html_url': 'https://github.com/bf4', 'followers_url': 'https://api.github.com/users/bf4/followers', 'following_url': 'https://api.github.com/users/bf4/following{/other_user}', 'gists_url': 'https://api.github.com/users/bf4/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bf4/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bf4/subscriptions', 'organizations_url': 'https://api.github.com/users/bf4/orgs', 'repos_url': 'https://api.github.com/users/bf4/repos', 'events_url': 'https://api.github.com/users/bf4/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bf4/received_events', 'type': 'User', 'site_admin': False}",2023-08-11T05:01:15Z,2023-08-11T05:34:31Z,CONTRIBUTOR,"@rafaelfranca Thanks for the quick response. It looks like I misread some of our included modules we use in our base class.  We use

```ruby
      include ActiveModel::Serializers::JSON
      # includes ActiveModel::Serialization
      # extends ActiveModel::Naming
      include ActiveModel::Model
      # includes ActiveModel::AttributeAssignment
      # includes ActiveModel::Validations
      # includes ActiveModel::Conversion
      # extends ActiveModel::Naming
      # extends ActiveModel::Translation
      include ActiveModel::Validations::Callbacks
      # includes ActiveSupport::Callbacks
      extend ActiveModel::Callbacks
```

and for newer models also use

```ruby
     include ActiveModel::Attributes
     # includes ActiveModel::AttributeMethods
```

I had observed that some of our models have `@attributes` as a hash without an attributes method and some as an attribute set, which would explain why I tried the method missing approach locally, and hadn't looked in the specifics of the two since, within the scope of my app, that's low risk and fine.  Obviously in Rails, an interface is more forever, so that kind of hackage doesn't pass muster.

It sounds like you'd consider the general feature of active model filtered attributes.

And it sounds like it should be something like ActiveModel::AttributesFilter mixin, but not mixed into ActiveModel::Attributes and not supported by ActiveModel::Model.

re: being a private API, I see now that https://github.com/rails/rails/blob/v7.0.4/activemodel/lib/active_model/attributes.rb#L6-L7 is marked `nodoc`. Since it's a pretty great interface I've been using it quite a bit 🤦 .

I'm ok with just closing this PR and leaving it as a reference for anyone who's interested in the idea if there are too many considerations for too little value.

Aside, I generally have trouble remembering how to run a test against one specific file in Rails. Sorry for not having checked those carefully in my PR. I was relying on my passing tests in our app.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1674214253/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48921
https://api.github.com/repos/rails/rails/issues/comments/1674978552,https://github.com/rails/rails/pull/48921#issuecomment-1674978552,https://api.github.com/repos/rails/rails/issues/48921,1674978552,IC_kwDNIULOY9Yk-A,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-08-11T15:31:25Z,2023-08-11T15:31:25Z,MEMBER,If I have time I'm making `Attributes` public and including automatically in `Model`. In that case I'd just merge this PR and implement in `Model` as well. I'll leave it open.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1674978552/reactions', 'total_count': 2, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,48921
https://api.github.com/repos/rails/rails/issues/comments/1676406659,https://github.com/rails/rails/pull/48921#issuecomment-1676406659,https://api.github.com/repos/rails/rails/issues/48921,1676406659,IC_kwDNIULOY-vvgw,"{'login': 'bf4', 'id': 142914, 'node_id': 'MDQ6VXNlcjE0MjkxNA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/142914?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bf4', 'html_url': 'https://github.com/bf4', 'followers_url': 'https://api.github.com/users/bf4/followers', 'following_url': 'https://api.github.com/users/bf4/following{/other_user}', 'gists_url': 'https://api.github.com/users/bf4/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bf4/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bf4/subscriptions', 'organizations_url': 'https://api.github.com/users/bf4/orgs', 'repos_url': 'https://api.github.com/users/bf4/repos', 'events_url': 'https://api.github.com/users/bf4/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bf4/received_events', 'type': 'User', 'site_admin': False}",2023-08-13T16:33:55Z,2023-08-13T16:33:55Z,CONTRIBUTOR,"Ok, I'll hold off any further work on this then until the upstream work is done. Let me know if I can be of help in any way.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1676406659/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48921
https://api.github.com/repos/rails/rails/issues/comments/1690503738,https://github.com/rails/rails/issues/48915#issuecomment-1690503738,https://api.github.com/repos/rails/rails/issues/48915,1690503738,IC_kwDNIULOZMMKOg,"{'login': 'adrianna-chang-shopify', 'id': 22918438, 'node_id': 'MDQ6VXNlcjIyOTE4NDM4', 'avatar_url': 'https://avatars.githubusercontent.com/u/22918438?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/adrianna-chang-shopify', 'html_url': 'https://github.com/adrianna-chang-shopify', 'followers_url': 'https://api.github.com/users/adrianna-chang-shopify/followers', 'following_url': 'https://api.github.com/users/adrianna-chang-shopify/following{/other_user}', 'gists_url': 'https://api.github.com/users/adrianna-chang-shopify/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/adrianna-chang-shopify/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/adrianna-chang-shopify/subscriptions', 'organizations_url': 'https://api.github.com/users/adrianna-chang-shopify/orgs', 'repos_url': 'https://api.github.com/users/adrianna-chang-shopify/repos', 'events_url': 'https://api.github.com/users/adrianna-chang-shopify/events{/privacy}', 'received_events_url': 'https://api.github.com/users/adrianna-chang-shopify/received_events', 'type': 'User', 'site_admin': False}",2023-08-23T19:13:22Z,2023-08-23T19:13:22Z,CONTRIBUTOR,"Just making a note that `routes_prefix` _is_ referenced in the configuring guides: https://guides.rubyonrails.org/configuring.html#config-active-storage-routes-prefix

Though it states in those docs that `routes_prefix` should be a String, not a hash of options that could be passed to a `scope`, so could probably still use updating 😄 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1690503738/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48915
https://api.github.com/repos/rails/rails/issues/comments/1705964513,https://github.com/rails/rails/issues/48909#issuecomment-1705964513,https://api.github.com/repos/rails/rails/issues/48909,1705964513,IC_kwDNIULOZa7z4Q,"{'login': 'mroach', 'id': 79006, 'node_id': 'MDQ6VXNlcjc5MDA2', 'avatar_url': 'https://avatars.githubusercontent.com/u/79006?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mroach', 'html_url': 'https://github.com/mroach', 'followers_url': 'https://api.github.com/users/mroach/followers', 'following_url': 'https://api.github.com/users/mroach/following{/other_user}', 'gists_url': 'https://api.github.com/users/mroach/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mroach/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mroach/subscriptions', 'organizations_url': 'https://api.github.com/users/mroach/orgs', 'repos_url': 'https://api.github.com/users/mroach/repos', 'events_url': 'https://api.github.com/users/mroach/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mroach/received_events', 'type': 'User', 'site_admin': False}",2023-09-05T05:26:29Z,2023-09-05T05:26:29Z,NONE,"We also use GCS and had this error appearing fairly often. If you don't need attachment analysis, you can disable it like we did which avoids the issue:
```
config.active_storage.analyzers.clear
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1705964513/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48909
https://api.github.com/repos/rails/rails/issues/comments/1671972342,https://github.com/rails/rails/issues/48908#issuecomment-1671972342,https://api.github.com/repos/rails/rails/issues/48908,1671972342,IC_kwDNIULOY6hF9g,"{'login': 'Lucas-Barret', 'id': 69370335, 'node_id': 'MDQ6VXNlcjY5MzcwMzM1', 'avatar_url': 'https://avatars.githubusercontent.com/u/69370335?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Lucas-Barret', 'html_url': 'https://github.com/Lucas-Barret', 'followers_url': 'https://api.github.com/users/Lucas-Barret/followers', 'following_url': 'https://api.github.com/users/Lucas-Barret/following{/other_user}', 'gists_url': 'https://api.github.com/users/Lucas-Barret/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Lucas-Barret/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Lucas-Barret/subscriptions', 'organizations_url': 'https://api.github.com/users/Lucas-Barret/orgs', 'repos_url': 'https://api.github.com/users/Lucas-Barret/repos', 'events_url': 'https://api.github.com/users/Lucas-Barret/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Lucas-Barret/received_events', 'type': 'User', 'site_admin': False}",2023-08-09T18:58:16Z,2023-08-09T19:14:48Z,NONE,"This may be due because the TestB.new does not trigger the after-create callback. 
I try `TestA.create!(test_b: TestB.create)` and you have your expected behavior.
Normally, you have to call `save` on your object created with new. 
Here it seems that `TestA.create!(test_b: TestB.new)` save the test_b instance directly if still needs to be saved.
I am not sure where this is located in association and relation code precisely though.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1671972342/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48908
https://api.github.com/repos/rails/rails/issues/comments/1672005188,https://github.com/rails/rails/issues/48908#issuecomment-1672005188,https://api.github.com/repos/rails/rails/issues/48908,1672005188,IC_kwDNIULOY6jGRA,"{'login': 'Lucas-Barret', 'id': 69370335, 'node_id': 'MDQ6VXNlcjY5MzcwMzM1', 'avatar_url': 'https://avatars.githubusercontent.com/u/69370335?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Lucas-Barret', 'html_url': 'https://github.com/Lucas-Barret', 'followers_url': 'https://api.github.com/users/Lucas-Barret/followers', 'following_url': 'https://api.github.com/users/Lucas-Barret/following{/other_user}', 'gists_url': 'https://api.github.com/users/Lucas-Barret/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Lucas-Barret/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Lucas-Barret/subscriptions', 'organizations_url': 'https://api.github.com/users/Lucas-Barret/orgs', 'repos_url': 'https://api.github.com/users/Lucas-Barret/repos', 'events_url': 'https://api.github.com/users/Lucas-Barret/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Lucas-Barret/received_events', 'type': 'User', 'site_admin': False}",2023-08-09T19:18:01Z,2023-08-09T19:18:01Z,NONE,"I guess this work as intended, since you never called the create methods on your model ? ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1672005188/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48908
https://api.github.com/repos/rails/rails/issues/comments/1672385528,https://github.com/rails/rails/issues/48908#issuecomment-1672385528,https://api.github.com/repos/rails/rails/issues/48908,1672385528,IC_kwDNIULOY66T-A,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-08-10T01:07:29Z,2023-08-10T01:07:29Z,MEMBER,"Here's the full reproduction script:

```ruby
require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :test_as, force: true do |t|
  end

  create_table :test_bs, force: true do |t|
    t.bigint :test_a_id
  end
end

class TestA < ActiveRecord::Base
  has_one :test_b
end

class TestB < ActiveRecord::Base
  after_create do
    raise ActiveRecord::RecordInvalid # simulating the broken audit-tool behavior
  end
end

class BugTest < Minitest::Test
  def test_association_stuff
    a = TestA.new(test_b: TestB.new)

    refute a.save

    assert_equal 0, TestB.count
    assert_equal 0, TestA.count
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1672385528/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48908
https://api.github.com/repos/rails/rails/issues/comments/1672531311,https://github.com/rails/rails/issues/48908#issuecomment-1672531311,https://api.github.com/repos/rails/rails/issues/48908,1672531311,IC_kwDNIULOY7DNbw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-08-10T04:20:27Z,2023-08-10T04:20:27Z,MEMBER,"> Any exception that is not ActiveRecord::Rollback or ActiveRecord::RecordInvalid will be re-raised by Rails after the callback chain is halted. Additionally, may break code that does not expect methods like save and update (which normally try to return true or false) to raise an exception.

https://edgeguides.rubyonrails.org/active_record_callbacks.html#halting-execution","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1672531311/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48908
https://api.github.com/repos/rails/rails/issues/comments/1672556310,https://github.com/rails/rails/issues/48908#issuecomment-1672556310,https://api.github.com/repos/rails/rails/issues/48908,1672556310,IC_kwDNIULOY7EvFg,"{'login': 'Lucas-Barret', 'id': 69370335, 'node_id': 'MDQ6VXNlcjY5MzcwMzM1', 'avatar_url': 'https://avatars.githubusercontent.com/u/69370335?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Lucas-Barret', 'html_url': 'https://github.com/Lucas-Barret', 'followers_url': 'https://api.github.com/users/Lucas-Barret/followers', 'following_url': 'https://api.github.com/users/Lucas-Barret/following{/other_user}', 'gists_url': 'https://api.github.com/users/Lucas-Barret/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Lucas-Barret/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Lucas-Barret/subscriptions', 'organizations_url': 'https://api.github.com/users/Lucas-Barret/orgs', 'repos_url': 'https://api.github.com/users/Lucas-Barret/repos', 'events_url': 'https://api.github.com/users/Lucas-Barret/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Lucas-Barret/received_events', 'type': 'User', 'site_admin': False}",2023-08-10T05:00:59Z,2023-08-10T05:00:59Z,NONE,It seems that it is a bad idea to rails this error because it breaks code ? @zzak ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1672556310/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48908
https://api.github.com/repos/rails/rails/issues/comments/1672560420,https://github.com/rails/rails/issues/48908#issuecomment-1672560420,https://api.github.com/repos/rails/rails/issues/48908,1672560420,IC_kwDNIULOY7E_JA,"{'login': 'Lucas-Barret', 'id': 69370335, 'node_id': 'MDQ6VXNlcjY5MzcwMzM1', 'avatar_url': 'https://avatars.githubusercontent.com/u/69370335?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Lucas-Barret', 'html_url': 'https://github.com/Lucas-Barret', 'followers_url': 'https://api.github.com/users/Lucas-Barret/followers', 'following_url': 'https://api.github.com/users/Lucas-Barret/following{/other_user}', 'gists_url': 'https://api.github.com/users/Lucas-Barret/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Lucas-Barret/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Lucas-Barret/subscriptions', 'organizations_url': 'https://api.github.com/users/Lucas-Barret/orgs', 'repos_url': 'https://api.github.com/users/Lucas-Barret/repos', 'events_url': 'https://api.github.com/users/Lucas-Barret/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Lucas-Barret/received_events', 'type': 'User', 'site_admin': False}",2023-08-10T05:06:36Z,2023-08-10T05:10:53Z,NONE,It could be similar to this issue with a pr : https://github.com/rails/rails/issues/48633,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1672560420/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48908
https://api.github.com/repos/rails/rails/issues/comments/1673153197,https://github.com/rails/rails/issues/48908#issuecomment-1673153197,https://api.github.com/repos/rails/rails/issues/48908,1673153197,IC_kwDNIULOY7pKrQ,"{'login': 'eric-christian', 'id': 298704, 'node_id': 'MDQ6VXNlcjI5ODcwNA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/298704?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eric-christian', 'html_url': 'https://github.com/eric-christian', 'followers_url': 'https://api.github.com/users/eric-christian/followers', 'following_url': 'https://api.github.com/users/eric-christian/following{/other_user}', 'gists_url': 'https://api.github.com/users/eric-christian/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eric-christian/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eric-christian/subscriptions', 'organizations_url': 'https://api.github.com/users/eric-christian/orgs', 'repos_url': 'https://api.github.com/users/eric-christian/repos', 'events_url': 'https://api.github.com/users/eric-christian/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eric-christian/received_events', 'type': 'User', 'site_admin': False}",2023-08-10T12:47:40Z,2023-08-10T12:47:40Z,NONE,"> It could be similar to this issue with a pr : #48633

Yes, seems to be the same issue.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1673153197/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48908
https://api.github.com/repos/rails/rails/issues/comments/1673255175,https://github.com/rails/rails/issues/48908#issuecomment-1673255175,https://api.github.com/repos/rails/rails/issues/48908,1673255175,IC_kwDNIULOY7vZBw,"{'login': 'wata727', 'id': 9624059, 'node_id': 'MDQ6VXNlcjk2MjQwNTk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9624059?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/wata727', 'html_url': 'https://github.com/wata727', 'followers_url': 'https://api.github.com/users/wata727/followers', 'following_url': 'https://api.github.com/users/wata727/following{/other_user}', 'gists_url': 'https://api.github.com/users/wata727/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/wata727/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/wata727/subscriptions', 'organizations_url': 'https://api.github.com/users/wata727/orgs', 'repos_url': 'https://api.github.com/users/wata727/repos', 'events_url': 'https://api.github.com/users/wata727/events{/privacy}', 'received_events_url': 'https://api.github.com/users/wata727/received_events', 'type': 'User', 'site_admin': False}",2023-08-10T13:45:13Z,2023-08-10T13:45:13Z,CONTRIBUTOR,"This seems very similar to the issue I faced. But https://github.com/rails/rails/pull/48640 focuses on autosave probably won't fix this issue.
The cause is that `save_has_one_association` uses `save` instead of `save!`:

https://github.com/rails/rails/blob/6dd4579bcbcad26657c8a3c77aecfcb165bb71f9/activerecord/lib/active_record/autosave_association.rb#L462

Here, a `ActiveRecord::RecordInvalid` raised in the `after_create` callback is internally rescued:

https://github.com/rails/rails/blob/6dd4579bcbcad26657c8a3c77aecfcb165bb71f9/activerecord/lib/active_record/persistence.rb#L711-L715

The fix suggested in #48640 is to raise `ActiveRecord::RecordInvalid` again if `save` returns `false`.

https://github.com/rails/rails/blob/fba434d6a4ae16c05a1a997ff292db2d8d29d047/activerecord/lib/active_record/autosave_association.rb#L462-L463

In this issue, the `autosave` is probably `nil`, so we might want to fix it further:

```diff
- raise(RecordInvalid.new(record)) if !saved && autosave 
+ raise(RecordInvalid.new(record)) if !saved && autosave != false
```

However, be careful about consistency with `save_belongs_to_association` and `save_collection_association`.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1673255175/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48908
https://api.github.com/repos/rails/rails/issues/comments/1666178067,https://github.com/rails/rails/pull/48885#issuecomment-1666178067,https://api.github.com/repos/rails/rails/issues/48885,1666178067,IC_kwDNIULOY0_cEw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-08-04T21:03:29Z,2023-08-04T21:03:29Z,MEMBER,No other exception is translated why would only this exception be translated?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1666178067/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48885
https://api.github.com/repos/rails/rails/issues/comments/1668424926,https://github.com/rails/rails/pull/48885#issuecomment-1668424926,https://api.github.com/repos/rails/rails/issues/48885,1668424926,IC_kwDNIULOY3Ik3g,"{'login': 'enmy', 'id': 7958278, 'node_id': 'MDQ6VXNlcjc5NTgyNzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7958278?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/enmy', 'html_url': 'https://github.com/enmy', 'followers_url': 'https://api.github.com/users/enmy/followers', 'following_url': 'https://api.github.com/users/enmy/following{/other_user}', 'gists_url': 'https://api.github.com/users/enmy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/enmy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/enmy/subscriptions', 'organizations_url': 'https://api.github.com/users/enmy/orgs', 'repos_url': 'https://api.github.com/users/enmy/repos', 'events_url': 'https://api.github.com/users/enmy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/enmy/received_events', 'type': 'User', 'site_admin': False}",2023-08-07T18:59:31Z,2023-08-07T18:59:31Z,NONE,"> No other exception is translated why would only this exception be translated?

Because we don't show most exceptions to the end user.
Sure you can translate every other exception to make rails more flexible/extendable/friendly.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1668424926/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48885
https://api.github.com/repos/rails/rails/issues/comments/1664661756,https://github.com/rails/rails/issues/48878#issuecomment-1664661756,https://api.github.com/repos/rails/rails/issues/48878,1664661756,IC_kwDNIULOYzi4_A,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-08-03T21:20:00Z,2023-08-03T21:20:00Z,MEMBER,Ref #41994,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1664661756/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48878
https://api.github.com/repos/rails/rails/issues/comments/1662768849,https://github.com/rails/rails/issues/48874#issuecomment-1662768849,https://api.github.com/repos/rails/rails/issues/48874,1662768849,IC_kwDNIULOYxvW0Q,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-07-27T17:46:44Z,2023-08-02T01:01:10Z,MEMBER,"# Supporting Rack 2 and Rack 3 in libraries

As more gems are opening up their version constraints from `rack < 3` to `rack < 4`, it is imperative that these libraries support both Rack 2 and Rack 3 in practice and not just in theory. If the compatibility is not done correctly, users will run into hard to debug errors and generally have a bad experience with the Rack 3 transition.

Some advice has been given that to support both Rack 2 and 3, all response headers should be downcased, and I know of multiple gems that have gone with this approach: rails/sprockets#758, sidekiq/sidekiq@f97d16acad300f596c2ab4841553e4d8b7ff0116. However, while this approach does follow the Rack SPEC as written, I do not believe this is fully backwards compatible in practice. The argument for why this is a good approach is that the Rack 2 SPEC does not specify what casing Response headers should have, so using the casing prescribed by the Rack 3 SPEC is compatible with both. However, libraries have generally agreed that certain headers should have certain casing in Rack 2 (ex. `Content-Type`), and if a library was written with a different casing it would not be compatible with all other existing libraries.

The incompatibility can be seen in issues raised in Rails with the latest versions of these libraries and Rails < 7.1: 
- rails#47096
  - Sprockets 4.2.0's `x-cascade` is no longer compatible with Rails < 7.1 `X-Cascade`
- rails#48815
  - Sidekiq 7's `content-security-policy` is no longer compatible with Rails < 7.1 `content-security-policy`

While we could choose to fix forward for these two headers in Rails 7, we can't really fix forward in any older Rails version, and I'm sure there will be plenty of similar issues in the future that end up requiring similar changes.

## So what should we do instead?

There have been a few different strategies proposed for handling this:

### Return a Rack::Response (or at least return headers as Rack::Headers)

```ruby
App = ->(env) { Rack::Response.new }
HeaderApp = ->(env) { [200, Rack::Headers.new, []] }

# either of the above Apps would work with either of the following middleware
class TwoMid
  # init
  
  def call(env)
    resp = # call
    resp[""Content-Type""] # text/html
  end
end

class ThreeMid
  # init
  
  def call(env)
    resp = # call
    resp[""content-type""] # text/html
  end
end
```

Rails uses this approach for Responses returned as `ActionDispatch::Response`. The benefit of Rack::Headers is that you can use it with any header casing and it will convert the headers to the Rack 3 casing internally. This allows libraries that want to support Rack 3 to use exclusively downcased headers while allowing exclusively Rack 2 compatible libraries to continue using mixed case headers.

However, this requires that _anything_ creating a Response must use this strategy (ex. Sprockets and Sidekiq too). This means that exclusively Rack 2 compatible libraries will _still_ need to be updated if they return a Rack response themselves.

Since libraries that only support Rack 2 (like Rails < 7.1) need to be updated for this approach to work, it does not feel like the best strategy to maintain backwards compatibility.

### All middleware can wrap response in Rack::Response or Rack::Headers

```ruby
TwoApp = ->(env) { [200, { ""Content-Type"" => ""text/html"" }, [] }
ThreeApp = ->(env) { [200, { ""content-type"" => ""text/html"" }, [] }

# either of the above Apps would work with this middleware
class Mid
  # init
  
  def call(env)
    resp = Rack::Response[*@app.call(env)]
    resp[""content-type""] # text/html
  end
end
```

This strategy was used in rails/rails@706fb10ad58f8056df5f56d55e6f16dcc9e927d4 to solve a tangential compatibility issue (setting/deleting cookies), but it could be used to solve the Response header compatibility issue as well. If every Rails middleware ensures that either the Response or Headers are wrapped then we can go forward with using exclusively downcased headers in Rails. The wrapped Response/Headers will handle the casing conversions for us so that Rails doesn't not have to worry about them.

While this will prevent _every_ Rack 2 compatible libraries from having to make changes, this does not really help us solve the compatibility issues with Rails < 7.1 and I'm sure this would come with a performance hit as well. Additionally, if there is not a Rails middleware performing wrapping between a Rack 2-only middleware and a Rack 3 middleware (like Sprockets 4.2.0 or Sidekiq 7) then those middleware will remain incompatible.

### Make header casing conditional based on Rack::RELEASE

```ruby
CONTENT_TYPE = if Rack::RELEASE >= 3
    ""content-type""
  else
    ""Content-Type""
  end

App = ->(env) { [200, { CONTENT_TYPE => ""text/html"" }, [] }

# the App and Middleware will be compatible with either Rack version
class Mid
  # init
  
  def call(env)
    resp = # call
    resp[CONTENT_TYPE] # text/html
  end
end
```

This is the strategy I have been using in some of the above PRs (ex. `Location` vs `location` [here](https://github.com/rails/rails/pull/48813/files#diff-1e126b979451002d618e43e3517230f7b925cc0af5e693bb525db18259df4b85R42). Rack also provides some constants that make this especially easy to do, such as `Rack::CONTENT_TYPE` (`Content-Type` for Rack 2, `content-type` for Rack 3). This approach ensures that the headers used will remain the exact same for applications using Rack 2, and only if an app switches to Rack 3 will it start to use the downcased headers, which is why I believe this is the best way to remain backwards compatible.

This prevents any Rack 2-only libraries from having to make any changes to remain compatible with libraries that support both. (ex. Rails < 7.1 should continue to work without any header changes)

The downside to this approach is that libraries may have already committed to downcasing their headers, and this proposal would suggest that they should make them conditional instead. However, I think this has a smaller impact than making Rack 2-only libraries update their code as the Rack 3 supporting libraries are more likely to be actively maintained.

## Conclusion

It seems to me that making headers conditional based on the Rack version is the best strategy for libraries that want to _fully_ support both Rack 2 and Rack 3. While temporarily verbose, it ensures that ""dual"" compatible libraries remain fully compatible with Rack 2 libraries. Additionally, it prevents any existing Rack 2 libraries from having to make any changes to their code (which seems like the primary reason to even support both versions anyways)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1662768849/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48874
https://api.github.com/repos/rails/rails/issues/comments/1662768870,https://github.com/rails/rails/issues/48874#issuecomment-1662768870,https://api.github.com/repos/rails/rails/issues/48874,1662768870,IC_kwDNIULOYxvW5g,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-07-28T20:46:07Z,2023-07-28T20:46:07Z,MEMBER,"> Make header casing conditional based on Rack::RELEASE

If this is the best option available, IMO we should just roll back the gemspec change, and revisit possible compatibility with Rack 4. 

Even beyond the mess it creates in our implementation, redefining the Rack 2 spec to retroactively declare existing Rack 3 (and 2) implementations to be non-compliant is prima facie unreasonable.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1662768870/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48874
https://api.github.com/repos/rails/rails/issues/comments/1662768875,https://github.com/rails/rails/issues/48874#issuecomment-1662768875,https://api.github.com/repos/rails/rails/issues/48874,1662768875,IC_kwDNIULOYxvW6w,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-07-29T17:31:58Z,2023-07-29T17:31:58Z,MEMBER,"From https://github.com/rails/rails/pull/48830#issuecomment-1656472334

> Can we not just use lower case everywhere? There shouldn't be any compatibility issue with Rack 2 using lower case.

I _think_ you're suggesting using lowercase everywhere in addition to `Rack::Headers`? I don't think using lowercase only without `Rack::Headers` is a viable solution, and am happy to expand on that if that's what you mean.

---

Matthew pointed out to me yesterday that the proper way to use `Rack::Headers` for libraries allowing Rack 2 or 3 is actually to _both_ return in in Responses _and_ use it in all middleware:

```ruby
Headers = Rack::Headers || Rack::Utils::HeaderHash # Rack 3 / Rack 2

TwoApp = ->(env) { [200, { ""Content-Type"" => ""text/html"" }, [] }
TwoOrThreeApp = ->(env) { [200, Headers.new({ ""content-type"" => ""text/html"" }), [] }

class TwoMid
  # init

  def call(env)
    resp = @app.call(env)
    resp[1][""Content-Type""] # text/html
  end
end

class TwoOrThreeMid
  # init
  
  def call(env)
    # we can use Headers directly
    resp = @app.call(env)
    Headers.new(resp[1])[""content-type""] # text/html

    # or wrap the whole thing in Response, which uses Headers internally
    resp = Rack::Response[*resp]
    resp.headers[""content-type""] # text/html
  end
end
```

He also pointed out that this has a potential benefit of being more forgiving of any Rack 2 libraries that chose to use downcased headers already. 

I'm still not a huge fan of this approach, because I think it would cause significantly more churn in libraries than conditional casing: 
- Using `Rack::Response` would only be necessary while supporting both Rack 2 and 3, so `Rack::Headers` would be added to all middleware for some time and then probably removed when dropping Rack 2 support. 
- The churn with the approach we've been taking with `ActionDispatch::Constants` will be minimal, since we can just remove the Rack 2 branch once support is dropped.

And while being more compatible with the Rack 2 spec as written seem like a good idea, I think the fact that the de facto header case being mixed means the benefit will not be that large.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1662768875/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48874
https://api.github.com/repos/rails/rails/issues/comments/1662768888,https://github.com/rails/rails/issues/48874#issuecomment-1662768888,https://api.github.com/repos/rails/rails/issues/48874,1662768888,IC_kwDNIULOYxvW-A,"{'login': 'ioquatix', 'id': 30030, 'node_id': 'MDQ6VXNlcjMwMDMw', 'avatar_url': 'https://avatars.githubusercontent.com/u/30030?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ioquatix', 'html_url': 'https://github.com/ioquatix', 'followers_url': 'https://api.github.com/users/ioquatix/followers', 'following_url': 'https://api.github.com/users/ioquatix/following{/other_user}', 'gists_url': 'https://api.github.com/users/ioquatix/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ioquatix/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ioquatix/subscriptions', 'organizations_url': 'https://api.github.com/users/ioquatix/orgs', 'repos_url': 'https://api.github.com/users/ioquatix/repos', 'events_url': 'https://api.github.com/users/ioquatix/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ioquatix/received_events', 'type': 'User', 'site_admin': False}",2023-07-29T23:06:26Z,2023-07-29T23:08:18Z,CONTRIBUTOR,"Thanks for writing down your thoughts and working towards a pattern that will solve the various dimensions of this problem.

Any existing code that looks like this:

```ruby
status, headers, body = @app.call(env)
if url = headers[""Location""] # handle redirect
```

In Rack 2 is buggy. In Rack 3, it's considered invalid. It may work, but in some cases it may not.

I have personally run into this bug, where middleware expects a specific case. When I wrote the HTTP/2 proxy, it would return lower case headers (because that's what HTTP/2 requires). Returning those headers would break middleware that was looking for a specific `Location` key.

So, the solutions which avoid this problem:

- When you need to read the response headers, use `Rack::Headers` or `Rack::Utils::HeaderHash` (aliased in 3.0 and removed in 3.1).
- When you need to manipulate the response headers, use `Rack::Response`. This handles the nuances of the array vs string format.
- Use lower case headers everywhere.
- Support downstream gems that don't use `Rack::Headers` for dealing with case issues.
- Once we drop support for Rack 2, you can drop any usage of `Rack::Headers` and `Rack::Response` and the code should become a lot simpler.

The last point is specifically relevant, as I suspect Rails 8 will be Rack 3 only, so we will be able to drop a lot of this code in fairly short order.

So let me make one further concession: if for the sake of compatibility, if it's easier to have a Rack 2 and Rack 3 code path, I think it's okay. However, it may create more surprising behaviour for users, since we would be bifurcating the internal implementation. But as long as we agree to resolve this for Rails 8, I'm okay with it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1662768888/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48874
https://api.github.com/repos/rails/rails/issues/comments/1662768898,https://github.com/rails/rails/issues/48874#issuecomment-1662768898,https://api.github.com/repos/rails/rails/issues/48874,1662768898,IC_kwDNIULOYxvXAg,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-07-30T08:47:31Z,2023-07-30T08:47:31Z,MEMBER,"> In Rack 2 is buggy. In Rack 3, it's considered invalid. It may work, but in some cases it may not.

Sure, but it exists, and has been working consistently between many interacting middlewares for years. Merely insisting that the code that worked for all that time was wrong does not solve the ""worked yesterday, broken today"" of it... I think there are some Torvaldsian ~rants~ missives I could reference here.

> Support downstream gems

I think this means ""send them PRs and tell them their seemingly-working code was always broken"". That helps the future, for the known (and open source) instances, but doesn't change the fact that we have, in practice, a hard compatibility break between ""gems that were written over the last decade using the conventions of the day"", and ""gems that have been modified to comply with rack 3's strict requirements"".

---

The most compatible path forward that I can currently imagine would be to loosen the Rack 3 spec to permit the headers value to be some form of case-forcing hash variant. A middleware that's Rack 3 compliant could then use the correct lowercase forms while providing a headers object that allows collaborating Rack 2 compliant case-mixing middlewares to become retroactively compatible.

> if for the sake of compatibility, if it's easier to have a Rack 2 and Rack 3 code path, I think it's okay

For the record, I don't, and only secondarily because of what it does to the Rails codebase: if the only way for any Rack-compatible gem to be _functionally_ compatible with both Rack 2 and Rack 3 is to version-detect which Rack is in use and then branch appropriately, then they are such fundamentally distinct standards that they should have different names.

Tightening the spec such that middleware must be updated to remain compatible is fair, but if becoming conformant with the new spec necessarily breaks compatibility with other previously-compatible middleware, then it's not a refinement, it's just a straight-up different protocol. :confused:","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1662768898/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48874
https://api.github.com/repos/rails/rails/issues/comments/1662768904,https://github.com/rails/rails/issues/48874#issuecomment-1662768904,https://api.github.com/repos/rails/rails/issues/48874,1662768904,IC_kwDNIULOYxvXCA,"{'login': 'ioquatix', 'id': 30030, 'node_id': 'MDQ6VXNlcjMwMDMw', 'avatar_url': 'https://avatars.githubusercontent.com/u/30030?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ioquatix', 'html_url': 'https://github.com/ioquatix', 'followers_url': 'https://api.github.com/users/ioquatix/followers', 'following_url': 'https://api.github.com/users/ioquatix/following{/other_user}', 'gists_url': 'https://api.github.com/users/ioquatix/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ioquatix/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ioquatix/subscriptions', 'organizations_url': 'https://api.github.com/users/ioquatix/orgs', 'repos_url': 'https://api.github.com/users/ioquatix/repos', 'events_url': 'https://api.github.com/users/ioquatix/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ioquatix/received_events', 'type': 'User', 'site_admin': False}",2023-07-30T09:10:55Z,2023-07-30T09:10:55Z,CONTRIBUTOR,"I don't really agree with your conclusion.

Lots of current Rack (v2) middleware/applications (and perhaps evens servers) do not follow the spec and would probably fail if you tested them with `Rack::Lint`.

https://github.com/search?q=%22status%2C+headers%2C+body+%3D%22+%22headers%5B%22+language%3ARuby&type=code

It's actually because of the above pattern (assuming headers is a hash) that in Rack 3 we made that a requirement. We could allow it to be non-normalized, but then how would you look up any of the header keys? So we adopted the normalized lower-case which is what is advised by the RFCs.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1662768904/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48874
https://api.github.com/repos/rails/rails/issues/comments/1662768913,https://github.com/rails/rails/issues/48874#issuecomment-1662768913,https://api.github.com/repos/rails/rails/issues/48874,1662768913,IC_kwDNIULOYxvXEQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-08-02T17:32:08Z,2023-08-02T17:32:08Z,MEMBER,Why are we having a relevant discussion to the Rails project in a fork of Rails?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1662768913/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48874
https://api.github.com/repos/rails/rails/issues/comments/1724589215,https://github.com/rails/rails/issues/48874#issuecomment-1724589215,https://api.github.com/repos/rails/rails/issues/48874,1724589215,IC_kwDNIULOZssknw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-09-18T23:15:02Z,2023-09-18T23:15:02Z,MEMBER,@skipkayhil Is there anything left on this or can we close it out?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1724589215/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48874
https://api.github.com/repos/rails/rails/issues/comments/1652563459,https://github.com/rails/rails/issues/48797#issuecomment-1652563459,https://api.github.com/repos/rails/rails/issues/48797,1652563459,IC_kwDNIULOYoAeAw,"{'login': 'pdmholden', 'id': 1810956, 'node_id': 'MDQ6VXNlcjE4MTA5NTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1810956?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/pdmholden', 'html_url': 'https://github.com/pdmholden', 'followers_url': 'https://api.github.com/users/pdmholden/followers', 'following_url': 'https://api.github.com/users/pdmholden/following{/other_user}', 'gists_url': 'https://api.github.com/users/pdmholden/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/pdmholden/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/pdmholden/subscriptions', 'organizations_url': 'https://api.github.com/users/pdmholden/orgs', 'repos_url': 'https://api.github.com/users/pdmholden/repos', 'events_url': 'https://api.github.com/users/pdmholden/events{/privacy}', 'received_events_url': 'https://api.github.com/users/pdmholden/received_events', 'type': 'User', 'site_admin': False}",2023-07-26T22:06:01Z,2023-07-26T23:15:02Z,NONE,[This section of the ActiveRecord Encryption guide](https://guides.rubyonrails.org/active_record_encryption.html#support-for-previous-encryption-schemes) should explain how to change encryption properties with backwards compatibility.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1652563459/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48797
https://api.github.com/repos/rails/rails/issues/comments/1670772756,https://github.com/rails/rails/issues/48790#issuecomment-1670772756,https://api.github.com/repos/rails/rails/issues/48790,1670772756,IC_kwDNIULOY5X4FA,"{'login': 'Jay0921', 'id': 12777550, 'node_id': 'MDQ6VXNlcjEyNzc3NTUw', 'avatar_url': 'https://avatars.githubusercontent.com/u/12777550?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Jay0921', 'html_url': 'https://github.com/Jay0921', 'followers_url': 'https://api.github.com/users/Jay0921/followers', 'following_url': 'https://api.github.com/users/Jay0921/following{/other_user}', 'gists_url': 'https://api.github.com/users/Jay0921/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Jay0921/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Jay0921/subscriptions', 'organizations_url': 'https://api.github.com/users/Jay0921/orgs', 'repos_url': 'https://api.github.com/users/Jay0921/repos', 'events_url': 'https://api.github.com/users/Jay0921/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Jay0921/received_events', 'type': 'User', 'site_admin': False}",2023-08-09T06:53:58Z,2023-08-09T06:53:58Z,NONE,"It seems like this issue is related to https://github.com/rails/rails/issues/41795. I don't think there is an easy fix at the moment. If this is a blocker for you, you can try this while waiting for a better solution.

```
config.action_controller.default_url_options = { host: 'https://mysite.com' }
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1670772756/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48790
https://api.github.com/repos/rails/rails/issues/comments/1700352594,https://github.com/rails/rails/issues/48787#issuecomment-1700352594,https://api.github.com/repos/rails/rails/issues/48787,1700352594,IC_kwDNIULOZVlSUg,"{'login': 'darkhelmet', 'id': 36123, 'node_id': 'MDQ6VXNlcjM2MTIz', 'avatar_url': 'https://avatars.githubusercontent.com/u/36123?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/darkhelmet', 'html_url': 'https://github.com/darkhelmet', 'followers_url': 'https://api.github.com/users/darkhelmet/followers', 'following_url': 'https://api.github.com/users/darkhelmet/following{/other_user}', 'gists_url': 'https://api.github.com/users/darkhelmet/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/darkhelmet/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/darkhelmet/subscriptions', 'organizations_url': 'https://api.github.com/users/darkhelmet/orgs', 'repos_url': 'https://api.github.com/users/darkhelmet/repos', 'events_url': 'https://api.github.com/users/darkhelmet/events{/privacy}', 'received_events_url': 'https://api.github.com/users/darkhelmet/received_events', 'type': 'User', 'site_admin': False}",2023-08-31T04:33:44Z,2023-08-31T04:33:44Z,NONE,"I think I hit this today and was very confused. I can break it (in my eyes) on the console:

```ruby
Rails.logger.debug('hi') # => hi
Rails.logger.tagged('a tag').debug('hi') # => [a tag] hi
Rails.logger.debug('hi') # => [a tag] hi
```

The first 2 lines make sense, but that third line...why is it still tagged? The docs (my emphasis):

> If called without a block, **a new logger** will be returned with applied tags:

A new logger is returned (object id is different), but...","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1700352594/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,48787
https://api.github.com/repos/rails/rails/issues/comments/1658564802,https://github.com/rails/rails/pull/48785#issuecomment-1658564802,https://api.github.com/repos/rails/rails/issues/48785,1658564802,IC_kwDNIULOYtuwwg,"{'login': 'reid-rigo', 'id': 2439912, 'node_id': 'MDQ6VXNlcjI0Mzk5MTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2439912?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/reid-rigo', 'html_url': 'https://github.com/reid-rigo', 'followers_url': 'https://api.github.com/users/reid-rigo/followers', 'following_url': 'https://api.github.com/users/reid-rigo/following{/other_user}', 'gists_url': 'https://api.github.com/users/reid-rigo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/reid-rigo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/reid-rigo/subscriptions', 'organizations_url': 'https://api.github.com/users/reid-rigo/orgs', 'repos_url': 'https://api.github.com/users/reid-rigo/repos', 'events_url': 'https://api.github.com/users/reid-rigo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/reid-rigo/received_events', 'type': 'User', 'site_admin': False}",2023-07-31T15:08:47Z,2023-07-31T15:08:47Z,CONTRIBUTOR,"@eileencodes @dinahshi, I'd love to get your opinion on this as you've worked in this area. How do you think `n_plus_one_only` mode should work here?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1658564802/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48785
https://api.github.com/repos/rails/rails/issues/comments/1644619188,https://github.com/rails/rails/issues/48775#issuecomment-1644619188,https://api.github.com/repos/rails/rails/issues/48775,1644619188,IC_kwDNIULOYgbltA,"{'login': 'lavoiesl', 'id': 1216046, 'node_id': 'MDQ6VXNlcjEyMTYwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1216046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lavoiesl', 'html_url': 'https://github.com/lavoiesl', 'followers_url': 'https://api.github.com/users/lavoiesl/followers', 'following_url': 'https://api.github.com/users/lavoiesl/following{/other_user}', 'gists_url': 'https://api.github.com/users/lavoiesl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lavoiesl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lavoiesl/subscriptions', 'organizations_url': 'https://api.github.com/users/lavoiesl/orgs', 'repos_url': 'https://api.github.com/users/lavoiesl/repos', 'events_url': 'https://api.github.com/users/lavoiesl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lavoiesl/received_events', 'type': 'User', 'site_admin': False}",2023-07-20T21:15:32Z,2023-07-20T21:16:06Z,NONE,"I locate the issue as being that `ToSql#visit_Arel_Nodes_InsertStatement` calls the _visitor_ on the relation:
https://github.com/rails/rails/blob/0ccde297a1db34703ebf332ce21ceeb9e2fcb6ac/activerecord/lib/arel/visitors/to_sql.rb#L51-L53

which ends up calling:

https://github.com/rails/rails/blob/0ccde297a1db34703ebf332ce21ceeb9e2fcb6ac/activerecord/lib/arel/visitors/to_sql.rb#L577-L579

Perhaps `visit_Arel_Nodes_{Insert,Update,Delete}Statement` should call `quote_table_name(o.relation.name)` directly?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1644619188/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48775
https://api.github.com/repos/rails/rails/issues/comments/1667004153,https://github.com/rails/rails/issues/48775#issuecomment-1667004153,https://api.github.com/repos/rails/rails/issues/48775,1667004153,IC_kwDNIULOY1x2-Q,"{'login': 'lavoiesl', 'id': 1216046, 'node_id': 'MDQ6VXNlcjEyMTYwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1216046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lavoiesl', 'html_url': 'https://github.com/lavoiesl', 'followers_url': 'https://api.github.com/users/lavoiesl/followers', 'following_url': 'https://api.github.com/users/lavoiesl/following{/other_user}', 'gists_url': 'https://api.github.com/users/lavoiesl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lavoiesl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lavoiesl/subscriptions', 'organizations_url': 'https://api.github.com/users/lavoiesl/orgs', 'repos_url': 'https://api.github.com/users/lavoiesl/repos', 'events_url': 'https://api.github.com/users/lavoiesl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lavoiesl/received_events', 'type': 'User', 'site_admin': False}",2023-08-06T23:31:38Z,2023-08-06T23:31:38Z,NONE,"Yes, the tests are currently testing the failure. Would you prefer a version of the tests that properly fail?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1667004153/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48775
https://api.github.com/repos/rails/rails/issues/comments/1668770657,https://github.com/rails/rails/issues/48775#issuecomment-1668770657,https://api.github.com/repos/rails/rails/issues/48775,1668770657,IC_kwDNIULOY3drYQ,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-08-08T01:17:56Z,2023-08-08T01:17:56Z,CONTRIBUTOR,"Thanks for clarifying!  Nope, I now have your tests failing with my fix :)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1668770657/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48775
https://api.github.com/repos/rails/rails/issues/comments/1639909916,https://github.com/rails/rails/pull/48756#issuecomment-1639909916,https://api.github.com/repos/rails/rails/issues/48756,1639909916,IC_kwDNIULOYb8KHA,"{'login': 'iMacTia', 'id': 2527520, 'node_id': 'MDQ6VXNlcjI1Mjc1MjA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2527520?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/iMacTia', 'html_url': 'https://github.com/iMacTia', 'followers_url': 'https://api.github.com/users/iMacTia/followers', 'following_url': 'https://api.github.com/users/iMacTia/following{/other_user}', 'gists_url': 'https://api.github.com/users/iMacTia/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/iMacTia/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/iMacTia/subscriptions', 'organizations_url': 'https://api.github.com/users/iMacTia/orgs', 'repos_url': 'https://api.github.com/users/iMacTia/repos', 'events_url': 'https://api.github.com/users/iMacTia/events{/privacy}', 'received_events_url': 'https://api.github.com/users/iMacTia/received_events', 'type': 'User', 'site_admin': False}",2023-07-18T09:55:29Z,2023-07-18T09:55:29Z,NONE,I checked the buildkite error but I doubt it's related to this PR 🤔 ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1639909916/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48756
https://api.github.com/repos/rails/rails/issues/comments/1642569255,https://github.com/rails/rails/pull/48745#issuecomment-1642569255,https://api.github.com/repos/rails/rails/issues/48745,1642569255,IC_kwDNIULOYeeeJw,"{'login': 'osyo-manga', 'id': 214488, 'node_id': 'MDQ6VXNlcjIxNDQ4OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/214488?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/osyo-manga', 'html_url': 'https://github.com/osyo-manga', 'followers_url': 'https://api.github.com/users/osyo-manga/followers', 'following_url': 'https://api.github.com/users/osyo-manga/following{/other_user}', 'gists_url': 'https://api.github.com/users/osyo-manga/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/osyo-manga/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/osyo-manga/subscriptions', 'organizations_url': 'https://api.github.com/users/osyo-manga/orgs', 'repos_url': 'https://api.github.com/users/osyo-manga/repos', 'events_url': 'https://api.github.com/users/osyo-manga/events{/privacy}', 'received_events_url': 'https://api.github.com/users/osyo-manga/received_events', 'type': 'User', 'site_admin': False}",2023-07-19T18:35:21Z,2023-07-19T18:35:21Z,NONE,Fixed an unintended implementation.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1642569255/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48745
https://api.github.com/repos/rails/rails/issues/comments/1638170364,https://github.com/rails/rails/pull/48741#issuecomment-1638170364,https://api.github.com/repos/rails/rails/issues/48741,1638170364,IC_kwDNIULOYaR-_A,"{'login': 'mikepmunroe', 'id': 514063, 'node_id': 'MDQ6VXNlcjUxNDA2Mw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/514063?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mikepmunroe', 'html_url': 'https://github.com/mikepmunroe', 'followers_url': 'https://api.github.com/users/mikepmunroe/followers', 'following_url': 'https://api.github.com/users/mikepmunroe/following{/other_user}', 'gists_url': 'https://api.github.com/users/mikepmunroe/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mikepmunroe/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mikepmunroe/subscriptions', 'organizations_url': 'https://api.github.com/users/mikepmunroe/orgs', 'repos_url': 'https://api.github.com/users/mikepmunroe/repos', 'events_url': 'https://api.github.com/users/mikepmunroe/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mikepmunroe/received_events', 'type': 'User', 'site_admin': False}",2023-07-17T13:41:10Z,2023-07-17T13:41:10Z,CONTRIBUTOR,I noticed the build failed. I'll investigate what the issue is. ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1638170364/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48741
https://api.github.com/repos/rails/rails/issues/comments/1638726276,https://github.com/rails/rails/pull/48741#issuecomment-1638726276,https://api.github.com/repos/rails/rails/issues/48741,1638726276,IC_kwDNIULOYaz6hA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-07-17T19:14:17Z,2023-07-17T19:14:17Z,MEMBER,"> I noticed the build failed. I'll investigate what the issue is.

I don't think any of the failures are related to your change, so I wouldn't worry about it","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1638726276/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48741
https://api.github.com/repos/rails/rails/issues/comments/1634674646,https://github.com/rails/rails/pull/48733#issuecomment-1634674646,https://api.github.com/repos/rails/rails/issues/48733,1634674646,IC_kwDNIULOYW8n1g,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-07-13T18:02:16Z,2023-07-13T18:02:16Z,CONTRIBUTOR,Thanks! Updated with the suggestion for `each -> find` and extracted getting `id` in both methods.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1634674646/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48733
https://api.github.com/repos/rails/rails/issues/comments/1639154614,https://github.com/rails/rails/pull/48727#issuecomment-1639154614,https://api.github.com/repos/rails/rails/issues/48727,1639154614,IC_kwDNIULOYbODtg,"{'login': 'lulalala', 'id': 366910, 'node_id': 'MDQ6VXNlcjM2NjkxMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/366910?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lulalala', 'html_url': 'https://github.com/lulalala', 'followers_url': 'https://api.github.com/users/lulalala/followers', 'following_url': 'https://api.github.com/users/lulalala/following{/other_user}', 'gists_url': 'https://api.github.com/users/lulalala/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lulalala/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lulalala/subscriptions', 'organizations_url': 'https://api.github.com/users/lulalala/orgs', 'repos_url': 'https://api.github.com/users/lulalala/repos', 'events_url': 'https://api.github.com/users/lulalala/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lulalala/received_events', 'type': 'User', 'site_admin': False}",2023-07-18T01:49:30Z,2023-07-18T01:49:30Z,CONTRIBUTOR,"Hi @amatsuda may I ask for your review please if you have time? Sorry I don't know the current process as Rails bot doesn't seem to auto assign anymore.

The lint error seems like a false positive.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1639154614/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48727
https://api.github.com/repos/rails/rails/issues/comments/1678369094,https://github.com/rails/rails/pull/48727#issuecomment-1678369094,https://api.github.com/repos/rails/rails/issues/48727,1678369094,IC_kwDNIULOZAnhRg,"{'login': 'stefannibrasil', 'id': 10670581, 'node_id': 'MDQ6VXNlcjEwNjcwNTgx', 'avatar_url': 'https://avatars.githubusercontent.com/u/10670581?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/stefannibrasil', 'html_url': 'https://github.com/stefannibrasil', 'followers_url': 'https://api.github.com/users/stefannibrasil/followers', 'following_url': 'https://api.github.com/users/stefannibrasil/following{/other_user}', 'gists_url': 'https://api.github.com/users/stefannibrasil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/stefannibrasil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/stefannibrasil/subscriptions', 'organizations_url': 'https://api.github.com/users/stefannibrasil/orgs', 'repos_url': 'https://api.github.com/users/stefannibrasil/repos', 'events_url': 'https://api.github.com/users/stefannibrasil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/stefannibrasil/received_events', 'type': 'User', 'site_admin': False}",2023-08-15T03:18:03Z,2023-08-15T03:18:03Z,CONTRIBUTOR,@guilleiguaran @rafaelfranca apologies if this message is not okay with you but is there any chance you have some bandwidth to review this PR? This could be a good solution to this bug that has prompted lots of monkey patches. Thank you!,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1678369094/reactions', 'total_count': 2, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 2, 'rocket': 0, 'eyes': 0}",,48727
https://api.github.com/repos/rails/rails/issues/comments/1636327416,https://github.com/rails/rails/issues/48721#issuecomment-1636327416,https://api.github.com/repos/rails/rails/issues/48721,1636327416,IC_kwDNIULOYYhf-A,"{'login': 'abhisheksarka', 'id': 4833588, 'node_id': 'MDQ6VXNlcjQ4MzM1ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4833588?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abhisheksarka', 'html_url': 'https://github.com/abhisheksarka', 'followers_url': 'https://api.github.com/users/abhisheksarka/followers', 'following_url': 'https://api.github.com/users/abhisheksarka/following{/other_user}', 'gists_url': 'https://api.github.com/users/abhisheksarka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abhisheksarka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abhisheksarka/subscriptions', 'organizations_url': 'https://api.github.com/users/abhisheksarka/orgs', 'repos_url': 'https://api.github.com/users/abhisheksarka/repos', 'events_url': 'https://api.github.com/users/abhisheksarka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abhisheksarka/received_events', 'type': 'User', 'site_admin': False}",2023-07-14T19:34:10Z,2023-07-15T03:08:55Z,CONTRIBUTOR,"Looks like after the `decrypt` is called, the deserialisation of the attribute starts failing since it does not check whether the value is encrypted or not

https://github.com/rails/rails/blob/c9cdd800d30ec38f079b3df0772ab47f4ba4b11f/activerecord/lib/active_record/encryption/encrypted_attribute_type.rb#L35-L37

Updating this method to the code below seems to be working but I am not completely sure if this is the correct fix 🤔 

```ruby
def deserialize(value)
  if encryptor.encrypted? value
    cast_type.deserialize decrypt(value)
  else
    cast_type.deserialize value
  end
end
``` 

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1636327416/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48721
https://api.github.com/repos/rails/rails/issues/comments/1636704345,https://github.com/rails/rails/issues/48721#issuecomment-1636704345,https://api.github.com/repos/rails/rails/issues/48721,1636704345,IC_kwDNIULOYY4gWQ,"{'login': 'dsusviela', 'id': 18326941, 'node_id': 'MDQ6VXNlcjE4MzI2OTQx', 'avatar_url': 'https://avatars.githubusercontent.com/u/18326941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dsusviela', 'html_url': 'https://github.com/dsusviela', 'followers_url': 'https://api.github.com/users/dsusviela/followers', 'following_url': 'https://api.github.com/users/dsusviela/following{/other_user}', 'gists_url': 'https://api.github.com/users/dsusviela/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dsusviela/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dsusviela/subscriptions', 'organizations_url': 'https://api.github.com/users/dsusviela/orgs', 'repos_url': 'https://api.github.com/users/dsusviela/repos', 'events_url': 'https://api.github.com/users/dsusviela/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dsusviela/received_events', 'type': 'User', 'site_admin': False}",2023-07-15T08:03:22Z,2023-07-15T08:04:14Z,CONTRIBUTOR,"@abhisheksarka My problem with this approach is that its completely invisible for the developer that the record has been decrypted, and that can lead to leave the database in an inconsistent state (some records encrypted and some of them decrypted).

To me the issue resolution should be:
 - document that `.decrypt` is saving into the database,
 - the error should be explaining the situation (you have an unencrypted value int the db when its expected to be encrypted)
 - allowing to call `.encrypt` to revert the change from `decrypt`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1636704345/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48721
https://api.github.com/repos/rails/rails/issues/comments/1637124939,https://github.com/rails/rails/issues/48721#issuecomment-1637124939,https://api.github.com/repos/rails/rails/issues/48721,1637124939,IC_kwDNIULOYZSLSw,"{'login': 'abhisheksarka', 'id': 4833588, 'node_id': 'MDQ6VXNlcjQ4MzM1ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4833588?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abhisheksarka', 'html_url': 'https://github.com/abhisheksarka', 'followers_url': 'https://api.github.com/users/abhisheksarka/followers', 'following_url': 'https://api.github.com/users/abhisheksarka/following{/other_user}', 'gists_url': 'https://api.github.com/users/abhisheksarka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abhisheksarka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abhisheksarka/subscriptions', 'organizations_url': 'https://api.github.com/users/abhisheksarka/orgs', 'repos_url': 'https://api.github.com/users/abhisheksarka/repos', 'events_url': 'https://api.github.com/users/abhisheksarka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abhisheksarka/received_events', 'type': 'User', 'site_admin': False}",2023-07-16T15:51:41Z,2023-07-16T15:51:41Z,CONTRIBUTOR,"After digging further into this, it seems to me you can enable/disable this behaviour using

```ruby
ActiveRecord::Encryption.config.support_unencrypted_data = true
```

https://guides.rubyonrails.org/active_record_encryption.html#config-active-record-encryption-support-unencrypted-data","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1637124939/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48721
https://api.github.com/repos/rails/rails/issues/comments/1631120965,https://github.com/rails/rails/issues/48714#issuecomment-1631120965,https://api.github.com/repos/rails/rails/issues/48714,1631120965,IC_kwDNIULOYTjuRQ,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-07-11T16:20:12Z,2023-07-11T16:20:12Z,CONTRIBUTOR,"I think, that the `'id'` attribute for nested models means that you need to set a primary key value (whether it is named as `id` or not) under this name. So you should be doing something like:
```ruby
update_posts_data = {
  'id' => post.id,
  'comments_attributes' => [
    {
      'id' => Comment.first.uuid,
      'name' => 'Even Better'
    },
    {
      'name' => 'Another comment'
    }
  ]
}
```

To avoid confusion, we can also pretty easily change the logic to accept the actual primary key name as a key in the attributes (`uuid` in the example). But I am not sure, if this is really necessary.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1631120965/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48714
https://api.github.com/repos/rails/rails/issues/comments/1631134922,https://github.com/rails/rails/issues/48714#issuecomment-1631134922,https://api.github.com/repos/rails/rails/issues/48714,1631134922,IC_kwDNIULOYTkkyg,"{'login': 'fanantoxa', 'id': 7717033, 'node_id': 'MDQ6VXNlcjc3MTcwMzM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7717033?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fanantoxa', 'html_url': 'https://github.com/fanantoxa', 'followers_url': 'https://api.github.com/users/fanantoxa/followers', 'following_url': 'https://api.github.com/users/fanantoxa/following{/other_user}', 'gists_url': 'https://api.github.com/users/fanantoxa/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fanantoxa/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fanantoxa/subscriptions', 'organizations_url': 'https://api.github.com/users/fanantoxa/orgs', 'repos_url': 'https://api.github.com/users/fanantoxa/repos', 'events_url': 'https://api.github.com/users/fanantoxa/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fanantoxa/received_events', 'type': 'User', 'site_admin': False}",2023-07-11T16:30:02Z,2023-07-11T16:30:02Z,NONE,"I was able to get around it with `alias_attribute :id, :uuid` on a model and setting `id` to `uuid` on the front-end.

But ordinal problem is still remain.
ActiveRecord allow to have different names for `primary_key` column. And there is many reasons not to name it `id`.

From solution stand point I see that it can be solved:
- `accepts_nested_attributes_for` would use column defined `primary_key` if it's present
-  add additional attribute to `accepts_nested_attributes_for` to manually set attribute name that should be used to find existing record
- combination of both above

Maybe other solutions.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1631134922/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48714
https://api.github.com/repos/rails/rails/issues/comments/1632607172,https://github.com/rails/rails/issues/48714#issuecomment-1632607172,https://api.github.com/repos/rails/rails/issues/48714,1632607172,IC_kwDNIULOYU-bxA,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-07-12T14:12:52Z,2023-07-12T14:12:52Z,CONTRIBUTOR,">I was able to get around it with alias_attribute :id, :uuid on a model

Could you elaborate on the need of this? `id` has a special meaning in Rails and should already refer to `uuid` column if `uuid` is being used as a primary key

So whenever you do `object.id` it returns the value from the `uuid` column
Similarly how `object.id = ""abc-123""` populates `uuid` attribute

I'm curious what `alias_attribute` provided you with which was not implemented through the default special meaning of `id` term","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1632607172/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48714
https://api.github.com/repos/rails/rails/issues/comments/1632621571,https://github.com/rails/rails/issues/48714#issuecomment-1632621571,https://api.github.com/repos/rails/rails/issues/48714,1632621571,IC_kwDNIULOYU_UAw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-07-12T14:21:19Z,2023-07-12T14:22:07Z,CONTRIBUTOR,"As I understand, the `alias_attribute :id, :uuid` is not really needed, as `.id` and `.id=` are working as expected. The real problem was that on the frontend the field has the `""uuid""` name, but Rails expects a field named `""id""`, for example https://github.com/rails/rails/blob/50e3ae083683a8a5e38fee4d7952e1576e3ffc31/activerecord/lib/active_record/nested_attributes.rb#L510 and that it is not working.

The proposed solution is to accept `""uuid""` (a real name of the primary key) and `""id""` (for compatibility) as these keys,","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1632621571/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48714
https://api.github.com/repos/rails/rails/issues/comments/1632635827,https://github.com/rails/rails/issues/48714#issuecomment-1632635827,https://api.github.com/repos/rails/rails/issues/48714,1632635827,IC_kwDNIULOYVALsw,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-07-12T14:29:19Z,2023-07-12T14:29:19Z,CONTRIBUTOR,">As I understand, the alias_attribute :id, :uuid is not really needed

That what I was suspecting as well


>accepts_nested_attributes_for would use column defined primary_key if it's present

To be honest this sounds like a valid expectation and I think it should be fixable in a non-breaking way by tweaking `assign_nested_attributes_for_collection_association`
https://github.com/rails/rails/blob/c373f3cbbf091d2cf8cec58f12a2b68d33fbea08/activerecord/lib/active_record/nested_attributes.rb#L484
and substituting hardcoded `""id""` and `:id` references to dynamic `primary_key` value which most likely needs to be fetched from `association(association_name)`

I would even say that this line is design-wise wrong 
https://github.com/rails/rails/blob/c373f3cbbf091d2cf8cec58f12a2b68d33fbea08/activerecord/lib/active_record/nested_attributes.rb#L524

This line tries to compare `record.id` value which is a value behind the `primary_key` column to something that is strictly named as `""id""`. It works for most of the models but not for ones that don't use `id` column

Changing it to `record.id.to_s == attributes[record.class.primary_key].to_s` should be a non-breaking change that allows for more flexibility. I think doing such change will be completely justified ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1632635827/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48714
https://api.github.com/repos/rails/rails/issues/comments/1632639936,https://github.com/rails/rails/issues/48714#issuecomment-1632639936,https://api.github.com/repos/rails/rails/issues/48714,1632639936,IC_kwDNIULOYVAbwA,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-07-12T14:31:49Z,2023-07-12T14:31:49Z,CONTRIBUTOR,">the proposed solution is to accept ""uuid"" (a real name of the primary key) and ""id"" (for compatibility)

Right, I was slightly wrong in my comment above, we shouldn't be substituting but rather extending the logic to check for the dynamic `primary_key` key presence in the attributes hash","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1632639936/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48714
https://api.github.com/repos/rails/rails/issues/comments/1632653256,https://github.com/rails/rails/issues/48714#issuecomment-1632653256,https://api.github.com/repos/rails/rails/issues/48714,1632653256,IC_kwDNIULOYVBPyA,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-07-12T14:39:37Z,2023-07-12T14:39:37Z,CONTRIBUTOR,"Yes, agreed, so please let me know if you want to open a PR.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1632653256/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48714
https://api.github.com/repos/rails/rails/issues/comments/1632657741,https://github.com/rails/rails/issues/48714#issuecomment-1632657741,https://api.github.com/repos/rails/rails/issues/48714,1632657741,IC_kwDNIULOYVBhTQ,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-07-12T14:42:17Z,2023-07-12T14:42:17Z,CONTRIBUTOR,">Yes, agreed, so please let me know if you want to open a PR.

I don't have spare time to have a look this week but I can try looking into it next week unless you or someone else wants to work on that! I don't mind at all, to me this should be a very low risk change that delivers a quick win","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1632657741/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48714
https://api.github.com/repos/rails/rails/issues/comments/1639463058,https://github.com/rails/rails/pull/48700#issuecomment-1639463058,https://api.github.com/repos/rails/rails/issues/48700,1639463058,IC_kwDNIULOYbg4kg,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-07-18T04:52:50Z,2023-07-18T04:52:50Z,MEMBER,"I think that #48694 demonstrates broken and confusing behaviour, and we should change the code to prevent it rather than documenting that these methods can give surprising results.

This issue cluster also possibly points toward an answer to #47599, which I have awkwardly stalled on because I remembered that blending incompatible relations would be problematic, but couldn't immediately come up with succinct examples of those problems.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1639463058/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48700
https://api.github.com/repos/rails/rails/issues/comments/1639488630,https://github.com/rails/rails/pull/48700#issuecomment-1639488630,https://api.github.com/repos/rails/rails/issues/48700,1639488630,IC_kwDNIULOYbicdg,"{'login': 'joshuay03', 'id': 54629302, 'node_id': 'MDQ6VXNlcjU0NjI5MzAy', 'avatar_url': 'https://avatars.githubusercontent.com/u/54629302?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joshuay03', 'html_url': 'https://github.com/joshuay03', 'followers_url': 'https://api.github.com/users/joshuay03/followers', 'following_url': 'https://api.github.com/users/joshuay03/following{/other_user}', 'gists_url': 'https://api.github.com/users/joshuay03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joshuay03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joshuay03/subscriptions', 'organizations_url': 'https://api.github.com/users/joshuay03/orgs', 'repos_url': 'https://api.github.com/users/joshuay03/repos', 'events_url': 'https://api.github.com/users/joshuay03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joshuay03/received_events', 'type': 'User', 'site_admin': False}",2023-07-18T05:18:05Z,2023-07-18T06:35:49Z,CONTRIBUTOR,"@matthewd Thanks for your comments.

> I think that #48694 demonstrates broken and confusing behaviour, and we should change the code to prevent it rather than documenting that these methods can give surprising results.

I'm yet to confirm the cause of the missing join in my issue there. It's only a problem in the codebase I worked in since we've overridden `#structurally_incompatible_values_for` to return `[]` (which I've since documented in the issue). But if it is indeed expected behaviour due to a bad structure and not a bug, then yes I would rather have had an error thrown here.

> This issue cluster also possibly points toward an answer to #47599, which I have awkwardly stalled on because I remembered that blending incompatible relations would be problematic, but couldn't immediately come up with succinct examples of those problems.

No worries, it seems like the path forward for this feature needs to be agreed upon first, happy to hold off until then.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1639488630/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48700
https://api.github.com/repos/rails/rails/issues/comments/1633402653,https://github.com/rails/rails/issues/48696#issuecomment-1633402653,https://api.github.com/repos/rails/rails/issues/48696,1633402653,IC_kwDNIULOYVu_HQ,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-07-13T01:25:20Z,2023-07-13T01:25:20Z,MEMBER,Closed via https://github.com/rails/kredis/pull/122,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1633402653/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48696
https://api.github.com/repos/rails/rails/issues/comments/1633718020,https://github.com/rails/rails/issues/48696#issuecomment-1633718020,https://api.github.com/repos/rails/rails/issues/48696,1633718020,IC_kwDNIULOYWCPBA,"{'login': 'lewispb', 'id': 1773614, 'node_id': 'MDQ6VXNlcjE3NzM2MTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1773614?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lewispb', 'html_url': 'https://github.com/lewispb', 'followers_url': 'https://api.github.com/users/lewispb/followers', 'following_url': 'https://api.github.com/users/lewispb/following{/other_user}', 'gists_url': 'https://api.github.com/users/lewispb/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lewispb/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lewispb/subscriptions', 'organizations_url': 'https://api.github.com/users/lewispb/orgs', 'repos_url': 'https://api.github.com/users/lewispb/repos', 'events_url': 'https://api.github.com/users/lewispb/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lewispb/received_events', 'type': 'User', 'site_admin': False}",2023-07-13T07:32:07Z,2023-07-13T07:32:07Z,CONTRIBUTOR,"Thanks for reviewing this @yahonda. Sorry if I wasn't clear but I think this is a broader issue than just Kredis.

Would this issue not affect other consumers of the generated `bin/test`? e.g. [MRSK](https://github.com/mrsked/mrsk/blob/main/bin/test).

This is generated from here in Rails:

https://github.com/rails/rails/blob/main/railties/lib/rails/generators/rails/plugin/templates/bin/test.tt

We could update the bin/test generator or perhaps include line filtering elsewhere, but I think we should reopen this issue.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1633718020/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48696
https://api.github.com/repos/rails/rails/issues/comments/1712003264,https://github.com/rails/rails/issues/48696#issuecomment-1712003264,https://api.github.com/repos/rails/rails/issues/48696,1712003264,IC_kwDNIULOZgsYwA,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-09-08T17:27:01Z,2023-09-08T17:27:01Z,CONTRIBUTOR,"I generated a new plugin using rails' `main` and was able to correctly run tests by lines and line ranges.
@lewispb Can you, please, verify this is the case?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1712003264/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48696
https://api.github.com/repos/rails/rails/issues/comments/1728071056,https://github.com/rails/rails/pull/48691#issuecomment-1728071056,https://api.github.com/repos/rails/rails/issues/48691,1728071056,IC_kwDNIULOZwBFkA,"{'login': 'bensheldon', 'id': 47554, 'node_id': 'MDQ6VXNlcjQ3NTU0', 'avatar_url': 'https://avatars.githubusercontent.com/u/47554?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bensheldon', 'html_url': 'https://github.com/bensheldon', 'followers_url': 'https://api.github.com/users/bensheldon/followers', 'following_url': 'https://api.github.com/users/bensheldon/following{/other_user}', 'gists_url': 'https://api.github.com/users/bensheldon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bensheldon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bensheldon/subscriptions', 'organizations_url': 'https://api.github.com/users/bensheldon/orgs', 'repos_url': 'https://api.github.com/users/bensheldon/repos', 'events_url': 'https://api.github.com/users/bensheldon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bensheldon/received_events', 'type': 'User', 'site_admin': True}",2023-09-20T16:26:15Z,2023-09-20T16:26:15Z,CONTRIBUTOR,"To capture some discussion with @matthewd, one bummer is that `is_a?` will have different behavior. We came up with a proof-of-concept monkeypatch to get `is_a?` to have the behavior I expected:

```ruby
module CoerceIsAToAcceptTripleEquals
  def is_a?(other)
    if Module === other
      super
    else
      other === self
    end
  end
end
Kernel.prepend(CoerceIsAToAcceptTripleEquals)

ActiveSupport::Callable = Object.new
def ActiveSupport::Callable.===(other)
  other.respond_to?(:call)
end

# Allows this...
some_object.is_a? ActiveSupport::Callable
# ...to have the same semantic meaning as
ActiveSupport::Callable === some_object

# may not work with `rescue ActiveSupport::Callable => e` but maybe it should be usable by rescue
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1728071056/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48691
https://api.github.com/repos/rails/rails/issues/comments/1626047052,https://github.com/rails/rails/issues/48689#issuecomment-1626047052,https://api.github.com/repos/rails/rails/issues/48689,1626047052,IC_kwDNIULOYOuCTA,"{'login': 'jorgemanrubia', 'id': 129938, 'node_id': 'MDQ6VXNlcjEyOTkzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/129938?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jorgemanrubia', 'html_url': 'https://github.com/jorgemanrubia', 'followers_url': 'https://api.github.com/users/jorgemanrubia/followers', 'following_url': 'https://api.github.com/users/jorgemanrubia/following{/other_user}', 'gists_url': 'https://api.github.com/users/jorgemanrubia/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jorgemanrubia/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jorgemanrubia/subscriptions', 'organizations_url': 'https://api.github.com/users/jorgemanrubia/orgs', 'repos_url': 'https://api.github.com/users/jorgemanrubia/repos', 'events_url': 'https://api.github.com/users/jorgemanrubia/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jorgemanrubia/received_events', 'type': 'User', 'site_admin': False}",2023-07-07T20:28:58Z,2023-07-07T20:29:20Z,CONTRIBUTOR,"@maximerety Great explanation of the issue.

I think this should be solvable using the regular [Rails attributes API](https://api.rubyonrails.org/classes/ActiveRecord/Attributes/ClassMethods.html), which offers great support for data casting, instead of building additional casting options in Active Record encryption.

Could something like this work in your case?

```ruby
encrypts :some_attribute

attribute :some_attribute do |type|
  # type is an `ActiveRecord::Encryption::EncryptedAttributeType`
  return MyType.new(type) # MyType casts the encrypted value to and from whatever format I want
end
```
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1626047052/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48689
https://api.github.com/repos/rails/rails/issues/comments/1629402053,https://github.com/rails/rails/issues/48689#issuecomment-1629402053,https://api.github.com/repos/rails/rails/issues/48689,1629402053,IC_kwDNIULOYR6zxQ,"{'login': 'maximerety', 'id': 58582, 'node_id': 'MDQ6VXNlcjU4NTgy', 'avatar_url': 'https://avatars.githubusercontent.com/u/58582?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/maximerety', 'html_url': 'https://github.com/maximerety', 'followers_url': 'https://api.github.com/users/maximerety/followers', 'following_url': 'https://api.github.com/users/maximerety/following{/other_user}', 'gists_url': 'https://api.github.com/users/maximerety/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/maximerety/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/maximerety/subscriptions', 'organizations_url': 'https://api.github.com/users/maximerety/orgs', 'repos_url': 'https://api.github.com/users/maximerety/repos', 'events_url': 'https://api.github.com/users/maximerety/events{/privacy}', 'received_events_url': 'https://api.github.com/users/maximerety/received_events', 'type': 'User', 'site_admin': False}",2023-07-10T17:26:37Z,2023-07-10T17:26:37Z,CONTRIBUTOR,"@jorgemanrubia This is an interesting avenue.

Here is the description of the (demo) working version that I got so far:

1. A table with a binary column (PostgreSQL adapter):

    ```ruby
    create_table(:records, force: true) do |t|
      t.bytea :some_attribute
    end
    ```

2. An encrypted attribute which is able to use `String` as `cast A` and a type derived from `ActiveModel::Type::Binary` as `cast B`:

    ```ruby
    class Record < ActiveRecord::Base
      # Trick upcoming EncryptedAttributeType to use ActiveRecord::Attribute::Type::String
      # as internal `cast_type` (used to cast user-facing values, i.e. cast A)
      attribute :some_attribute, :string

      # Create our ActiveRecord::Encryption::EncryptedAttributeType
      encrypts :some_attribute

      # Override database-facing methods (serialize/deserialize) to hook an additional
      # casting step (cast B) using a db_attr_type
      attribute :some_attribute do |encrypted_attribute_type|
        encrypted_attribute_type.extend(
          Module.new do
            def db_attr_type=(db_attr_type)
              @db_attr_type = db_attr_type
            end

            def serialize(value)
              @db_attr_type.serialize(super(value))
            end

            def deserialize(value)
              super(@db_attr_type.deserialize(value))
            end
          end
        )

        # Use the actual type for the database column
        encrypted_attribute_type.db_attr_type =
          ActiveRecord::Type.lookup(:binary, adapter: :postgresql)

        encrypted_attribute_type
      end
    end
    ```

3. A simpler binary serializer that no longer needs to perform type casting, as should be the case (some details omitted - don't use this in your project):

    ```ruby
    class ByteaSerializer < ActiveRecord::Encryption::MessageSerializer
      def load(serialized_content)
        data = MessagePack.unpack(serialized_content)
        parse_message(data, 1)
      end

      def dump(message)
        MessagePack.pack message_to_json(message)
      end

      private

      def encode_if_needed(value) = value
      def decode_if_needed(value) = value
    end
    ```

Although step 2 is a little tricky, it's a definite improvement because we've managed to separate type casting concerns from binary message serialization concerns.

**Is this example anywhere near what you had in mind? Maybe I missed a simpler path?**

Here are my new observations:

* As you suggested, the [Rails attributes API](https://api.rubyonrails.org/classes/ActiveRecord/Attributes/ClassMethods.html) has enabled me to interpose a `cast B` step between the message serializer and the database, allowing binary data to be stored/retrieved, without coupling this additional step with the message serializer.

* Although it is possible to customize the cast_type of an `ActiveRecord::Encryption::EncryptedAttributeType`: https://github.com/rails/rails/blob/a5fc471b3f4bbd02e6be38dae023526a49e7d049/activerecord/lib/active_record/encryption/encrypted_attribute_type.rb#L23 `encrypts` won't let you do it. Instead, the type previously defined, usually from database schema, is always used (and you can't override it): https://github.com/rails/rails/blob/a5fc471b3f4bbd02e6be38dae023526a49e7d049/activerecord/lib/active_record/encryption/encryptable_record.rb#L83-L88 So the preliminary `attribute :some_attribute, :string` in step 2 above is still needed as far as I know.

* The fix proposed in https://github.com/rails/rails/pull/48686 is no longer necessary **in that example**. The message serializer no longer has to deal with `ActiveModel::Type::Binary::Data` objects because the `@db_attr_type.deserialize` method (basically a `to_s`) is always called before sending the value to `Encryptor#decrypt`, whereas this type casting was performed by the custom serializer before. Only strings reach the message serializer now. This fix is still necessary **in other cases** where `cast B` exposes object types other than strings, with a custom serializer capable of handling these object types.

**Conclusion**

We have a working solution that does not seem to rely on any hack, which is very nice. As far as _I_ am concerned, it meets my needs.

Nevertheless, it still seems trickier and more difficult to support a binary database column using a binary serializer than it might be. Further discussion would be needed to determine whether we could find a simpler way to support such cases, and whether this should be considered a ""common"" need worth adding to the public documentation.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1629402053/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48689
https://api.github.com/repos/rails/rails/issues/comments/1640848804,https://github.com/rails/rails/issues/48688#issuecomment-1640848804,https://api.github.com/repos/rails/rails/issues/48688,1640848804,IC_kwDNIULOYc1dpA,"{'login': 'RobertChang0722', 'id': 74767965, 'node_id': 'MDQ6VXNlcjc0NzY3OTY1', 'avatar_url': 'https://avatars.githubusercontent.com/u/74767965?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/RobertChang0722', 'html_url': 'https://github.com/RobertChang0722', 'followers_url': 'https://api.github.com/users/RobertChang0722/followers', 'following_url': 'https://api.github.com/users/RobertChang0722/following{/other_user}', 'gists_url': 'https://api.github.com/users/RobertChang0722/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/RobertChang0722/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/RobertChang0722/subscriptions', 'organizations_url': 'https://api.github.com/users/RobertChang0722/orgs', 'repos_url': 'https://api.github.com/users/RobertChang0722/repos', 'events_url': 'https://api.github.com/users/RobertChang0722/events{/privacy}', 'received_events_url': 'https://api.github.com/users/RobertChang0722/received_events', 'type': 'User', 'site_admin': False}",2023-07-18T19:16:48Z,2023-07-18T19:16:48Z,NONE,"This only happens when the model itself `belongs_to` a model and use `accepts_nested_attributes_for the belongs_to model`

So if you use Post `accepts_nested_attributes_for :comment` this bug will not occur.

I haven't had time to organize the tests yet, but this is the result of the manual tests so far.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1640848804/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48688
https://api.github.com/repos/rails/rails/issues/comments/1625717280,https://github.com/rails/rails/pull/48686#issuecomment-1625717280,https://api.github.com/repos/rails/rails/issues/48686,1625717280,IC_kwDNIULOYOZ6IA,"{'login': 'maximerety', 'id': 58582, 'node_id': 'MDQ6VXNlcjU4NTgy', 'avatar_url': 'https://avatars.githubusercontent.com/u/58582?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/maximerety', 'html_url': 'https://github.com/maximerety', 'followers_url': 'https://api.github.com/users/maximerety/followers', 'following_url': 'https://api.github.com/users/maximerety/following{/other_user}', 'gists_url': 'https://api.github.com/users/maximerety/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/maximerety/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/maximerety/subscriptions', 'organizations_url': 'https://api.github.com/users/maximerety/orgs', 'repos_url': 'https://api.github.com/users/maximerety/repos', 'events_url': 'https://api.github.com/users/maximerety/events{/privacy}', 'received_events_url': 'https://api.github.com/users/maximerety/received_events', 'type': 'User', 'site_admin': False}",2023-07-07T17:23:47Z,2023-07-07T17:23:47Z,CONTRIBUTOR,"Thank you @jorgemanrubia for your feedback.

While I agree that the note in the docs would be useful, I think it's a bit premature.

At this point, there are still other things to be taken care of if you use a message serializer that does not emit strings.

I started to write a long description of the problem here, and then thought I might aswell make it a separate ""bug report"" (can be seen as a bug or a feature request, please pardon me if I posted in the wrong place 🙏) : https://github.com/rails/rails/issues/48689.

Whatever the reception of this other ticket, I don't think it detracts from the validity of the present modification.

Nevertheless, I guess we should not advertise new use cases until they are fully supported.

What do you think?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1625717280/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48686
https://api.github.com/repos/rails/rails/issues/comments/1626049356,https://github.com/rails/rails/pull/48686#issuecomment-1626049356,https://api.github.com/repos/rails/rails/issues/48686,1626049356,IC_kwDNIULOYOuLTA,"{'login': 'jorgemanrubia', 'id': 129938, 'node_id': 'MDQ6VXNlcjEyOTkzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/129938?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jorgemanrubia', 'html_url': 'https://github.com/jorgemanrubia', 'followers_url': 'https://api.github.com/users/jorgemanrubia/followers', 'following_url': 'https://api.github.com/users/jorgemanrubia/following{/other_user}', 'gists_url': 'https://api.github.com/users/jorgemanrubia/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jorgemanrubia/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jorgemanrubia/subscriptions', 'organizations_url': 'https://api.github.com/users/jorgemanrubia/orgs', 'repos_url': 'https://api.github.com/users/jorgemanrubia/repos', 'events_url': 'https://api.github.com/users/jorgemanrubia/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jorgemanrubia/received_events', 'type': 'User', 'site_admin': False}",2023-07-07T20:30:26Z,2023-07-07T20:30:26Z,CONTRIBUTOR,Thanks for context @maximerety. I followed up in #48689.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1626049356/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48686
https://api.github.com/repos/rails/rails/issues/comments/1624943077,https://github.com/rails/rails/pull/48683#issuecomment-1624943077,https://api.github.com/repos/rails/rails/issues/48683,1624943077,IC_kwDNIULOYNqp5Q,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-07-07T07:53:21Z,2023-07-07T07:53:21Z,CONTRIBUTOR,"> when calling create_association and not using the dependent option

I think the issue is beyond that.

This behavior makes sense if you do `author.book = Book.new(...)`, here you are explicitly replacing a `has_none` association, so it makes sense to apply the `dependent` option.

But I don't think most users expect `author.create_book` to be a shorthand for `author.book = Book.new(...)`.

I mentioned this with @fxn, and we both believe `author.create_book` should fail if the association is already set regardless of the `dependent` option.

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1624943077/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,48683
https://api.github.com/repos/rails/rails/issues/comments/1627659810,https://github.com/rails/rails/pull/48683#issuecomment-1627659810,https://api.github.com/repos/rails/rails/issues/48683,1627659810,IC_kwDNIULOYQQeIg,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-07-09T09:29:41Z,2023-07-09T09:29:41Z,MEMBER,"Only one failure left, it wasn't obvious to me how it should work. Would love to get some feedback on this approach, and leaving the commits for now in case that is interesting or helpful. :pray:","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1627659810/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48683
https://api.github.com/repos/rails/rails/issues/comments/1630225127,https://github.com/rails/rails/pull/48683#issuecomment-1630225127,https://api.github.com/repos/rails/rails/issues/48683,1630225127,IC_kwDNIULOYStC5w,"{'login': 'lazaronixon', 'id': 2651240, 'node_id': 'MDQ6VXNlcjI2NTEyNDA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2651240?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lazaronixon', 'html_url': 'https://github.com/lazaronixon', 'followers_url': 'https://api.github.com/users/lazaronixon/followers', 'following_url': 'https://api.github.com/users/lazaronixon/following{/other_user}', 'gists_url': 'https://api.github.com/users/lazaronixon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lazaronixon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lazaronixon/subscriptions', 'organizations_url': 'https://api.github.com/users/lazaronixon/orgs', 'repos_url': 'https://api.github.com/users/lazaronixon/repos', 'events_url': 'https://api.github.com/users/lazaronixon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lazaronixon/received_events', 'type': 'User', 'site_admin': False}",2023-07-11T06:32:00Z,2023-07-11T07:10:40Z,CONTRIBUTOR,"The documentation says: 

```
Account#create_beneficiary (similar to b = Beneficiary.new(account_id: id); b.save;
```

https://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_one

---

https://github.com/rails/rails/blob/b5d759fd2848146f7ee7a4c1b1a4be39e2f1a2bc/activerecord/lib/active_record/associations/has_one_association.rb#L10

---

Are we going to have the problems described in this recent post again? 

https://thoughtbot.com/blog/rails-has-one-limitations

I believe most of the fame of Rails not being able to keep referential integrity came from this bug, all of it was fixed on 7.0.5...

> Prior to Rails 7.0.5, calling create_other multiple times would have resulted in additional records being created. Here’s the [pull request](https://github.com/rails/rails/pull/46386) that improved this behavior by ensuring only one record is ever created.




","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1630225127/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48683
https://api.github.com/repos/rails/rails/issues/comments/1630381499,https://github.com/rails/rails/pull/48683#issuecomment-1630381499,https://api.github.com/repos/rails/rails/issues/48683,1630381499,IC_kwDNIULOYS2luw,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-07-11T08:27:30Z,2023-07-11T08:27:30Z,CONTRIBUTOR,"> The documentation says:

Yes, but I suspect that's not what most users expect as evidenced by https://github.com/rails/rails/issues/48330. Some users where relying on a uniqueness validator in the related model to prevent this overriding.

There is definitely a backward compatibility concern here, so we'll have to decide whether we want to go through a deprecation cycle, or just introduce that new behavior as another method.

Personally, if my `Account` `has_one :beneficiary`, I don't expect `account.create_beneficiary` to replace the existing one. I understand it as: `create_if_not_exist`.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1630381499/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 1, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48683
https://api.github.com/repos/rails/rails/issues/comments/1631077194,https://github.com/rails/rails/pull/48683#issuecomment-1631077194,https://api.github.com/repos/rails/rails/issues/48683,1631077194,IC_kwDNIULOYThDSg,"{'login': 'lazaronixon', 'id': 2651240, 'node_id': 'MDQ6VXNlcjI2NTEyNDA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2651240?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lazaronixon', 'html_url': 'https://github.com/lazaronixon', 'followers_url': 'https://api.github.com/users/lazaronixon/followers', 'following_url': 'https://api.github.com/users/lazaronixon/following{/other_user}', 'gists_url': 'https://api.github.com/users/lazaronixon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lazaronixon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lazaronixon/subscriptions', 'organizations_url': 'https://api.github.com/users/lazaronixon/orgs', 'repos_url': 'https://api.github.com/users/lazaronixon/repos', 'events_url': 'https://api.github.com/users/lazaronixon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lazaronixon/received_events', 'type': 'User', 'site_admin': False}",2023-07-11T15:52:14Z,2023-07-11T15:59:17Z,CONTRIBUTOR,"> Yes, but I suspect that's not what most users expect as evidenced by https://github.com/rails/rails/issues/48330. Some users where relying on a uniqueness validator in the related model to prevent this overriding.

I think we'll have complaints about the new behavior too. People who don't use unique-index or unique-validation will expect the record to be replaced. (that is the current/previous behavior) 🤷‍♂️","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1631077194/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48683
https://api.github.com/repos/rails/rails/issues/comments/1631144785,https://github.com/rails/rails/pull/48683#issuecomment-1631144785,https://api.github.com/repos/rails/rails/issues/48683,1631144785,IC_kwDNIULOYTlLUQ,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-07-11T16:37:32Z,2023-07-11T16:37:32Z,CONTRIBUTOR,"> People who don't use unique-index or unique-validation will expect the record to be replaced.

I'm not sure to follow. Could you elaborate more on the logic? What does uniqueness (index or validation) changes to the problem here?

If you already ""have one"", why would it be logical for `create_stuff!` to just delete the data you already have. To me `create` implies there isn't already one.

I'd get the need for something like `replace_stuff!` though, seems niche but why not.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1631144785/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48683
https://api.github.com/repos/rails/rails/issues/comments/1631244442,https://github.com/rails/rails/pull/48683#issuecomment-1631244442,https://api.github.com/repos/rails/rails/issues/48683,1631244442,IC_kwDNIULOYTrQmg,"{'login': 'lazaronixon', 'id': 2651240, 'node_id': 'MDQ6VXNlcjI2NTEyNDA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2651240?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lazaronixon', 'html_url': 'https://github.com/lazaronixon', 'followers_url': 'https://api.github.com/users/lazaronixon/followers', 'following_url': 'https://api.github.com/users/lazaronixon/following{/other_user}', 'gists_url': 'https://api.github.com/users/lazaronixon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lazaronixon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lazaronixon/subscriptions', 'organizations_url': 'https://api.github.com/users/lazaronixon/orgs', 'repos_url': 'https://api.github.com/users/lazaronixon/repos', 'events_url': 'https://api.github.com/users/lazaronixon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lazaronixon/received_events', 'type': 'User', 'site_admin': False}",2023-07-11T17:49:52Z,2023-07-11T18:30:43Z,CONTRIBUTOR,"> People who don't use unique-index or unique-validation will expect the record to be replaced.

This has always been the default Rails behavior, ""keep the integrity by deleting the old record"", in the past and now, this is what you always had if you create a has_one without a (unique-index/unique-validation). People expecting this behavior will complain.

I think people started to think the default behavior was ""prevent insertion"" in reason of the proliferation of the ""good practice"" of ""has_one should always be backed by a unique_index and uniqueness_validation"".

What happened is that it was only possible because of a ""bug"" with the order of the actions when creating a has_one, **create_new->delete_old** (in different transactions) where the database/active_record would raise a unique constraint exception.

After fixing, **delete_old->create_new** (in a single transaction), both cases ""with index"" or ""without index"" now have the default rails behavior ""replace the record"".

No problem if you want to change this behavior, but people creating has_one without (unique_constraint/validation) will complain the same way, but this time because records are not being replaced and receiving an exception instead.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1631244442/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48683
https://api.github.com/repos/rails/rails/issues/comments/1631703134,https://github.com/rails/rails/pull/48683#issuecomment-1631703134,https://api.github.com/repos/rails/rails/issues/48683,1631703134,IC_kwDNIULOYUHQXg,"{'login': 'sinsoku', 'id': 248174, 'node_id': 'MDQ6VXNlcjI0ODE3NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/248174?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sinsoku', 'html_url': 'https://github.com/sinsoku', 'followers_url': 'https://api.github.com/users/sinsoku/followers', 'following_url': 'https://api.github.com/users/sinsoku/following{/other_user}', 'gists_url': 'https://api.github.com/users/sinsoku/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sinsoku/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sinsoku/subscriptions', 'organizations_url': 'https://api.github.com/users/sinsoku/orgs', 'repos_url': 'https://api.github.com/users/sinsoku/repos', 'events_url': 'https://api.github.com/users/sinsoku/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sinsoku/received_events', 'type': 'User', 'site_admin': False}",2023-07-12T01:07:01Z,2023-07-12T01:07:01Z,CONTRIBUTOR,"Also check #48643 for issues with `create_association`.
Since changing the default behavior of `has_one` has a large impact, I have implemented it so that people using unique constraints or uniqueness validation can add the option.

As long as there are those who expect replacement and those who do not, it is difficult to satisfy both.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1631703134/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48683
https://api.github.com/repos/rails/rails/issues/comments/1620417962,https://github.com/rails/rails/pull/48647#issuecomment-1620417962,https://api.github.com/repos/rails/rails/issues/48647,1620417962,IC_kwDNIULOYJWdqg,"{'login': 'abaldwin88', 'id': 15172605, 'node_id': 'MDQ6VXNlcjE1MTcyNjA1', 'avatar_url': 'https://avatars.githubusercontent.com/u/15172605?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abaldwin88', 'html_url': 'https://github.com/abaldwin88', 'followers_url': 'https://api.github.com/users/abaldwin88/followers', 'following_url': 'https://api.github.com/users/abaldwin88/following{/other_user}', 'gists_url': 'https://api.github.com/users/abaldwin88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abaldwin88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abaldwin88/subscriptions', 'organizations_url': 'https://api.github.com/users/abaldwin88/orgs', 'repos_url': 'https://api.github.com/users/abaldwin88/repos', 'events_url': 'https://api.github.com/users/abaldwin88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abaldwin88/received_events', 'type': 'User', 'site_admin': False}",2023-07-04T15:06:38Z,2023-07-04T15:06:38Z,CONTRIBUTOR,Build failure is from a flaky test on main: https://buildkite.com/rails/rails/builds/97679#01890e0a-a21f-46bc-9ee9-e902a21a434c,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1620417962/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48647
https://api.github.com/repos/rails/rails/issues/comments/1620828918,https://github.com/rails/rails/pull/48640#issuecomment-1620828918,https://api.github.com/repos/rails/rails/issues/48640,1620828918,IC_kwDNIULOYJvi9g,"{'login': 'Edouard-chin', 'id': 8122246, 'node_id': 'MDQ6VXNlcjgxMjIyNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8122246?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Edouard-chin', 'html_url': 'https://github.com/Edouard-chin', 'followers_url': 'https://api.github.com/users/Edouard-chin/followers', 'following_url': 'https://api.github.com/users/Edouard-chin/following{/other_user}', 'gists_url': 'https://api.github.com/users/Edouard-chin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Edouard-chin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Edouard-chin/subscriptions', 'organizations_url': 'https://api.github.com/users/Edouard-chin/orgs', 'repos_url': 'https://api.github.com/users/Edouard-chin/repos', 'events_url': 'https://api.github.com/users/Edouard-chin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Edouard-chin/received_events', 'type': 'User', 'site_admin': False}",2023-07-04T23:31:32Z,2023-07-04T23:31:32Z,MEMBER,"I could be wrong, but IMHO the fix should be at the persistence level. The problem with patching it on the association is that it doesn't fix this case:

```ruby
class Account < ApplicationRecord
  after_create { raise(ActiveRecord::Rollback) }
end

account = Account.new
account.save! # <== Silently rollback instead of raising an error.
```

In both cases (my snippet and your issue), the `raise(RecordNotSaved.new(...))` doesn't get a chance to to be evaluated because the after_create callback terminates it too early (in the case of your issue, the `after_create` callback gets added with the [autosave association](https://github.com/rails/rails/blob/fe6b96afd1afaadb67cd70924a698ba99f8cc9e2/activerecord/lib/active_record/autosave_association.rb#L207))
https://github.com/rails/rails/blob/fe6b96afd1afaadb67cd70924a698ba99f8cc9e2/activerecord/lib/active_record/persistence.rb#L745

```diff
diff --git a/activerecord/lib/active_record/persistence.rb b/activerecord/lib/active_record/persistence.rb
index 93c3cc1c6c..505fbf2ad9 100644
--- a/activerecord/lib/active_record/persistence.rb
+++ b/activerecord/lib/active_record/persistence.rb
@@ -742,7 +742,10 @@ def save(**options, &block)
     #
     # Unless an error is raised, returns true.
     def save!(**options, &block)
-      create_or_update(**options, &block) || raise(RecordNotSaved.new(""Failed to save the record"", self))
+      result = create_or_update(**options, &block)
+    ensure
+      raise($!) if $! # Re-Raise if the invokation was aborted due to an exception.
+      result || raise(RecordNotSaved.new(""Failed to save the record"", self))
     end

     # Deletes the record in the database and freezes this instance to
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1620828918/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48640
https://api.github.com/repos/rails/rails/issues/comments/1621214399,https://github.com/rails/rails/pull/48640#issuecomment-1621214399,https://api.github.com/repos/rails/rails/issues/48640,1621214399,IC_kwDNIULOYKHEvw,"{'login': 'wata727', 'id': 9624059, 'node_id': 'MDQ6VXNlcjk2MjQwNTk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9624059?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/wata727', 'html_url': 'https://github.com/wata727', 'followers_url': 'https://api.github.com/users/wata727/followers', 'following_url': 'https://api.github.com/users/wata727/following{/other_user}', 'gists_url': 'https://api.github.com/users/wata727/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/wata727/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/wata727/subscriptions', 'organizations_url': 'https://api.github.com/users/wata727/orgs', 'repos_url': 'https://api.github.com/users/wata727/repos', 'events_url': 'https://api.github.com/users/wata727/events{/privacy}', 'received_events_url': 'https://api.github.com/users/wata727/received_events', 'type': 'User', 'site_admin': False}",2023-07-05T07:44:10Z,2023-07-05T07:44:10Z,CONTRIBUTOR,"@Edouard-chin Thank you for your feedback!

As you say, it may seem weird behavior that `save!` does not raise an exception when raising `ActiveRecord::Rollback` in `after_create`. However, in my opinion, it is a common understanding that callbacks are invoked within a transaction. So I think what a developer expects when raising `ActiveRecord::Rollback` in a callback is that it rollbacks without exception.

Fortunately, `throw(:abort)` and exceptions other than `ActiveRecord::Rollback` are immediately raised as exceptions in your snippet case. On the other hand, in my issue, neither exception is raised, so if there is no problem with the behavior when `ActiveRecord::Rollback` is raised in the callback, I think that the patch in the association makes sense.

What do you think?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1621214399/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48640
https://api.github.com/repos/rails/rails/issues/comments/1621990251,https://github.com/rails/rails/pull/48640#issuecomment-1621990251,https://api.github.com/repos/rails/rails/issues/48640,1621990251,IC_kwDNIULOYK2baw,"{'login': 'Edouard-chin', 'id': 8122246, 'node_id': 'MDQ6VXNlcjgxMjIyNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8122246?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Edouard-chin', 'html_url': 'https://github.com/Edouard-chin', 'followers_url': 'https://api.github.com/users/Edouard-chin/followers', 'following_url': 'https://api.github.com/users/Edouard-chin/following{/other_user}', 'gists_url': 'https://api.github.com/users/Edouard-chin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Edouard-chin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Edouard-chin/subscriptions', 'organizations_url': 'https://api.github.com/users/Edouard-chin/orgs', 'repos_url': 'https://api.github.com/users/Edouard-chin/repos', 'events_url': 'https://api.github.com/users/Edouard-chin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Edouard-chin/received_events', 'type': 'User', 'site_admin': False}",2023-07-05T15:23:40Z,2023-07-05T15:23:40Z,MEMBER,"Thanks for your explanation!

> [...] a developer expects when raising ActiveRecord::Rollback in a callback is that it rollbacks without exception

I see your point, but wouldn't this patch behaves in the same way if a rollback is raised in the autosaved association?

```ruby
class Account < ActiveRecord::Base
  after_save { raise ActiveRecord::RecordRollback }
end

class Supplier < ActiveRecord::Base
  has_one :account, autosave: true
end

supplier = Supplier.new
supplier.build_account
supplier.save! # Before: no error is raised. Now: a RecordInvalid is raised.
```

I couldn't find anything in the docs or a test case that says what happens when a rollback is issued when a bang method was called (`save!`, `update!`...). I would have assumed that it fails more loudly whatever the cause is that a record wasn't created.

Maybe we can go with your solution since it's similar to #36210 and it has the advantage of not changing the behaviour of bang methods when a rollback is issued (at least when a record is not autosaved).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1621990251/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48640
https://api.github.com/repos/rails/rails/issues/comments/1622967589,https://github.com/rails/rails/pull/48640#issuecomment-1622967589,https://api.github.com/repos/rails/rails/issues/48640,1622967589,IC_kwDNIULOYLyFJQ,"{'login': 'wata727', 'id': 9624059, 'node_id': 'MDQ6VXNlcjk2MjQwNTk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9624059?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/wata727', 'html_url': 'https://github.com/wata727', 'followers_url': 'https://api.github.com/users/wata727/followers', 'following_url': 'https://api.github.com/users/wata727/following{/other_user}', 'gists_url': 'https://api.github.com/users/wata727/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/wata727/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/wata727/subscriptions', 'organizations_url': 'https://api.github.com/users/wata727/orgs', 'repos_url': 'https://api.github.com/users/wata727/repos', 'events_url': 'https://api.github.com/users/wata727/events{/privacy}', 'received_events_url': 'https://api.github.com/users/wata727/received_events', 'type': 'User', 'site_admin': False}",2023-07-06T04:42:39Z,2023-07-06T04:42:39Z,CONTRIBUTOR,"> but wouldn't this patch behaves in the same way if a rollback is raised in the autosaved association?

Good point. Based on the former principle, it certainly seems inconsistent that `RecordInvalid` is raised in this case.

On the other hand, I assume the important point is that it also failed to save the `supplier`. Intuitively, I guess it's expected behavior that only the `supplier` will be saved successfully and the `supplier.account` will not be saved without exception. However, this clearly contradicts `autosave`'s behavior, so raising an exception seems right.

> Maybe we can go with your solution since it's similar to https://github.com/rails/rails/pull/36210 and it has the advantage of not changing the behaviour of bang methods when a rollback is issued (at least when a record is not autosaved).

Agreed. I would like to go in this direction 🙏 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1622967589/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48640
https://api.github.com/repos/rails/rails/issues/comments/1668932365,https://github.com/rails/rails/pull/48640#issuecomment-1668932365,https://api.github.com/repos/rails/rails/issues/48640,1668932365,IC_kwDNIULOY3njDQ,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-08-08T05:28:37Z,2023-08-08T05:28:37Z,MEMBER,"This looks like (basically) the same as #36839, would you mind adding 

`Co-authored-by: Takayuki Nakata <f.seasons017@gmail.com>`

to the commit message and `Fixes #36833` to the PR description?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1668932365/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48640
https://api.github.com/repos/rails/rails/issues/comments/1669643390,https://github.com/rails/rails/pull/48640#issuecomment-1669643390,https://api.github.com/repos/rails/rails/issues/48640,1669643390,IC_kwDNIULOY4S8fg,"{'login': 'wata727', 'id': 9624059, 'node_id': 'MDQ6VXNlcjk2MjQwNTk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9624059?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/wata727', 'html_url': 'https://github.com/wata727', 'followers_url': 'https://api.github.com/users/wata727/followers', 'following_url': 'https://api.github.com/users/wata727/following{/other_user}', 'gists_url': 'https://api.github.com/users/wata727/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/wata727/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/wata727/subscriptions', 'organizations_url': 'https://api.github.com/users/wata727/orgs', 'repos_url': 'https://api.github.com/users/wata727/repos', 'events_url': 'https://api.github.com/users/wata727/events{/privacy}', 'received_events_url': 'https://api.github.com/users/wata727/received_events', 'type': 'User', 'site_admin': False}",2023-08-08T13:41:27Z,2023-08-08T13:41:27Z,CONTRIBUTOR,"Thank you for pointing that out. I missed this issue.
Added the co-author and edited the PR description.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1669643390/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48640
https://api.github.com/repos/rails/rails/issues/comments/1618528511,https://github.com/rails/rails/issues/48633#issuecomment-1618528511,https://api.github.com/repos/rails/rails/issues/48633,1618528511,IC_kwDNIULOYHjI_w,"{'login': 'wata727', 'id': 9624059, 'node_id': 'MDQ6VXNlcjk2MjQwNTk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9624059?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/wata727', 'html_url': 'https://github.com/wata727', 'followers_url': 'https://api.github.com/users/wata727/followers', 'following_url': 'https://api.github.com/users/wata727/following{/other_user}', 'gists_url': 'https://api.github.com/users/wata727/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/wata727/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/wata727/subscriptions', 'organizations_url': 'https://api.github.com/users/wata727/orgs', 'repos_url': 'https://api.github.com/users/wata727/repos', 'events_url': 'https://api.github.com/users/wata727/events{/privacy}', 'received_events_url': 'https://api.github.com/users/wata727/received_events', 'type': 'User', 'site_admin': False}",2023-07-03T14:52:44Z,2023-07-03T15:18:05Z,CONTRIBUTOR,"Hmm, `throw(:abort)` is not caught by the callback terminator since `has_one` is saved in `after_create` or `after_update`.
https://github.com/rails/rails/blob/v7.0.6/activesupport/lib/active_support/callbacks.rb#L683-L692
https://github.com/rails/rails/blob/v7.0.6/activerecord/lib/active_record/autosave_association.rb#L207-L208

This is inconsistent with `belongs_to`, but we can now raise an exception by raising `RecordInvalid` instead of `RecordNotSaved`.
Given that `has_many` always raises `RecordInvalid`, I don't think it's a bad idea.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1618528511/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48633
https://api.github.com/repos/rails/rails/issues/comments/1617094109,https://github.com/rails/rails/issues/48629#issuecomment-1617094109,https://api.github.com/repos/rails/rails/issues/48629,1617094109,IC_kwDNIULOYGLl3Q,"{'login': 'augustosamame', 'id': 16038063, 'node_id': 'MDQ6VXNlcjE2MDM4MDYz', 'avatar_url': 'https://avatars.githubusercontent.com/u/16038063?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/augustosamame', 'html_url': 'https://github.com/augustosamame', 'followers_url': 'https://api.github.com/users/augustosamame/followers', 'following_url': 'https://api.github.com/users/augustosamame/following{/other_user}', 'gists_url': 'https://api.github.com/users/augustosamame/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/augustosamame/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/augustosamame/subscriptions', 'organizations_url': 'https://api.github.com/users/augustosamame/orgs', 'repos_url': 'https://api.github.com/users/augustosamame/repos', 'events_url': 'https://api.github.com/users/augustosamame/events{/privacy}', 'received_events_url': 'https://api.github.com/users/augustosamame/received_events', 'type': 'User', 'site_admin': False}",2023-07-03T01:35:33Z,2023-07-03T01:50:34Z,NONE,"Figured it out, sort of.
If I add `@post = Post.new` to index controller:

```
 def index
    @posts = Post.all
    @post = Post.new
  end
```

`label(:post, :body)` starts working in the index view

So I assume the issue is that `:post` does not exist for index view. However, is this still not a bug?
`label(:model, :attribute)` can be used to keep model attribute labels translations DRY. And having it not available in index views is kind of weird. And the workaround is even weirder. I don't want to pollute my index controller this way just to be able to use `label(:model, :attribute)` everywhere.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1617094109/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48629
https://api.github.com/repos/rails/rails/issues/comments/1620657249,https://github.com/rails/rails/issues/48629#issuecomment-1620657249,https://api.github.com/repos/rails/rails/issues/48629,1620657249,IC_kwDNIULOYJlEYQ,"{'login': 'Edouard-chin', 'id': 8122246, 'node_id': 'MDQ6VXNlcjgxMjIyNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8122246?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Edouard-chin', 'html_url': 'https://github.com/Edouard-chin', 'followers_url': 'https://api.github.com/users/Edouard-chin/followers', 'following_url': 'https://api.github.com/users/Edouard-chin/following{/other_user}', 'gists_url': 'https://api.github.com/users/Edouard-chin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Edouard-chin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Edouard-chin/subscriptions', 'organizations_url': 'https://api.github.com/users/Edouard-chin/orgs', 'repos_url': 'https://api.github.com/users/Edouard-chin/repos', 'events_url': 'https://api.github.com/users/Edouard-chin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Edouard-chin/received_events', 'type': 'User', 'site_admin': False}",2023-07-04T19:44:07Z,2023-07-04T19:44:07Z,MEMBER,"Dug a bit on this and you are right about the translation not picked up on the `index` page. Your assumption is also correct `label(:post, :body)`, `:post` doesn't have a corresponding instance variable so this method never get called https://github.com/rails/rails/blob/2d6f523ba5d47a03ad3e3205c24a3fa13a3b8ad1/actionview/lib/action_view/helpers/tags/translator.rb#L31-L34


That being said, I was curious whether the `label` tag was semantically valid outside a form control. According to the [W3C it is valid unless a `for` attribute maps to an un-existing labelable element](https://html.spec.whatwg.org/multipage/forms.html#the-label-element).
In Rails the `label` tag always applies a `for` attribute, so if a user uses the `label` tag it also needs to create a corresponding `input` or `textarea` field. The snippet in your case is not valid html.

To summarize, I think the translation thing is a bug, but I believe to properly fix it we should first modify the `tag` helper to be used without a labelable element.

For now, I'd suggest not using the `label` tag for your use case. Maybe you can create a small helper, sth like:

```ruby
def labelled(attribute, model)
  content_tag(:label) { model.human_attribute_name(attribute) }
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1620657249/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48629
https://api.github.com/repos/rails/rails/issues/comments/1620772903,https://github.com/rails/rails/issues/48629#issuecomment-1620772903,https://api.github.com/repos/rails/rails/issues/48629,1620772903,IC_kwDNIULOYJsIJw,"{'login': 'augustosamame', 'id': 16038063, 'node_id': 'MDQ6VXNlcjE2MDM4MDYz', 'avatar_url': 'https://avatars.githubusercontent.com/u/16038063?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/augustosamame', 'html_url': 'https://github.com/augustosamame', 'followers_url': 'https://api.github.com/users/augustosamame/followers', 'following_url': 'https://api.github.com/users/augustosamame/following{/other_user}', 'gists_url': 'https://api.github.com/users/augustosamame/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/augustosamame/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/augustosamame/subscriptions', 'organizations_url': 'https://api.github.com/users/augustosamame/orgs', 'repos_url': 'https://api.github.com/users/augustosamame/repos', 'events_url': 'https://api.github.com/users/augustosamame/events{/privacy}', 'received_events_url': 'https://api.github.com/users/augustosamame/received_events', 'type': 'User', 'site_admin': False}",2023-07-04T21:40:27Z,2023-07-04T21:40:27Z,NONE,Thanks for the explanation. Rails syntactic sugar sometimes makes us lazy. Too much of a good thing I guess. Will switch to helper in order to fix this without polluting my controllers. Thanks!,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1620772903/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48629
https://api.github.com/repos/rails/rails/issues/comments/1743821188,https://github.com/rails/rails/issues/48629#issuecomment-1743821188,https://api.github.com/repos/rails/rails/issues/48629,1743821188,IC_kwDNIULOZ_CZhA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-10-02T21:51:33Z,2023-10-02T21:51:33Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1743821188/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48629
https://api.github.com/repos/rails/rails/issues/comments/1646976026,https://github.com/rails/rails/pull/48628#issuecomment-1646976026,https://api.github.com/repos/rails/rails/issues/48628,1646976026,IC_kwDNIULOYircGg,"{'login': 'ideasasylum', 'id': 14988, 'node_id': 'MDQ6VXNlcjE0OTg4', 'avatar_url': 'https://avatars.githubusercontent.com/u/14988?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ideasasylum', 'html_url': 'https://github.com/ideasasylum', 'followers_url': 'https://api.github.com/users/ideasasylum/followers', 'following_url': 'https://api.github.com/users/ideasasylum/following{/other_user}', 'gists_url': 'https://api.github.com/users/ideasasylum/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ideasasylum/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ideasasylum/subscriptions', 'organizations_url': 'https://api.github.com/users/ideasasylum/orgs', 'repos_url': 'https://api.github.com/users/ideasasylum/repos', 'events_url': 'https://api.github.com/users/ideasasylum/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ideasasylum/received_events', 'type': 'User', 'site_admin': False}",2023-07-23T22:30:30Z,2023-07-23T22:30:30Z,NONE,"I just checked out Rails main to see how the generated columns work with `previous_changes`. It worked on `create` but doesn't on `update` 😞 

Then I tried this branch and it works as expected 🥳 

Given a virtual column like:

```ruby
add_column :products, :premium, :virtual, type: :boolean, as: ""price >= 1000"", stored: true
```

I could do:

```ruby
product = Product.create! user: u, price: 100
product.premium
=> false
product.update price: 2000
=> true
product.premium
=> true
product.previous_changes
=> 
{""price""=>[100, 2000],
 ""updated_at""=>[Sun, 23 Jul 2023 22:22:35.416328000 UTC +00:00, Sun, 23 Jul 2023 22:22:51.945466000 UTC +00:00],
 ""premium""=>[false, true]}
```

Yay! I can see the changes caused by the update of the `premium` virtual column

I hope this makes it into 7.1 as the virtual columns will solve a gnarly problem for me if the dirty tracking works for them","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1646976026/reactions', 'total_count': 4, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 4, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48628
https://api.github.com/repos/rails/rails/issues/comments/1673572853,https://github.com/rails/rails/pull/48628#issuecomment-1673572853,https://api.github.com/repos/rails/rails/issues/48628,1673572853,IC_kwDNIULOY8Cx9Q,"{'login': 'excid3', 'id': 67093, 'node_id': 'MDQ6VXNlcjY3MDkz', 'avatar_url': 'https://avatars.githubusercontent.com/u/67093?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/excid3', 'html_url': 'https://github.com/excid3', 'followers_url': 'https://api.github.com/users/excid3/followers', 'following_url': 'https://api.github.com/users/excid3/following{/other_user}', 'gists_url': 'https://api.github.com/users/excid3/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/excid3/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/excid3/subscriptions', 'organizations_url': 'https://api.github.com/users/excid3/orgs', 'repos_url': 'https://api.github.com/users/excid3/repos', 'events_url': 'https://api.github.com/users/excid3/events{/privacy}', 'received_events_url': 'https://api.github.com/users/excid3/received_events', 'type': 'User', 'site_admin': False}",2023-08-10T16:50:31Z,2023-08-10T16:50:31Z,CONTRIBUTOR,Ran into this one today as well. Would love to see this fixed.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1673572853/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48628
https://api.github.com/repos/rails/rails/issues/comments/1701561585,https://github.com/rails/rails/pull/48628#issuecomment-1701561585,https://api.github.com/repos/rails/rails/issues/48628,1701561585,IC_kwDNIULOZWvE8Q,"{'login': 'abaldwin88', 'id': 15172605, 'node_id': 'MDQ6VXNlcjE1MTcyNjA1', 'avatar_url': 'https://avatars.githubusercontent.com/u/15172605?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abaldwin88', 'html_url': 'https://github.com/abaldwin88', 'followers_url': 'https://api.github.com/users/abaldwin88/followers', 'following_url': 'https://api.github.com/users/abaldwin88/following{/other_user}', 'gists_url': 'https://api.github.com/users/abaldwin88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abaldwin88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abaldwin88/subscriptions', 'organizations_url': 'https://api.github.com/users/abaldwin88/orgs', 'repos_url': 'https://api.github.com/users/abaldwin88/repos', 'events_url': 'https://api.github.com/users/abaldwin88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abaldwin88/received_events', 'type': 'User', 'site_admin': False}",2023-08-31T18:31:22Z,2023-08-31T18:31:22Z,CONTRIBUTOR,Rebased onto the latest from main. Added a test for dirty tracking behavior based on the example provided by @ideasasylum,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1701561585/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48628
https://api.github.com/repos/rails/rails/issues/comments/1726258904,https://github.com/rails/rails/pull/48628#issuecomment-1726258904,https://api.github.com/repos/rails/rails/issues/48628,1726258904,IC_kwDNIULOZuSe2A,"{'login': 'abaldwin88', 'id': 15172605, 'node_id': 'MDQ6VXNlcjE1MTcyNjA1', 'avatar_url': 'https://avatars.githubusercontent.com/u/15172605?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abaldwin88', 'html_url': 'https://github.com/abaldwin88', 'followers_url': 'https://api.github.com/users/abaldwin88/followers', 'following_url': 'https://api.github.com/users/abaldwin88/following{/other_user}', 'gists_url': 'https://api.github.com/users/abaldwin88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abaldwin88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abaldwin88/subscriptions', 'organizations_url': 'https://api.github.com/users/abaldwin88/orgs', 'repos_url': 'https://api.github.com/users/abaldwin88/repos', 'events_url': 'https://api.github.com/users/abaldwin88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abaldwin88/received_events', 'type': 'User', 'site_admin': False}",2023-09-19T18:18:04Z,2023-09-19T18:18:04Z,CONTRIBUTOR,"Thanks for the feedback @nvasilevski. I've implemented your suggestion for keeping the signature the same expect when `returning` is specified. I also made a couple other small revisions based on your input, added docs, and rebased onto latest from `main`.

Build error from Rubocop appears to be from `main`. This PR does not modify `action_mailer_basics.md`.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1726258904/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48628
https://api.github.com/repos/rails/rails/issues/comments/1612353301,https://github.com/rails/rails/pull/48607#issuecomment-1612353301,https://api.github.com/repos/rails/rails/issues/48607,1612353301,IC_kwDNIULOYBqPFQ,"{'login': 'lazaronixon', 'id': 2651240, 'node_id': 'MDQ6VXNlcjI2NTEyNDA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2651240?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lazaronixon', 'html_url': 'https://github.com/lazaronixon', 'followers_url': 'https://api.github.com/users/lazaronixon/followers', 'following_url': 'https://api.github.com/users/lazaronixon/following{/other_user}', 'gists_url': 'https://api.github.com/users/lazaronixon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lazaronixon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lazaronixon/subscriptions', 'organizations_url': 'https://api.github.com/users/lazaronixon/orgs', 'repos_url': 'https://api.github.com/users/lazaronixon/repos', 'events_url': 'https://api.github.com/users/lazaronixon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lazaronixon/received_events', 'type': 'User', 'site_admin': False}",2023-06-29T02:36:13Z,2023-06-29T02:36:13Z,CONTRIBUTOR,@rafaelfranca ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1612353301/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48607
https://api.github.com/repos/rails/rails/issues/comments/1613395140,https://github.com/rails/rails/pull/48607#issuecomment-1613395140,https://api.github.com/repos/rails/rails/issues/48607,1613395140,IC_kwDNIULOYCp0xA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-06-29T15:27:29Z,2023-06-29T15:27:29Z,MEMBER,I reverted the change so we can improve the documentation on why people would want to opt-in to this.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1613395140/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48607
https://api.github.com/repos/rails/rails/issues/comments/1658431515,https://github.com/rails/rails/pull/48607#issuecomment-1658431515,https://api.github.com/repos/rails/rails/issues/48607,1658431515,IC_kwDNIULOYtmoGw,"{'login': 'mcfoton', 'id': 5016246, 'node_id': 'MDQ6VXNlcjUwMTYyNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5016246?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mcfoton', 'html_url': 'https://github.com/mcfoton', 'followers_url': 'https://api.github.com/users/mcfoton/followers', 'following_url': 'https://api.github.com/users/mcfoton/following{/other_user}', 'gists_url': 'https://api.github.com/users/mcfoton/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mcfoton/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mcfoton/subscriptions', 'organizations_url': 'https://api.github.com/users/mcfoton/orgs', 'repos_url': 'https://api.github.com/users/mcfoton/repos', 'events_url': 'https://api.github.com/users/mcfoton/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mcfoton/received_events', 'type': 'User', 'site_admin': False}",2023-07-31T13:59:59Z,2023-07-31T13:59:59Z,NONE,"Just wanted to point out, that there seem to be a related behaviour for scopes and a rather breaking change [introduced in Rails 6.1](https://github.com/rails/rails/blob/05d93c7fa1a0258520e0e7b5a2f8ac32c9775c87/guides/source/6_1_release_notes.md?plain=1#L268-L288).

Named scope chain does no longer leak scope to class-level querying methods.

```
class User < ActiveRecord::Base
  scope :david, -> { User.where(name: ""David"") }
end
 ```

 Before:
 ```
 User.where(name: ""John"").david
 # SELECT * FROM users WHERE name = 'John' AND name = 'David'
 ```

 After:
 ```
 User.where(name: ""John"").david
 # SELECT * FROM users WHERE name = 'David'
 ```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1658431515/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48607
https://api.github.com/repos/rails/rails/issues/comments/1611730547,https://github.com/rails/rails/issues/48601#issuecomment-1611730547,https://api.github.com/repos/rails/rails/issues/48601,1611730547,IC_kwDNIULOYBEOcw,"{'login': 'donnfelker', 'id': 91827, 'node_id': 'MDQ6VXNlcjkxODI3', 'avatar_url': 'https://avatars.githubusercontent.com/u/91827?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/donnfelker', 'html_url': 'https://github.com/donnfelker', 'followers_url': 'https://api.github.com/users/donnfelker/followers', 'following_url': 'https://api.github.com/users/donnfelker/following{/other_user}', 'gists_url': 'https://api.github.com/users/donnfelker/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/donnfelker/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/donnfelker/subscriptions', 'organizations_url': 'https://api.github.com/users/donnfelker/orgs', 'repos_url': 'https://api.github.com/users/donnfelker/repos', 'events_url': 'https://api.github.com/users/donnfelker/events{/privacy}', 'received_events_url': 'https://api.github.com/users/donnfelker/received_events', 'type': 'User', 'site_admin': False}",2023-06-28T16:21:05Z,2023-06-28T16:21:05Z,NONE,"Interesting find ... if you execute this with inline yaml, the test works. 

This passes: 
```ruby
  test ""should have a public key loaded from inline yaml"" do
    fixture_data = YAML.load <<-EOF
    - name: Test Post
      settings: 
        public_key: ""some-fake-public-key""
    EOF
    posts = Post.create!(fixture_data)
    assert_equal ""some-fake-public-key"", posts.first.public_key_setting
  end
```

This fails:
```ruby
  test ""should have a public key loaded from fixtures"" do
    post = posts(:one)
    assert_equal ""some-fake-public-key"", post.public_key_setting
  end
```

Given this YAML in `posts.yml`:
```yaml
one:
  name: Hello World
  settings:
    public_key: ""some-fake-public-key""
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1611730547/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48601
https://api.github.com/repos/rails/rails/issues/comments/1611855816,https://github.com/rails/rails/issues/48601#issuecomment-1611855816,https://api.github.com/repos/rails/rails/issues/48601,1611855816,IC_kwDNIULOYBL3yA,"{'login': 'donnfelker', 'id': 91827, 'node_id': 'MDQ6VXNlcjkxODI3', 'avatar_url': 'https://avatars.githubusercontent.com/u/91827?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/donnfelker', 'html_url': 'https://github.com/donnfelker', 'followers_url': 'https://api.github.com/users/donnfelker/followers', 'following_url': 'https://api.github.com/users/donnfelker/following{/other_user}', 'gists_url': 'https://api.github.com/users/donnfelker/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/donnfelker/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/donnfelker/subscriptions', 'organizations_url': 'https://api.github.com/users/donnfelker/orgs', 'repos_url': 'https://api.github.com/users/donnfelker/repos', 'events_url': 'https://api.github.com/users/donnfelker/events{/privacy}', 'received_events_url': 'https://api.github.com/users/donnfelker/received_events', 'type': 'User', 'site_admin': False}",2023-06-28T18:02:05Z,2023-06-28T18:02:05Z,NONE,Possibly relates to https://github.com/rails/rails/issues/43664,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1611855816/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48601
https://api.github.com/repos/rails/rails/issues/comments/1737558286,https://github.com/rails/rails/issues/48601#issuecomment-1737558286,https://api.github.com/repos/rails/rails/issues/48601,1737558286,IC_kwDNIULOZ5EJDg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-09-27T14:49:51Z,2023-09-27T14:49:51Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1737558286/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48601
https://api.github.com/repos/rails/rails/issues/comments/1608300072,https://github.com/rails/rails/pull/48582#issuecomment-1608300072,https://api.github.com/repos/rails/rails/issues/48582,1608300072,IC_kwDNIULOX9y2KA,"{'login': 'kirs', 'id': 522155, 'node_id': 'MDQ6VXNlcjUyMjE1NQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/522155?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kirs', 'html_url': 'https://github.com/kirs', 'followers_url': 'https://api.github.com/users/kirs/followers', 'following_url': 'https://api.github.com/users/kirs/following{/other_user}', 'gists_url': 'https://api.github.com/users/kirs/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kirs/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kirs/subscriptions', 'organizations_url': 'https://api.github.com/users/kirs/orgs', 'repos_url': 'https://api.github.com/users/kirs/repos', 'events_url': 'https://api.github.com/users/kirs/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kirs/received_events', 'type': 'User', 'site_admin': False}",2023-06-26T21:38:08Z,2023-06-26T21:38:08Z,MEMBER,"@rafaelfranca @byroot curious what you think.

This is a real case in one of our apps. I've considered calling `ActiveRecord::Associations::Preloader` in one of our apps, but that seemed as a private API, so I thought we should introduce this method instead.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1608300072/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48582
https://api.github.com/repos/rails/rails/issues/comments/1608404920,https://github.com/rails/rails/pull/48582#issuecomment-1608404920,https://api.github.com/repos/rails/rails/issues/48582,1608404920,IC_kwDNIULOX95PuA,"{'login': 'jhawthorn', 'id': 131752, 'node_id': 'MDQ6VXNlcjEzMTc1Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/131752?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhawthorn', 'html_url': 'https://github.com/jhawthorn', 'followers_url': 'https://api.github.com/users/jhawthorn/followers', 'following_url': 'https://api.github.com/users/jhawthorn/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhawthorn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhawthorn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhawthorn/subscriptions', 'organizations_url': 'https://api.github.com/users/jhawthorn/orgs', 'repos_url': 'https://api.github.com/users/jhawthorn/repos', 'events_url': 'https://api.github.com/users/jhawthorn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhawthorn/received_events', 'type': 'User', 'site_admin': True}",2023-06-26T22:26:32Z,2023-06-26T22:26:32Z,MEMBER,"I think we generally agree that there should be a public API for preloading, but I'm not sure this is the right API. Only being able to preload associations on a single record is pretty limiting vs being able to preload for a list of existing records (your example is a good one, where it is useful because the two `address` loads may be batched but I think that's less common)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1608404920/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48582
https://api.github.com/repos/rails/rails/issues/comments/1609093979,https://github.com/rails/rails/pull/48582#issuecomment-1609093979,https://api.github.com/repos/rails/rails/issues/48582,1609093979,IC_kwDNIULOX-jTWw,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-06-27T09:05:24Z,2023-06-27T09:05:24Z,MEMBER,"Yeah same opinion than @jhawthorn. Having a public preload API is definitely something that is desired, the challenge is mostly the API design.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1609093979/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48582
https://api.github.com/repos/rails/rails/issues/comments/1609462183,https://github.com/rails/rails/pull/48582#issuecomment-1609462183,https://api.github.com/repos/rails/rails/issues/48582,1609462183,IC_kwDNIULOX-5xpw,"{'login': 'kirs', 'id': 522155, 'node_id': 'MDQ6VXNlcjUyMjE1NQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/522155?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kirs', 'html_url': 'https://github.com/kirs', 'followers_url': 'https://api.github.com/users/kirs/followers', 'following_url': 'https://api.github.com/users/kirs/following{/other_user}', 'gists_url': 'https://api.github.com/users/kirs/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kirs/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kirs/subscriptions', 'organizations_url': 'https://api.github.com/users/kirs/orgs', 'repos_url': 'https://api.github.com/users/kirs/repos', 'events_url': 'https://api.github.com/users/kirs/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kirs/received_events', 'type': 'User', 'site_admin': False}",2023-06-27T13:03:05Z,2023-06-27T13:03:05Z,MEMBER,"Thanks for the feedback.
Meanwhile, how 💩 do you think it is for apps to call `ActiveRecord::Associations::Preloader` directly?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1609462183/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48582
https://api.github.com/repos/rails/rails/issues/comments/1609464340,https://github.com/rails/rails/pull/48582#issuecomment-1609464340,https://api.github.com/repos/rails/rails/issues/48582,1609464340,IC_kwDNIULOX-56FA,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-06-27T13:04:20Z,2023-06-27T13:04:20Z,MEMBER,"You certainly wouldn't be the first one to do it, just test your code extensively so you get advance notice when we break it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1609464340/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48582
https://api.github.com/repos/rails/rails/issues/comments/1622630639,https://github.com/rails/rails/pull/48569#issuecomment-1622630639,https://api.github.com/repos/rails/rails/issues/48569,1622630639,IC_kwDNIULOYLdg7w,"{'login': 'Edouard-chin', 'id': 8122246, 'node_id': 'MDQ6VXNlcjgxMjIyNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8122246?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Edouard-chin', 'html_url': 'https://github.com/Edouard-chin', 'followers_url': 'https://api.github.com/users/Edouard-chin/followers', 'following_url': 'https://api.github.com/users/Edouard-chin/following{/other_user}', 'gists_url': 'https://api.github.com/users/Edouard-chin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Edouard-chin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Edouard-chin/subscriptions', 'organizations_url': 'https://api.github.com/users/Edouard-chin/orgs', 'repos_url': 'https://api.github.com/users/Edouard-chin/repos', 'events_url': 'https://api.github.com/users/Edouard-chin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Edouard-chin/received_events', 'type': 'User', 'site_admin': False}",2023-07-05T22:45:56Z,2023-07-06T02:24:54Z,MEMBER,"Thanks for bringing this up!

Can confirm that it currently doesn't pass client validation on Safari. But it's not related to Safari not handling seconds. It's because by default, the `step` attribute on Safari is 60 (see the webkit ticket [here](https://bugs.webkit.org/show_bug.cgi?id=215090)).

This basically means that by default Safari will fail validation unless a time ends with 00 seconds.

I'd say we should keep the seconds by default, but modify the `step` to be `1` instead. I tried with a step of a 1 on a few browsers (Safari, Chrome, Brave) and it works fine.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1622630639/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48569
https://api.github.com/repos/rails/rails/issues/comments/1622890718,https://github.com/rails/rails/pull/48569#issuecomment-1622890718,https://api.github.com/repos/rails/rails/issues/48569,1622890718,IC_kwDNIULOYLtY3g,"{'login': 'chaffeqa', 'id': 287640, 'node_id': 'MDQ6VXNlcjI4NzY0MA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/287640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/chaffeqa', 'html_url': 'https://github.com/chaffeqa', 'followers_url': 'https://api.github.com/users/chaffeqa/followers', 'following_url': 'https://api.github.com/users/chaffeqa/following{/other_user}', 'gists_url': 'https://api.github.com/users/chaffeqa/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/chaffeqa/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/chaffeqa/subscriptions', 'organizations_url': 'https://api.github.com/users/chaffeqa/orgs', 'repos_url': 'https://api.github.com/users/chaffeqa/repos', 'events_url': 'https://api.github.com/users/chaffeqa/events{/privacy}', 'received_events_url': 'https://api.github.com/users/chaffeqa/received_events', 'type': 'User', 'site_admin': False}",2023-07-06T03:03:24Z,2023-07-06T03:03:24Z,CONTRIBUTOR,"Oh wow I never thought of that possibility!  great research @Edouard-chin ! 

I agree, maybe I can find some time to change the PR
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1622890718/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48569
https://api.github.com/repos/rails/rails/issues/comments/1736531667,https://github.com/rails/rails/issues/48543#issuecomment-1736531667,https://api.github.com/repos/rails/rails/issues/48543,1736531667,IC_kwDNIULOZ4Fe0w,"{'login': 'palkan', 'id': 1516722, 'node_id': 'MDQ6VXNlcjE1MTY3MjI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1516722?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/palkan', 'html_url': 'https://github.com/palkan', 'followers_url': 'https://api.github.com/users/palkan/followers', 'following_url': 'https://api.github.com/users/palkan/following{/other_user}', 'gists_url': 'https://api.github.com/users/palkan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/palkan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/palkan/subscriptions', 'organizations_url': 'https://api.github.com/users/palkan/orgs', 'repos_url': 'https://api.github.com/users/palkan/repos', 'events_url': 'https://api.github.com/users/palkan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/palkan/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T01:31:22Z,2023-09-27T01:31:22Z,CONTRIBUTOR,"Hey @Georgegriff!

The issue you linked looks interesting, though I never experienced such problems with Action Cable (or AnyCable). The `welcome` event is sent asynchronously after the HTTP Upgrade response, so it shouldn't be our case. However, it's still worth checking this hypothesis: you can add a small `sleep` to the `Connection#connect` method (the `welcome` event is sent only after it has been executed).

Re: logs.

I don't see any logs mentioning subscription attempts (I believe, we should see some from the [guarantor](https://github.com/rails/rails/blob/d87ecd04671c3967f4a334e9f947ddc2140aea33/actioncable/app/javascript/action_cable/subscription_guarantor.js#L12)).

How do you check that `welcome` hasn't been received? (This log line: `Welcome not received within 20s`). 
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1736531667/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48543
https://api.github.com/repos/rails/rails/issues/comments/1599640230,https://github.com/rails/rails/issues/48535#issuecomment-1599640230,https://api.github.com/repos/rails/rails/issues/48535,1599640230,IC_kwDNIULOX1iSpg,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-06-20T22:10:22Z,2023-06-20T22:10:22Z,CONTRIBUTOR,"Can you verify if the issue still persists with the latest changes from the `main` branch? If so, can you create a reproducible test script using https://github.com/rails/rails/blob/main/guides/bug_report_templates/active_record_main.rb template?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1599640230/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48535
https://api.github.com/repos/rails/rails/issues/comments/1601652840,https://github.com/rails/rails/issues/48535#issuecomment-1601652840,https://api.github.com/repos/rails/rails/issues/48535,1601652840,IC_kwDNIULOX3dIaA,"{'login': 'abaldwin88', 'id': 15172605, 'node_id': 'MDQ6VXNlcjE1MTcyNjA1', 'avatar_url': 'https://avatars.githubusercontent.com/u/15172605?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abaldwin88', 'html_url': 'https://github.com/abaldwin88', 'followers_url': 'https://api.github.com/users/abaldwin88/followers', 'following_url': 'https://api.github.com/users/abaldwin88/following{/other_user}', 'gists_url': 'https://api.github.com/users/abaldwin88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abaldwin88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abaldwin88/subscriptions', 'organizations_url': 'https://api.github.com/users/abaldwin88/orgs', 'repos_url': 'https://api.github.com/users/abaldwin88/repos', 'events_url': 'https://api.github.com/users/abaldwin88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abaldwin88/received_events', 'type': 'User', 'site_admin': False}",2023-06-21T20:48:59Z,2023-06-21T20:48:59Z,CONTRIBUTOR,"Looks like the issue persists on `main`.  Here's a reproduction script...

```rb
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # gem ""activerecord"", ""~> 6.0.0"" # PASS
  # gem ""activerecord"", ""~> 6.1.0"" # FAIL
  gem ""rails"", github: ""rails/rails"", branch: ""main"" # FAIL

  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :locations, force: true do |t|
    t.json :dimensions
  end

end

class Location < ActiveRecord::Base
end

class BugTest < Minitest::Test
  def test_json_where
    post = Location.create!(dimensions: { store_id: 7 })

    store_ids = [{ ""store_id"" => 7 }, { ""store_id"" => 8 }]
    assert_equal 1, Location.where(dimensions: store_ids).size
  end
end
```
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1601652840/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48535
https://api.github.com/repos/rails/rails/issues/comments/1601714655,https://github.com/rails/rails/issues/48535#issuecomment-1601714655,https://api.github.com/repos/rails/rails/issues/48535,1601714655,IC_kwDNIULOX3g53w,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-06-21T21:35:15Z,2023-06-21T23:17:35Z,CONTRIBUTOR,"Thanks for the test case, that was helpful! The problem is the same as in https://github.com/rails/rails/issues/48072#issuecomment-1523996933.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1601714655/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48535
https://api.github.com/repos/rails/rails/issues/comments/1606895044,https://github.com/rails/rails/issues/48535#issuecomment-1606895044,https://api.github.com/repos/rails/rails/issues/48535,1606895044,IC_kwDNIULOX8dFxA,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-06-26T07:43:32Z,2023-06-26T07:43:32Z,MEMBER,Looks like this behavior change was introduced via https://github.com/rails/rails/commit/4b1122c572060e9a2a344608b15dfcbb7ff82213,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1606895044/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48535
https://api.github.com/repos/rails/rails/issues/comments/1598104514,https://github.com/rails/rails/issues/48528#issuecomment-1598104514,https://api.github.com/repos/rails/rails/issues/48528,1598104514,IC_kwDNIULOX0Ejwg,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-06-20T04:39:49Z,2023-06-20T04:39:49Z,MEMBER,"I do think we can move it to be the first one, but in fact I don't think the Executor should be a middleware at this point. It is too important to be reordered, or even delayed. I believe it should just be called in the `Application` `#call` method.

@byroot @matthewd do you know any reason why we would not make the Executor not optional in the form of a middleware?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1598104514/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48528
https://api.github.com/repos/rails/rails/issues/comments/1598313360,https://github.com/rails/rails/issues/48528#issuecomment-1598313360,https://api.github.com/repos/rails/rails/issues/48528,1598313360,IC_kwDNIULOX0RTkA,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-06-20T08:07:50Z,2023-06-20T08:07:50Z,MEMBER,"That seem like an option, I don't forsee particular problem, but it would be interesting to check which middleware are currently sitting before it. e.g. Perhaps `ShowException` in case an executor callback raise? Things like that.


","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1598313360/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48528
https://api.github.com/repos/rails/rails/issues/comments/1598396453,https://github.com/rails/rails/issues/48528#issuecomment-1598396453,https://api.github.com/repos/rails/rails/issues/48528,1598396453,IC_kwDNIULOX0WYJQ,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-06-20T09:04:48Z,2023-06-20T09:04:48Z,MEMBER,"I feel like the middleware stack is in a constant state of tension because everything feels like it should happen before everything else 😅 

https://github.com/rails/rails/blob/c25cc2ead272a4c3965795139124dfe62ee5a79e/railties/test/commands/middleware_test.rb#L131-L133","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1598396453/reactions', 'total_count': 2, '+1': 0, '-1': 0, 'laugh': 2, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48528
https://api.github.com/repos/rails/rails/issues/comments/1598406971,https://github.com/rails/rails/issues/48528#issuecomment-1598406971,https://api.github.com/repos/rails/rails/issues/48528,1598406971,IC_kwDNIULOX0XBOw,"{'login': 'KJTsanaktsidis', 'id': 1418177, 'node_id': 'MDQ6VXNlcjE0MTgxNzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1418177?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/KJTsanaktsidis', 'html_url': 'https://github.com/KJTsanaktsidis', 'followers_url': 'https://api.github.com/users/KJTsanaktsidis/followers', 'following_url': 'https://api.github.com/users/KJTsanaktsidis/following{/other_user}', 'gists_url': 'https://api.github.com/users/KJTsanaktsidis/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/KJTsanaktsidis/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/KJTsanaktsidis/subscriptions', 'organizations_url': 'https://api.github.com/users/KJTsanaktsidis/orgs', 'repos_url': 'https://api.github.com/users/KJTsanaktsidis/repos', 'events_url': 'https://api.github.com/users/KJTsanaktsidis/events{/privacy}', 'received_events_url': 'https://api.github.com/users/KJTsanaktsidis/received_events', 'type': 'User', 'site_admin': False}",2023-06-20T09:11:12Z,2023-06-20T09:11:12Z,NONE,"> it would be interesting to check which middleware are currently sitting before it

Assuming I’m not missing anything important…

- `ActionDispatch::HostAuthorization`
- `ActionDispatch::AssumeSSL`
- `ActionDispatch::SSL`
- `Rack::Sendfile`
- `ActionDispatch::Static`
- `Rack::Cache`
- `Rack::Lock`

I don’t think any of these are benefiting from being above Executor, except maybe Lock? Actually I wonder if  we should implement `config.allow_concurrency` by putting a lock around `ExecutorWrapper#run!` and dispensing with `Rack::Lock` entirely; that way (in theory) _all_ calls to app code should be protected, including hypothetical calls from e.g. gems that have background threads.

If you reckon this makes sense I’m happy to make a PR tomorrow deleting these middlewares & unconditionally calling the executor.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1598406971/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48528
https://api.github.com/repos/rails/rails/issues/comments/1598429839,https://github.com/rails/rails/issues/48528#issuecomment-1598429839,https://api.github.com/repos/rails/rails/issues/48528,1598429839,IC_kwDNIULOX0Yajw,"{'login': 'KJTsanaktsidis', 'id': 1418177, 'node_id': 'MDQ6VXNlcjE0MTgxNzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1418177?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/KJTsanaktsidis', 'html_url': 'https://github.com/KJTsanaktsidis', 'followers_url': 'https://api.github.com/users/KJTsanaktsidis/followers', 'following_url': 'https://api.github.com/users/KJTsanaktsidis/following{/other_user}', 'gists_url': 'https://api.github.com/users/KJTsanaktsidis/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/KJTsanaktsidis/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/KJTsanaktsidis/subscriptions', 'organizations_url': 'https://api.github.com/users/KJTsanaktsidis/orgs', 'repos_url': 'https://api.github.com/users/KJTsanaktsidis/repos', 'events_url': 'https://api.github.com/users/KJTsanaktsidis/events{/privacy}', 'received_events_url': 'https://api.github.com/users/KJTsanaktsidis/received_events', 'type': 'User', 'site_admin': False}",2023-06-20T09:26:32Z,2023-06-20T09:26:32Z,NONE,"The “static files shouldn’t be affected by config.allow_concurrency = false” thing is interesting…

“Allow user code to run around static file serving calls” and “don’t invoke user-provided code in static file serving to avoid the Lock middleware” as ideas seem in complete tension.

dare I suggest, invoking the executor before middleware if allow_concurrency = true, otherwise leaving things how they are? Seems like a lot of complexity to carry around for the disjunction of two kind of niche use cases though.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1598429839/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48528
https://api.github.com/repos/rails/rails/issues/comments/1598484330,https://github.com/rails/rails/issues/48528#issuecomment-1598484330,https://api.github.com/repos/rails/rails/issues/48528,1598484330,IC_kwDNIULOX0bvag,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-06-20T10:02:56Z,2023-06-20T10:08:26Z,MEMBER,"(Sorry, I missed your above reply while writing this, so please disregard parts where I'm talking past something you already agreed/acknowledged 🙈)

Again, SendFile should not be holding database connections while it's sending the file.

HostAuthorization should be stopping incoming requests as early as possible, _before_ they start doing potentially-resource-consuming things.

If we're going to stop early and do an SSL redirect, again, that should happen before we start doing anything significant.

Wanting to wrap user code around requests that are not being handled by the user application is an outlying requirement, and not something the stack is designed to accomodate. Rearranging things to support it would degrade behaviour for most applications.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1598484330/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48528
https://api.github.com/repos/rails/rails/issues/comments/1598533124,https://github.com/rails/rails/issues/48528#issuecomment-1598533124,https://api.github.com/repos/rails/rails/issues/48528,1598533124,IC_kwDNIULOX0euBA,"{'login': 'KJTsanaktsidis', 'id': 1418177, 'node_id': 'MDQ6VXNlcjE0MTgxNzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1418177?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/KJTsanaktsidis', 'html_url': 'https://github.com/KJTsanaktsidis', 'followers_url': 'https://api.github.com/users/KJTsanaktsidis/followers', 'following_url': 'https://api.github.com/users/KJTsanaktsidis/following{/other_user}', 'gists_url': 'https://api.github.com/users/KJTsanaktsidis/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/KJTsanaktsidis/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/KJTsanaktsidis/subscriptions', 'organizations_url': 'https://api.github.com/users/KJTsanaktsidis/orgs', 'repos_url': 'https://api.github.com/users/KJTsanaktsidis/repos', 'events_url': 'https://api.github.com/users/KJTsanaktsidis/events{/privacy}', 'received_events_url': 'https://api.github.com/users/KJTsanaktsidis/received_events', 'type': 'User', 'site_admin': False}",2023-06-20T10:40:55Z,2023-06-20T10:40:55Z,NONE,"Sorry I also was writing my first reply whilst you were writing yours! 

Sounds like nothing really bad would result from lifting executor in my own app then, since we don’t serve many static file requests (I hope!). But I agree there are some finely balanced interactions here and changing the default isn’t appropriate.

I kind of wonder how many rails apps out there are injecting middlewares at the top of the stack, before the executor. Certainly we have quite a number, although by luck (or perhaps due to somebody before me who understood this all better!) none of them are using ActiveRecord, CurrentAttributes, etc, so we’re not missing any of the cleanup there.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1598533124/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48528
https://api.github.com/repos/rails/rails/issues/comments/1723178944,https://github.com/rails/rails/issues/48528#issuecomment-1723178944,https://api.github.com/repos/rails/rails/issues/48528,1723178944,IC_kwDNIULOZrWfwA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-09-18T10:58:10Z,2023-09-18T10:58:10Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1723178944/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48528
https://api.github.com/repos/rails/rails/issues/comments/1723294217,https://github.com/rails/rails/issues/48528#issuecomment-1723294217,https://api.github.com/repos/rails/rails/issues/48528,1723294217,IC_kwDNIULOZrdiCQ,"{'login': 'KJTsanaktsidis', 'id': 1418177, 'node_id': 'MDQ6VXNlcjE0MTgxNzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1418177?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/KJTsanaktsidis', 'html_url': 'https://github.com/KJTsanaktsidis', 'followers_url': 'https://api.github.com/users/KJTsanaktsidis/followers', 'following_url': 'https://api.github.com/users/KJTsanaktsidis/following{/other_user}', 'gists_url': 'https://api.github.com/users/KJTsanaktsidis/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/KJTsanaktsidis/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/KJTsanaktsidis/subscriptions', 'organizations_url': 'https://api.github.com/users/KJTsanaktsidis/orgs', 'repos_url': 'https://api.github.com/users/KJTsanaktsidis/repos', 'events_url': 'https://api.github.com/users/KJTsanaktsidis/events{/privacy}', 'received_events_url': 'https://api.github.com/users/KJTsanaktsidis/received_events', 'type': 'User', 'site_admin': False}",2023-09-18T12:19:02Z,2023-09-18T12:19:02Z,NONE,"@rafaelfranca @matthewd sounds like we’re happy with the ordering how it is, and we _dont_ want to move the executor out of rack middleware? If so I’ll go ahead and close this.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1723294217/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48528
https://api.github.com/repos/rails/rails/issues/comments/1596639402,https://github.com/rails/rails/pull/48513#issuecomment-1596639402,https://api.github.com/repos/rails/rails/issues/48513,1596639402,IC_kwDNIULOXyrIqg,"{'login': 'arikarim', 'id': 73991906, 'node_id': 'MDQ6VXNlcjczOTkxOTA2', 'avatar_url': 'https://avatars.githubusercontent.com/u/73991906?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/arikarim', 'html_url': 'https://github.com/arikarim', 'followers_url': 'https://api.github.com/users/arikarim/followers', 'following_url': 'https://api.github.com/users/arikarim/following{/other_user}', 'gists_url': 'https://api.github.com/users/arikarim/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/arikarim/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/arikarim/subscriptions', 'organizations_url': 'https://api.github.com/users/arikarim/orgs', 'repos_url': 'https://api.github.com/users/arikarim/repos', 'events_url': 'https://api.github.com/users/arikarim/events{/privacy}', 'received_events_url': 'https://api.github.com/users/arikarim/received_events', 'type': 'User', 'site_admin': False}",2023-06-19T07:14:50Z,2023-06-19T07:14:50Z,CONTRIBUTOR,"You could use:
Book.insert_all([
  Book.new(title: ""Rework"", author: ""David""),
  Book.new(title: ""Eloquent Ruby"", author: ""Russ"")
].as_json)

u dont need extra things","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1596639402/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,48513
https://api.github.com/repos/rails/rails/issues/comments/1596990669,https://github.com/rails/rails/pull/48513#issuecomment-1596990669,https://api.github.com/repos/rails/rails/issues/48513,1596990669,IC_kwDNIULOXzAkzQ,"{'login': 'TakuyaKurimoto', 'id': 75765648, 'node_id': 'MDQ6VXNlcjc1NzY1NjQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/75765648?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/TakuyaKurimoto', 'html_url': 'https://github.com/TakuyaKurimoto', 'followers_url': 'https://api.github.com/users/TakuyaKurimoto/followers', 'following_url': 'https://api.github.com/users/TakuyaKurimoto/following{/other_user}', 'gists_url': 'https://api.github.com/users/TakuyaKurimoto/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/TakuyaKurimoto/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/TakuyaKurimoto/subscriptions', 'organizations_url': 'https://api.github.com/users/TakuyaKurimoto/orgs', 'repos_url': 'https://api.github.com/users/TakuyaKurimoto/repos', 'events_url': 'https://api.github.com/users/TakuyaKurimoto/events{/privacy}', 'received_events_url': 'https://api.github.com/users/TakuyaKurimoto/received_events', 'type': 'User', 'site_admin': False}",2023-06-19T11:10:53Z,2023-06-19T11:10:53Z,CONTRIBUTOR,"@arikarim
Thanks for your comment.
I created this pr because when I convert the model to json format and run insert_all, I get the following problems, for example.

- error occurs when virtual columns are present.
- timestamps(created_at, updated_at is stored as nil.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1596990669/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48513
https://api.github.com/repos/rails/rails/issues/comments/1596318678,https://github.com/rails/rails/pull/48510#issuecomment-1596318678,https://api.github.com/repos/rails/rails/issues/48510,1596318678,IC_kwDNIULOXyXj1g,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-06-19T00:12:45Z,2023-06-19T00:12:45Z,MEMBER,That red test is unrelated.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1596318678/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48510
https://api.github.com/repos/rails/rails/issues/comments/1597321308,https://github.com/rails/rails/pull/48510#issuecomment-1597321308,https://api.github.com/repos/rails/rails/issues/48510,1597321308,IC_kwDNIULOXzUwXA,"{'login': 'olbrich', 'id': 22176, 'node_id': 'MDQ6VXNlcjIyMTc2', 'avatar_url': 'https://avatars.githubusercontent.com/u/22176?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/olbrich', 'html_url': 'https://github.com/olbrich', 'followers_url': 'https://api.github.com/users/olbrich/followers', 'following_url': 'https://api.github.com/users/olbrich/following{/other_user}', 'gists_url': 'https://api.github.com/users/olbrich/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/olbrich/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/olbrich/subscriptions', 'organizations_url': 'https://api.github.com/users/olbrich/orgs', 'repos_url': 'https://api.github.com/users/olbrich/repos', 'events_url': 'https://api.github.com/users/olbrich/events{/privacy}', 'received_events_url': 'https://api.github.com/users/olbrich/received_events', 'type': 'User', 'site_admin': False}",2023-06-19T14:48:28Z,2023-06-19T14:48:28Z,NONE,"@ghiculescu I don't think this will work quite right. On the first hit to the site you will get a nonce that is completely random and then the next hit for that session will get the session_id in the nonce and they won't match.  Mostly a problem with Turbo since the frame will get the random nonce and any subsequent requests will get something different.

My suggestion is to just initialize the session by doing something like...

```
config.content_security_policy_nonce_generator = ->(request) { request.session[:nonce] ||= SecureRandom.hex(16) }
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1597321308/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48510
https://api.github.com/repos/rails/rails/issues/comments/1597904367,https://github.com/rails/rails/pull/48510#issuecomment-1597904367,https://api.github.com/repos/rails/rails/issues/48510,1597904367,IC_kwDNIULOXz4V7w,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-06-20T00:21:39Z,2023-06-20T00:21:39Z,MEMBER,"Hmm, the downside to that approach is now you are creating a session no matter what. I'm not sure that's a good thing to recommend either.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1597904367/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48510
https://api.github.com/repos/rails/rails/issues/comments/1598695453,https://github.com/rails/rails/pull/48510#issuecomment-1598695453,https://api.github.com/repos/rails/rails/issues/48510,1598695453,IC_kwDNIULOX0ooHQ,"{'login': 'olbrich', 'id': 22176, 'node_id': 'MDQ6VXNlcjIyMTc2', 'avatar_url': 'https://avatars.githubusercontent.com/u/22176?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/olbrich', 'html_url': 'https://github.com/olbrich', 'followers_url': 'https://api.github.com/users/olbrich/followers', 'following_url': 'https://api.github.com/users/olbrich/following{/other_user}', 'gists_url': 'https://api.github.com/users/olbrich/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/olbrich/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/olbrich/subscriptions', 'organizations_url': 'https://api.github.com/users/olbrich/orgs', 'repos_url': 'https://api.github.com/users/olbrich/repos', 'events_url': 'https://api.github.com/users/olbrich/events{/privacy}', 'received_events_url': 'https://api.github.com/users/olbrich/received_events', 'type': 'User', 'site_admin': False}",2023-06-20T12:40:04Z,2023-06-20T12:40:04Z,NONE,"If the goal here is to have session-based nonces, then I don't see an alternative to having a session.  The nonce needs to be unique, and it needs to be stable for the user for Turbo to work properly.

Since this code is really just a suggestion anyway, maybe we could just document the difference between a session-based and a request-based nonce and let the end user pick which one works best for their use case.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1598695453/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48510
https://api.github.com/repos/rails/rails/issues/comments/1618535247,https://github.com/rails/rails/pull/48510#issuecomment-1618535247,https://api.github.com/repos/rails/rails/issues/48510,1618535247,IC_kwDNIULOYHjjTw,"{'login': 'javierjulio', 'id': 198547, 'node_id': 'MDQ6VXNlcjE5ODU0Nw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/198547?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/javierjulio', 'html_url': 'https://github.com/javierjulio', 'followers_url': 'https://api.github.com/users/javierjulio/followers', 'following_url': 'https://api.github.com/users/javierjulio/following{/other_user}', 'gists_url': 'https://api.github.com/users/javierjulio/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/javierjulio/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/javierjulio/subscriptions', 'organizations_url': 'https://api.github.com/users/javierjulio/orgs', 'repos_url': 'https://api.github.com/users/javierjulio/repos', 'events_url': 'https://api.github.com/users/javierjulio/events{/privacy}', 'received_events_url': 'https://api.github.com/users/javierjulio/received_events', 'type': 'User', 'site_admin': False}",2023-07-03T14:54:50Z,2023-07-03T14:54:50Z,CONTRIBUTOR,"I've recently implemented CSP in report-only mode and went with the config default that uses a request session id for the nonce generator so just ran into this issue as we had strange violations reported.

In regards to [the linked comment in the description here](https://github.com/rails/rails/pull/43227#issuecomment-1191692615), to avoid calling a private method, just update the session to trigger the load-for-write call.

```ruby
  config.content_security_policy_nonce_generator = ->(request) {
    request.session.update({}) # ensure session is loaded so we *always* get an id
    request.session.id.to_s
  }
```

This is easy to test and confirm by using a private or incognito browser window.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1618535247/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48510
https://api.github.com/repos/rails/rails/issues/comments/1619251784,https://github.com/rails/rails/pull/48510#issuecomment-1619251784,https://api.github.com/repos/rails/rails/issues/48510,1619251784,IC_kwDNIULOYIPSSA,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-07-03T23:23:20Z,2023-07-03T23:23:20Z,MEMBER,"The problem with this approach is if you a non-cookie session store (eg. active record, or redis), then every time an anonymous user visits your homepage it'll create a new session. This could result in a lot more sessions than you bargained for.

Not every app will have this problem, but for some it could be quite bad, and that's why I don't think we should recommend it as a default.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1619251784/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48510
https://api.github.com/repos/rails/rails/issues/comments/1619264008,https://github.com/rails/rails/pull/48510#issuecomment-1619264008,https://api.github.com/repos/rails/rails/issues/48510,1619264008,IC_kwDNIULOYIQCCA,"{'login': 'javierjulio', 'id': 198547, 'node_id': 'MDQ6VXNlcjE5ODU0Nw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/198547?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/javierjulio', 'html_url': 'https://github.com/javierjulio', 'followers_url': 'https://api.github.com/users/javierjulio/followers', 'following_url': 'https://api.github.com/users/javierjulio/following{/other_user}', 'gists_url': 'https://api.github.com/users/javierjulio/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/javierjulio/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/javierjulio/subscriptions', 'organizations_url': 'https://api.github.com/users/javierjulio/orgs', 'repos_url': 'https://api.github.com/users/javierjulio/repos', 'events_url': 'https://api.github.com/users/javierjulio/events{/privacy}', 'received_events_url': 'https://api.github.com/users/javierjulio/received_events', 'type': 'User', 'site_admin': False}",2023-07-03T23:44:52Z,2023-07-03T23:44:52Z,CONTRIBUTOR,"I don't recommend it either after reading your comments and others. I go for the Rails defaults as much as possible, especially on things I don't know about like this config. It just so happens the default is to use the request session id. 😔

Not sure if this matters, but I'll leave a suggestion, since we already link to the guides, how about adding another comment line above the nonce generator with a link to the guide specific section that has the key information? In the example below I'm linking to the normal guide, but [the updated content is already available in the edgeguides version](https://edgeguides.rubyonrails.org/security.html#adding-a-nonce) from #44830.

```diff
#   # Generate session nonces for permitted importmap, inline scripts, and inline styles.
+#   # For more on what value to use: https://guides.rubyonrails.org/security.html#adding-a-nonce
#   config.content_security_policy_nonce_generator = ->(request) { request.session.id || SecureRandom.hex(16) }
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1619264008/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48510
https://api.github.com/repos/rails/rails/issues/comments/1722242852,https://github.com/rails/rails/pull/48510#issuecomment-1722242852,https://api.github.com/repos/rails/rails/issues/48510,1722242852,IC_kwDNIULOZqdXJA,"{'login': 'olbrich', 'id': 22176, 'node_id': 'MDQ6VXNlcjIyMTc2', 'avatar_url': 'https://avatars.githubusercontent.com/u/22176?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/olbrich', 'html_url': 'https://github.com/olbrich', 'followers_url': 'https://api.github.com/users/olbrich/followers', 'following_url': 'https://api.github.com/users/olbrich/following{/other_user}', 'gists_url': 'https://api.github.com/users/olbrich/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/olbrich/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/olbrich/subscriptions', 'organizations_url': 'https://api.github.com/users/olbrich/orgs', 'repos_url': 'https://api.github.com/users/olbrich/repos', 'events_url': 'https://api.github.com/users/olbrich/events{/privacy}', 'received_events_url': 'https://api.github.com/users/olbrich/received_events', 'type': 'User', 'site_admin': False}",2023-09-16T14:32:33Z,2023-09-16T14:32:33Z,NONE,"> Hmm, the downside to that approach is now you are creating a session no matter what. I'm not sure that's a good thing to recommend either.

I think the default implementation actually creates a session anyway, it just does it after the nonce is generated.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1722242852/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48510
https://api.github.com/repos/rails/rails/issues/comments/1722334789,https://github.com/rails/rails/pull/48510#issuecomment-1722334789,https://api.github.com/repos/rails/rails/issues/48510,1722334789,IC_kwDNIULOZqi-RQ,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-09-16T22:54:57Z,2023-09-16T22:54:57Z,MEMBER,"> I think the default implementation actually creates a session anyway

Are you sure? This seems like a problem. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1722334789/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48510
https://api.github.com/repos/rails/rails/issues/comments/1665697267,https://github.com/rails/rails/pull/48509#issuecomment-1665697267,https://api.github.com/repos/rails/rails/issues/48509,1665697267,IC_kwDNIULOY0iF8w,"{'login': 'pjambet', 'id': 717637, 'node_id': 'MDQ6VXNlcjcxNzYzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/717637?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/pjambet', 'html_url': 'https://github.com/pjambet', 'followers_url': 'https://api.github.com/users/pjambet/followers', 'following_url': 'https://api.github.com/users/pjambet/following{/other_user}', 'gists_url': 'https://api.github.com/users/pjambet/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/pjambet/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/pjambet/subscriptions', 'organizations_url': 'https://api.github.com/users/pjambet/orgs', 'repos_url': 'https://api.github.com/users/pjambet/repos', 'events_url': 'https://api.github.com/users/pjambet/events{/privacy}', 'received_events_url': 'https://api.github.com/users/pjambet/received_events', 'type': 'User', 'site_admin': False}",2023-08-04T14:22:36Z,2023-08-04T14:22:36Z,CONTRIBUTOR,"Thanks for working on this, I didn't have the time yet, but I will check out your refactor to see how you made it work, but thanks for working on this! (and crediting me too!)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1665697267/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48509
https://api.github.com/repos/rails/rails/issues/comments/1719266396,https://github.com/rails/rails/issues/48497#issuecomment-1719266396,https://api.github.com/repos/rails/rails/issues/48497,1719266396,IC_kwDNIULOZnnsXA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-09-14T11:24:14Z,2023-09-14T11:24:14Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1719266396/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48497
https://api.github.com/repos/rails/rails/issues/comments/1719832673,https://github.com/rails/rails/issues/48497#issuecomment-1719832673,https://api.github.com/repos/rails/rails/issues/48497,1719832673,IC_kwDNIULOZoKQYQ,"{'login': 'morgoth', 'id': 10766, 'node_id': 'MDQ6VXNlcjEwNzY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/10766?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/morgoth', 'html_url': 'https://github.com/morgoth', 'followers_url': 'https://api.github.com/users/morgoth/followers', 'following_url': 'https://api.github.com/users/morgoth/following{/other_user}', 'gists_url': 'https://api.github.com/users/morgoth/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/morgoth/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/morgoth/subscriptions', 'organizations_url': 'https://api.github.com/users/morgoth/orgs', 'repos_url': 'https://api.github.com/users/morgoth/repos', 'events_url': 'https://api.github.com/users/morgoth/events{/privacy}', 'received_events_url': 'https://api.github.com/users/morgoth/received_events', 'type': 'User', 'site_admin': False}",2023-09-14T17:05:52Z,2023-09-14T17:05:52Z,MEMBER,This issue still exists and there is a fix for it via https://github.com/rails/rails/pull/48568,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1719832673/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48497
https://api.github.com/repos/rails/rails/issues/comments/1599608778,https://github.com/rails/rails/issues/48479#issuecomment-1599608778,https://api.github.com/repos/rails/rails/issues/48479,1599608778,IC_kwDNIULOX1gXyg,"{'login': 'hahmed', 'id': 658005, 'node_id': 'MDQ6VXNlcjY1ODAwNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/658005?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hahmed', 'html_url': 'https://github.com/hahmed', 'followers_url': 'https://api.github.com/users/hahmed/followers', 'following_url': 'https://api.github.com/users/hahmed/following{/other_user}', 'gists_url': 'https://api.github.com/users/hahmed/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hahmed/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hahmed/subscriptions', 'organizations_url': 'https://api.github.com/users/hahmed/orgs', 'repos_url': 'https://api.github.com/users/hahmed/repos', 'events_url': 'https://api.github.com/users/hahmed/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hahmed/received_events', 'type': 'User', 'site_admin': False}",2023-06-20T21:48:58Z,2023-06-20T21:48:58Z,CONTRIBUTOR,"I think both of these are more of a feature request than a bug, that second one has been reported previously over at https://github.com/rails/rails/issues/46207. Mostly the issue tracker is for tracking bugs, so I think this should be closed.

Feel free to submit a PR to address those issues.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1599608778/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48479
https://api.github.com/repos/rails/rails/issues/comments/1711951142,https://github.com/rails/rails/issues/48479#issuecomment-1711951142,https://api.github.com/repos/rails/rails/issues/48479,1711951142,IC_kwDNIULOZgpNJg,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-09-08T16:40:18Z,2023-09-08T16:40:18Z,CONTRIBUTOR,"@ptamarshall Regarding 1:

For `rails generate model Comment user:references commentable:references{polymorphic} content:text` I got:
```ruby
class Comment < ApplicationRecord
  belongs_to :user
  belongs_to :commentable, polymorphic: true
end
```

> In this scenario, developers still need to manually edit the model files to add the correct associations.

Did you mean to add association to `User`?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1711951142/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48479
https://api.github.com/repos/rails/rails/issues/comments/1591208546,https://github.com/rails/rails/issues/48468#issuecomment-1591208546,https://api.github.com/repos/rails/rails/issues/48468,1591208546,IC_kwDNIULOXtfqYg,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-06-14T13:26:21Z,2023-06-14T13:26:21Z,MEMBER,"Hi @krebbl there's not enough information here for us to determine what's wrong. We don't have the bandwidth for application support and haven't received any other reports of behavior like this.

I noticed that you're using parallel testing via threads from minitest. Did you upgrade minitest at the same time as Rails? I would try downgrading some gems or at least getting the test suite down to a smaller failure set. Without a reproduction, we can't determine if this originates from Rails or how to fix it. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1591208546/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1592940146,https://github.com/rails/rails/issues/48468#issuecomment-1592940146,https://api.github.com/repos/rails/rails/issues/48468,1592940146,IC_kwDNIULOXvJWcg,"{'login': 'krebbl', 'id': 951433, 'node_id': 'MDQ6VXNlcjk1MTQzMw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/951433?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/krebbl', 'html_url': 'https://github.com/krebbl', 'followers_url': 'https://api.github.com/users/krebbl/followers', 'following_url': 'https://api.github.com/users/krebbl/following{/other_user}', 'gists_url': 'https://api.github.com/users/krebbl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/krebbl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/krebbl/subscriptions', 'organizations_url': 'https://api.github.com/users/krebbl/orgs', 'repos_url': 'https://api.github.com/users/krebbl/repos', 'events_url': 'https://api.github.com/users/krebbl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/krebbl/received_events', 'type': 'User', 'site_admin': False}",2023-06-15T12:21:21Z,2023-06-15T12:21:21Z,NONE,"Ok, after some deeper digging I found that the reason for the deadlocks are some active job calls with `perform_later`.
If I change all these calls to `perform_now` the test suite runs smoothly. I will try to prepare an example to reproduce this behaviour.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1592940146/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1598319242,https://github.com/rails/rails/issues/48468#issuecomment-1598319242,https://api.github.com/repos/rails/rails/issues/48468,1598319242,IC_kwDNIULOX0Rqig,"{'login': 'krebbl', 'id': 951433, 'node_id': 'MDQ6VXNlcjk1MTQzMw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/951433?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/krebbl', 'html_url': 'https://github.com/krebbl', 'followers_url': 'https://api.github.com/users/krebbl/followers', 'following_url': 'https://api.github.com/users/krebbl/following{/other_user}', 'gists_url': 'https://api.github.com/users/krebbl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/krebbl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/krebbl/subscriptions', 'organizations_url': 'https://api.github.com/users/krebbl/orgs', 'repos_url': 'https://api.github.com/users/krebbl/repos', 'events_url': 'https://api.github.com/users/krebbl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/krebbl/received_events', 'type': 'User', 'site_admin': False}",2023-06-20T08:11:52Z,2023-06-20T08:11:52Z,NONE,"For anyone who also runs in this problem, we have solved the issue by clearing the job queue after each test:

```
class ActiveSupport::TestCase
  teardown do
    clear_enqueued_jobs
  end
end
``` ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1598319242/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1599056142,https://github.com/rails/rails/issues/48468#issuecomment-1599056142,https://api.github.com/repos/rails/rails/issues/48468,1599056142,IC_kwDNIULOX0-pDg,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-06-20T15:48:12Z,2023-06-20T15:48:12Z,MEMBER,Which job runner are you using for tests?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1599056142/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1607034286,https://github.com/rails/rails/issues/48468#issuecomment-1607034286,https://api.github.com/repos/rails/rails/issues/48468,1607034286,IC_kwDNIULOX8llrg,"{'login': 'krebbl', 'id': 951433, 'node_id': 'MDQ6VXNlcjk1MTQzMw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/951433?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/krebbl', 'html_url': 'https://github.com/krebbl', 'followers_url': 'https://api.github.com/users/krebbl/followers', 'following_url': 'https://api.github.com/users/krebbl/following{/other_user}', 'gists_url': 'https://api.github.com/users/krebbl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/krebbl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/krebbl/subscriptions', 'organizations_url': 'https://api.github.com/users/krebbl/orgs', 'repos_url': 'https://api.github.com/users/krebbl/repos', 'events_url': 'https://api.github.com/users/krebbl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/krebbl/received_events', 'type': 'User', 'site_admin': False}",2023-06-26T09:07:01Z,2023-06-26T09:07:01Z,NONE,The default one ... so no **sidekiq**,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1607034286/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1607943480,https://github.com/rails/rails/issues/48468#issuecomment-1607943480,https://api.github.com/repos/rails/rails/issues/48468,1607943480,IC_kwDNIULOX9dFOA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-06-26T17:45:09Z,2023-06-26T17:45:09Z,MEMBER,"Could you check if changing the adapter to be the inline your issue goes away?

```
Rails.application.config.active_job.queue_adapter = :inline
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1607943480/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1609235566,https://github.com/rails/rails/issues/48468#issuecomment-1609235566,https://api.github.com/repos/rails/rails/issues/48468,1609235566,IC_kwDNIULOX-r8bg,"{'login': 'krebbl', 'id': 951433, 'node_id': 'MDQ6VXNlcjk1MTQzMw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/951433?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/krebbl', 'html_url': 'https://github.com/krebbl', 'followers_url': 'https://api.github.com/users/krebbl/followers', 'following_url': 'https://api.github.com/users/krebbl/following{/other_user}', 'gists_url': 'https://api.github.com/users/krebbl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/krebbl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/krebbl/subscriptions', 'organizations_url': 'https://api.github.com/users/krebbl/orgs', 'repos_url': 'https://api.github.com/users/krebbl/repos', 'events_url': 'https://api.github.com/users/krebbl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/krebbl/received_events', 'type': 'User', 'site_admin': False}",2023-06-27T10:33:09Z,2023-06-27T10:33:09Z,NONE,"@rafaelfranca thanks for the hint, with the inline adapter it works!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1609235566/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1609894881,https://github.com/rails/rails/issues/48468#issuecomment-1609894881,https://api.github.com/repos/rails/rails/issues/48468,1609894881,IC_kwDNIULOX_UL4Q,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-06-27T16:55:06Z,2023-06-27T16:55:06Z,MEMBER,"This seems to be the same issue as https://github.com/rails/rails/issues/45994.

Could you check if applying the patch that fixed that issue fixes your problem as well?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1609894881/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1613147554,https://github.com/rails/rails/issues/48468#issuecomment-1613147554,https://api.github.com/repos/rails/rails/issues/48468,1613147554,IC_kwDNIULOYCatog,"{'login': 'krebbl', 'id': 951433, 'node_id': 'MDQ6VXNlcjk1MTQzMw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/951433?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/krebbl', 'html_url': 'https://github.com/krebbl', 'followers_url': 'https://api.github.com/users/krebbl/followers', 'following_url': 'https://api.github.com/users/krebbl/following{/other_user}', 'gists_url': 'https://api.github.com/users/krebbl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/krebbl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/krebbl/subscriptions', 'organizations_url': 'https://api.github.com/users/krebbl/orgs', 'repos_url': 'https://api.github.com/users/krebbl/repos', 'events_url': 'https://api.github.com/users/krebbl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/krebbl/received_events', 'type': 'User', 'site_admin': False}",2023-06-29T13:02:24Z,2023-06-29T13:02:24Z,NONE,@rafaelfranca which patch exactly do you mean? this one https://github.com/rails/rails/pull/46553 ?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1613147554/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1613266885,https://github.com/rails/rails/issues/48468#issuecomment-1613266885,https://api.github.com/repos/rails/rails/issues/48468,1613266885,IC_kwDNIULOYCh_xQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-06-29T14:19:24Z,2023-06-29T14:19:24Z,MEMBER,Yes,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1613266885/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1613836798,https://github.com/rails/rails/issues/48468#issuecomment-1613836798,https://api.github.com/repos/rails/rails/issues/48468,1613836798,IC_kwDNIULOYDEx_g,"{'login': 'krebbl', 'id': 951433, 'node_id': 'MDQ6VXNlcjk1MTQzMw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/951433?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/krebbl', 'html_url': 'https://github.com/krebbl', 'followers_url': 'https://api.github.com/users/krebbl/followers', 'following_url': 'https://api.github.com/users/krebbl/following{/other_user}', 'gists_url': 'https://api.github.com/users/krebbl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/krebbl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/krebbl/subscriptions', 'organizations_url': 'https://api.github.com/users/krebbl/orgs', 'repos_url': 'https://api.github.com/users/krebbl/repos', 'events_url': 'https://api.github.com/users/krebbl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/krebbl/received_events', 'type': 'User', 'site_admin': False}",2023-06-29T21:34:42Z,2023-06-29T21:34:42Z,NONE,is this patch included in 7.0.6? ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1613836798/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1614979580,https://github.com/rails/rails/issues/48468#issuecomment-1614979580,https://api.github.com/repos/rails/rails/issues/48468,1614979580,IC_kwDNIULOYEKh_A,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-06-30T17:47:24Z,2023-06-30T17:47:24Z,MEMBER,Doesn't seems so. You could try to backport to your fork of Rails in the 7-0-stable branch and try to see if it fixed the problem.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1614979580/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1685114230,https://github.com/rails/rails/issues/48468#issuecomment-1685114230,https://api.github.com/repos/rails/rails/issues/48468,1685114230,IC_kwDNIULOZHDNdg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-19T21:18:58Z,2023-08-19T21:18:58Z,NONE,"This issue has been automatically closed because there has been no follow-up response from the original author. We currently don't have enough information in order to take action. Please reach out if you have any additional information that will help us move this issue forward.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1685114230/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1723431940,https://github.com/rails/rails/issues/48468#issuecomment-1723431940,https://api.github.com/repos/rails/rails/issues/48468,1723431940,IC_kwDNIULOZrl8BA,"{'login': 'ansonhoyt', 'id': 543751, 'node_id': 'MDQ6VXNlcjU0Mzc1MQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/543751?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ansonhoyt', 'html_url': 'https://github.com/ansonhoyt', 'followers_url': 'https://api.github.com/users/ansonhoyt/followers', 'following_url': 'https://api.github.com/users/ansonhoyt/following{/other_user}', 'gists_url': 'https://api.github.com/users/ansonhoyt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ansonhoyt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ansonhoyt/subscriptions', 'organizations_url': 'https://api.github.com/users/ansonhoyt/orgs', 'repos_url': 'https://api.github.com/users/ansonhoyt/repos', 'events_url': 'https://api.github.com/users/ansonhoyt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ansonhoyt/received_events', 'type': 'User', 'site_admin': False}",2023-09-18T13:39:18Z,2023-09-18T13:39:18Z,CONTRIBUTOR,@krebbl did you solve this? Did the patch work for you? Curious as I'm investigating frequently hanging specs with `7.1.0.beta1` (which would have the patch) and *similar* backtraces. I can also  workaround with `config.active_job.queue_adapter = :inline` (or by removing an `after_commit` callback to UserMailer `deliver_later`).,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1723431940/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1729259955,https://github.com/rails/rails/issues/48468#issuecomment-1729259955,https://api.github.com/repos/rails/rails/issues/48468,1729259955,IC_kwDNIULOZxJpsw,"{'login': 'krebbl', 'id': 951433, 'node_id': 'MDQ6VXNlcjk1MTQzMw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/951433?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/krebbl', 'html_url': 'https://github.com/krebbl', 'followers_url': 'https://api.github.com/users/krebbl/followers', 'following_url': 'https://api.github.com/users/krebbl/following{/other_user}', 'gists_url': 'https://api.github.com/users/krebbl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/krebbl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/krebbl/subscriptions', 'organizations_url': 'https://api.github.com/users/krebbl/orgs', 'repos_url': 'https://api.github.com/users/krebbl/repos', 'events_url': 'https://api.github.com/users/krebbl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/krebbl/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T10:05:13Z,2023-09-21T10:05:13Z,NONE,"@ansonhoyt hi, I was not able to apply the patch to the latest release version, because there were too many differences or so. we now just use the workaround with `:inline`. I think the issue is that the Jobs are not closing or returning their used threads to the threadpool and once empty the remaining jobs are not starting anymore.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1729259955/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1730043920,https://github.com/rails/rails/issues/48468#issuecomment-1730043920,https://api.github.com/repos/rails/rails/issues/48468,1730043920,IC_kwDNIULOZx5gEA,"{'login': 'ansonhoyt', 'id': 543751, 'node_id': 'MDQ6VXNlcjU0Mzc1MQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/543751?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ansonhoyt', 'html_url': 'https://github.com/ansonhoyt', 'followers_url': 'https://api.github.com/users/ansonhoyt/followers', 'following_url': 'https://api.github.com/users/ansonhoyt/following{/other_user}', 'gists_url': 'https://api.github.com/users/ansonhoyt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ansonhoyt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ansonhoyt/subscriptions', 'organizations_url': 'https://api.github.com/users/ansonhoyt/orgs', 'repos_url': 'https://api.github.com/users/ansonhoyt/repos', 'events_url': 'https://api.github.com/users/ansonhoyt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ansonhoyt/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T17:53:33Z,2023-09-21T17:53:33Z,CONTRIBUTOR,"Thanks for the update! 🙏  I narrowed mine down to a set of 3 specs, and was able to avoid it by wrapping the triggering spec with ActiveJob::TestHelper's `perform_enqueued_jobs`. I haven't been able to create a reproduction yet, but hope to try again after I catch up on some deadlines.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1730043920/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1749879098,https://github.com/rails/rails/issues/48468#issuecomment-1749879098,https://api.github.com/repos/rails/rails/issues/48468,1749879098,IC_kwDNIULOaE0JOg,"{'login': 'rainerborene', 'id': 101501, 'node_id': 'MDQ6VXNlcjEwMTUwMQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/101501?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rainerborene', 'html_url': 'https://github.com/rainerborene', 'followers_url': 'https://api.github.com/users/rainerborene/followers', 'following_url': 'https://api.github.com/users/rainerborene/following{/other_user}', 'gists_url': 'https://api.github.com/users/rainerborene/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rainerborene/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rainerborene/subscriptions', 'organizations_url': 'https://api.github.com/users/rainerborene/orgs', 'repos_url': 'https://api.github.com/users/rainerborene/repos', 'events_url': 'https://api.github.com/users/rainerborene/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rainerborene/received_events', 'type': 'User', 'site_admin': False}",2023-10-06T01:50:15Z,2023-10-06T01:50:15Z,NONE,"Strangely enough, I had this issue when upgrading from `7.0` to `7.1` version. I fixed it by setting `queue_adapter` option like @rafaelfranca mentioned here.

```ruby
# config/environments/test.rb

Rails.application.configure do
  config.active_job.queue_adapter = :inline
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1749879098/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48468
https://api.github.com/repos/rails/rails/issues/comments/1594185322,https://github.com/rails/rails/issues/48463#issuecomment-1594185322,https://api.github.com/repos/rails/rails/issues/48463,1594185322,IC_kwDNIULOXwVWag,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-06-16T06:41:36Z,2023-06-16T06:41:36Z,MEMBER,"This sounds like a bug, it would be good to confirm it. Could you write a failing test, or show a test app?

A failing test could go here https://github.com/rails/rails/blob/main/railties/test/application/content_security_policy_test.rb","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1594185322/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48463
https://api.github.com/repos/rails/rails/issues/comments/1594579389,https://github.com/rails/rails/issues/48463#issuecomment-1594579389,https://api.github.com/repos/rails/rails/issues/48463,1594579389,IC_kwDNIULOXwtZvQ,"{'login': 'olbrich', 'id': 22176, 'node_id': 'MDQ6VXNlcjIyMTc2', 'avatar_url': 'https://avatars.githubusercontent.com/u/22176?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/olbrich', 'html_url': 'https://github.com/olbrich', 'followers_url': 'https://api.github.com/users/olbrich/followers', 'following_url': 'https://api.github.com/users/olbrich/following{/other_user}', 'gists_url': 'https://api.github.com/users/olbrich/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/olbrich/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/olbrich/subscriptions', 'organizations_url': 'https://api.github.com/users/olbrich/orgs', 'repos_url': 'https://api.github.com/users/olbrich/repos', 'events_url': 'https://api.github.com/users/olbrich/events{/privacy}', 'received_events_url': 'https://api.github.com/users/olbrich/received_events', 'type': 'User', 'site_admin': False}",2023-06-16T12:10:42Z,2023-06-16T12:10:42Z,NONE,"@ghiculescu I'll look into it, although the existing tests don't use the nonce generator that is suggested in the content_security_policy initializer.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1594579389/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48463
https://api.github.com/repos/rails/rails/issues/comments/1594657639,https://github.com/rails/rails/issues/48463#issuecomment-1594657639,https://api.github.com/repos/rails/rails/issues/48463,1594657639,IC_kwDNIULOXwyLZw,"{'login': 'olbrich', 'id': 22176, 'node_id': 'MDQ6VXNlcjIyMTc2', 'avatar_url': 'https://avatars.githubusercontent.com/u/22176?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/olbrich', 'html_url': 'https://github.com/olbrich', 'followers_url': 'https://api.github.com/users/olbrich/followers', 'following_url': 'https://api.github.com/users/olbrich/following{/other_user}', 'gists_url': 'https://api.github.com/users/olbrich/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/olbrich/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/olbrich/subscriptions', 'organizations_url': 'https://api.github.com/users/olbrich/orgs', 'repos_url': 'https://api.github.com/users/olbrich/repos', 'events_url': 'https://api.github.com/users/olbrich/events{/privacy}', 'received_events_url': 'https://api.github.com/users/olbrich/received_events', 'type': 'User', 'site_admin': False}",2023-06-16T13:13:05Z,2023-06-16T13:13:05Z,NONE,"https://github.com/olbrich/rails/tree/issue-48463-csp-nonce

I updated the test to use the suggested nonce generator and it fails like this....
```
vscode ➜ /workspaces/rails/railties (main) $ bin/test test/application/content_security_policy_test.rb 
Run options: --seed 43990

# Running:

.F

Failure:
ApplicationTests::ContentSecurityPolicyTest#test_global_content_security_policy_nonce_directives_in_an_initializer [/workspaces/rails/railties/test/application/content_security_policy_test.rb:151]:
--- expected
+++ actual
@@ -1 +1 @@
-""default-src 'self' https:; script-src 'self' https: 'nonce-iyhD0Yc0W+c='; style-src 'self' https:""
+""default-src 'self' https:; script-src 'self' https: 'nonce-'; style-src 'self' https:""



bin/test test/application/content_security_policy_test.rb:122

......

Finished in 6.912239s, 1.1574 runs/s, 3.1828 assertions/s.
8 runs, 22 assertions, 1 failures, 0 errors, 0 skips
```

Note that the nonce part of the policy is `https: 'nonce-';`, which is a result of the nonce generator returning an empty string. I think this happens because sessions are lazily created. There isn't one yet at the time the nonce generator is called and the `id` is returned as `nil`.

The nonce generator should never return an empty string as that would defeat the purpose of the nonce.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1594657639/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48463
https://api.github.com/repos/rails/rails/issues/comments/1595998921,https://github.com/rails/rails/issues/48463#issuecomment-1595998921,https://api.github.com/repos/rails/rails/issues/48463,1595998921,IC_kwDNIULOXyECyQ,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-06-18T07:04:44Z,2023-06-18T07:04:44Z,MEMBER,"Hmm, I am guessing this would have not behaved like this before https://github.com/rails/rails/pull/43227. See this comment: https://github.com/rails/rails/pull/43227#issuecomment-1191692615","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1595998921/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48463
https://api.github.com/repos/rails/rails/issues/comments/1722160997,https://github.com/rails/rails/issues/48463#issuecomment-1722160997,https://api.github.com/repos/rails/rails/issues/48463,1722160997,IC_kwDNIULOZqYXZQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-09-16T07:16:18Z,2023-09-16T07:16:18Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1722160997/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48463
https://api.github.com/repos/rails/rails/issues/comments/1584945674,https://github.com/rails/rails/pull/48434#issuecomment-1584945674,https://api.github.com/repos/rails/rails/issues/48434,1584945674,IC_kwDNIULOXnhaCg,"{'login': 'abaldwin88', 'id': 15172605, 'node_id': 'MDQ6VXNlcjE1MTcyNjA1', 'avatar_url': 'https://avatars.githubusercontent.com/u/15172605?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abaldwin88', 'html_url': 'https://github.com/abaldwin88', 'followers_url': 'https://api.github.com/users/abaldwin88/followers', 'following_url': 'https://api.github.com/users/abaldwin88/following{/other_user}', 'gists_url': 'https://api.github.com/users/abaldwin88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abaldwin88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abaldwin88/subscriptions', 'organizations_url': 'https://api.github.com/users/abaldwin88/orgs', 'repos_url': 'https://api.github.com/users/abaldwin88/repos', 'events_url': 'https://api.github.com/users/abaldwin88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abaldwin88/received_events', 'type': 'User', 'site_admin': False}",2023-06-09T17:53:37Z,2023-06-09T17:53:37Z,CONTRIBUTOR,"Build error looks like a transitory problem with Sauce Labs throttling.

> 09 06 2023 17:22:45.742:ERROR [launcher.sauce]: Can not start microsoftedge 17.17134 (Windows 10)
>   Failed to start Sauce Connect:
>   'create tunnel' request failed with: URL https://saucelabs.com/rest/v1/rubyonrails/tunnels - 400 (Bad Request) Error: HTTP request failed. Server response: 400: Too many active user tunnels: 10 >= 10 (ref: 0872d2db).

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1584945674/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48434
https://api.github.com/repos/rails/rails/issues/comments/1585214093,https://github.com/rails/rails/pull/48434#issuecomment-1585214093,https://api.github.com/repos/rails/rails/issues/48434,1585214093,IC_kwDNIULOXnxyjQ,"{'login': 'abaldwin88', 'id': 15172605, 'node_id': 'MDQ6VXNlcjE1MTcyNjA1', 'avatar_url': 'https://avatars.githubusercontent.com/u/15172605?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abaldwin88', 'html_url': 'https://github.com/abaldwin88', 'followers_url': 'https://api.github.com/users/abaldwin88/followers', 'following_url': 'https://api.github.com/users/abaldwin88/following{/other_user}', 'gists_url': 'https://api.github.com/users/abaldwin88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abaldwin88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abaldwin88/subscriptions', 'organizations_url': 'https://api.github.com/users/abaldwin88/orgs', 'repos_url': 'https://api.github.com/users/abaldwin88/repos', 'events_url': 'https://api.github.com/users/abaldwin88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abaldwin88/received_events', 'type': 'User', 'site_admin': False}",2023-06-09T22:48:22Z,2023-06-09T22:48:22Z,CONTRIBUTOR,"@nvasilevski Thanks for the review. I'd like to tackle those two items you mentioned down the line. (returning on update and SELECT for mysql). In the interest of keeping this PR small and focused though I didn't try to implement them here. 

Keeping those long term plans in mind though I agree the naming should be revised. See my replies within the review.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1585214093/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48434
https://api.github.com/repos/rails/rails/issues/comments/1587762414,https://github.com/rails/rails/pull/48434#issuecomment-1587762414,https://api.github.com/repos/rails/rails/issues/48434,1587762414,IC_kwDNIULOXqNU7g,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-06-12T17:30:04Z,2023-06-12T17:30:04Z,CONTRIBUTOR,"There is something I realized after leaving comments about naming. If we ever going to support an additional `SELECT` query using the abstraction we are adding here we need to allow flexible configuration as not every column that needs to be auto-assigned on `create` needs to be loaded after an `update`
Imagine having a trigger that populates `populated_on_insert_by_a_trigger_column` on creation, since we want the attribute to have the value after record creation we would use  our new abstraction like `reload_attributes_on_save :populated_on_insert_by_a_trigger_column` However this will cause an unnecessary `SELECT` query on updates even though we know the column doesn't change its value on updates unless explicitly updated.

Which means long-term we need to plan to accomomdate an API that actually allows for per-action config. Maybe the API should be similar to callbacks and accept `:only` or `:except` arguments. But ultimately we would like to be able to separately configure columns that need to be initialized only on `create`, only on `update` and virtual columns will need to always be returned back on create and update

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1587762414/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48434
https://api.github.com/repos/rails/rails/issues/comments/1694331756,https://github.com/rails/rails/pull/48434#issuecomment-1694331756,https://api.github.com/repos/rails/rails/issues/48434,1694331756,IC_kwDNIULOZP1zbA,"{'login': 'owst', 'id': 117234, 'node_id': 'MDQ6VXNlcjExNzIzNA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/117234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/owst', 'html_url': 'https://github.com/owst', 'followers_url': 'https://api.github.com/users/owst/followers', 'following_url': 'https://api.github.com/users/owst/following{/other_user}', 'gists_url': 'https://api.github.com/users/owst/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/owst/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/owst/subscriptions', 'organizations_url': 'https://api.github.com/users/owst/orgs', 'repos_url': 'https://api.github.com/users/owst/repos', 'events_url': 'https://api.github.com/users/owst/events{/privacy}', 'received_events_url': 'https://api.github.com/users/owst/received_events', 'type': 'User', 'site_admin': False}",2023-08-26T12:35:29Z,2023-08-26T12:35:29Z,CONTRIBUTOR,"Hi @abaldwin88, thanks for your work on this! 

Just to add a +1 for this PR - we're definitely keen to use it when merged - we have many tables with trigger-generated columns that currently force us to issue sub-optimal reloads after create. If we were recreating the app/DB today, we'd be able to use stored generated columns and the recently-merged virtual column RETURNING support, which would be better all-round.

Do you think there's anything else that can be done to get this merged in time for the 7.1 release? I'm happy to help if I can...","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1694331756/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48434
https://api.github.com/repos/rails/rails/issues/comments/1694392284,https://github.com/rails/rails/pull/48434#issuecomment-1694392284,https://api.github.com/repos/rails/rails/issues/48434,1694392284,IC_kwDNIULOZP5f3A,"{'login': 'abaldwin88', 'id': 15172605, 'node_id': 'MDQ6VXNlcjE1MTcyNjA1', 'avatar_url': 'https://avatars.githubusercontent.com/u/15172605?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abaldwin88', 'html_url': 'https://github.com/abaldwin88', 'followers_url': 'https://api.github.com/users/abaldwin88/followers', 'following_url': 'https://api.github.com/users/abaldwin88/following{/other_user}', 'gists_url': 'https://api.github.com/users/abaldwin88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abaldwin88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abaldwin88/subscriptions', 'organizations_url': 'https://api.github.com/users/abaldwin88/orgs', 'repos_url': 'https://api.github.com/users/abaldwin88/repos', 'events_url': 'https://api.github.com/users/abaldwin88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abaldwin88/received_events', 'type': 'User', 'site_admin': False}",2023-08-26T15:46:43Z,2023-08-26T15:46:43Z,CONTRIBUTOR,"@owst Thanks for the kind words!

The key bottleneck for this PR is a Rails team member finding time to review. As you might imagine they're pretty busy folks with a lot of things competing for their attention.

One thing that could help is if you pulled this branch down locally and tested it against your application. Reporting back any issues or otherwise confirming everything works as expected. I can't guarantee doing so would lead to this PR moving ahead imminently but it would help add proof that this patch is working and solves a real-world problem.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1694392284/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48434
https://api.github.com/repos/rails/rails/issues/comments/1703106669,https://github.com/rails/rails/pull/48434#issuecomment-1703106669,https://api.github.com/repos/rails/rails/issues/48434,1703106669,IC_kwDNIULOZYNYbQ,"{'login': 'owst', 'id': 117234, 'node_id': 'MDQ6VXNlcjExNzIzNA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/117234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/owst', 'html_url': 'https://github.com/owst', 'followers_url': 'https://api.github.com/users/owst/followers', 'following_url': 'https://api.github.com/users/owst/following{/other_user}', 'gists_url': 'https://api.github.com/users/owst/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/owst/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/owst/subscriptions', 'organizations_url': 'https://api.github.com/users/owst/orgs', 'repos_url': 'https://api.github.com/users/owst/repos', 'events_url': 'https://api.github.com/users/owst/events{/privacy}', 'received_events_url': 'https://api.github.com/users/owst/received_events', 'type': 'User', 'site_admin': False}",2023-09-01T17:39:09Z,2023-09-01T17:39:09Z,CONTRIBUTOR,"> One thing that could help is if you pulled this branch down locally and tested it against your application. Reporting back any issues or otherwise confirming everything works as expected.

@abaldwin88  I've tried this branch with one of our apps today, and it seems to Just Work, which is great!

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1703106669/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 1, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48434
https://api.github.com/repos/rails/rails/issues/comments/1730024174,https://github.com/rails/rails/pull/48434#issuecomment-1730024174,https://api.github.com/repos/rails/rails/issues/48434,1730024174,IC_kwDNIULOZx4S7g,"{'login': 'abaldwin88', 'id': 15172605, 'node_id': 'MDQ6VXNlcjE1MTcyNjA1', 'avatar_url': 'https://avatars.githubusercontent.com/u/15172605?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abaldwin88', 'html_url': 'https://github.com/abaldwin88', 'followers_url': 'https://api.github.com/users/abaldwin88/followers', 'following_url': 'https://api.github.com/users/abaldwin88/following{/other_user}', 'gists_url': 'https://api.github.com/users/abaldwin88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abaldwin88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abaldwin88/subscriptions', 'organizations_url': 'https://api.github.com/users/abaldwin88/orgs', 'repos_url': 'https://api.github.com/users/abaldwin88/repos', 'events_url': 'https://api.github.com/users/abaldwin88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abaldwin88/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T17:39:03Z,2023-09-21T17:39:03Z,CONTRIBUTOR,"Rebased onto latest from `main`. Fixed conflicts with #49290. 

When #49346 is merged it may be worth evaluating that the `random_number_plus_one` assertion from `test_assigned_reload_attributes_on_create` passes when using the `SQLite3Adapter`.

Also SQLite largely discourages using `BEFORE` triggers: 
https://www.sqlite.org/lang_createtrigger.html#cautions_on_the_use_of_before_triggers

I need to do a little more reading but I believe that means the ideal SQLite solution would be including the `RETURNING` clause for virtual columns and issuing an additional `SELECT` query for `AFTER` trigger columns.

Technically though applications using SQLite could still try to utilize `BEFORE` triggers. Or applications using PostgreSQL could use AFTER triggers for that matter. So we should consider expanding this API so applications can specify whether the values are fetched in the same query or a second follow-up `SELECT` query.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1730024174/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48434
https://api.github.com/repos/rails/rails/issues/comments/1582637309,https://github.com/rails/rails/issues/48423#issuecomment-1582637309,https://api.github.com/repos/rails/rails/issues/48423,1582637309,IC_kwDNIULOXlUg_Q,"{'login': 'abaldwin88', 'id': 15172605, 'node_id': 'MDQ6VXNlcjE1MTcyNjA1', 'avatar_url': 'https://avatars.githubusercontent.com/u/15172605?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abaldwin88', 'html_url': 'https://github.com/abaldwin88', 'followers_url': 'https://api.github.com/users/abaldwin88/followers', 'following_url': 'https://api.github.com/users/abaldwin88/following{/other_user}', 'gists_url': 'https://api.github.com/users/abaldwin88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abaldwin88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abaldwin88/subscriptions', 'organizations_url': 'https://api.github.com/users/abaldwin88/orgs', 'repos_url': 'https://api.github.com/users/abaldwin88/repos', 'events_url': 'https://api.github.com/users/abaldwin88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abaldwin88/received_events', 'type': 'User', 'site_admin': False}",2023-06-08T14:04:00Z,2023-06-08T14:04:00Z,CONTRIBUTOR,WIP: https://github.com/abaldwin88/rails/tree/virtual_stored_column_returning_on_update,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1582637309/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48423
https://api.github.com/repos/rails/rails/issues/comments/1732382474,https://github.com/rails/rails/issues/48423#issuecomment-1732382474,https://api.github.com/repos/rails/rails/issues/48423,1732382474,IC_kwDNIULOZ0IPCg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-09-23T18:28:04Z,2023-09-23T18:28:04Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732382474/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48423
https://api.github.com/repos/rails/rails/issues/comments/1583486001,https://github.com/rails/rails/issues/48420#issuecomment-1583486001,https://api.github.com/repos/rails/rails/issues/48420,1583486001,IC_kwDNIULOXmIUMQ,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-06-08T22:35:05Z,2023-06-08T22:35:05Z,MEMBER,"I bisected and confirmed that #46923 is where the test started failing, thanks for the great reproduction!

I'll have a deeper look soon unless someone beats me to it","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1583486001/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48420
https://api.github.com/repos/rails/rails/issues/comments/1585062897,https://github.com/rails/rails/issues/48420#issuecomment-1585062897,https://api.github.com/repos/rails/rails/issues/48420,1585062897,IC_kwDNIULOXnoj8Q,"{'login': 'leboshi', 'id': 16550140, 'node_id': 'MDQ6VXNlcjE2NTUwMTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/16550140?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/leboshi', 'html_url': 'https://github.com/leboshi', 'followers_url': 'https://api.github.com/users/leboshi/followers', 'following_url': 'https://api.github.com/users/leboshi/following{/other_user}', 'gists_url': 'https://api.github.com/users/leboshi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/leboshi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/leboshi/subscriptions', 'organizations_url': 'https://api.github.com/users/leboshi/orgs', 'repos_url': 'https://api.github.com/users/leboshi/repos', 'events_url': 'https://api.github.com/users/leboshi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/leboshi/received_events', 'type': 'User', 'site_admin': False}",2023-06-09T19:55:27Z,2023-06-09T19:55:27Z,CONTRIBUTOR,"Yeah, this is tangential to something else I just found.  Working on a PR right now.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1585062897/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48420
https://api.github.com/repos/rails/rails/issues/comments/1585431870,https://github.com/rails/rails/issues/48420#issuecomment-1585431870,https://api.github.com/repos/rails/rails/issues/48420,1585431870,IC_kwDNIULOXn_FPg,"{'login': 'leboshi', 'id': 16550140, 'node_id': 'MDQ6VXNlcjE2NTUwMTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/16550140?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/leboshi', 'html_url': 'https://github.com/leboshi', 'followers_url': 'https://api.github.com/users/leboshi/followers', 'following_url': 'https://api.github.com/users/leboshi/following{/other_user}', 'gists_url': 'https://api.github.com/users/leboshi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/leboshi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/leboshi/subscriptions', 'organizations_url': 'https://api.github.com/users/leboshi/orgs', 'repos_url': 'https://api.github.com/users/leboshi/repos', 'events_url': 'https://api.github.com/users/leboshi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/leboshi/received_events', 'type': 'User', 'site_admin': False}",2023-06-10T02:35:12Z,2023-06-10T02:35:12Z,CONTRIBUTOR,"Whooooo, this is fun.

I'm like...3/4 of the way there, @thefloweringash.  It works for `group(:range)`, but not `group(""ranges.range"")`.

There's some absolutely ancient code (from 2014) at the tail end of `TableMetadata#associated_table`:
```ruby
        type_caster = TypeCaster::Connection.new(klass, table_name)
        arel_table = Arel::Table.new(table_name, type_caster: type_caster)
        TableMetadata.new(nil, arel_table, reflection)
```
so if you pass the qualified column name as a string with dot notation, and if the table isn't a ""real"" table associated with your model, it'll fall back to the model's TypeCaster (in your example, `Booking`'s) to try to cast the `range` column.

Seeing if I can tease that out without...y'know...breaking AR...","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1585431870/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48420
https://api.github.com/repos/rails/rails/issues/comments/1601843874,https://github.com/rails/rails/pull/48418#issuecomment-1601843874,https://api.github.com/repos/rails/rails/issues/48418,1601843874,IC_kwDNIULOX3oyog,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-06-22T00:10:21Z,2023-06-22T00:10:21Z,CONTRIBUTOR,"I've moved the validation to `sql_for_insert` but haven't added the ""is the single column the right column"" check yet. The reason is that `sql_for_insert` is a pretty low-level concept which has no knowledge about the model so there is no simple way to use `return_value_after_insert?` for example. We could have derived columns based on the `table_name` from `sql` but even if we memoize these operation it feels like too much of work for just a validation.
https://github.com/rails/rails/blob/74a07be37d8992b819886c9dcd78df468614c9ff/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb#L583

Maybe the fact that there is no simple way of implementing the columns check means that we should slightly redesign the `returning` argument and don't allow any value to be passed if the current adapter returns false for `supports_insert_returning?` as technically there is no point of passing any values to `returning` if you can't really influence the return value ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1601843874/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48418
https://api.github.com/repos/rails/rails/issues/comments/1601862189,https://github.com/rails/rails/pull/48418#issuecomment-1601862189,https://api.github.com/repos/rails/rails/issues/48418,1601862189,IC_kwDNIULOX3p6LQ,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-06-22T00:41:34Z,2023-06-22T00:41:34Z,MEMBER,">  redesign the returning argument and don't allow any value to be passed if the current adapter returns false for supports_insert_returning?

Yeah, that sounds sensible to me: just declare it an error to request a specific return result from an adapter that is unable to support the general use case. Any additional intelligence you're able to apply to work around that limitation (read: last insert id) is outside the scope of this method / the abstract API.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1601862189/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48418
https://api.github.com/repos/rails/rails/issues/comments/1603232580,https://github.com/rails/rails/pull/48418#issuecomment-1603232580,https://api.github.com/repos/rails/rails/issues/48418,1603232580,IC_kwDNIULOX49jRA,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-06-22T19:53:10Z,2023-06-22T19:53:10Z,CONTRIBUTOR,"> just declare it an error to request a specific return result from an adapter that is unable to support the general use case

So end up with this approach. This also means Rails itself as the caller need to do a bit more work in `_create_record` to avoid hitting the error","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1603232580/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48418
https://api.github.com/repos/rails/rails/issues/comments/1576125146,https://github.com/rails/rails/pull/48393#issuecomment-1576125146,https://api.github.com/repos/rails/rails/issues/48393,1576125146,IC_kwDNIULOXfHC2g,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T06:30:19Z,2023-06-05T06:30:19Z,MEMBER,"So I think this is a valuable feature, however some quick testing show this syntax is also valid in MySQL and SQLite3, so it shouldn't be exclusive to the Postgres adapter.

A changelog entry would be best as well.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1576125146/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1576580334,https://github.com/rails/rails/pull/48393#issuecomment-1576580334,https://api.github.com/repos/rails/rails/issues/48393,1576580334,IC_kwDNIULOXfi07g,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-06-05T11:03:04Z,2023-06-05T11:03:04Z,MEMBER,"Recently: https://github.com/rails/rails/pull/47160#issuecomment-1411013539
Previously: https://github.com/rails/rails/pull/36003#issuecomment-519831202

I'd prefer that we look to achieve the `where([:a, :b] => [[1, 2], [3, 4]])` syntax directly, _without_ propagating our existing mishandling of arrays.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1576580334/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1576836169,https://github.com/rails/rails/pull/48393#issuecomment-1576836169,https://api.github.com/repos/rails/rails/issues/48393,1576836169,IC_kwDNIULOXfycSQ,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T13:44:26Z,2023-06-05T13:45:01Z,CONTRIBUTOR,"> So I think this is a valuable feature, however some quick testing show this syntax is also valid in MySQL and SQLite3, so it shouldn't be exclusive to the Postgres adapter.

@byroot thanks for the check. I did my best, but I wasn't able to get it working. I'll try again and update.

> Recently: [#47160 (comment)](https://github.com/rails/rails/pull/47160#issuecomment-1411013539) Previously: [#36003 (comment)](https://github.com/rails/rails/pull/36003#issuecomment-519831202)
> 
> I'd prefer that we look to achieve the `where([:a, :b] => [[1, 2], [3, 4]])` syntax directly, _without_ propagating our existing mishandling of arrays.

@matthewd Thanks for the additional info. I'll take a look at latest changes I wasn't aware of and update PR. I'm looking for some performant way to compose this query for me and I did my best to avoid generating Arel node for each value.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1576836169/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1576841870,https://github.com/rails/rails/pull/48393#issuecomment-1576841870,https://api.github.com/repos/rails/rails/issues/48393,1576841870,IC_kwDNIULOXfyyjg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T13:48:08Z,2023-06-05T13:48:08Z,MEMBER,"> I'd prefer that we look to achieve the `where([:a, :b] => [[1, 2], [3, 4]])` syntax directly,

I think both are valuable.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1576841870/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1576865207,https://github.com/rails/rails/pull/48393#issuecomment-1576865207,https://api.github.com/repos/rails/rails/issues/48393,1576865207,IC_kwDNIULOXf0Ntw,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T14:01:07Z,2023-06-05T14:12:19Z,CONTRIBUTOR,"> I did my best, but I wasn't able to get it working. I'll try again and update.

It is supported but with a slightly different syntax. The table from this comment should still be relevant - https://github.com/rails/rails/issues/40273#issuecomment-709017516

I'll copy-paste it here for better discoverability 



  | (a, b) IN (VALUES (5, 6), (2, 4)) | (a, b) IN ((5, 6), (2, 4))
-- | -- | --
SQLite | ✅ | ✅ (seems to support both)
MySQL | ❌ | ✅
Postgres | ✅ | ✅



","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1576865207/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1576870540,https://github.com/rails/rails/pull/48393#issuecomment-1576870540,https://api.github.com/repos/rails/rails/issues/48393,1576870540,IC_kwDNIULOXf0ijA,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T14:03:52Z,2023-06-05T14:03:52Z,CONTRIBUTOR,"The second syntax seem to work fine on SQLite3 unless I""m missing something:

```
sqlite> create table test (id int primary key, int_test int);
sqlite> insert into test values (1, 1), (2, 2), (3, 3);
sqlite> select * from test where (id, int_test) IN ((1, 1), (2, 2));
1|1
2|2
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1576870540/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1576886227,https://github.com/rails/rails/pull/48393#issuecomment-1576886227,https://api.github.com/repos/rails/rails/issues/48393,1576886227,IC_kwDNIULOXf1f0w,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T14:12:01Z,2023-06-05T14:12:01Z,CONTRIBUTOR,">The second syntax seem to work fine on SQLite3 

Yeah, I can confirm. Could be a newer version of SQLite3 or it was just missed previously. I'll update the table ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1576886227/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1576903313,https://github.com/rails/rails/pull/48393#issuecomment-1576903313,https://api.github.com/repos/rails/rails/issues/48393,1576903313,IC_kwDNIULOXf2ikQ,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T14:22:14Z,2023-06-05T14:22:14Z,CONTRIBUTOR,Thanks @nvasilevski and @casperisfine for details. I'll check which versions are the first ones introducing this syntax and test the performance.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1576903313/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1576911025,https://github.com/rails/rails/pull/48393#issuecomment-1576911025,https://api.github.com/repos/rails/rails/issues/48393,1576911025,IC_kwDNIULOXf3AsQ,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T14:26:44Z,2023-06-05T14:26:44Z,CONTRIBUTOR,">I think both are valuable.

But if `.where([:col1, :col2] => [[val1, val2], [val3, val4]])` syntax was extended to produce `(col1, col2) IN ((5, 6), (2, 4))` SQL would an application ever need to be able to do `.where('(col1, col2) IN (?)', [[val1, val2], [val3, val4]])` which does exactly the same while being a lower-level API and feels like more prone to typos ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1576911025/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1576925006,https://github.com/rails/rails/pull/48393#issuecomment-1576925006,https://api.github.com/repos/rails/rails/issues/48393,1576925006,IC_kwDNIULOXf33Tg,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T14:35:28Z,2023-06-05T14:35:28Z,CONTRIBUTOR,"> > I think both are valuable.
> 
> But if `.where([:col1, :col2] => [[val1, val2], [val3, val4]])` syntax was extended to produce `(col1, col2) IN ((5, 6), (2, 4))` SQL would an application ever need to be able to do `.where('(col1, col2) IN (?)', [[val1, val2], [val3, val4]])` which does exactly the same while being a lower-level API and feels like more prone to typos

For my usecase, I'm looking into performance. If both will result into same performance, personally I don't need both. Today you can select in between both variants for simpler queries like `User.where('id IN (?)', [1, 2])` and `User.where(id: [1, 2])`. Both result into different arel representation and different queries (in this case different just by additional quoting done by arel for hash version).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1576925006/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1576943167,https://github.com/rails/rails/pull/48393#issuecomment-1576943167,https://api.github.com/repos/rails/rails/issues/48393,1576943167,IC_kwDNIULOXf4-Pw,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T14:47:14Z,2023-06-05T14:47:14Z,MEMBER,"> would an application ever need to be able to do

Such a simple example no. But I believe it's important for Rails to provide decent escape hatches for when the higher level APIs aren't flexible enough.

As such some users may need to use such nested array interpolation for complex parameterized queries using `find_by_sql` or something like that.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1576943167/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1576998750,https://github.com/rails/rails/pull/48393#issuecomment-1576998750,https://api.github.com/repos/rails/rails/issues/48393,1576998750,IC_kwDNIULOXf8XXg,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T15:16:08Z,2023-06-05T15:16:08Z,CONTRIBUTOR,">For my usecase, I'm looking into performance.

Fair point. I believe the long-term plan for the row-constructor API is to actually be flexible enough to provide a way to configure a strategy which defines SQL being generated under the hood. Which means that most likely there will be two main strategies: 1. A series of `OR` statements 2. multi-column `(col1, col2) IN ((1,2), (3,4))` select statement 
But if designed flexible enough it could also mean that applications can define their own strategies to build sql which are more performant or better fit application's needs.

I'd like to explicitly mention that these are not arguments against the proposed API, I'm just using this PR as an opportunity to see what  `.where([] => [])` API could become in the long-term.

I haven't actually tried that, but as a concept I was imagining the abstraction to be something like:

```ruby
config.active_record.row_constructor_strategy = SuperFastCustomStrategyPlainSql

class SuperFastCustomStrategyPlainSql
  def self.build(hash)
     columns = hash.keys.join("","")
     values = hash.values.map { |values_set| ""(#{values_set.join("","")})"" }
     ""(#{columns} IN (#{values})""
  end
end
```

^ It may not be a correct building block to actually exist in Rails but as a conception it would have allowed application to be as performant as possible avoiding any `Arel` processing if that seems suitable for a particular application","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1576998750/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1578428375,https://github.com/rails/rails/pull/48393#issuecomment-1578428375,https://api.github.com/repos/rails/rails/issues/48393,1578428375,IC_kwDNIULOXhTn1w,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-06-06T10:44:04Z,2023-06-06T10:44:04Z,MEMBER,"Yeah we certainly need some way to build such a query more manually... I just have concerns about using nested arrays for that purpose: I don't want to surrender the actual-array interpretation, but also arrays can be constructed via params, and that just feels like danger zone.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1578428375/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48393
https://api.github.com/repos/rails/rails/issues/comments/1577150327,https://github.com/rails/rails/pull/48390#issuecomment-1577150327,https://api.github.com/repos/rails/rails/issues/48390,1577150327,IC_kwDNIULOXgFndw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T16:58:27Z,2023-06-05T17:00:57Z,MEMBER,Thank you for the pull request but the correct fix is to make `fields_for` respect `to_param` instead of adding new options to the public API of Active Model. Is there any reason why you didn't go in the direction?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1577150327/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48390
https://api.github.com/repos/rails/rails/issues/comments/1577176334,https://github.com/rails/rails/pull/48390#issuecomment-1577176334,https://api.github.com/repos/rails/rails/issues/48390,1577176334,IC_kwDNIULOXgHNDg,"{'login': 'westonganger', 'id': 3414795, 'node_id': 'MDQ6VXNlcjM0MTQ3OTU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3414795?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/westonganger', 'html_url': 'https://github.com/westonganger', 'followers_url': 'https://api.github.com/users/westonganger/followers', 'following_url': 'https://api.github.com/users/westonganger/following{/other_user}', 'gists_url': 'https://api.github.com/users/westonganger/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/westonganger/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/westonganger/subscriptions', 'organizations_url': 'https://api.github.com/users/westonganger/orgs', 'repos_url': 'https://api.github.com/users/westonganger/repos', 'events_url': 'https://api.github.com/users/westonganger/events{/privacy}', 'received_events_url': 'https://api.github.com/users/westonganger/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T17:14:34Z,2023-06-05T17:20:47Z,CONTRIBUTOR,"> Thank you for the pull request but the correct fix is to make `fields_for` respect `to_param` instead of adding new options to the public API of Active Model. Is there any reason why you didn't go in the direction?

@rafaelfranca sure lets talk about this.


1. `to_param` specifies the value, not a column name that is capable for the SQL WHERE statment
2. I dont believe that their is a strict requirement that `to_param` maps directly to 1 column, IE you can do something like `def to_param; ""#{timestamp}-#{name}""; end`
3. If we utilize `to_param` how do we handle backwards compatibility? Existing apps are using the normal ID. Maybe it would be a configuration option that needs to be toggled on for old apps, and is default on for new apps.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1577176334/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48390
https://api.github.com/repos/rails/rails/issues/comments/1577224875,https://github.com/rails/rails/pull/48390#issuecomment-1577224875,https://api.github.com/repos/rails/rails/issues/48390,1577224875,IC_kwDNIULOXgKKqw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-06-05T17:53:04Z,2023-06-05T17:53:04Z,MEMBER,"> 1. `to_param` specifies the value, not a column name that is capable for the SQL WHERE statment

That is true. I'm ok with `accepts_nested_attributes_for` having a new option, my problem is that now Action View has knowledge about Active Record to get `nested_attributes_options`, which it can't. Action View depend only on the Active Model API, and adding new things to the API means that other frameworks, that maybe don't even have nested attributes will have to implement.

> 2. I dont believe that their is a strict requirement that to_param maps directly to 1 column, IE you can do something like def to_param; ""#{timestamp}-#{name}""; end

Yeah. Not sure where is the problem with that.

> 3. If we utilize to_param how do we handle backwards compatibility? Existing apps are using the normal ID. Maybe it would be a configuration option that needs to be toggled on for old apps, and is default on for new apps.

The default implementation of `to_param` is an array with id. People that don't override this method will not have to change anything, would they? For people that changes the behavior of this method, we will need to given them a big warning in the upgrade guide I believe.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1577224875/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48390
https://api.github.com/repos/rails/rails/issues/comments/1585417426,https://github.com/rails/rails/pull/48390#issuecomment-1585417426,https://api.github.com/repos/rails/rails/issues/48390,1585417426,IC_kwDNIULOXn-M0g,"{'login': 'westonganger', 'id': 3414795, 'node_id': 'MDQ6VXNlcjM0MTQ3OTU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3414795?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/westonganger', 'html_url': 'https://github.com/westonganger', 'followers_url': 'https://api.github.com/users/westonganger/followers', 'following_url': 'https://api.github.com/users/westonganger/following{/other_user}', 'gists_url': 'https://api.github.com/users/westonganger/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/westonganger/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/westonganger/subscriptions', 'organizations_url': 'https://api.github.com/users/westonganger/orgs', 'repos_url': 'https://api.github.com/users/westonganger/repos', 'events_url': 'https://api.github.com/users/westonganger/events{/privacy}', 'received_events_url': 'https://api.github.com/users/westonganger/received_events', 'type': 'User', 'site_admin': False}",2023-06-10T01:44:33Z,2023-06-10T01:44:33Z,CONTRIBUTOR,@rafaelfranca what is needed to move this forward? Is there anyone else we want to include in this conversation.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1585417426/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48390
https://api.github.com/repos/rails/rails/issues/comments/1612286292,https://github.com/rails/rails/pull/48390#issuecomment-1612286292,https://api.github.com/repos/rails/rails/issues/48390,1612286292,IC_kwDNIULOYBmJVA,"{'login': 'westonganger', 'id': 3414795, 'node_id': 'MDQ6VXNlcjM0MTQ3OTU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3414795?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/westonganger', 'html_url': 'https://github.com/westonganger', 'followers_url': 'https://api.github.com/users/westonganger/followers', 'following_url': 'https://api.github.com/users/westonganger/following{/other_user}', 'gists_url': 'https://api.github.com/users/westonganger/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/westonganger/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/westonganger/subscriptions', 'organizations_url': 'https://api.github.com/users/westonganger/orgs', 'repos_url': 'https://api.github.com/users/westonganger/repos', 'events_url': 'https://api.github.com/users/westonganger/events{/privacy}', 'received_events_url': 'https://api.github.com/users/westonganger/received_events', 'type': 'User', 'site_admin': False}",2023-06-29T00:55:11Z,2023-06-29T00:55:11Z,CONTRIBUTOR,"Would love to engage further on this. 

As of now we have to accept the fact we have a bunch of added complexity in our application code because of this. But Im not satisfied as our hacky workarounds are really only feasible for the first level of associations. I want to make this easy and intuitive for everyone regardless of the level of nesting.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1612286292/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48390
https://api.github.com/repos/rails/rails/issues/comments/1619364110,https://github.com/rails/rails/pull/48390#issuecomment-1619364110,https://api.github.com/repos/rails/rails/issues/48390,1619364110,IC_kwDNIULOYIWJDg,"{'login': 'clairity', 'id': 950439, 'node_id': 'MDQ6VXNlcjk1MDQzOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/950439?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/clairity', 'html_url': 'https://github.com/clairity', 'followers_url': 'https://api.github.com/users/clairity/followers', 'following_url': 'https://api.github.com/users/clairity/following{/other_user}', 'gists_url': 'https://api.github.com/users/clairity/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/clairity/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/clairity/subscriptions', 'organizations_url': 'https://api.github.com/users/clairity/orgs', 'repos_url': 'https://api.github.com/users/clairity/repos', 'events_url': 'https://api.github.com/users/clairity/events{/privacy}', 'received_events_url': 'https://api.github.com/users/clairity/received_events', 'type': 'User', 'site_admin': False}",2023-07-04T02:15:54Z,2023-07-09T14:30:32Z,NONE,"@rafaelfranca @westonganger apologies for wading into this discussion late, but i was just wrestling with a similar problem where i was trying to use slugs rather than id values in my nested attribute fields. after pondering it a bit, i thought a nice, clean api would be to leverage the already existing `include_id` argument (which currently only takes a boolean value) like so:

```ruby
# app/views/users/_form.html.erb
# ...
<%= f.fields_for :intermediaries, include_id: :slug do |ff| %>
    <%= ff.check_box  :active %>
    <%= ff.label      :active %>
<% end %>
# ...
```

which would generate no hidden field on `:new` (as expected) and on `:edit`, generate this hidden field:

```html
...
<input autocomplete=""off"" type=""hidden"" value=""1m4slug"" name=""user[intermediaries_attributes][0][slug]"" id=""user_intermediaries_attributes_0_slug"">
...

```

this would avoid introducing a new attribute while supporting the needed override of the `:id` attribute.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1619364110/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48390
https://api.github.com/repos/rails/rails/issues/comments/1635465925,https://github.com/rails/rails/pull/48390#issuecomment-1635465925,https://api.github.com/repos/rails/rails/issues/48390,1635465925,IC_kwDNIULOYXs6xQ,"{'login': 'westonganger', 'id': 3414795, 'node_id': 'MDQ6VXNlcjM0MTQ3OTU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3414795?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/westonganger', 'html_url': 'https://github.com/westonganger', 'followers_url': 'https://api.github.com/users/westonganger/followers', 'following_url': 'https://api.github.com/users/westonganger/following{/other_user}', 'gists_url': 'https://api.github.com/users/westonganger/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/westonganger/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/westonganger/subscriptions', 'organizations_url': 'https://api.github.com/users/westonganger/orgs', 'repos_url': 'https://api.github.com/users/westonganger/repos', 'events_url': 'https://api.github.com/users/westonganger/events{/privacy}', 'received_events_url': 'https://api.github.com/users/westonganger/received_events', 'type': 'User', 'site_admin': False}",2023-07-14T08:04:33Z,2023-07-14T08:04:33Z,CONTRIBUTOR,@clairity unfortunately we cannot utilize the `field_for` view helper option :include_id`. As seen this the changed files of this PR there is code within ActiveRecord that needs to know about this option. ActiveRecord will simply be unable to know anything about the actionview option `:include_id`,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1635465925/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48390
https://api.github.com/repos/rails/rails/issues/comments/1636022323,https://github.com/rails/rails/pull/48390#issuecomment-1636022323,https://api.github.com/repos/rails/rails/issues/48390,1636022323,IC_kwDNIULOYYO4Mw,"{'login': 'clairity', 'id': 950439, 'node_id': 'MDQ6VXNlcjk1MDQzOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/950439?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/clairity', 'html_url': 'https://github.com/clairity', 'followers_url': 'https://api.github.com/users/clairity/followers', 'following_url': 'https://api.github.com/users/clairity/following{/other_user}', 'gists_url': 'https://api.github.com/users/clairity/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/clairity/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/clairity/subscriptions', 'organizations_url': 'https://api.github.com/users/clairity/orgs', 'repos_url': 'https://api.github.com/users/clairity/repos', 'events_url': 'https://api.github.com/users/clairity/events{/privacy}', 'received_events_url': 'https://api.github.com/users/clairity/received_events', 'type': 'User', 'site_admin': False}",2023-07-14T15:26:10Z,2023-07-14T15:26:10Z,NONE,"@westonganger ok gotcha, i think i'm trying to solve a simpler problem (not exposing the integer id publicly), and if i understand correctly, you're trying to *replace* the `id` attribute for the relation both in Active Record and in the nested hidden id field. i was just trying to solve for the latter, because a `:slug` is an alternate primary key, rather than replacing the primary key, so all the under-the-hood relation stuff still works otherwise.

i believe my proposal would potentially be isolated to the `fields_for_nested_model` method in `form_helper.rb`:

https://github.com/rails/rails/blob/c9cdd800d30ec38f079b3df0772ab47f4ba4b11f/actionview/lib/action_view/helpers/form_helper.rb#L2728-L2739

if `:include_id` contains a symbol value (like `:slug`), then pass that symbol to `f.hidden_field` rather than the hardcoded `:id` symbol; otherwise, do the existing behavior.

i don't know enough about the rails codebase to be confident of that assertion, but that's what it looks like on first glance. thoughts on the feasibility of this being a simple one-method change?

cc @rafaelfranca 
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1636022323/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48390
https://api.github.com/repos/rails/rails/issues/comments/1636861976,https://github.com/rails/rails/pull/48390#issuecomment-1636861976,https://api.github.com/repos/rails/rails/issues/48390,1636861976,IC_kwDNIULOYZCIGA,"{'login': 'westonganger', 'id': 3414795, 'node_id': 'MDQ6VXNlcjM0MTQ3OTU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3414795?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/westonganger', 'html_url': 'https://github.com/westonganger', 'followers_url': 'https://api.github.com/users/westonganger/followers', 'following_url': 'https://api.github.com/users/westonganger/following{/other_user}', 'gists_url': 'https://api.github.com/users/westonganger/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/westonganger/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/westonganger/subscriptions', 'organizations_url': 'https://api.github.com/users/westonganger/orgs', 'repos_url': 'https://api.github.com/users/westonganger/repos', 'events_url': 'https://api.github.com/users/westonganger/events{/privacy}', 'received_events_url': 'https://api.github.com/users/westonganger/received_events', 'type': 'User', 'site_admin': False}",2023-07-15T19:20:05Z,2023-07-15T19:20:05Z,CONTRIBUTOR,"> i think i'm trying to solve a simpler problem (not exposing the integer id publicly), and if i understand correctly, you're trying to replace the id attribute for the relation both in Active Record and in the nested hidden id field.

@clairity no what im really after here is not exposing the integer ID publicly

If you look in this PRs code you can see that there is no way that `include_id` is capable of this as `fields_for` is only responsible for the display of records in the HTML (IE. this does not cover anything to do with form submission and beyond).

Once the form is submitted, the backend eventually calls `<relationship_name>_attributes =`  which requires that the activerecord internals know how associate the given public id (or slug) with a particular record for both remote sql `where` statements and local `detect` calls.

---- 
Aside from that:

If you truly just wanted the HTML display changes only then you can currently do `include_id: false` and just manually add another hidden ID field for your slug attribute. When it comes to form submission your app would need to do some major attribute manipulation to change the slugs out for IDs (This may or may not be feasible depending on number of levels of attribute nesting being used.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1636861976/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48390
https://api.github.com/repos/rails/rails/issues/comments/1574326472,https://github.com/rails/rails/pull/48386#issuecomment-1574326472,https://api.github.com/repos/rails/rails/issues/48386,1574326472,IC_kwDNIULOXdZQyA,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-06-02T21:18:10Z,2023-06-02T21:18:10Z,CONTRIBUTOR,"Oh, just discovered https://github.com/rails/rails/pull/48338, so I am not alone with such a problem. I introduced slightly different approach, but both works for me.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1574326472/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48386
https://api.github.com/repos/rails/rails/issues/comments/1574889284,https://github.com/rails/rails/issues/48375#issuecomment-1574889284,https://api.github.com/repos/rails/rails/issues/48375,1574889284,IC_kwDNIULOXd7nRA,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-06-03T11:50:11Z,2023-06-03T11:50:11Z,CONTRIBUTOR,"You are correct, nested partials render time is added to the final sum, so is not very much useful
https://github.com/rails/rails/blob/9d74450a0f8ae658207f1f662367381c248eb7a8/actionpack/lib/action_dispatch/middleware/server_timing.rb#L66-L68","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1574889284/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48375
https://api.github.com/repos/rails/rails/issues/comments/1704362304,https://github.com/rails/rails/issues/48375#issuecomment-1704362304,https://api.github.com/repos/rails/rails/issues/48375,1704362304,IC_kwDNIULOZZaBQA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-09-03T17:47:31Z,2023-09-03T17:47:31Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1704362304/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48375
https://api.github.com/repos/rails/rails/issues/comments/1704588331,https://github.com/rails/rails/issues/48375#issuecomment-1704588331,https://api.github.com/repos/rails/rails/issues/48375,1704588331,IC_kwDNIULOZZn0Kw,"{'login': 'tgaff', 'id': 1916144, 'node_id': 'MDQ6VXNlcjE5MTYxNDQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1916144?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tgaff', 'html_url': 'https://github.com/tgaff', 'followers_url': 'https://api.github.com/users/tgaff/followers', 'following_url': 'https://api.github.com/users/tgaff/following{/other_user}', 'gists_url': 'https://api.github.com/users/tgaff/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tgaff/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tgaff/subscriptions', 'organizations_url': 'https://api.github.com/users/tgaff/orgs', 'repos_url': 'https://api.github.com/users/tgaff/repos', 'events_url': 'https://api.github.com/users/tgaff/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tgaff/received_events', 'type': 'User', 'site_admin': False}",2023-09-04T04:21:19Z,2023-09-04T04:21:19Z,NONE,"Reproduced on Rails main branch.  I've updated the rails app and executable test case to both point at main.

![Screen Shot 2023-09-04 at 1 19 45 PM](https://github.com/rails/rails/assets/1916144/bc1d55e4-9ec7-4300-bf5c-d3e7d3d12ba4)

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1704588331/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48375
https://api.github.com/repos/rails/rails/issues/comments/1572880760,https://github.com/rails/rails/issues/48372#issuecomment-1572880760,https://api.github.com/repos/rails/rails/issues/48372,1572880760,IC_kwDNIULOXcBBeA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-06-01T22:38:36Z,2023-06-01T22:38:36Z,MEMBER,"Looks like there was a PR opened to fix this in Webpacker, but neither Rails 6 nor Webpacker are receiving bug fixes: https://github.com/rails/webpacker/pull/3315#issuecomment-1569007390","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1572880760/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48372
https://api.github.com/repos/rails/rails/issues/comments/1573024276,https://github.com/rails/rails/issues/48372#issuecomment-1573024276,https://api.github.com/repos/rails/rails/issues/48372,1573024276,IC_kwDNIULOXcJyFA,"{'login': 'schneems', 'id': 59744, 'node_id': 'MDQ6VXNlcjU5NzQ0', 'avatar_url': 'https://avatars.githubusercontent.com/u/59744?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/schneems', 'html_url': 'https://github.com/schneems', 'followers_url': 'https://api.github.com/users/schneems/followers', 'following_url': 'https://api.github.com/users/schneems/following{/other_user}', 'gists_url': 'https://api.github.com/users/schneems/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/schneems/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/schneems/subscriptions', 'organizations_url': 'https://api.github.com/users/schneems/orgs', 'repos_url': 'https://api.github.com/users/schneems/repos', 'events_url': 'https://api.github.com/users/schneems/events{/privacy}', 'received_events_url': 'https://api.github.com/users/schneems/received_events', 'type': 'User', 'site_admin': False}",2023-06-02T01:58:30Z,2023-06-02T01:58:30Z,MEMBER,"I know about the support policy, also there’s some amount of discretion at play. This little guy cost me a few hours of my life so at minimum I wanted to open an issue with the error message others might find when they search.

I feel like the real issue is that babel should have rev-ed major with that change. We could maybe ask babel to release 7.23.0 with the old name and then rev major to make 8.0 have the change. That would fix the Rails problem (for some subset of users) as I believe webpack is pessimistically locked against the major version.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1573024276/reactions', 'total_count': 6, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 5, 'rocket': 0, 'eyes': 0}",,48372
https://api.github.com/repos/rails/rails/issues/comments/1573844124,https://github.com/rails/rails/issues/48372#issuecomment-1573844124,https://api.github.com/repos/rails/rails/issues/48372,1573844124,IC_kwDNIULOXc70nA,"{'login': 'schneems', 'id': 59744, 'node_id': 'MDQ6VXNlcjU5NzQ0', 'avatar_url': 'https://avatars.githubusercontent.com/u/59744?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/schneems', 'html_url': 'https://github.com/schneems', 'followers_url': 'https://api.github.com/users/schneems/followers', 'following_url': 'https://api.github.com/users/schneems/following{/other_user}', 'gists_url': 'https://api.github.com/users/schneems/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/schneems/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/schneems/subscriptions', 'organizations_url': 'https://api.github.com/users/schneems/orgs', 'repos_url': 'https://api.github.com/users/schneems/repos', 'events_url': 'https://api.github.com/users/schneems/events{/privacy}', 'received_events_url': 'https://api.github.com/users/schneems/received_events', 'type': 'User', 'site_admin': False}",2023-06-02T14:36:45Z,2023-06-02T14:36:45Z,MEMBER,I opened https://github.com/babel/babel/issues/15679 to see if they can consider this a bug and rollback the change and move it to 8.x,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1573844124/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48372
https://api.github.com/repos/rails/rails/issues/comments/1574302169,https://github.com/rails/rails/issues/48372#issuecomment-1574302169,https://api.github.com/repos/rails/rails/issues/48372,1574302169,IC_kwDNIULOXdXx2Q,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-06-02T20:53:05Z,2023-06-02T20:53:05Z,MEMBER,"I'm ok to release a new webpacker version if it would help.

This remind me why we moved away from those workflows","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1574302169/reactions', 'total_count': 3, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 3, 'rocket': 0, 'eyes': 0}",,48372
https://api.github.com/repos/rails/rails/issues/comments/1578738233,https://github.com/rails/rails/issues/48372#issuecomment-1578738233,https://api.github.com/repos/rails/rails/issues/48372,1578738233,IC_kwDNIULOXhmiOQ,"{'login': 'schneems', 'id': 59744, 'node_id': 'MDQ6VXNlcjU5NzQ0', 'avatar_url': 'https://avatars.githubusercontent.com/u/59744?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/schneems', 'html_url': 'https://github.com/schneems', 'followers_url': 'https://api.github.com/users/schneems/followers', 'following_url': 'https://api.github.com/users/schneems/following{/other_user}', 'gists_url': 'https://api.github.com/users/schneems/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/schneems/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/schneems/subscriptions', 'organizations_url': 'https://api.github.com/users/schneems/orgs', 'repos_url': 'https://api.github.com/users/schneems/repos', 'events_url': 'https://api.github.com/users/schneems/events{/privacy}', 'received_events_url': 'https://api.github.com/users/schneems/received_events', 'type': 'User', 'site_admin': False}",2023-06-06T13:08:15Z,2023-06-06T13:08:15Z,MEMBER,"> I'm ok to release a new webpacker version if it would help.

Thanks! It looks like babel has some suggestions for moving forward. Could you take a look at https://github.com/babel/babel/issues/15679 and let me know if one stands out? ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1578738233/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48372
https://api.github.com/repos/rails/rails/issues/comments/1648762386,https://github.com/rails/rails/issues/48372#issuecomment-1648762386,https://api.github.com/repos/rails/rails/issues/48372,1648762386,IC_kwDNIULOYkYeEg,"{'login': 'kaspergrubbe', 'id': 334273, 'node_id': 'MDQ6VXNlcjMzNDI3Mw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/334273?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kaspergrubbe', 'html_url': 'https://github.com/kaspergrubbe', 'followers_url': 'https://api.github.com/users/kaspergrubbe/followers', 'following_url': 'https://api.github.com/users/kaspergrubbe/following{/other_user}', 'gists_url': 'https://api.github.com/users/kaspergrubbe/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kaspergrubbe/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kaspergrubbe/subscriptions', 'organizations_url': 'https://api.github.com/users/kaspergrubbe/orgs', 'repos_url': 'https://api.github.com/users/kaspergrubbe/repos', 'events_url': 'https://api.github.com/users/kaspergrubbe/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kaspergrubbe/received_events', 'type': 'User', 'site_admin': False}",2023-07-24T23:37:39Z,2023-07-24T23:37:39Z,NONE,"This bit me today, thanks for creating this issue and providing me with a solution. I wish I had googled sooner.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1648762386/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48372
https://api.github.com/repos/rails/rails/issues/comments/1663664461,https://github.com/rails/rails/issues/48372#issuecomment-1663664461,https://api.github.com/repos/rails/rails/issues/48372,1663664461,IC_kwDNIULOYymBTQ,"{'login': 'matthewgani', 'id': 53487361, 'node_id': 'MDQ6VXNlcjUzNDg3MzYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/53487361?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewgani', 'html_url': 'https://github.com/matthewgani', 'followers_url': 'https://api.github.com/users/matthewgani/followers', 'following_url': 'https://api.github.com/users/matthewgani/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewgani/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewgani/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewgani/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewgani/orgs', 'repos_url': 'https://api.github.com/users/matthewgani/repos', 'events_url': 'https://api.github.com/users/matthewgani/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewgani/received_events', 'type': 'User', 'site_admin': False}",2023-08-03T09:48:33Z,2023-08-03T09:48:33Z,NONE,"It worked for me after changing both the 'proposal' to 'transform' in babel.config.js as seen in simonbaird's commit above. Thank you guys for providing a fix!
-         '@babel/plugin-proposal-private-methods',
-         '@babel/plugin-proposal-private-property-in-object',","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1663664461/reactions', 'total_count': 3, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 3, 'rocket': 0, 'eyes': 0}",,48372
https://api.github.com/repos/rails/rails/issues/comments/1570328390,https://github.com/rails/rails/issues/48351#issuecomment-1570328390,https://api.github.com/repos/rails/rails/issues/48351,1570328390,IC_kwDNIULOXZlPRg,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T14:17:30Z,2023-05-31T14:17:30Z,MEMBER,"I hadn't thought about whether this was supported until now. I don't even love that we call `load` in here - the only reason we do is because I saw too many cases where applications were expecting to use the return value of a `connected_to` block and have it been loaded already.

I think a way we could support this is to add an `async` option to `connected_to` and pass that down - if it's true we call `load_async` otherwise we call `load`. 

Do you want to work on a PR?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1570328390/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48351
https://api.github.com/repos/rails/rails/issues/comments/1570421158,https://github.com/rails/rails/issues/48351#issuecomment-1570421158,https://api.github.com/repos/rails/rails/issues/48351,1570421158,IC_kwDNIULOXZq5pg,"{'login': 'r-plus', 'id': 425216, 'node_id': 'MDQ6VXNlcjQyNTIxNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/425216?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/r-plus', 'html_url': 'https://github.com/r-plus', 'followers_url': 'https://api.github.com/users/r-plus/followers', 'following_url': 'https://api.github.com/users/r-plus/following{/other_user}', 'gists_url': 'https://api.github.com/users/r-plus/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/r-plus/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/r-plus/subscriptions', 'organizations_url': 'https://api.github.com/users/r-plus/orgs', 'repos_url': 'https://api.github.com/users/r-plus/repos', 'events_url': 'https://api.github.com/users/r-plus/events{/privacy}', 'received_events_url': 'https://api.github.com/users/r-plus/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T15:09:13Z,2023-05-31T15:09:13Z,NONE,"thanks for your response.

okey, I'll try to my first contribution to rails :)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1570421158/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48351
https://api.github.com/repos/rails/rails/issues/comments/1570457831,https://github.com/rails/rails/issues/48351#issuecomment-1570457831,https://api.github.com/repos/rails/rails/issues/48351,1570457831,IC_kwDNIULOXZtI5w,"{'login': 'r-plus', 'id': 425216, 'node_id': 'MDQ6VXNlcjQyNTIxNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/425216?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/r-plus', 'html_url': 'https://github.com/r-plus', 'followers_url': 'https://api.github.com/users/r-plus/followers', 'following_url': 'https://api.github.com/users/r-plus/following{/other_user}', 'gists_url': 'https://api.github.com/users/r-plus/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/r-plus/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/r-plus/subscriptions', 'organizations_url': 'https://api.github.com/users/r-plus/orgs', 'repos_url': 'https://api.github.com/users/r-plus/repos', 'events_url': 'https://api.github.com/users/r-plus/events{/privacy}', 'received_events_url': 'https://api.github.com/users/r-plus/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T15:32:06Z,2023-05-31T16:05:35Z,NONE,"@eileencodes 

I understand that your proposal is such a change.

```diff
-      def with_role_and_shard(role, shard, prevent_writes)
+      def with_role_and_shard(role, shard, prevent_writes, async)
         prevent_writes = true if role == ActiveRecord.reading_role

         append_to_connected_to_stack(role: role, shard: shard, prevent_writes: prevent_writes, klasses: [self])
         return_value = yield
-        return_value.load if return_value.is_a? ActiveRecord::Relation
+        if return_value.is_a? ActiveRecord::Relation
+          if async
+            return_value.load_async
+          else
+            return_value.load
+          end
+        end
         return_value
```

How about this change without adding argument to method?

```diff
-        return_value.load if return_value.is_a? ActiveRecord::Relation
+        return_value.load if return_value.is_a?(ActiveRecord::Relation) && !return_value.scheduled?
```

expected usage in this case.

```ruby
ActiveRecord::Base.connected_to(role: :reading) do
  User.where(id: 1).load_async
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1570457831/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48351
https://api.github.com/repos/rails/rails/issues/comments/1570523334,https://github.com/rails/rails/issues/48351#issuecomment-1570523334,https://api.github.com/repos/rails/rails/issues/48351,1570523334,IC_kwDNIULOXZxIxg,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T16:10:22Z,2023-05-31T16:10:22Z,MEMBER,"I don't know if the second one will work and I'm not able to test right now. I'm fine with either, but we need to make sure the second option actually does what we expect (load async from the replica db). 

The reason `load` was added was because if you assign the block to a return value, the relation won't be loaded until it's used outside the block which will result in reading from the primary db and not the replica as intended. So with `load_async` , regardless of the method we choose, we need to be sure it's reading from the right db.

More information can be found in the PR https://github.com/rails/rails/pull/38339 and reported issue https://github.com/rails/rails/issues/38332","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1570523334/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48351
https://api.github.com/repos/rails/rails/issues/comments/1571484392,https://github.com/rails/rails/issues/48351#issuecomment-1571484392,https://api.github.com/repos/rails/rails/issues/48351,1571484392,IC_kwDNIULOXary6A,"{'login': 'r-plus', 'id': 425216, 'node_id': 'MDQ6VXNlcjQyNTIxNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/425216?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/r-plus', 'html_url': 'https://github.com/r-plus', 'followers_url': 'https://api.github.com/users/r-plus/followers', 'following_url': 'https://api.github.com/users/r-plus/following{/other_user}', 'gists_url': 'https://api.github.com/users/r-plus/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/r-plus/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/r-plus/subscriptions', 'organizations_url': 'https://api.github.com/users/r-plus/orgs', 'repos_url': 'https://api.github.com/users/r-plus/repos', 'events_url': 'https://api.github.com/users/r-plus/events{/privacy}', 'received_events_url': 'https://api.github.com/users/r-plus/received_events', 'type': 'User', 'site_admin': False}",2023-06-01T07:11:18Z,2023-06-01T07:11:18Z,NONE,"yah, I know why calling `load` method for `ActiveRecord::Relation` instance.
I believe that concern does not apply to `load_async` method because it will start query in background thread even if not used returned instance out side the block.

I implemented the second change with a test, and it passed, so I think it's fine.
I'll open a pull request with this change, thanks :)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1571484392/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48351
https://api.github.com/repos/rails/rails/issues/comments/1571525297,https://github.com/rails/rails/issues/48351#issuecomment-1571525297,https://api.github.com/repos/rails/rails/issues/48351,1571525297,IC_kwDNIULOXauSsQ,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-06-01T07:43:55Z,2023-06-01T07:43:55Z,MEMBER,"I think your challenge is going to be around the possibility of `load` being called, outside the block, after the relation has been told to `load_async` (on the correct connection), but before the background execution has started.

In that case I believe `load` will actively run the query itself... and that's going to need to happen on the right connection.

I wonder if we could/should _not_ do the `load` behaviour at all, and instead arrange to ""pin"" the choice of connection on the relation as it leaves the block, so we'll then use the right connection whenever, and however, it later gets loaded. 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1571525297/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48351
https://api.github.com/repos/rails/rails/issues/comments/1579021393,https://github.com/rails/rails/issues/48351#issuecomment-1579021393,https://api.github.com/repos/rails/rails/issues/48351,1579021393,IC_kwDNIULOXh30UQ,"{'login': 'r-plus', 'id': 425216, 'node_id': 'MDQ6VXNlcjQyNTIxNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/425216?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/r-plus', 'html_url': 'https://github.com/r-plus', 'followers_url': 'https://api.github.com/users/r-plus/followers', 'following_url': 'https://api.github.com/users/r-plus/following{/other_user}', 'gists_url': 'https://api.github.com/users/r-plus/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/r-plus/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/r-plus/subscriptions', 'organizations_url': 'https://api.github.com/users/r-plus/orgs', 'repos_url': 'https://api.github.com/users/r-plus/repos', 'events_url': 'https://api.github.com/users/r-plus/events{/privacy}', 'received_events_url': 'https://api.github.com/users/r-plus/received_events', 'type': 'User', 'site_admin': False}",2023-06-06T15:48:51Z,2023-06-06T15:48:51Z,NONE,"thanks for your suggestion.
hmm, Is there any code that would be helpful in pinning the connection?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1579021393/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48351
https://api.github.com/repos/rails/rails/issues/comments/1579055741,https://github.com/rails/rails/issues/48351#issuecomment-1579055741,https://api.github.com/repos/rails/rails/issues/48351,1579055741,IC_kwDNIULOXh56fQ,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-06-06T16:08:02Z,2023-06-06T16:08:02Z,MEMBER,"> hmm, Is there any code that would be helpful in pinning the connection?

This isn't currently possible and I'm not sure what mechanism we'd use for this. Essentially the `connected_to` block changes the _context_ in which a connection is looked up, but does not actually handle finding the correct connection from the PoolManager. So to illustrate what I mean here's a code example with comments.

```ruby
# every connection is keyed like Owner Class name -> `PoolManager` -> `role` -> `shard` 
# where `PoolManager` holds multiple role to shard mappings for a given class
# outside block default context is writing role and shard named default
ActiveRecordBase.connected_to(role: :reading, shard: :one) do # changes ""context"" to reading role and shard one
  Post.first # goes up the inheritance chain looking for the connection based on the given context
end
# we've left the block, context is returned to default values (role writing, shard default)
```
  
The thing is once we leave the block, we no longer have the context to switch the connection. Active Record doesn't (yet) have a way to track the connection context in order to pin it. I once tried to do something like this so we could have an API for switching connections in individual queries but it ended up feeling really hard and I tabled it for now.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1579055741/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48351
https://api.github.com/repos/rails/rails/issues/comments/1567961335,https://github.com/rails/rails/issues/48341#issuecomment-1567961335,https://api.github.com/repos/rails/rails/issues/48341,1567961335,IC_kwDNIULOXXUw9w,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-05-30T08:05:43Z,2023-05-30T08:05:43Z,CONTRIBUTOR,"Which cache store are you using?

> it's looking like Rails tries to do that (by appending Process.pid and Thread.current.object_id to the namespace), but that it isn't working properly.

Can you point me to this code in the `rails` source? Can't find that.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1567961335/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1568312950,https://github.com/rails/rails/issues/48341#issuecomment-1568312950,https://api.github.com/repos/rails/rails/issues/48341,1568312950,IC_kwDNIULOXXqOdg,"{'login': 'rbroemeling', 'id': 149464, 'node_id': 'MDQ6VXNlcjE0OTQ2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/149464?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rbroemeling', 'html_url': 'https://github.com/rbroemeling', 'followers_url': 'https://api.github.com/users/rbroemeling/followers', 'following_url': 'https://api.github.com/users/rbroemeling/following{/other_user}', 'gists_url': 'https://api.github.com/users/rbroemeling/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rbroemeling/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rbroemeling/subscriptions', 'organizations_url': 'https://api.github.com/users/rbroemeling/orgs', 'repos_url': 'https://api.github.com/users/rbroemeling/repos', 'events_url': 'https://api.github.com/users/rbroemeling/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rbroemeling/received_events', 'type': 'User', 'site_admin': False}",2023-05-30T12:02:37Z,2023-05-30T12:02:37Z,NONE,"I am using the redis cache store.

I can't actually point you to the code in rails that is doing it. I spent about 20m looking, but I couldn't find anything.

However the prefix that is being put in `namespace` does contain what appears to be both a process identifier and a thread identifier that my code isn't putting there.

I assumed that Rails was putting it there, because Rails is doing the cache parallelization and I have no code that does that to the namespace.

If Rails isn't putting that into the namespace for the cache then I don't know where it is coming from.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1568312950/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1568327214,https://github.com/rails/rails/issues/48341#issuecomment-1568327214,https://api.github.com/repos/rails/rails/issues/48341,1568327214,IC_kwDNIULOXXrGLg,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-05-30T12:12:39Z,2023-05-30T12:12:39Z,CONTRIBUTOR,That's not rails. Try to debug some cache store method calls and identify where that came from.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1568327214/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1568363634,https://github.com/rails/rails/issues/48341#issuecomment-1568363634,https://api.github.com/repos/rails/rails/issues/48341,1568363634,IC_kwDNIULOXXtUcg,"{'login': 'rbroemeling', 'id': 149464, 'node_id': 'MDQ6VXNlcjE0OTQ2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/149464?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rbroemeling', 'html_url': 'https://github.com/rbroemeling', 'followers_url': 'https://api.github.com/users/rbroemeling/followers', 'following_url': 'https://api.github.com/users/rbroemeling/following{/other_user}', 'gists_url': 'https://api.github.com/users/rbroemeling/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rbroemeling/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rbroemeling/subscriptions', 'organizations_url': 'https://api.github.com/users/rbroemeling/orgs', 'repos_url': 'https://api.github.com/users/rbroemeling/repos', 'events_url': 'https://api.github.com/users/rbroemeling/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rbroemeling/received_events', 'type': 'User', 'site_admin': False}",2023-05-30T12:39:26Z,2023-05-30T12:39:26Z,NONE,"@fatkodima So just to confirm you are saying that Rails doesn't (and shouldn't) do anything to protect against cache collisions during parallelized test runs?

I don't agree.

Rails does a lot of work to isolate databases to protect against collisions during parallelized tests, why would the cache be any different?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1568363634/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1568373732,https://github.com/rails/rails/issues/48341#issuecomment-1568373732,https://api.github.com/repos/rails/rails/issues/48341,1568373732,IC_kwDNIULOXXt75A,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-05-30T12:46:31Z,2023-05-30T12:46:31Z,CONTRIBUTOR,"I haven't said that it should not be done, but that it is not done currently. At least I was not able to find it. So search trough some gems in the Gemfile and one of them is probably adding support for this.

Regarding adding native support for this into the Rails itself: this can be done for a store like Redis, because it has a concept of databases and operations like `.clear` would clear just that database. But for memcached - `.clear` will clear everything. Namespaces won't help there.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1568373732/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1568378611,https://github.com/rails/rails/issues/48341#issuecomment-1568378611,https://api.github.com/repos/rails/rails/issues/48341,1568378611,IC_kwDNIULOXXuO8w,"{'login': 'rbroemeling', 'id': 149464, 'node_id': 'MDQ6VXNlcjE0OTQ2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/149464?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rbroemeling', 'html_url': 'https://github.com/rbroemeling', 'followers_url': 'https://api.github.com/users/rbroemeling/followers', 'following_url': 'https://api.github.com/users/rbroemeling/following{/other_user}', 'gists_url': 'https://api.github.com/users/rbroemeling/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rbroemeling/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rbroemeling/subscriptions', 'organizations_url': 'https://api.github.com/users/rbroemeling/orgs', 'repos_url': 'https://api.github.com/users/rbroemeling/repos', 'events_url': 'https://api.github.com/users/rbroemeling/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rbroemeling/received_events', 'type': 'User', 'site_admin': False}",2023-05-30T12:50:02Z,2023-05-30T12:50:02Z,NONE,"I don't think I would suggest executing a flush on redis. Rather, I would suggest adjusting the namespace to ensure that the keys are unique per run. Process/thread identifier would work, generally; or even a UUID assigned per worker.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1568378611/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1568451089,https://github.com/rails/rails/issues/48341#issuecomment-1568451089,https://api.github.com/repos/rails/rails/issues/48341,1568451089,IC_kwDNIULOXXyqEQ,"{'login': 'rbroemeling', 'id': 149464, 'node_id': 'MDQ6VXNlcjE0OTQ2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/149464?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rbroemeling', 'html_url': 'https://github.com/rbroemeling', 'followers_url': 'https://api.github.com/users/rbroemeling/followers', 'following_url': 'https://api.github.com/users/rbroemeling/following{/other_user}', 'gists_url': 'https://api.github.com/users/rbroemeling/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rbroemeling/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rbroemeling/subscriptions', 'organizations_url': 'https://api.github.com/users/rbroemeling/orgs', 'repos_url': 'https://api.github.com/users/rbroemeling/repos', 'events_url': 'https://api.github.com/users/rbroemeling/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rbroemeling/received_events', 'type': 'User', 'site_admin': False}",2023-05-30T13:36:44Z,2023-05-30T13:36:44Z,NONE,"Right, I tracked down the code that was causing the confusion by ""attempting"" to fix this -- it was actually written by me, trying to solve this exact problem, a while ago and then I of course promptly forgot about it. 😬

It was this piece of code in `config/environments/test.rb`:

```ruby
# Increase selectivity of cache keys by including process and thread identifiers.
# This protects against cache conflicts while parallelizing tests as well as across runs.
config.cache_store[1][:namespace] += ""#{Process.pid}:#{Thread.current.object_id}:""
```

This approach doesn't work because it's too early in the rails boot process to be _after_ the test initialization. So the confusion around ""Rails trying to fix this"" was completely caused by my initial attempt to fix this, which didn't work at all. I apologize for the confusion!

I do think that Rails should fix this ultimately, however -- it's a risk for anything that leans on actual cache stores during test runs that are parallelized and it'd be convenient for everyone for it to be handled right from the get-go without needing to have anyone trying to work around this (more than once, even) as I have done.

What I have right now, which as far as I can tell works, is this simple bit of code in `spec/test_helper.rb`. Within a single test run it protects from collisions by using a worker identifier in the prefix; and then across test runs it protects from collisions with the simple timestamp (so there's no need to flush the cache, as each subsequent test run will use a new prefix).

```ruby
    # Protect from collisions during parallelized testing by namespacing our Redis prefix by our worker identifier.
    # Rails doesn't currently protect against this, which means that all test executors are sharing the same cache
    # which can lead to transient test failures due to cache collisions.
    #
    # Once this bug is fixed, this code can probably be dropped: https://github.com/rails/rails/issues/48341
    parallelize_setup do |worker|
      Rails.cache.options[:namespace] = ""#{Rails.cache.options[:namespace]}#{Time.now.to_i}.#{worker}:""
      # puts ""#{worker}: #{Rails.cache.options[:namespace]}""
    end
```

So far as I can tell this solves the transient test failures I was seeing from caching conflicts. If there is still a conflict here it'd be caused by multiple test runs within the same second/multiple independent concurrent cache runs. `Process.pid` would solve that locally, but honestly at that point I think it'd be simpler to just go to a ""more unique"" prefix like a UUID rather than trying to chain a whole bunch of ""somewhat unique"" prefixes together (`Time.now.to_i + Process.pid + worker`).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1568451089/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1569159892,https://github.com/rails/rails/issues/48341#issuecomment-1569159892,https://api.github.com/repos/rails/rails/issues/48341,1569159892,IC_kwDNIULOXYd61A,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-05-30T21:56:30Z,2023-05-30T21:56:30Z,CONTRIBUTOR,"> so there's no need to flush the cache, as each subsequent test run will use a new prefix

So, what I mentioned earlier. What will happen if I am using a memcached store with the proposed solution from your latest snippet and call `.clear` inside one of my tests? Something like:
```ruby
def test_something
  cache.write(:key, 1)
  # ... something
  cache.clear
  # assert something
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1569159892/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1569319432,https://github.com/rails/rails/issues/48341#issuecomment-1569319432,https://api.github.com/repos/rails/rails/issues/48341,1569319432,IC_kwDNIULOXYnqCA,"{'login': 'rbroemeling', 'id': 149464, 'node_id': 'MDQ6VXNlcjE0OTQ2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/149464?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rbroemeling', 'html_url': 'https://github.com/rbroemeling', 'followers_url': 'https://api.github.com/users/rbroemeling/followers', 'following_url': 'https://api.github.com/users/rbroemeling/following{/other_user}', 'gists_url': 'https://api.github.com/users/rbroemeling/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rbroemeling/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rbroemeling/subscriptions', 'organizations_url': 'https://api.github.com/users/rbroemeling/orgs', 'repos_url': 'https://api.github.com/users/rbroemeling/repos', 'events_url': 'https://api.github.com/users/rbroemeling/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rbroemeling/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T00:29:18Z,2023-05-31T00:29:18Z,NONE,"@fatkodima I'm not quite sure I see the line that you're drawing there, but I might be missing something.

At the moment, if you execute that code: it's not at all safe for parallelization. The clear will wipe out the entire cache, probably breaking other tests.

With the suggested change, if you execute that code: it's not at all safe for parallelization. There's no difference whatsoever.

The difference is that _every other command_ that isn't a global bypass of the namespace becomes safe with the suggested change. I'm fuzzy on why it would be a problem to improve things to that degree.

If you've got a better solution that solves everything (including the ""global destroy"" case) coherently then great that's a better solution. If not though, then it seems to me that the suggestion is easy to implement, and largely (though not completely) effective at namespacing caching.

I mean, if I really wanted to poke at this I could easily write SQL that when executed would muck about (even drop) databases for the other rails test workers, as well. It'd be a bit weird for me to do that, but it's entirely possible for me to do. The point is just that even on the SQL side of the house, there's not actually a technical barrier against breaking the store across parallelized workers.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1569319432/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1569761778,https://github.com/rails/rails/issues/48341#issuecomment-1569761778,https://api.github.com/repos/rails/rails/issues/48341,1569761778,IC_kwDNIULOXZCp8g,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T08:45:17Z,2023-05-31T08:45:17Z,CONTRIBUTOR,"You got the point. But the problem, is that with SQL databases, when you want to reset the state, you can just do `ROLLBACK` or `Model.delete_all`. People do not usually delete databases for this. 
With cache stores (except Redis, where there are databases), you store everything in one place (with namespaces or not) and when you want to reset the state of the cache, you have to somehow keep all the keys you added and then modify `.clear` to remove only these; or manually remove these keys via `.delete`s; or just call `.clear` and remove everything, impacting other parallel workers too. Clearing a cache is very much used in tests, in `before` blocks, for example. 
If it was possible to cleanly clear caches for individual workers, then probably, your suggested changes would have been already implemented into rails itself.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1569761778/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1570001032,https://github.com/rails/rails/issues/48341#issuecomment-1570001032,https://api.github.com/repos/rails/rails/issues/48341,1570001032,IC_kwDNIULOXZRQiA,"{'login': 'rbroemeling', 'id': 149464, 'node_id': 'MDQ6VXNlcjE0OTQ2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/149464?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rbroemeling', 'html_url': 'https://github.com/rbroemeling', 'followers_url': 'https://api.github.com/users/rbroemeling/followers', 'following_url': 'https://api.github.com/users/rbroemeling/following{/other_user}', 'gists_url': 'https://api.github.com/users/rbroemeling/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rbroemeling/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rbroemeling/subscriptions', 'organizations_url': 'https://api.github.com/users/rbroemeling/orgs', 'repos_url': 'https://api.github.com/users/rbroemeling/repos', 'events_url': 'https://api.github.com/users/rbroemeling/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rbroemeling/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T11:18:43Z,2023-05-31T11:18:43Z,NONE,Why would we block a clear improvement in isolation because it doesn't apply to `.clear`?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1570001032/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1570040744,https://github.com/rails/rails/issues/48341#issuecomment-1570040744,https://api.github.com/repos/rails/rails/issues/48341,1570040744,IC_kwDNIULOXZTrqA,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T11:47:31Z,2023-05-31T11:47:31Z,CONTRIBUTOR,"In every test suite touching caching I have `before { Rails.cache.clear }` for each test case to work with a blank slate. No one will manually just call a bunch of `Rails.cache.delete(""foo"")`  and `Rails.cache.delete(""bar"")` (and always remember that he should do it this way) to avoid calling `Rails.cache.clear`. Everyone will just call the latter. And this makes these changes into the Rails useless, because it will wipe all the data for all the workers. Unless you are using Redis.

I am sure someone, like @byroot, will better explain this.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1570040744/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1570383057,https://github.com/rails/rails/issues/48341#issuecomment-1570383057,https://api.github.com/repos/rails/rails/issues/48341,1570383057,IC_kwDNIULOXZok0Q,"{'login': 'gavingmiller', 'id': 452161, 'node_id': 'MDQ6VXNlcjQ1MjE2MQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/452161?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gavingmiller', 'html_url': 'https://github.com/gavingmiller', 'followers_url': 'https://api.github.com/users/gavingmiller/followers', 'following_url': 'https://api.github.com/users/gavingmiller/following{/other_user}', 'gists_url': 'https://api.github.com/users/gavingmiller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gavingmiller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gavingmiller/subscriptions', 'organizations_url': 'https://api.github.com/users/gavingmiller/orgs', 'repos_url': 'https://api.github.com/users/gavingmiller/repos', 'events_url': 'https://api.github.com/users/gavingmiller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gavingmiller/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T14:48:25Z,2023-05-31T14:48:25Z,CONTRIBUTOR,"> In every test suite touching caching I have `before { Rails.cache.clear }` for each test case to work with a blank slate.

That sounds incredibly broken. How is someone new to Rails going to know they have to clear their cache before every test? To me, as @rbroemeling is pointing out, the framework is missing a concept that results in a default broken state for parallel tests. Wouldn't it make more sense to incorporate a namespace fix since it makes the framework better?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1570383057/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1570388190,https://github.com/rails/rails/issues/48341#issuecomment-1570388190,https://api.github.com/repos/rails/rails/issues/48341,1570388190,IC_kwDNIULOXZo43g,"{'login': 'rbroemeling', 'id': 149464, 'node_id': 'MDQ6VXNlcjE0OTQ2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/149464?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rbroemeling', 'html_url': 'https://github.com/rbroemeling', 'followers_url': 'https://api.github.com/users/rbroemeling/followers', 'following_url': 'https://api.github.com/users/rbroemeling/following{/other_user}', 'gists_url': 'https://api.github.com/users/rbroemeling/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rbroemeling/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rbroemeling/subscriptions', 'organizations_url': 'https://api.github.com/users/rbroemeling/orgs', 'repos_url': 'https://api.github.com/users/rbroemeling/repos', 'events_url': 'https://api.github.com/users/rbroemeling/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rbroemeling/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T14:51:29Z,2023-05-31T14:51:29Z,NONE,"@fatkodima I don't want to get into the details of your use case. It's not how I would work/how I would prefer to work, but honestly to each their own and if that's your use case then: cool! Works for you that's awesome.

I think my point though is that: this change has zero impact on your use case. You won't have to change anything or do anyting, and everything will still work.

Whereas, _anyone else_ who tests caching code _differently from you_ will see immense benefit from having their cache ""automatically"" independent across parallelized workers as well as across test runs.

So frankly, I don't really see that you've quite answered my basic question, which is: why wouldn't Rails implement this to help the developers using it out?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1570388190/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1570534276,https://github.com/rails/rails/issues/48341#issuecomment-1570534276,https://api.github.com/repos/rails/rails/issues/48341,1570534276,IC_kwDNIULOXZxzhA,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T16:17:40Z,2023-05-31T16:17:40Z,MEMBER,"We could indeed automatically namespace, but like Dima said, that's would be a fairly leaky abstraction, as if you can't fully clear the cache between each tests, you are leaking state which is a recipe for flaky tests. So I'd prefer to find a better solution.

For Redis, a better solution is to use distinct database per test worker, but by default that limits you to 16 workers (which generally should be plenty), but for Memcached, I don't think we can.

All this to say, we agree this is imperfect and it would be good to improve the situation, but what you propose isn't necessarily without flaws.

I'd have to some research in old parallel tests related PRs as well as the documentation what the reasoning was back in the day, and if some solutions were explored before.

> why wouldn't Rails implement this to help the developers using it out?

Because sometimes a solution with big flaws is much worse than no solution. And I fear that's the case here. But again, this isn't to say that nothing should be done.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1570534276/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1570850642,https://github.com/rails/rails/issues/48341#issuecomment-1570850642,https://api.github.com/repos/rails/rails/issues/48341,1570850642,IC_kwDNIULOXaFHUg,"{'login': 'rbroemeling', 'id': 149464, 'node_id': 'MDQ6VXNlcjE0OTQ2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/149464?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rbroemeling', 'html_url': 'https://github.com/rbroemeling', 'followers_url': 'https://api.github.com/users/rbroemeling/followers', 'following_url': 'https://api.github.com/users/rbroemeling/following{/other_user}', 'gists_url': 'https://api.github.com/users/rbroemeling/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rbroemeling/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rbroemeling/subscriptions', 'organizations_url': 'https://api.github.com/users/rbroemeling/orgs', 'repos_url': 'https://api.github.com/users/rbroemeling/repos', 'events_url': 'https://api.github.com/users/rbroemeling/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rbroemeling/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T19:53:12Z,2023-05-31T19:53:12Z,NONE,"@byroot Sure, I agree it's not perfect, but I see it as an improvement on the status quo.

> Because sometimes a solution with big flaws is much worse than no solution. And I fear that's the case here.

Can you add concreteness to this? Why would implementing something this trivial be _actively worse_ than no solution?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1570850642/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1571100954,https://github.com/rails/rails/issues/48341#issuecomment-1571100954,https://api.github.com/repos/rails/rails/issues/48341,1571100954,IC_kwDNIULOXaUZGg,"{'login': 'rbroemeling', 'id': 149464, 'node_id': 'MDQ6VXNlcjE0OTQ2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/149464?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rbroemeling', 'html_url': 'https://github.com/rbroemeling', 'followers_url': 'https://api.github.com/users/rbroemeling/followers', 'following_url': 'https://api.github.com/users/rbroemeling/following{/other_user}', 'gists_url': 'https://api.github.com/users/rbroemeling/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rbroemeling/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rbroemeling/subscriptions', 'organizations_url': 'https://api.github.com/users/rbroemeling/orgs', 'repos_url': 'https://api.github.com/users/rbroemeling/repos', 'events_url': 'https://api.github.com/users/rbroemeling/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rbroemeling/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T23:43:49Z,2023-05-31T23:43:49Z,NONE,"@byroot Coming back because if I am asking you to do the work of making it more concrete, the least that I can do is do the work of making it more concrete as well.

The assertion seems to be that running `clear` for the cache at the start of each test is a ""better way"" of achieving isolation. I don't really agree, but I also don't want to get into a thing where we spend a tonne of time hand-waving at each other.

However, there's a very concrete case where this suggestion is helpful in hardening test parallelization even when you run `clear` at the start of each test. The case is, of course, that running `clear` at the start of each test (with no namespacing) can and will cause transients if tests are hitting the same key.

As a really remedial and obviously academic example if you have tests that do something naive like this:

```
Rails.cache.set(:foo, 1)

assert(1, Rails.cache.get(:foo)
```

and

```
Rails.cache.set(:foo, 0)
Rails.cache.increment(:foo)

assert(1, Rails.cache.get(:foo)
```

... then those tests will transiently fail when run against the same caching server, even if `before { Rails.cache.clear }` is executed.

The race-condition is small, but present.

The change requested, adjusting namespacing to ensure that keys cannot collide across parallelized workers, improves things by fixing/erasing that race-condition.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1571100954/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1571430920,https://github.com/rails/rails/issues/48341#issuecomment-1571430920,https://api.github.com/repos/rails/rails/issues/48341,1571430920,IC_kwDNIULOXaoiCA,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-06-01T06:25:46Z,2023-06-01T06:25:46Z,MEMBER,"> The assertion seems to be that running `clear` for the cache at the start of each test is a ""better way"" of achieving isolation.

Absolutely not, I think there is a big misunderstanding here.

What Dima and I mean, is isolation between two subsequent tests, that's an isolation you want even without parallelization.

The idea that each test should start with an empty cache, just like how each test should start with an empty database (or reset to a specific state). And Rails should probably do that by default for you to propagate this best practice.

At no point we suggested that calling `cache.clear` before or after each test would solve the parallel test isolation issue.

Now, why I fear a very imperfect fix is worse that no fix, is that for most cache store the only way to have proper isolation is to have one instance of that store (I mean one memcached server, etc) per parallel test worker. That's something Rails can't do for you, so I fear implicit namespacing, while it may work for some people, is absolutely not robust enough to be the default and might lead users to experience weird test failures that would be even harder to debug that what you experienced.

Additionally, test parallelization and cache store are entirely decoupled, so it's really unclear how we could do what you suggest without making a mess in the codebase.

However I want to re-iterate that I absolutely agree with you that the current situation is totally undesirable, and that we should look at improving this, I'm not closing this issue, I'm not saying there is no problem.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1571430920/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1578814666,https://github.com/rails/rails/issues/48341#issuecomment-1578814666,https://api.github.com/repos/rails/rails/issues/48341,1578814666,IC_kwDNIULOXhrMyg,"{'login': 'rbroemeling', 'id': 149464, 'node_id': 'MDQ6VXNlcjE0OTQ2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/149464?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rbroemeling', 'html_url': 'https://github.com/rbroemeling', 'followers_url': 'https://api.github.com/users/rbroemeling/followers', 'following_url': 'https://api.github.com/users/rbroemeling/following{/other_user}', 'gists_url': 'https://api.github.com/users/rbroemeling/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rbroemeling/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rbroemeling/subscriptions', 'organizations_url': 'https://api.github.com/users/rbroemeling/orgs', 'repos_url': 'https://api.github.com/users/rbroemeling/repos', 'events_url': 'https://api.github.com/users/rbroemeling/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rbroemeling/received_events', 'type': 'User', 'site_admin': False}",2023-06-06T13:54:34Z,2023-06-06T13:54:34Z,NONE,"@byroot I definitely misunderstood then, that's what I took away from the thread.

I can align with the philosophy of each test being completely independent with regards to cache state, though like the rest of the folks in this thread I don't know how to get there. There's no obvious path to achieve that ideal state without deep dependence on things that as you say are beyond Rails' immediate control (such as enforcing the use of redis and purposefully creating and administering the redis service to permit one database per test runner and then using `flushdb` in-between tests).

> That's something Rails can't do for you, so I fear implicit namespacing, while it may work for some people, is absolutely not robust enough to be the default and might lead users to experience weird test failures that would be even harder to debug that what you experienced.

I'd agree, I don't see any way to get there at the moment particularly since it's my understanding that Rails needs to support more than just Redis as a caching store, as well.

Where I don't align with you anymore is at ""not robust enough to be the default"", though.

The code as shipped right now is: no help whatsoever for any sort of caching isolation during tests.

What I'm suggesting is: limited help for caching isolation that solves the naive case.

... and then later on it could be replaced if a better solution to approach a more ideal state is found.

As to the coupling of the code, that's fair enough and 🤔 on that -- I wasn't familiar enough with the Rails codebase to even think about where this code should go so I was assuming that others would know exactly where to insert the line of code to make this happen.

If that's not the case then that's harder and I do agree that adding tight coupling might not be ideal here.

What about if this just got generated into `test/test_helper.rb` so that it was there to help people who hit caching conflicts?

```ruby
# Protect from collisions during parallelized testing by namespacing our caching prefix by our worker identifier.
# Without this protection, all test executors share the same cache, which can lead to transient failures due to cache collisions.
# This protection is partial -- even with it, cache state still travels across tests executing in the same worker, which the author must be cautious of.
parallelize_setup do |worker|
  Rails.cache.options[:namespace] += ""#{Time.now.to_i}.#{worker}:""
end
```

For myself, with that present in my `test_helper`, transients have stopped entirely -- but, I am always conscious of cache-state when crafting tests... so if a test has a dependency on specific cache state then I curate the test to make sure that it creates that state as necessary to be sure that lingering data in the cache doesn't cause problems.

I do understand that a solution here that also explicitly protects against cache state leaking across tests in the same worker would be better, but... perfect is the enemy of good here, I think. If there's an idea for how to actually achieve the perfect solution then cool; but in absence of it this is a change that helps improve the current state.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1578814666/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1605694845,https://github.com/rails/rails/issues/48341#issuecomment-1605694845,https://api.github.com/repos/rails/rails/issues/48341,1605694845,IC_kwDNIULOX7T1fQ,"{'login': 'jclusso', 'id': 622516, 'node_id': 'MDQ6VXNlcjYyMjUxNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/622516?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jclusso', 'html_url': 'https://github.com/jclusso', 'followers_url': 'https://api.github.com/users/jclusso/followers', 'following_url': 'https://api.github.com/users/jclusso/following{/other_user}', 'gists_url': 'https://api.github.com/users/jclusso/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jclusso/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jclusso/subscriptions', 'organizations_url': 'https://api.github.com/users/jclusso/orgs', 'repos_url': 'https://api.github.com/users/jclusso/repos', 'events_url': 'https://api.github.com/users/jclusso/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jclusso/received_events', 'type': 'User', 'site_admin': False}",2023-06-24T19:18:00Z,2023-06-24T19:18:00Z,NONE,Just ran into this issue myself.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1605694845/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1731967710,https://github.com/rails/rails/issues/48341#issuecomment-1731967710,https://api.github.com/repos/rails/rails/issues/48341,1731967710,IC_kwDNIULOZzu63g,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-09-22T19:56:36Z,2023-09-22T19:56:36Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1731967710/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48341
https://api.github.com/repos/rails/rails/issues/comments/1567863627,https://github.com/rails/rails/pull/48338#issuecomment-1567863627,https://api.github.com/repos/rails/rails/issues/48338,1567863627,IC_kwDNIULOXXOzSw,"{'login': 'dongcheolpark', 'id': 36955431, 'node_id': 'MDQ6VXNlcjM2OTU1NDMx', 'avatar_url': 'https://avatars.githubusercontent.com/u/36955431?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dongcheolpark', 'html_url': 'https://github.com/dongcheolpark', 'followers_url': 'https://api.github.com/users/dongcheolpark/followers', 'following_url': 'https://api.github.com/users/dongcheolpark/following{/other_user}', 'gists_url': 'https://api.github.com/users/dongcheolpark/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dongcheolpark/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dongcheolpark/subscriptions', 'organizations_url': 'https://api.github.com/users/dongcheolpark/orgs', 'repos_url': 'https://api.github.com/users/dongcheolpark/repos', 'events_url': 'https://api.github.com/users/dongcheolpark/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dongcheolpark/received_events', 'type': 'User', 'site_admin': False}",2023-05-30T06:50:59Z,2023-05-30T06:54:37Z,NONE,"> Should it be an error to specify a rename key that doesn't appear in hash?

~~I think it's an error. I'll add some code that raise an exception.~~

Oh, `:only:` option does not raise an error in the same situation. Then I think it's okay to leave it as it is now.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1567863627/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48338
https://api.github.com/repos/rails/rails/issues/comments/1575316042,https://github.com/rails/rails/pull/48338#issuecomment-1575316042,https://api.github.com/repos/rails/rails/issues/48338,1575316042,IC_kwDNIULOXeVqSg,"{'login': 'guilleiguaran', 'id': 160941, 'node_id': 'MDQ6VXNlcjE2MDk0MQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/160941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/guilleiguaran', 'html_url': 'https://github.com/guilleiguaran', 'followers_url': 'https://api.github.com/users/guilleiguaran/followers', 'following_url': 'https://api.github.com/users/guilleiguaran/following{/other_user}', 'gists_url': 'https://api.github.com/users/guilleiguaran/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/guilleiguaran/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/guilleiguaran/subscriptions', 'organizations_url': 'https://api.github.com/users/guilleiguaran/orgs', 'repos_url': 'https://api.github.com/users/guilleiguaran/repos', 'events_url': 'https://api.github.com/users/guilleiguaran/events{/privacy}', 'received_events_url': 'https://api.github.com/users/guilleiguaran/received_events', 'type': 'User', 'site_admin': False}",2023-06-04T01:36:24Z,2023-06-04T01:36:24Z,MEMBER,@dongcheolpark @matthewd what do you think about the approach proposed in https://github.com/rails/rails/pull/48386 ?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1575316042/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48338
https://api.github.com/repos/rails/rails/issues/comments/1575344223,https://github.com/rails/rails/pull/48338#issuecomment-1575344223,https://api.github.com/repos/rails/rails/issues/48338,1575344223,IC_kwDNIULOXeXYXw,"{'login': 'dongcheolpark', 'id': 36955431, 'node_id': 'MDQ6VXNlcjM2OTU1NDMx', 'avatar_url': 'https://avatars.githubusercontent.com/u/36955431?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dongcheolpark', 'html_url': 'https://github.com/dongcheolpark', 'followers_url': 'https://api.github.com/users/dongcheolpark/followers', 'following_url': 'https://api.github.com/users/dongcheolpark/following{/other_user}', 'gists_url': 'https://api.github.com/users/dongcheolpark/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dongcheolpark/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dongcheolpark/subscriptions', 'organizations_url': 'https://api.github.com/users/dongcheolpark/orgs', 'repos_url': 'https://api.github.com/users/dongcheolpark/repos', 'events_url': 'https://api.github.com/users/dongcheolpark/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dongcheolpark/received_events', 'type': 'User', 'site_admin': False}",2023-06-04T02:49:35Z,2023-09-19T07:40:08Z,NONE,"At first, I also tried to change the name in the method options, but I gave up because that method couldn't modify the attributes.
But that PR solved it using the 'except' option. It's very interesting, but I think people who are not familiar with Rails like me may find it difficult to discover this trick. 
however, I think that if I can solve my problem, it doesn't matter what approach is approve.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1575344223/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48338
https://api.github.com/repos/rails/rails/issues/comments/1643281366,https://github.com/rails/rails/pull/48338#issuecomment-1643281366,https://api.github.com/repos/rails/rails/issues/48338,1643281366,IC_kwDNIULOYfJ71g,"{'login': 'dongcheolpark', 'id': 36955431, 'node_id': 'MDQ6VXNlcjM2OTU1NDMx', 'avatar_url': 'https://avatars.githubusercontent.com/u/36955431?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dongcheolpark', 'html_url': 'https://github.com/dongcheolpark', 'followers_url': 'https://api.github.com/users/dongcheolpark/followers', 'following_url': 'https://api.github.com/users/dongcheolpark/following{/other_user}', 'gists_url': 'https://api.github.com/users/dongcheolpark/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dongcheolpark/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dongcheolpark/subscriptions', 'organizations_url': 'https://api.github.com/users/dongcheolpark/orgs', 'repos_url': 'https://api.github.com/users/dongcheolpark/repos', 'events_url': 'https://api.github.com/users/dongcheolpark/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dongcheolpark/received_events', 'type': 'User', 'site_admin': False}",2023-07-20T05:51:58Z,2023-07-20T05:51:58Z,NONE,@matthewd Can you review this PR please?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1643281366/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48338
https://api.github.com/repos/rails/rails/issues/comments/1568976430,https://github.com/rails/rails/pull/48328#issuecomment-1568976430,https://api.github.com/repos/rails/rails/issues/48328,1568976430,IC_kwDNIULOXYSuLg,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-05-30T19:34:48Z,2023-05-30T19:34:48Z,MEMBER,"Test are broken. Can you take a look? Also, if we just deprecate the constant, when responders is included with another definition of a constant, would not we cause a warning in Rails?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1568976430/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48328
https://api.github.com/repos/rails/rails/issues/comments/1682172285,https://github.com/rails/rails/issues/48326#issuecomment-1682172285,https://api.github.com/repos/rails/rails/issues/48326,1682172285,IC_kwDNIULOZEPpfQ,"{'login': 'cmaruz', 'id': 1709692, 'node_id': 'MDQ6VXNlcjE3MDk2OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1709692?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/cmaruz', 'html_url': 'https://github.com/cmaruz', 'followers_url': 'https://api.github.com/users/cmaruz/followers', 'following_url': 'https://api.github.com/users/cmaruz/following{/other_user}', 'gists_url': 'https://api.github.com/users/cmaruz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/cmaruz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/cmaruz/subscriptions', 'organizations_url': 'https://api.github.com/users/cmaruz/orgs', 'repos_url': 'https://api.github.com/users/cmaruz/repos', 'events_url': 'https://api.github.com/users/cmaruz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/cmaruz/received_events', 'type': 'User', 'site_admin': False}",2023-08-17T12:09:12Z,2023-08-17T12:09:12Z,CONTRIBUTOR,"cc: @tenderlove 

I tried to have a go at this issue and I have a proposed fix here: https://github.com/rails/rails/pull/48957

The error is raised inside MRI because the object we are passing to `node_id_for_backtrace_location` is not a backtrace location (https://github.com/ruby/ruby/blob/master/ast.c#L207). I tried to ensure we always pass a backtrace location without adding any `is_a?` check, by trying to keep with the original intent of the code. 

Once the issue was fixed though, something interesting appeared - we were displaying the error page, but without any extracted source. I traced this back to the way syntax errors raised inside an `eval` call appear on the backtrace, so I have changed the way we build the backtrace in case of errors raised inside `eval` to be consistent with what the rest of the code is expecting.

It would be great to have any suggestions on how to approach it better!

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1682172285/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48326
https://api.github.com/repos/rails/rails/issues/comments/1563939376,https://github.com/rails/rails/pull/48305#issuecomment-1563939376,https://api.github.com/repos/rails/rails/issues/48305,1563939376,IC_kwDNIULOXTfSMA,"{'login': 'benedikt', 'id': 9696, 'node_id': 'MDQ6VXNlcjk2OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9696?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/benedikt', 'html_url': 'https://github.com/benedikt', 'followers_url': 'https://api.github.com/users/benedikt/followers', 'following_url': 'https://api.github.com/users/benedikt/following{/other_user}', 'gists_url': 'https://api.github.com/users/benedikt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/benedikt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/benedikt/subscriptions', 'organizations_url': 'https://api.github.com/users/benedikt/orgs', 'repos_url': 'https://api.github.com/users/benedikt/repos', 'events_url': 'https://api.github.com/users/benedikt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/benedikt/received_events', 'type': 'User', 'site_admin': False}",2023-05-26T07:34:29Z,2023-05-26T07:34:29Z,CONTRIBUTOR,"I'm not a huge fan of the nested `query`/`materialized` options, but I totally get why you chose them. 

Here's an alternative idea:

```ruby
Post.with(posts_with_comments: Post.where(""comments_count > ?"", 0), materialized: true)
```

This would materialize all CTEs mentioned in this particular `with` call. Mixing and matching materialized would require multiple separate calls:

```ruby
Post.with(posts_with_comments: Post.where(""comments_count > ?"", 0), materialized: true)
    .with(posts_without_comments: Post.where(""comments_count = ?"", 0), materialized: false)
```

It reads a bit nicer in my opinion. However, it also makes it impossible to use `materialized` (or any future options) as a name for a CTE.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1563939376/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48305
https://api.github.com/repos/rails/rails/issues/comments/1564331050,https://github.com/rails/rails/pull/48305#issuecomment-1564331050,https://api.github.com/repos/rails/rails/issues/48305,1564331050,IC_kwDNIULOXT3MKg,"{'login': '97jaz', 'id': 984854, 'node_id': 'MDQ6VXNlcjk4NDg1NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/984854?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/97jaz', 'html_url': 'https://github.com/97jaz', 'followers_url': 'https://api.github.com/users/97jaz/followers', 'following_url': 'https://api.github.com/users/97jaz/following{/other_user}', 'gists_url': 'https://api.github.com/users/97jaz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/97jaz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/97jaz/subscriptions', 'organizations_url': 'https://api.github.com/users/97jaz/orgs', 'repos_url': 'https://api.github.com/users/97jaz/repos', 'events_url': 'https://api.github.com/users/97jaz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/97jaz/received_events', 'type': 'User', 'site_admin': False}",2023-05-26T12:39:29Z,2023-05-26T12:39:29Z,CONTRIBUTOR,"> However, it also makes it impossible to use materialized (or any future options) as a name for a CTE.

Yeah, this is why I chose the more verbose syntax (which, I agree is ungainly). In particular, conflating the namespace for CTE names with the namespace for options makes adding new options backwards-incompatible. Strictly speaking, we could use a mixture of hash and keyword arguments, like:
```ruby
def with(*args, materialized: nil)
  [...]
end
```
In which case, a caller can distinguish between use of the keyword and use of the hash by being more explicit with the hash syntax:
```ruby
x.with({ materialized: [...] }, materialized: true)
```
... but, then, it would still be dangerous to add new options, since we wouldn't expect programmers to use the explicit (braced) syntax most of the time.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1564331050/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48305
https://api.github.com/repos/rails/rails/issues/comments/1564351677,https://github.com/rails/rails/pull/48305#issuecomment-1564351677,https://api.github.com/repos/rails/rails/issues/48305,1564351677,IC_kwDNIULOXT4cvQ,"{'login': '97jaz', 'id': 984854, 'node_id': 'MDQ6VXNlcjk4NDg1NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/984854?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/97jaz', 'html_url': 'https://github.com/97jaz', 'followers_url': 'https://api.github.com/users/97jaz/followers', 'following_url': 'https://api.github.com/users/97jaz/following{/other_user}', 'gists_url': 'https://api.github.com/users/97jaz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/97jaz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/97jaz/subscriptions', 'organizations_url': 'https://api.github.com/users/97jaz/orgs', 'repos_url': 'https://api.github.com/users/97jaz/repos', 'events_url': 'https://api.github.com/users/97jaz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/97jaz/received_events', 'type': 'User', 'site_admin': False}",2023-05-26T12:54:40Z,2023-05-26T12:54:40Z,CONTRIBUTOR,"Another option in the design space is to change the definition of `#with` to:
```ruby
def with(cte_hash, opts = {})
```
That is, change `#with` so that it only takes a single hash of name-value pairs that describe CTEs. It then takes a second, optional hash of options. Passing options is uglier in this version, but that seems preferable to the previous version, since (a) options will be less frequently used, and (b) adding new ones doesn't break existing code:
```ruby
x.with(materialized: Post.all, { materialized: true })
```
This _is_, however, incompatible with the current definition, which takes a variable number of CTE hashes.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1564351677/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48305
https://api.github.com/repos/rails/rails/issues/comments/1564358826,https://github.com/rails/rails/pull/48305#issuecomment-1564358826,https://api.github.com/repos/rails/rails/issues/48305,1564358826,IC_kwDNIULOXT44qg,"{'login': 'benedikt', 'id': 9696, 'node_id': 'MDQ6VXNlcjk2OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9696?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/benedikt', 'html_url': 'https://github.com/benedikt', 'followers_url': 'https://api.github.com/users/benedikt/followers', 'following_url': 'https://api.github.com/users/benedikt/following{/other_user}', 'gists_url': 'https://api.github.com/users/benedikt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/benedikt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/benedikt/subscriptions', 'organizations_url': 'https://api.github.com/users/benedikt/orgs', 'repos_url': 'https://api.github.com/users/benedikt/repos', 'events_url': 'https://api.github.com/users/benedikt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/benedikt/received_events', 'type': 'User', 'site_admin': False}",2023-05-26T12:59:57Z,2023-05-26T12:59:57Z,CONTRIBUTOR,"I feel like this has already been implicitly ruled out by discussions in #47951 and #48261, but this would also work: 

```ruby
Post.with(posts_with_comments: Post.where(""comments_count > ?"", 0).materialized)
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1564358826/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48305
https://api.github.com/repos/rails/rails/issues/comments/1587611496,https://github.com/rails/rails/pull/48305#issuecomment-1587611496,https://api.github.com/repos/rails/rails/issues/48305,1587611496,IC_kwDNIULOXqEHaA,"{'login': '97jaz', 'id': 984854, 'node_id': 'MDQ6VXNlcjk4NDg1NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/984854?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/97jaz', 'html_url': 'https://github.com/97jaz', 'followers_url': 'https://api.github.com/users/97jaz/followers', 'following_url': 'https://api.github.com/users/97jaz/following{/other_user}', 'gists_url': 'https://api.github.com/users/97jaz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/97jaz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/97jaz/subscriptions', 'organizations_url': 'https://api.github.com/users/97jaz/orgs', 'repos_url': 'https://api.github.com/users/97jaz/repos', 'events_url': 'https://api.github.com/users/97jaz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/97jaz/received_events', 'type': 'User', 'site_admin': False}",2023-06-12T15:53:11Z,2023-06-12T15:53:11Z,CONTRIBUTOR,"@matthewd Don't know if you have an opinion on this, but since you commented on the arel part, I figured I'd ask.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1587611496/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48305
https://api.github.com/repos/rails/rails/issues/comments/1607638895,https://github.com/rails/rails/pull/48305#issuecomment-1607638895,https://api.github.com/repos/rails/rails/issues/48305,1607638895,IC_kwDNIULOX9Kfbw,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-06-26T14:43:51Z,2023-06-26T14:43:51Z,MEMBER,"So I've been pondering this, and I find myself drawn in somewhat the opposite direction I pushed with #48261... 🤔 

I kinda like this:

> ```ruby
> Post.with(posts_with_comments: Post.where(""comments_count > ?"", 0).materialized)
> ```

If we did go this way (a `Relation#materialized` property), we should definitely check that `with` accepts a raw `Arel::Nodes::Cte`, for cases where you want to include materialization on a non-Relation argument.

The particular reason I'm revisiting the idea of a Relation#materialized is not CTEs at all. Rather, I'm exploring the thought of trying to support it, where feasible, as a general optimization barrier.

Where the query is being passed into a CTE, we can obviously achieve that via our new `materialized` option... otherwise, it seems like a pretty common thing for SQL dialects to support in practice, even if not officially. I don't know if it's still true, but historically in PostgreSQL this was spelled `OFFSET 0`; I understand the same effect can be produced in MySQL by double-nesting the subquery (`id IN (SELECT * FROM (SELECT id ..) q)`).

Thoughts? Does this sound useful, or just a fruitless mental detour?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1607638895/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,48305
https://api.github.com/repos/rails/rails/issues/comments/1608517787,https://github.com/rails/rails/pull/48305#issuecomment-1608517787,https://api.github.com/repos/rails/rails/issues/48305,1608517787,IC_kwDNIULOX-AImw,"{'login': '97jaz', 'id': 984854, 'node_id': 'MDQ6VXNlcjk4NDg1NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/984854?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/97jaz', 'html_url': 'https://github.com/97jaz', 'followers_url': 'https://api.github.com/users/97jaz/followers', 'following_url': 'https://api.github.com/users/97jaz/following{/other_user}', 'gists_url': 'https://api.github.com/users/97jaz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/97jaz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/97jaz/subscriptions', 'organizations_url': 'https://api.github.com/users/97jaz/orgs', 'repos_url': 'https://api.github.com/users/97jaz/repos', 'events_url': 'https://api.github.com/users/97jaz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/97jaz/received_events', 'type': 'User', 'site_admin': False}",2023-06-27T00:17:35Z,2023-06-27T00:17:35Z,CONTRIBUTOR,"I see the appeal of `ActiveRecord::Relation#materialized` as a general optimization barrier, but in most contexts this would be a binary option; you're either adding the barrier or you're not. When using `#with`, however, it's a ternary option; you're either requesting a barrier, requesting no barrier, or not making any request at all. `ActiveRecord::Relation#materialized` could take an argument (`true`, `false`, or `nil`), and it could default to `true`, resulting in the example syntax. But in non-`WITH` contexts, there's no distinction to be drawn between the `false` and `nil` cases. So it seems to me that the use cases really aren't quite the same.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1608517787/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48305
https://api.github.com/repos/rails/rails/issues/comments/1562729363,https://github.com/rails/rails/issues/48292#issuecomment-1562729363,https://api.github.com/repos/rails/rails/issues/48292,1562729363,IC_kwDNIULOXSVbkw,"{'login': 'kushniryb', 'id': 13320669, 'node_id': 'MDQ6VXNlcjEzMzIwNjY5', 'avatar_url': 'https://avatars.githubusercontent.com/u/13320669?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kushniryb', 'html_url': 'https://github.com/kushniryb', 'followers_url': 'https://api.github.com/users/kushniryb/followers', 'following_url': 'https://api.github.com/users/kushniryb/following{/other_user}', 'gists_url': 'https://api.github.com/users/kushniryb/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kushniryb/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kushniryb/subscriptions', 'organizations_url': 'https://api.github.com/users/kushniryb/orgs', 'repos_url': 'https://api.github.com/users/kushniryb/repos', 'events_url': 'https://api.github.com/users/kushniryb/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kushniryb/received_events', 'type': 'User', 'site_admin': False}",2023-05-25T11:19:37Z,2023-05-25T11:19:37Z,NONE,"Same happens to me, are there any workarounds? ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1562729363/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48292
https://api.github.com/repos/rails/rails/issues/comments/1593564270,https://github.com/rails/rails/issues/48292#issuecomment-1593564270,https://api.github.com/repos/rails/rails/issues/48292,1593564270,IC_kwDNIULOXvvcbg,"{'login': 'shoffing', 'id': 2903742, 'node_id': 'MDQ6VXNlcjI5MDM3NDI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2903742?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/shoffing', 'html_url': 'https://github.com/shoffing', 'followers_url': 'https://api.github.com/users/shoffing/followers', 'following_url': 'https://api.github.com/users/shoffing/following{/other_user}', 'gists_url': 'https://api.github.com/users/shoffing/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/shoffing/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/shoffing/subscriptions', 'organizations_url': 'https://api.github.com/users/shoffing/orgs', 'repos_url': 'https://api.github.com/users/shoffing/repos', 'events_url': 'https://api.github.com/users/shoffing/events{/privacy}', 'received_events_url': 'https://api.github.com/users/shoffing/received_events', 'type': 'User', 'site_admin': False}",2023-06-15T18:48:31Z,2023-06-15T18:48:31Z,NONE,"We're still having severe trouble with this. In a recent test, this bug is causing a _**60% connection failure rate** on production traffic_! In a 10-minute window, there were 2100 successes and 3200 failures (with a failure being defined as the connection still pending after 5 seconds).

We seem to have tracked down the issue to the Redis pubsub subscribe callback not triggering. E.g., this line is never reached when this bug occurs:
https://github.com/rails/rails/blob/main/actioncable/lib/action_cable/channel/streams.rb#L91

We cannot use the Postgres adapter because our application uses MySQL. And, of course, the async adaptor is no use for production.

We thought the solution from this issue would help, but unfortunately the issue still persists: https://github.com/rails/rails/issues/27659

@spinosa this bug appears to be something your SubscriptionGuarantor was supposed to prevent (https://github.com/rails/rails/pull/41581), but it's not working in this instance. Is there anything you can think of to help resolve this? Have you seen anything like this before?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1593564270/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48292
https://api.github.com/repos/rails/rails/issues/comments/1631139684,https://github.com/rails/rails/issues/48292#issuecomment-1631139684,https://api.github.com/repos/rails/rails/issues/48292,1631139684,IC_kwDNIULOYTk3ZA,"{'login': 'shoffing', 'id': 2903742, 'node_id': 'MDQ6VXNlcjI5MDM3NDI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2903742?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/shoffing', 'html_url': 'https://github.com/shoffing', 'followers_url': 'https://api.github.com/users/shoffing/followers', 'following_url': 'https://api.github.com/users/shoffing/following{/other_user}', 'gists_url': 'https://api.github.com/users/shoffing/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/shoffing/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/shoffing/subscriptions', 'organizations_url': 'https://api.github.com/users/shoffing/orgs', 'repos_url': 'https://api.github.com/users/shoffing/repos', 'events_url': 'https://api.github.com/users/shoffing/events{/privacy}', 'received_events_url': 'https://api.github.com/users/shoffing/received_events', 'type': 'User', 'site_admin': False}",2023-07-11T16:33:39Z,2023-07-11T16:34:15Z,NONE,"Update: We gave up and switched to AnyCable. https://docs.anycable.io/rails/getting_started

We're at 100% traffic and seeing virtually zero connection failures now. This required spinning up extra infrastructure for the anycable-go server.

I still strongly believe this is a bug in ActionCable's source code, and that it's caused by a failure to subscribe to the Redis channels. ActionCable uses one redis channel per connection, while AnyCable uses a single Redis channel with messages containing the connection identifiers...maybe that has something to do with it?

Either way, I would recommend against using ActionCable alone for any production applications with more than a couple dozen users.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1631139684/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48292
https://api.github.com/repos/rails/rails/issues/comments/1691652761,https://github.com/rails/rails/issues/48292#issuecomment-1691652761,https://api.github.com/repos/rails/rails/issues/48292,1691652761,IC_kwDNIULOZNSSmQ,"{'login': 'philipithomas', 'id': 1312414, 'node_id': 'MDQ6VXNlcjEzMTI0MTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1312414?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/philipithomas', 'html_url': 'https://github.com/philipithomas', 'followers_url': 'https://api.github.com/users/philipithomas/followers', 'following_url': 'https://api.github.com/users/philipithomas/following{/other_user}', 'gists_url': 'https://api.github.com/users/philipithomas/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/philipithomas/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/philipithomas/subscriptions', 'organizations_url': 'https://api.github.com/users/philipithomas/orgs', 'repos_url': 'https://api.github.com/users/philipithomas/repos', 'events_url': 'https://api.github.com/users/philipithomas/events{/privacy}', 'received_events_url': 'https://api.github.com/users/philipithomas/received_events', 'type': 'User', 'site_admin': False}",2023-08-24T13:13:56Z,2023-08-24T13:15:19Z,NONE,"I'm hitting this same issue - I'm using Turbo, and when switching pages the old subscription unsubscribes but the new subscription fails to establish. 

<img width=""518"" alt=""Screenshot 2023-08-24 at 09 13 39"" src=""https://github.com/rails/rails/assets/1312414/de1f08bd-0576-4394-9ae6-1113d98548db"">

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1691652761/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48292
https://api.github.com/repos/rails/rails/issues/comments/1712308898,https://github.com/rails/rails/issues/48292#issuecomment-1712308898,https://api.github.com/repos/rails/rails/issues/48292,1712308898,IC_kwDNIULOZg_Cog,"{'login': 'tenpaiyomi', 'id': 4616, 'node_id': 'MDQ6VXNlcjQ2MTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4616?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tenpaiyomi', 'html_url': 'https://github.com/tenpaiyomi', 'followers_url': 'https://api.github.com/users/tenpaiyomi/followers', 'following_url': 'https://api.github.com/users/tenpaiyomi/following{/other_user}', 'gists_url': 'https://api.github.com/users/tenpaiyomi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tenpaiyomi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tenpaiyomi/subscriptions', 'organizations_url': 'https://api.github.com/users/tenpaiyomi/orgs', 'repos_url': 'https://api.github.com/users/tenpaiyomi/repos', 'events_url': 'https://api.github.com/users/tenpaiyomi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tenpaiyomi/received_events', 'type': 'User', 'site_admin': False}",2023-09-08T22:47:44Z,2023-09-08T22:47:44Z,NONE,Running across the same thing myself with no real luck in identifying the underlying cause.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1712308898/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48292
https://api.github.com/repos/rails/rails/issues/comments/1736519522,https://github.com/rails/rails/issues/48292#issuecomment-1736519522,https://api.github.com/repos/rails/rails/issues/48292,1736519522,IC_kwDNIULOZ4EvYg,"{'login': 'palkan', 'id': 1516722, 'node_id': 'MDQ6VXNlcjE1MTY3MjI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1516722?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/palkan', 'html_url': 'https://github.com/palkan', 'followers_url': 'https://api.github.com/users/palkan/followers', 'following_url': 'https://api.github.com/users/palkan/following{/other_user}', 'gists_url': 'https://api.github.com/users/palkan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/palkan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/palkan/subscriptions', 'organizations_url': 'https://api.github.com/users/palkan/orgs', 'repos_url': 'https://api.github.com/users/palkan/repos', 'events_url': 'https://api.github.com/users/palkan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/palkan/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T01:15:32Z,2023-09-27T01:15:32Z,CONTRIBUTOR,"Hey everyone,

> I still strongly believe this is a bug in ActionCable's source code, and that it's caused by a failure to subscribe to the Redis channels

I'm not sure Redis is involved. The code around Redis Pub/Sub is _protected_ by mutexes, so it's concurrent-safe. The `@subscriber_callbacks` are always executed on Redis subscription, even if we already requested `unsubscribe`.

The only place in code that I found suspicious is this: https://github.com/rails/rails/blob/bdbc1825c0b1c55033b2c9afa93a3c4987126442/actioncable/lib/action_cable/channel/streams.rb#L87-L95

We store stream in the `streams` Hash before confirming the subscription (or even executed—it's happening async). At the same time, we may trigger `#stop_all_streams` before the async callback (`pubsub.subscribe(...)`) is invoked and try to unsubscribe from the stream we haven't really subscribed to yet. That would lead to Redis `UNSUBSCRIBE stream` to be called before `SUBSCRIBE stream`, which is not a problem—we still send the confirmation (however, the client may no longer be interested in it—that's a different problem).

I think, repeated `subscribe` commands is a bug in `SubscriptionGuarantor` (or, more broadly, the current logic around dealing with concurrent subscriptions at the client-side). That's why I would recommend switching to [anycable-client](https://github.com/anycable/anycable-client) (and [@anycable/turbo-stream](https://github.com/anycable/anycable-client/tree/master/packages/turbo-stream) respectively) and forget about this hack.


","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1736519522/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,48292
https://api.github.com/repos/rails/rails/issues/comments/1736991908,https://github.com/rails/rails/issues/48292#issuecomment-1736991908,https://api.github.com/repos/rails/rails/issues/48292,1736991908,IC_kwDNIULOZ4hkpA,"{'login': 'kushniryb', 'id': 13320669, 'node_id': 'MDQ6VXNlcjEzMzIwNjY5', 'avatar_url': 'https://avatars.githubusercontent.com/u/13320669?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kushniryb', 'html_url': 'https://github.com/kushniryb', 'followers_url': 'https://api.github.com/users/kushniryb/followers', 'following_url': 'https://api.github.com/users/kushniryb/following{/other_user}', 'gists_url': 'https://api.github.com/users/kushniryb/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kushniryb/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kushniryb/subscriptions', 'organizations_url': 'https://api.github.com/users/kushniryb/orgs', 'repos_url': 'https://api.github.com/users/kushniryb/repos', 'events_url': 'https://api.github.com/users/kushniryb/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kushniryb/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T08:58:30Z,2023-09-27T08:58:30Z,NONE,"Totally agree with @palkan, switched to `anycable-client` and never looked back, haven't experienced this issue in ages. It also provides Action Cable compatible APIs therefore migration should not be an issue. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1736991908/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48292
https://api.github.com/repos/rails/rails/issues/comments/1737121623,https://github.com/rails/rails/issues/48292#issuecomment-1737121623,https://api.github.com/repos/rails/rails/issues/48292,1737121623,IC_kwDNIULOZ4pfVw,"{'login': 'tenpaiyomi', 'id': 4616, 'node_id': 'MDQ6VXNlcjQ2MTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4616?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tenpaiyomi', 'html_url': 'https://github.com/tenpaiyomi', 'followers_url': 'https://api.github.com/users/tenpaiyomi/followers', 'following_url': 'https://api.github.com/users/tenpaiyomi/following{/other_user}', 'gists_url': 'https://api.github.com/users/tenpaiyomi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tenpaiyomi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tenpaiyomi/subscriptions', 'organizations_url': 'https://api.github.com/users/tenpaiyomi/orgs', 'repos_url': 'https://api.github.com/users/tenpaiyomi/repos', 'events_url': 'https://api.github.com/users/tenpaiyomi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tenpaiyomi/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T10:21:56Z,2023-09-27T10:21:56Z,NONE,Going from the `redis` `5.0.7`  gem down to `4.8.1` resolved the issue for me.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1737121623/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48292
https://api.github.com/repos/rails/rails/issues/comments/1608977180,https://github.com/rails/rails/pull/48290#issuecomment-1608977180,https://api.github.com/repos/rails/rails/issues/48290,1608977180,IC_kwDNIULOX-cLHA,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-06-27T07:50:48Z,2023-06-27T07:50:48Z,MEMBER,"@marckohlbrugge Thanks for your report!

I'm having a hard time trying to visualize the scenario you've bumped into, trying something as naive as this didn't reproduce the behavior you're explaining:

```
<%= button_to ""submit"" do %>
  <span>zomg</span>
<% end %>
```

Could you provide an example that would help demonstrate the issue? A full repo would be helpful :pray:","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1608977180/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48290
https://api.github.com/repos/rails/rails/issues/comments/1610396226,https://github.com/rails/rails/pull/48290#issuecomment-1610396226,https://api.github.com/repos/rails/rails/issues/48290,1610396226,IC_kwDNIULOX_yyQg,"{'login': 'marckohlbrugge', 'id': 93276, 'node_id': 'MDQ6VXNlcjkzMjc2', 'avatar_url': 'https://avatars.githubusercontent.com/u/93276?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/marckohlbrugge', 'html_url': 'https://github.com/marckohlbrugge', 'followers_url': 'https://api.github.com/users/marckohlbrugge/followers', 'following_url': 'https://api.github.com/users/marckohlbrugge/following{/other_user}', 'gists_url': 'https://api.github.com/users/marckohlbrugge/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/marckohlbrugge/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/marckohlbrugge/subscriptions', 'organizations_url': 'https://api.github.com/users/marckohlbrugge/orgs', 'repos_url': 'https://api.github.com/users/marckohlbrugge/repos', 'events_url': 'https://api.github.com/users/marckohlbrugge/events{/privacy}', 'received_events_url': 'https://api.github.com/users/marckohlbrugge/received_events', 'type': 'User', 'site_admin': False}",2023-06-28T00:19:58Z,2023-06-28T00:22:44Z,NONE,"@zzak Thanks for looking into this. Here's a more complete example:


```.erb.html
<%= form_for @model do |form| %>
    <%= form.file_field :image, direct_upload: true %>

    <%= button_tag name: ""save_method"", value: ""draft"" do %>
      <span>Save as draft</span>
    <% end %>

    <%= button_tag name: ""save_method"", value: ""publish"" do %>
      <span>Save & Publish</span>
    <% end %> 
<% end %>
```

Clicking `Save & Publish` will trigger `didClick`

https://github.com/rails/rails/blob/e5bb13b463e372d451434677ce64546b0815fc5a/activestorage/app/javascript/activestorage/ujs.js#L11

https://github.com/rails/rails/blob/e5bb13b463e372d451434677ce64546b0815fc5a/activestorage/app/javascript/activestorage/ujs.js#L17-L22

As you can see, it will try and store the button that was clicked. So when the direct upload process finishes, it will ""click"" this same button again in `submitForm()`.

The reason to ""click"" the button, instead of simply submitting the form, assumingly is to mimic the user's actual behavior as close as possible. For example, there might be other event listeners on that button, and clicking a button to submit a form actually submits the `value`-attribute of that button as part of the request as well. That's what you see in my example code.

So as you can see, which button ends up getting ""clicked"" can be rather important. That's why previous developers went through the trouble of storing the clicked button and then clicking it when the form is finally ready to be submitted.

Here's the bug:

https://github.com/rails/rails/blob/e5bb13b463e372d451434677ce64546b0815fc5a/activestorage/app/javascript/activestorage/ujs.js#L17-L22

It only stores the clicked button, if the target of the click is in fact a button. That makes sense. But the way `event.target` works is that when you click on an element _inside_ of button, it will return that nested element. Not the button.

So clicking on the span in `<button><span>Save & Publish</span></button>` will correctly trigger `didClick()`, but becasue `event.target.tagName` is a `SPAN`, it won't actually store it.

And then the way the rest of the JS works is that it just submits the form using the first button it finds in the form. 

My fix is straight forward. Don't just check `event.target`, but check any ancestors too. That way if the clicked element is nested inside of a button, it will still save that button.

It's worth emphasizing that nesting `<span>`'s etc inside a nested `<button>` is perfectly valid HTML. And it's a common way to add icons, and modify styling based on the `button`'s `disabled` attribute, etc.

Whether my exact PR is the best possible solution I don't know. But it works for me and illustrates the problem quite well. I'm open to making any changes as you see fit.

Edit: using `event.currentTarget` might be another approach.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1610396226/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48290
https://api.github.com/repos/rails/rails/issues/comments/1561175095,https://github.com/rails/rails/pull/48284#issuecomment-1561175095,https://api.github.com/repos/rails/rails/issues/48284,1561175095,IC_kwDNIULOXQ2kNw,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-05-24T13:40:18Z,2023-05-24T13:40:18Z,MEMBER,"Isn't the inverse of an empty where a `where(""false"")`?

It seems rather wrong to me for `rel` and `rel.invert_where` to contain any overlapping rows.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1561175095/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48284
https://api.github.com/repos/rails/rails/issues/comments/1561371953,https://github.com/rails/rails/pull/48284#issuecomment-1561371953,https://api.github.com/repos/rails/rails/issues/48284,1561371953,IC_kwDNIULOXRClMQ,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2023-05-24T15:28:04Z,2023-05-24T15:28:04Z,MEMBER,"> Isn't the inverse of an empty where a `where(""false"")`?

It depends on how you conceptualize `WhereClause.new([])`.

At first, I considered it might be like `[].all?`, which returns true and thus inverts to false.  But `WHERE ()` isn't valid SQL, so `WhereClause.new([])` doesn't really represent an actual result.  In that sense, it seems more like negating NaN, which returns itself.

> It seems rather wrong to me for `rel` and `rel.invert_where` to contain any overlapping rows.

If you try to invert a thing, but that thing does not exist, should the results be affected?

Another way to conceptualize it is: what if we represented absent where clauses with `nil` instead of `WhereClause.new([])`?  Then we might write something like `self.where_clause = where_clause&.invert`.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1561371953/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48284
https://api.github.com/repos/rails/rails/issues/comments/1563045437,https://github.com/rails/rails/pull/48284#issuecomment-1563045437,https://api.github.com/repos/rails/rails/issues/48284,1563045437,IC_kwDNIULOXSouPQ,"{'login': 'a5-stable', 'id': 52599949, 'node_id': 'MDQ6VXNlcjUyNTk5OTQ5', 'avatar_url': 'https://avatars.githubusercontent.com/u/52599949?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/a5-stable', 'html_url': 'https://github.com/a5-stable', 'followers_url': 'https://api.github.com/users/a5-stable/followers', 'following_url': 'https://api.github.com/users/a5-stable/following{/other_user}', 'gists_url': 'https://api.github.com/users/a5-stable/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/a5-stable/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/a5-stable/subscriptions', 'organizations_url': 'https://api.github.com/users/a5-stable/orgs', 'repos_url': 'https://api.github.com/users/a5-stable/repos', 'events_url': 'https://api.github.com/users/a5-stable/events{/privacy}', 'received_events_url': 'https://api.github.com/users/a5-stable/received_events', 'type': 'User', 'site_admin': False}",2023-05-25T14:49:38Z,2023-05-25T14:49:38Z,CONTRIBUTOR,"Thank you for taking the time to provide comments and reviews 🙇‍♀

> If you try to invert a thing, but that thing does not exist, should the results be affected?
 
I was thinking that way, when attempting to invert a target that does not exist, the `invert` function would have no effect.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1563045437/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48284
https://api.github.com/repos/rails/rails/issues/comments/1558891376,https://github.com/rails/rails/pull/48280#issuecomment-1558891376,https://api.github.com/repos/rails/rails/issues/48280,1558891376,IC_kwDNIULOXOrLcA,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-05-23T09:22:25Z,2023-05-23T09:22:25Z,MEMBER,"I think that StatementInvalid, despite its historical and thus poorly-fitting name, _is_ QueryError -- ""something went wrong while running the query"".

I also think there's value in ConnectionNotEstablished being explicitly ""we aren't connected, never have been connected, are unable to connect"", as widely distinct from ""we used to be connected, but now something has happened"". (So I don't like the particular inheritance change proposed here.) We currently handle them very similarly, so that might be a good place for a module-based dual inheritance strategy... but in principle, my gut says the ideal behaviour for ""we just started up and the database doesn't seem to be there / your config is wrong"" is not [always] the ""oops, guess we'd better immediately reconnect"" of a temporary interruption while already running.

QueryAborted for sure sits in an awkward place... it, and some of its children, potentially varies in most-reasonable-inheritance depending on adapter, and corresponding server behaviour. :confused:

While I'd like to keep ConnectionNotEstablished distinct from ConnectionFailed, looking in the file now does have me thinking that `AdapterTimeout < ConnectionFailed` probably makes sense, at a minimum. I don't think I looked for any potential re-parenting when I added it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1558891376/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48280
https://api.github.com/repos/rails/rails/issues/comments/1558970004,https://github.com/rails/rails/pull/48280#issuecomment-1558970004,https://api.github.com/repos/rails/rails/issues/48280,1558970004,IC_kwDNIULOXOv-lA,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-05-23T10:07:50Z,2023-05-23T10:07:50Z,CONTRIBUTOR,"> StatementInvalid, despite its historical and thus poorly-fitting name, _is_ QueryError

Agreed. However to me `QueryError` should be limited to ""the server rejected your query"" and not include ""we didn't get an answer to that query"".

> So I don't like the particular inheritance change proposed here.

Yeah, this is partly why this is only a draft, Active Record could use a ""base connection error"", e.g. `ActiveRecord::ConnectionError`. Here I only piggy backed on the existing one.


","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1558970004/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48280
https://api.github.com/repos/rails/rails/issues/comments/1559042523,https://github.com/rails/rails/pull/48280#issuecomment-1559042523,https://api.github.com/repos/rails/rails/issues/48280,1559042523,IC_kwDNIULOXO0Z2w,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-05-23T10:46:59Z,2023-05-23T10:46:59Z,MEMBER,"> to me QueryError should be limited to ""the server rejected your query"" and not include ""we didn't get an answer to that query"".

Is that ""no answer"" basically `ConnectionFailed` & `AdapterTimeout` (or just the former if we reparent as suggested above)?

Or: under this definition, are you looking to specifically call out ""we don't know what happened to the query"" (""query lost""?), as distinct from ""we affirmatively know we never managed to send that query to a server""? Or are both of those ""we never got an answer"", regardless of reasons?

It's worth noting our current ConnectionFailed provides no way to distinguish ""the previously-working connection went away _between_ queries"" and ""the previously-working connection went away while we were waiting for your query to return""... while I'd _like_ to know that, especially when evaluating our ability to retry a query, in practice I don't think low-level adapters can reliably tell which happened: they write the query to the socket, then see an error.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1559042523/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48280
https://api.github.com/repos/rails/rails/issues/comments/1559059134,https://github.com/rails/rails/pull/48280#issuecomment-1559059134,https://api.github.com/repos/rails/rails/issues/48280,1559059134,IC_kwDNIULOXO1avg,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-05-23T10:57:54Z,2023-05-23T10:57:54Z,CONTRIBUTOR,"> Or are both of those ""we never got an answer"", regardless of reasons?

Yeah the later. From my experience writing database clients (e.g. Redis among others), when you get a network type of error (e.g. EOF, Broken pipe etc), all bets are off, and trying to know whether the server did process the query or not is an exercise is futility. 

The only question you should ask yourself to know whether you can safely retry or not is: was this query idempotent?

To give you a better idea of where I'm trying to get at, you can look at `redis-client`'s error hierarchy: https://github.com/redis-rb/redis-client/blob/ae29d650c2f9a357727483989cb0b60439f63556/lib/redis_client.rb#L80-L131

Aside from a few odd ones, they all inherit from one of the two base errors:

  - `ConnectionError`: we got some network error, all bets are off. You may want to retry if it's safe to do so.
  - `CommandError`: the query you issued was invalid in some way and the server rejected it, no amount of retry will work, you should fix your code.

Note that some errors like `ReadOnlyError` that are effectively ""command errors"" protocol wise are recategorized as network errors as we assume you may have experienced a failover, and if you try to reconnect you are likely to end up on the writable leader server.

This in essence is the direction I'd like to go for Active Record errors. Of course there are backward compatibility considerations, so I'm not proposing a big bang change, but I think we could get close enough with a few minor changes.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1559059134/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48280
https://api.github.com/repos/rails/rails/issues/comments/1557973189,https://github.com/rails/rails/issues/48278#issuecomment-1557973189,https://api.github.com/repos/rails/rails/issues/48278,1557973189,IC_kwDNIULOXNzIxQ,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-05-22T20:51:41Z,2023-05-22T20:51:41Z,MEMBER,"Hey @schneems!

Does your `bundle config` potentially have `frozen`/`deployment` etc. set that could be preventing `bundle install` from fetching the gem? When I follow the steps you list my `bundler` downloads `redis`

---

Tracking down where this `bundle install` is happening: it appears to be in `turbo-rails`: https://github.com/hotwired/turbo-rails/blob/ea00f3732e21af9c2156cf74dabe95524b17c361/lib/install/turbo_needs_redis.rb#LL14C8-L14C8

which calls ends up back in Rails: https://github.com/rails/rails/blob/b4369aa629e49d120f2bc0cba88a6411777f3171/railties/lib/rails/generators/app_base.rb#L618

Maybe we should be adding `exception: true` to this call? I'll gather some more context 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1557973189/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48278
https://api.github.com/repos/rails/rails/issues/comments/1558005718,https://github.com/rails/rails/issues/48278#issuecomment-1558005718,https://api.github.com/repos/rails/rails/issues/48278,1558005718,IC_kwDNIULOXN1H1g,"{'login': 'schneems', 'id': 59744, 'node_id': 'MDQ6VXNlcjU5NzQ0', 'avatar_url': 'https://avatars.githubusercontent.com/u/59744?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/schneems', 'html_url': 'https://github.com/schneems', 'followers_url': 'https://api.github.com/users/schneems/followers', 'following_url': 'https://api.github.com/users/schneems/following{/other_user}', 'gists_url': 'https://api.github.com/users/schneems/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/schneems/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/schneems/subscriptions', 'organizations_url': 'https://api.github.com/users/schneems/orgs', 'repos_url': 'https://api.github.com/users/schneems/repos', 'events_url': 'https://api.github.com/users/schneems/events{/privacy}', 'received_events_url': 'https://api.github.com/users/schneems/received_events', 'type': 'User', 'site_admin': False}",2023-05-22T21:09:16Z,2023-05-22T21:09:16Z,MEMBER,"The first `bundle install` works fine. Also, re-running `bundle install` resolves the problem. 

The issue, though, is twofold:

- Why doesn't redis get installed with the first `bundle install` 🤷  (this might be hard to solve or even reproduce)
- Even if we can't figure that out, `rails new` shouldn't exit 0 if its associated subcommand failed.

I do not have deployment mode enabled:

```
$ bundle config
Settings are listed in order of priority. The top value will be used.
gem.changelog
Set for the current user (/Users/rschneeman/.bundle/config): true

gem.ci
Set for the current user (/Users/rschneeman/.bundle/config): ""circle""

gem.coc
Set for the current user (/Users/rschneeman/.bundle/config): true

gem.linter
Set for the current user (/Users/rschneeman/.bundle/config): ""standard""

gem.mit
Set for the current user (/Users/rschneeman/.bundle/config): true

gem.test
Set for the current user (/Users/rschneeman/.bundle/config): ""rspec""

jobs
Set for the current user (/Users/rschneeman/.bundle/config): 16
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1558005718/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48278
https://api.github.com/repos/rails/rails/issues/comments/1558010042,https://github.com/rails/rails/issues/48278#issuecomment-1558010042,https://api.github.com/repos/rails/rails/issues/48278,1558010042,IC_kwDNIULOXN1Yug,"{'login': 'schneems', 'id': 59744, 'node_id': 'MDQ6VXNlcjU5NzQ0', 'avatar_url': 'https://avatars.githubusercontent.com/u/59744?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/schneems', 'html_url': 'https://github.com/schneems', 'followers_url': 'https://api.github.com/users/schneems/followers', 'following_url': 'https://api.github.com/users/schneems/following{/other_user}', 'gists_url': 'https://api.github.com/users/schneems/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/schneems/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/schneems/subscriptions', 'organizations_url': 'https://api.github.com/users/schneems/orgs', 'repos_url': 'https://api.github.com/users/schneems/repos', 'events_url': 'https://api.github.com/users/schneems/events{/privacy}', 'received_events_url': 'https://api.github.com/users/schneems/received_events', 'type': 'User', 'site_admin': False}",2023-05-22T21:10:22Z,2023-05-22T21:10:22Z,MEMBER,"Worth mentioning I'm using `Bundler version 2.4.13`. The redis not getting installed may be a bundler bug (though, honestly 🤷 )","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1558010042/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48278
https://api.github.com/repos/rails/rails/issues/comments/1566111916,https://github.com/rails/rails/issues/48276#issuecomment-1566111916,https://api.github.com/repos/rails/rails/issues/48276,1566111916,IC_kwDNIULOXVj4rA,"{'login': 'hahmed', 'id': 658005, 'node_id': 'MDQ6VXNlcjY1ODAwNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/658005?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hahmed', 'html_url': 'https://github.com/hahmed', 'followers_url': 'https://api.github.com/users/hahmed/followers', 'following_url': 'https://api.github.com/users/hahmed/following{/other_user}', 'gists_url': 'https://api.github.com/users/hahmed/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hahmed/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hahmed/subscriptions', 'organizations_url': 'https://api.github.com/users/hahmed/orgs', 'repos_url': 'https://api.github.com/users/hahmed/repos', 'events_url': 'https://api.github.com/users/hahmed/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hahmed/received_events', 'type': 'User', 'site_admin': False}",2023-05-28T11:59:26Z,2023-05-28T11:59:59Z,CONTRIBUTOR,"Hey @vzelenko, I tried this on an app but I'm not able to repro, any chance you could link a repo that shows the issue you are seeing or use the [bug template](https://github.com/rails/rails/blob/main/guides/bug_report_templates/action_controller_gem.rb) please?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1566111916/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48276
https://api.github.com/repos/rails/rails/issues/comments/1566196079,https://github.com/rails/rails/issues/48276#issuecomment-1566196079,https://api.github.com/repos/rails/rails/issues/48276,1566196079,IC_kwDNIULOXVpBbw,"{'login': 'vzelenko', 'id': 8058697, 'node_id': 'MDQ6VXNlcjgwNTg2OTc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8058697?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/vzelenko', 'html_url': 'https://github.com/vzelenko', 'followers_url': 'https://api.github.com/users/vzelenko/followers', 'following_url': 'https://api.github.com/users/vzelenko/following{/other_user}', 'gists_url': 'https://api.github.com/users/vzelenko/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/vzelenko/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/vzelenko/subscriptions', 'organizations_url': 'https://api.github.com/users/vzelenko/orgs', 'repos_url': 'https://api.github.com/users/vzelenko/repos', 'events_url': 'https://api.github.com/users/vzelenko/events{/privacy}', 'received_events_url': 'https://api.github.com/users/vzelenko/received_events', 'type': 'User', 'site_admin': False}",2023-05-28T16:42:36Z,2023-05-28T17:08:17Z,NONE,"Frankly, I'm not sure how to apply a bug report template to this scenario.  Best I can do is put together a small application...

https://github.com/vzelenko/rails-bug-report-48276-demo

[This file](https://github.com/vzelenko/rails-bug-report-48276-demo/blob/master/app/views/real_estate/payments/_form.html.erb) illustrates the issue (problem cases commented out)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1566196079/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48276
https://api.github.com/repos/rails/rails/issues/comments/1585254986,https://github.com/rails/rails/issues/48276#issuecomment-1585254986,https://api.github.com/repos/rails/rails/issues/48276,1585254986,IC_kwDNIULOXn0SSg,"{'login': 'hahmed', 'id': 658005, 'node_id': 'MDQ6VXNlcjY1ODAwNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/658005?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hahmed', 'html_url': 'https://github.com/hahmed', 'followers_url': 'https://api.github.com/users/hahmed/followers', 'following_url': 'https://api.github.com/users/hahmed/following{/other_user}', 'gists_url': 'https://api.github.com/users/hahmed/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hahmed/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hahmed/subscriptions', 'organizations_url': 'https://api.github.com/users/hahmed/orgs', 'repos_url': 'https://api.github.com/users/hahmed/repos', 'events_url': 'https://api.github.com/users/hahmed/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hahmed/received_events', 'type': 'User', 'site_admin': False}",2023-06-09T23:29:39Z,2023-06-09T23:29:39Z,CONTRIBUTOR,"Thanks for the repro, I think this makes sense, it looks like there could be an issue with the way polymorphic_urls are determined 🤔","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1585254986/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48276
https://api.github.com/repos/rails/rails/issues/comments/1586152467,https://github.com/rails/rails/issues/48276#issuecomment-1586152467,https://api.github.com/repos/rails/rails/issues/48276,1586152467,IC_kwDNIULOXorEEw,"{'login': 'vzelenko', 'id': 8058697, 'node_id': 'MDQ6VXNlcjgwNTg2OTc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8058697?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/vzelenko', 'html_url': 'https://github.com/vzelenko', 'followers_url': 'https://api.github.com/users/vzelenko/followers', 'following_url': 'https://api.github.com/users/vzelenko/following{/other_user}', 'gists_url': 'https://api.github.com/users/vzelenko/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/vzelenko/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/vzelenko/subscriptions', 'organizations_url': 'https://api.github.com/users/vzelenko/orgs', 'repos_url': 'https://api.github.com/users/vzelenko/repos', 'events_url': 'https://api.github.com/users/vzelenko/events{/privacy}', 'received_events_url': 'https://api.github.com/users/vzelenko/received_events', 'type': 'User', 'site_admin': False}",2023-06-11T12:45:11Z,2023-06-11T12:45:11Z,NONE,"Great, lmk if I can be of assistance here. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1586152467/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48276
https://api.github.com/repos/rails/rails/issues/comments/1588110401,https://github.com/rails/rails/issues/48276#issuecomment-1588110401,https://api.github.com/repos/rails/rails/issues/48276,1588110401,IC_kwDNIULOXqikQQ,"{'login': 'hahmed', 'id': 658005, 'node_id': 'MDQ6VXNlcjY1ODAwNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/658005?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hahmed', 'html_url': 'https://github.com/hahmed', 'followers_url': 'https://api.github.com/users/hahmed/followers', 'following_url': 'https://api.github.com/users/hahmed/following{/other_user}', 'gists_url': 'https://api.github.com/users/hahmed/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hahmed/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hahmed/subscriptions', 'organizations_url': 'https://api.github.com/users/hahmed/orgs', 'repos_url': 'https://api.github.com/users/hahmed/repos', 'events_url': 'https://api.github.com/users/hahmed/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hahmed/received_events', 'type': 'User', 'site_admin': False}",2023-06-12T21:11:56Z,2023-06-12T21:11:56Z,CONTRIBUTOR,"Feel free to open a PR if you like 👍🏼, also if you get a moment would you mind pasting the routes generated (the ones related to to this bug) I think that context will help.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1588110401/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48276
https://api.github.com/repos/rails/rails/issues/comments/1712946387,https://github.com/rails/rails/issues/48276#issuecomment-1712946387,https://api.github.com/repos/rails/rails/issues/48276,1712946387,IC_kwDNIULOZhl80w,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-09-10T21:41:15Z,2023-09-10T21:41:15Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1712946387/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48276
https://api.github.com/repos/rails/rails/issues/comments/1714310150,https://github.com/rails/rails/issues/48276#issuecomment-1714310150,https://api.github.com/repos/rails/rails/issues/48276,1714310150,IC_kwDNIULOZi5MBg,"{'login': 'vzelenko', 'id': 8058697, 'node_id': 'MDQ6VXNlcjgwNTg2OTc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8058697?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/vzelenko', 'html_url': 'https://github.com/vzelenko', 'followers_url': 'https://api.github.com/users/vzelenko/followers', 'following_url': 'https://api.github.com/users/vzelenko/following{/other_user}', 'gists_url': 'https://api.github.com/users/vzelenko/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/vzelenko/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/vzelenko/subscriptions', 'organizations_url': 'https://api.github.com/users/vzelenko/orgs', 'repos_url': 'https://api.github.com/users/vzelenko/repos', 'events_url': 'https://api.github.com/users/vzelenko/events{/privacy}', 'received_events_url': 'https://api.github.com/users/vzelenko/received_events', 'type': 'User', 'site_admin': False}",2023-09-11T17:34:36Z,2023-09-11T17:34:36Z,NONE,Issue still there.  I'll try to put in a PR as soon as I have some bandwidth.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1714310150/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48276
https://api.github.com/repos/rails/rails/issues/comments/1578832572,https://github.com/rails/rails/pull/48267#issuecomment-1578832572,https://api.github.com/repos/rails/rails/issues/48267,1578832572,IC_kwDNIULOXhsSvA,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-06-06T14:04:39Z,2023-06-06T14:04:39Z,MEMBER,"Thanks for opening this pull request.
However, at least, this pull request needs to explain why the existing tests are being removed.  It does not mean that we will merge if this is explained, though.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1578832572/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48267
https://api.github.com/repos/rails/rails/issues/comments/1579192060,https://github.com/rails/rails/pull/48267#issuecomment-1579192060,https://api.github.com/repos/rails/rails/issues/48267,1579192060,IC_kwDNIULOXiCO_A,"{'login': 'TakuyaKurimoto', 'id': 75765648, 'node_id': 'MDQ6VXNlcjc1NzY1NjQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/75765648?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/TakuyaKurimoto', 'html_url': 'https://github.com/TakuyaKurimoto', 'followers_url': 'https://api.github.com/users/TakuyaKurimoto/followers', 'following_url': 'https://api.github.com/users/TakuyaKurimoto/following{/other_user}', 'gists_url': 'https://api.github.com/users/TakuyaKurimoto/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/TakuyaKurimoto/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/TakuyaKurimoto/subscriptions', 'organizations_url': 'https://api.github.com/users/TakuyaKurimoto/orgs', 'repos_url': 'https://api.github.com/users/TakuyaKurimoto/repos', 'events_url': 'https://api.github.com/users/TakuyaKurimoto/events{/privacy}', 'received_events_url': 'https://api.github.com/users/TakuyaKurimoto/received_events', 'type': 'User', 'site_admin': False}",2023-06-06T17:37:55Z,2023-06-06T17:37:55Z,CONTRIBUTOR,"@yahonda 
The original modification was as follows, 
```
yielded_relation = batch_relation
```
but this modification will cause the problem pointed out in [this comment](https://github.com/rails/rails/pull/20933#issuecomment-123517278), so I modified the code as follows.
```
yielded_relation = where(primary_key => ids).order(batch_orders.to_h)
```
The existing test code no longer needs to be removed as a result of this.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1579192060/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48267
https://api.github.com/repos/rails/rails/issues/comments/1589211163,https://github.com/rails/rails/pull/48267#issuecomment-1589211163,https://api.github.com/repos/rails/rails/issues/48267,1589211163,IC_kwDNIULOXrlwGw,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-06-13T12:30:24Z,2023-06-13T12:30:24Z,MEMBER,"Thanks for the update. 

As far as I understand, the current main branch implementation expects that if `ids` is already ordered, the result is ordered even if no `order by` is given. 
However, from a database point of view, without an `order by` clause, the order is not deterministic. So this approach looks good to me.
On the other hand, for those who do not care about the order, this `order by` may cause a slower response time. 
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1589211163/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48267
https://api.github.com/repos/rails/rails/issues/comments/1589331660,https://github.com/rails/rails/pull/48267#issuecomment-1589331660,https://api.github.com/repos/rails/rails/issues/48267,1589331660,IC_kwDNIULOXrtGzA,"{'login': 'TakuyaKurimoto', 'id': 75765648, 'node_id': 'MDQ6VXNlcjc1NzY1NjQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/75765648?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/TakuyaKurimoto', 'html_url': 'https://github.com/TakuyaKurimoto', 'followers_url': 'https://api.github.com/users/TakuyaKurimoto/followers', 'following_url': 'https://api.github.com/users/TakuyaKurimoto/following{/other_user}', 'gists_url': 'https://api.github.com/users/TakuyaKurimoto/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/TakuyaKurimoto/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/TakuyaKurimoto/subscriptions', 'organizations_url': 'https://api.github.com/users/TakuyaKurimoto/orgs', 'repos_url': 'https://api.github.com/users/TakuyaKurimoto/repos', 'events_url': 'https://api.github.com/users/TakuyaKurimoto/events{/privacy}', 'received_events_url': 'https://api.github.com/users/TakuyaKurimoto/received_events', 'type': 'User', 'site_admin': False}",2023-06-13T13:35:17Z,2023-06-13T16:14:57Z,CONTRIBUTOR,"@yahonda
Thanks for your comment.
I think the return value of the in_batches method should be sorted in either ascending or descending order, because [the value of the order argument  is currently only assumed to be :asc or :desc, and nil cannot be selected.](https://github.com/rails/rails/blob/84540a6289e0eb7f6f7a1ce42eaf1dda1f999d80/activerecord/lib/active_record/relation/batches.rb#L243)
Also, since the only column that can currently specify order is primary_key, I think it is unlikely that performance will be significantly degraded by merging of this PR.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1589331660/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48267
https://api.github.com/repos/rails/rails/issues/comments/1592214981,https://github.com/rails/rails/pull/48267#issuecomment-1592214981,https://api.github.com/repos/rails/rails/issues/48267,1592214981,IC_kwDNIULOXudFxQ,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-06-15T01:48:29Z,2023-06-15T01:48:29Z,MEMBER,I think we cannot assume because using PK and with an index that adding `order by` won't impact performance without due diligence first.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1592214981/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48267
https://api.github.com/repos/rails/rails/issues/comments/1593371009,https://github.com/rails/rails/pull/48267#issuecomment-1593371009,https://api.github.com/repos/rails/rails/issues/48267,1593371009,IC_kwDNIULOXvjpgQ,"{'login': 'TakuyaKurimoto', 'id': 75765648, 'node_id': 'MDQ6VXNlcjc1NzY1NjQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/75765648?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/TakuyaKurimoto', 'html_url': 'https://github.com/TakuyaKurimoto', 'followers_url': 'https://api.github.com/users/TakuyaKurimoto/followers', 'following_url': 'https://api.github.com/users/TakuyaKurimoto/following{/other_user}', 'gists_url': 'https://api.github.com/users/TakuyaKurimoto/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/TakuyaKurimoto/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/TakuyaKurimoto/subscriptions', 'organizations_url': 'https://api.github.com/users/TakuyaKurimoto/orgs', 'repos_url': 'https://api.github.com/users/TakuyaKurimoto/repos', 'events_url': 'https://api.github.com/users/TakuyaKurimoto/events{/privacy}', 'received_events_url': 'https://api.github.com/users/TakuyaKurimoto/received_events', 'type': 'User', 'site_admin': False}",2023-06-15T16:21:47Z,2023-06-15T16:48:49Z,CONTRIBUTOR,"@yahonda @zzak
I ran this test code with 10M records. Is this result acceptable?

```
create_table :posts, force: true do |t|
    t.string :title, null: false
end
```
```
def test_batches_performance
    posts = 10_000_000.times.map { |i| { title: ""title#{i}"" } }
    posts.each_slice(1_000_000) do |post|
      Post.insert_all(post)
    end
    count = 0
    Benchmark.bmbm do |x|
      x.report(""batch_test"") { 
        Post.in_batches(of: 1000, order: :desc, use_ranges: false) do |posts|
          count += posts.count
        end 
      }
    end
  end
```
and got these results.
```
mysql2
--------------------------------------------------------
                 user     system      total        real
before      48.834661   3.370609  52.205270 (122.429091)
after       49.295630   3.759919  53.055549 (108.540093)

sqlite3
--------------------------------------------------------
                 user     system      total        real
before      89.095400   2.842808  91.938208 (108.333617)
after       93.759689   3.069394  96.829083 (113.108031)

postgresql
--------------------------------------------------------
                 user     system      total        real
before      84.241336   7.814793  92.056129 (123.154583)
after       87.269369   5.986958  93.256327 (123.642025)
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1593371009/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48267
https://api.github.com/repos/rails/rails/issues/comments/1607807412,https://github.com/rails/rails/pull/48267#issuecomment-1607807412,https://api.github.com/repos/rails/rails/issues/48267,1607807412,IC_kwDNIULOX9UxtA,"{'login': 'TakuyaKurimoto', 'id': 75765648, 'node_id': 'MDQ6VXNlcjc1NzY1NjQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/75765648?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/TakuyaKurimoto', 'html_url': 'https://github.com/TakuyaKurimoto', 'followers_url': 'https://api.github.com/users/TakuyaKurimoto/followers', 'following_url': 'https://api.github.com/users/TakuyaKurimoto/following{/other_user}', 'gists_url': 'https://api.github.com/users/TakuyaKurimoto/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/TakuyaKurimoto/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/TakuyaKurimoto/subscriptions', 'organizations_url': 'https://api.github.com/users/TakuyaKurimoto/orgs', 'repos_url': 'https://api.github.com/users/TakuyaKurimoto/repos', 'events_url': 'https://api.github.com/users/TakuyaKurimoto/events{/privacy}', 'received_events_url': 'https://api.github.com/users/TakuyaKurimoto/received_events', 'type': 'User', 'site_admin': False}",2023-06-26T16:15:03Z,2023-06-26T16:15:03Z,CONTRIBUTOR,"@yahonda @zzak
I know you are busy, but do you have any opinion on the above results?
In my opinion, changing to explicitly specify order seems to decrease performance by around 5%, but I think this change in performance is acceptable because I think this method is basically used for batch processing.
If you are still concerned about slowdowns, you can set the [use_ranges option](https://github.com/rails/rails/blob/5d81a7e6f812789196819357fc337261fe7ccb25/activerecord/lib/active_record/relation/batches.rb#L201-L205) to true.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1607807412/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48267
https://api.github.com/repos/rails/rails/issues/comments/1641496608,https://github.com/rails/rails/pull/48263#issuecomment-1641496608,https://api.github.com/repos/rails/rails/issues/48263,1641496608,IC_kwDNIULOYddAIA,"{'login': 'goulvench', 'id': 419086, 'node_id': 'MDQ6VXNlcjQxOTA4Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/419086?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/goulvench', 'html_url': 'https://github.com/goulvench', 'followers_url': 'https://api.github.com/users/goulvench/followers', 'following_url': 'https://api.github.com/users/goulvench/following{/other_user}', 'gists_url': 'https://api.github.com/users/goulvench/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/goulvench/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/goulvench/subscriptions', 'organizations_url': 'https://api.github.com/users/goulvench/orgs', 'repos_url': 'https://api.github.com/users/goulvench/repos', 'events_url': 'https://api.github.com/users/goulvench/events{/privacy}', 'received_events_url': 'https://api.github.com/users/goulvench/received_events', 'type': 'User', 'site_admin': False}",2023-07-19T06:32:33Z,2023-07-19T06:32:33Z,CONTRIBUTOR,"Hi @eileencodes, I've simplified the code, added tests and merged into one changelog message. The commit now shows how both changes tie together I believe. Let me know if these should be split into separate PRs instead.

I'm looking into adding tests for `reverting?` and `migrating?`, but I couldn't find any for `reverting?`, does that mean that it was considered too low-level to warrant testing?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1641496608/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48263
https://api.github.com/repos/rails/rails/issues/comments/1551740224,https://github.com/rails/rails/pull/48247#issuecomment-1551740224,https://api.github.com/repos/rails/rails/issues/48247,1551740224,IC_kwDNIULOXH2tQA,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2023-05-17T16:46:15Z,2023-05-17T16:46:15Z,CONTRIBUTOR,"> I think since we don't want to document this option we shouldn't have a changelog entry.

Why not to document this option? Is this considered ""private"" API for now?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1551740224/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48247
https://api.github.com/repos/rails/rails/issues/comments/1552251116,https://github.com/rails/rails/pull/48244#issuecomment-1552251116,https://api.github.com/repos/rails/rails/issues/48244,1552251116,IC_kwDNIULOXIV47A,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-05-18T00:34:49Z,2023-05-18T00:34:49Z,MEMBER,"Thanks for opening this pull request. I don't have a strong opinion on whether or not to change this method name, but at least  this pull request have not updated all of method names, as a result the CI is failing.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1552251116/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48244
https://api.github.com/repos/rails/rails/issues/comments/1552652004,https://github.com/rails/rails/issues/48227#issuecomment-1552652004,https://api.github.com/repos/rails/rails/issues/48227,1552652004,IC_kwDNIULOXIuW5A,"{'login': 'pzac', 'id': 272278, 'node_id': 'MDQ6VXNlcjI3MjI3OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/272278?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/pzac', 'html_url': 'https://github.com/pzac', 'followers_url': 'https://api.github.com/users/pzac/followers', 'following_url': 'https://api.github.com/users/pzac/following{/other_user}', 'gists_url': 'https://api.github.com/users/pzac/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/pzac/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/pzac/subscriptions', 'organizations_url': 'https://api.github.com/users/pzac/orgs', 'repos_url': 'https://api.github.com/users/pzac/repos', 'events_url': 'https://api.github.com/users/pzac/events{/privacy}', 'received_events_url': 'https://api.github.com/users/pzac/received_events', 'type': 'User', 'site_admin': False}",2023-05-18T07:35:53Z,2023-05-18T07:35:53Z,NONE,"Just found a workaround. This

```
Post.eager_load(:user).where(users: {deleted_at: nil}).merge(Post.with_deleted)
```

works if changed to

```
Post.eager_load(:user).where(""users.deleted_at IS NULL"").merge(Post.with_deleted)
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1552652004/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48227
https://api.github.com/repos/rails/rails/issues/comments/1553729878,https://github.com/rails/rails/issues/48227#issuecomment-1553729878,https://api.github.com/repos/rails/rails/issues/48227,1553729878,IC_kwDNIULOXJwJVg,"{'login': 'hamax97', 'id': 29524862, 'node_id': 'MDQ6VXNlcjI5NTI0ODYy', 'avatar_url': 'https://avatars.githubusercontent.com/u/29524862?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hamax97', 'html_url': 'https://github.com/hamax97', 'followers_url': 'https://api.github.com/users/hamax97/followers', 'following_url': 'https://api.github.com/users/hamax97/following{/other_user}', 'gists_url': 'https://api.github.com/users/hamax97/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hamax97/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hamax97/subscriptions', 'organizations_url': 'https://api.github.com/users/hamax97/orgs', 'repos_url': 'https://api.github.com/users/hamax97/repos', 'events_url': 'https://api.github.com/users/hamax97/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hamax97/received_events', 'type': 'User', 'site_admin': False}",2023-05-18T22:14:56Z,2023-05-18T22:14:56Z,NONE,I can reproduce this issue as well. Thanks @pzac for the test example.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1553729878/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48227
https://api.github.com/repos/rails/rails/issues/comments/1558961860,https://github.com/rails/rails/issues/48227#issuecomment-1558961860,https://api.github.com/repos/rails/rails/issues/48227,1558961860,IC_kwDNIULOXOvexA,"{'login': 'gammons', 'id': 38560, 'node_id': 'MDQ6VXNlcjM4NTYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/38560?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gammons', 'html_url': 'https://github.com/gammons', 'followers_url': 'https://api.github.com/users/gammons/followers', 'following_url': 'https://api.github.com/users/gammons/following{/other_user}', 'gists_url': 'https://api.github.com/users/gammons/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gammons/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gammons/subscriptions', 'organizations_url': 'https://api.github.com/users/gammons/orgs', 'repos_url': 'https://api.github.com/users/gammons/repos', 'events_url': 'https://api.github.com/users/gammons/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gammons/received_events', 'type': 'User', 'site_admin': False}",2023-05-23T10:03:16Z,2023-05-23T10:03:16Z,NONE,"Doing a bit of hacking on this.  Here's what I found:
- `eager_load` doesn't matter.  You can use `joins` and replicate
- It depends where the `merge` is added:

```ruby
(byebug) Post.joins(:user).where(users: {deleted_at: nil}).merge(Post.with_deleted).count
D, [2023-05-23T06:00:47.447339 #23139] DEBUG -- :   Post Count (0.3ms)  SELECT COUNT(*) FROM ""posts"" INNER JOIN ""users"" ON ""users"".""id"" = ""posts"".""user_id""
4
(byebug) Post.merge(Post.with_deleted).joins(:user).where(users: {deleted_at: nil}).count
D, [2023-05-23T06:00:59.446301 #23139] DEBUG -- :   Post Count (0.2ms)  SELECT COUNT(*) FROM ""posts"" INNER JOIN ""users"" ON ""users"".""id"" = ""posts"".""user_id"" WHERE ""users"".""deleted_at"" IS NULL
2
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1558961860/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48227
https://api.github.com/repos/rails/rails/issues/comments/1559005300,https://github.com/rails/rails/issues/48227#issuecomment-1559005300,https://api.github.com/repos/rails/rails/issues/48227,1559005300,IC_kwDNIULOXOyIdA,"{'login': 'gammons', 'id': 38560, 'node_id': 'MDQ6VXNlcjM4NTYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/38560?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gammons', 'html_url': 'https://github.com/gammons', 'followers_url': 'https://api.github.com/users/gammons/followers', 'following_url': 'https://api.github.com/users/gammons/following{/other_user}', 'gists_url': 'https://api.github.com/users/gammons/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gammons/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gammons/subscriptions', 'organizations_url': 'https://api.github.com/users/gammons/orgs', 'repos_url': 'https://api.github.com/users/gammons/repos', 'events_url': 'https://api.github.com/users/gammons/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gammons/received_events', 'type': 'User', 'site_admin': False}",2023-05-23T10:25:13Z,2023-05-23T10:28:54Z,NONE,"..and in fact, you do not need the `merge` either.  You can replicate just using these steps:

```ruby
(byebug) Post.joins(:user).where(users: {deleted_at: nil}).with_deleted.count
D, [2023-05-23T06:26:45.882967 #28463] DEBUG -- :   Post Count (0.2ms)  SELECT COUNT(*) FROM ""posts"" INNER JOIN ""users"" ON ""users"".""id"" = ""posts"".""user_id""
4
(byebug) Post.with_deleted.joins(:user).where(users: {deleted_at: nil}).count
D, [2023-05-23T06:26:51.771013 #28463] DEBUG -- :   Post Count (0.2ms)  SELECT COUNT(*) FROM ""posts"" INNER JOIN ""users"" ON ""users"".""id"" = ""posts"".""user_id"" WHERE ""users"".""deleted_at"" IS NULL
2
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1559005300/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48227
https://api.github.com/repos/rails/rails/issues/comments/1559799967,https://github.com/rails/rails/issues/48227#issuecomment-1559799967,https://api.github.com/repos/rails/rails/issues/48227,1559799967,IC_kwDNIULOXPionw,"{'login': 'gammons', 'id': 38560, 'node_id': 'MDQ6VXNlcjM4NTYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/38560?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gammons', 'html_url': 'https://github.com/gammons', 'followers_url': 'https://api.github.com/users/gammons/followers', 'following_url': 'https://api.github.com/users/gammons/following{/other_user}', 'gists_url': 'https://api.github.com/users/gammons/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gammons/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gammons/subscriptions', 'organizations_url': 'https://api.github.com/users/gammons/orgs', 'repos_url': 'https://api.github.com/users/gammons/repos', 'events_url': 'https://api.github.com/users/gammons/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gammons/received_events', 'type': 'User', 'site_admin': False}",2023-05-23T16:38:33Z,2023-05-23T16:38:33Z,NONE,The real issue is `unscope`.  I suspect it's not smart enough to delineate which part of the `where` to remove.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1559799967/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48227
https://api.github.com/repos/rails/rails/issues/comments/1656711885,https://github.com/rails/rails/issues/48227#issuecomment-1656711885,https://api.github.com/repos/rails/rails/issues/48227,1656711885,IC_kwDNIULOYr9qzQ,"{'login': 'eadz', 'id': 11939, 'node_id': 'MDQ6VXNlcjExOTM5', 'avatar_url': 'https://avatars.githubusercontent.com/u/11939?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eadz', 'html_url': 'https://github.com/eadz', 'followers_url': 'https://api.github.com/users/eadz/followers', 'following_url': 'https://api.github.com/users/eadz/following{/other_user}', 'gists_url': 'https://api.github.com/users/eadz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eadz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eadz/subscriptions', 'organizations_url': 'https://api.github.com/users/eadz/orgs', 'repos_url': 'https://api.github.com/users/eadz/repos', 'events_url': 'https://api.github.com/users/eadz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eadz/received_events', 'type': 'User', 'site_admin': False}",2023-07-29T11:44:26Z,2023-07-29T11:44:26Z,CONTRIBUTOR,"I have a maybe related issue here - https://github.com/rails/rails/issues/48848 

Although in my case, I think I should have used `joins` rather than `includes`, but still unexpected behaviour. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1656711885/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48227
https://api.github.com/repos/rails/rails/issues/comments/1694786917,https://github.com/rails/rails/issues/48227#issuecomment-1694786917,https://api.github.com/repos/rails/rails/issues/48227,1694786917,IC_kwDNIULOZQRlZQ,"{'login': 'paulreece', 'id': 96156234, 'node_id': 'U_kgDOBbs6Sg', 'avatar_url': 'https://avatars.githubusercontent.com/u/96156234?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulreece', 'html_url': 'https://github.com/paulreece', 'followers_url': 'https://api.github.com/users/paulreece/followers', 'following_url': 'https://api.github.com/users/paulreece/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulreece/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulreece/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulreece/subscriptions', 'organizations_url': 'https://api.github.com/users/paulreece/orgs', 'repos_url': 'https://api.github.com/users/paulreece/repos', 'events_url': 'https://api.github.com/users/paulreece/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulreece/received_events', 'type': 'User', 'site_admin': False}",2023-08-27T23:11:02Z,2023-08-27T23:11:02Z,CONTRIBUTOR,gammons is correct.  The `unscope` method currently only takes the `where:` key and it's value as args.  So once it calls the spawn method `except` it is removing all occurrences of the key.  In this case `deleted_at`.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1694786917/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48227
https://api.github.com/repos/rails/rails/issues/comments/1559110708,https://github.com/rails/rails/pull/48202#issuecomment-1559110708,https://api.github.com/repos/rails/rails/issues/48202,1559110708,IC_kwDNIULOXO4kNA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-05-23T11:31:41Z,2023-05-23T11:31:41Z,MEMBER,"I don't have an opinion on the Namelist task (it looks good to me), but would love to see the latest branch of sdoc running on edgeapi.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1559110708/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48202
https://api.github.com/repos/rails/rails/issues/comments/1541025531,https://github.com/rails/rails/pull/48179#issuecomment-1541025531,https://api.github.com/repos/rails/rails/issues/48179,1541025531,IC_kwDNIULOW9ou-w,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-05-09T23:43:17Z,2023-05-09T23:43:17Z,MEMBER,"IMO it's not a fault of deep_dup, immutable_value should just not freeze Module instances.

Additionally I don't think such use case would justify adding a Method to object. A case/when would do fine.

NB: travelling right bow, so only had a quick look on mobile, I may have missed things.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1541025531/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48179
https://api.github.com/repos/rails/rails/issues/comments/1542604063,https://github.com/rails/rails/pull/48179#issuecomment-1542604063,https://api.github.com/repos/rails/rails/issues/48179,1542604063,IC_kwDNIULOW_JFHw,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2023-05-10T18:03:31Z,2023-05-10T18:03:31Z,MEMBER,"My idea isn't concrete yet, but my observations are: (1) changing the contract for `deep_dup` may have unintended consequences, and (2) there appears to be a need for producing objects that are isolated to a particular code path, though those objects don't necessarily have to be `dup`ed.

Objects that are frozen, or definitively global (e.g. named modules), or not typically mutated (e.g. `Time` instances) could skip the `dup`.  Essentially, we define what ""isolated"" means, instead of changing what `deep_dup` means.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1542604063/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48179
https://api.github.com/repos/rails/rails/issues/comments/1543256180,https://github.com/rails/rails/pull/48139#issuecomment-1543256180,https://api.github.com/repos/rails/rails/issues/48139,1543256180,IC_kwDNIULOW_w4dA,"{'login': 'OuYangJinTing', 'id': 33079237, 'node_id': 'MDQ6VXNlcjMzMDc5MjM3', 'avatar_url': 'https://avatars.githubusercontent.com/u/33079237?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OuYangJinTing', 'html_url': 'https://github.com/OuYangJinTing', 'followers_url': 'https://api.github.com/users/OuYangJinTing/followers', 'following_url': 'https://api.github.com/users/OuYangJinTing/following{/other_user}', 'gists_url': 'https://api.github.com/users/OuYangJinTing/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OuYangJinTing/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OuYangJinTing/subscriptions', 'organizations_url': 'https://api.github.com/users/OuYangJinTing/orgs', 'repos_url': 'https://api.github.com/users/OuYangJinTing/repos', 'events_url': 'https://api.github.com/users/OuYangJinTing/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OuYangJinTing/received_events', 'type': 'User', 'site_admin': False}",2023-05-11T02:53:32Z,2023-05-11T02:53:32Z,CONTRIBUTOR,"The lint check failed, but it doesn't seem to be caused by this PR change.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1543256180/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48139
https://api.github.com/repos/rails/rails/issues/comments/1543314326,https://github.com/rails/rails/pull/48139#issuecomment-1543314326,https://api.github.com/repos/rails/rails/issues/48139,1543314326,IC_kwDNIULOW_0blg,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-05-11T04:25:51Z,2023-05-11T04:25:51Z,MEMBER,"> The lint check failed, but it doesn't seem to be caused by this PR change.

Yeah, that should be fixed on main now if you want to rebase","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1543314326/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48139
https://api.github.com/repos/rails/rails/issues/comments/1539591367,https://github.com/rails/rails/pull/48132#issuecomment-1539591367,https://api.github.com/repos/rails/rails/issues/48132,1539591367,IC_kwDNIULOW8RMxw,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-05-09T07:18:12Z,2023-05-11T22:36:39Z,MEMBER,"Thanks for opening this pull request. 

How about providing a warning if `drop_schema` without `:force :cascade` option given first? Not introducing a new variable `ActiveRecord.postgresql_drop_schema_cascade`.

The warning message should be something like ""drop_schema and will not add CASCADE option in Rails 7.2. Add :force :cascade to keep the current behavior"" (English grammar needs to be fixed).
If the migration version is [7.1] or lower, `drop_schema` should add CASCADE option by default to keep the existing behavior.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1539591367/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48132
https://api.github.com/repos/rails/rails/issues/comments/1535167817,https://github.com/rails/rails/pull/48130#issuecomment-1535167817,https://api.github.com/repos/rails/rails/issues/48130,1535167817,IC_kwDNIULOW4DNSQ,"{'login': 'briu', 'id': 3942920, 'node_id': 'MDQ6VXNlcjM5NDI5MjA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3942920?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/briu', 'html_url': 'https://github.com/briu', 'followers_url': 'https://api.github.com/users/briu/followers', 'following_url': 'https://api.github.com/users/briu/following{/other_user}', 'gists_url': 'https://api.github.com/users/briu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/briu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/briu/subscriptions', 'organizations_url': 'https://api.github.com/users/briu/orgs', 'repos_url': 'https://api.github.com/users/briu/repos', 'events_url': 'https://api.github.com/users/briu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/briu/received_events', 'type': 'User', 'site_admin': False}",2023-05-04T17:43:58Z,2023-05-04T17:43:58Z,NONE,"cc @nvasilevski look this PR, please","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1535167817/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48130
https://api.github.com/repos/rails/rails/issues/comments/1560645894,https://github.com/rails/rails/pull/48130#issuecomment-1560645894,https://api.github.com/repos/rails/rails/issues/48130,1560645894,IC_kwDNIULOXQWRBg,"{'login': 'briu', 'id': 3942920, 'node_id': 'MDQ6VXNlcjM5NDI5MjA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3942920?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/briu', 'html_url': 'https://github.com/briu', 'followers_url': 'https://api.github.com/users/briu/followers', 'following_url': 'https://api.github.com/users/briu/following{/other_user}', 'gists_url': 'https://api.github.com/users/briu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/briu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/briu/subscriptions', 'organizations_url': 'https://api.github.com/users/briu/orgs', 'repos_url': 'https://api.github.com/users/briu/repos', 'events_url': 'https://api.github.com/users/briu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/briu/received_events', 'type': 'User', 'site_admin': False}",2023-05-24T08:08:21Z,2023-05-24T08:08:44Z,NONE,"> The bugfix needs a changelog entry
> 
> Overall changes look good to me and the test indeed reproduces the bug. But someone from the core team will need to have a look in order for the PR to get merged

thanks for review once again
I added changelog entry. But I'm a little bit confused with core team member review.
Somebody from core team could look at PR later automatically and I should wait or call somebody explicitly?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1560645894/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48130
https://api.github.com/repos/rails/rails/issues/comments/1561175540,https://github.com/rails/rails/pull/48130#issuecomment-1561175540,https://api.github.com/repos/rails/rails/issues/48130,1561175540,IC_kwDNIULOXQ2l9A,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-05-24T13:40:35Z,2023-05-24T13:40:35Z,CONTRIBUTOR,">Somebody from core team could look at PR later automatically and I should wait or call somebody explicitly?

Usually someone eventually will have a look. You could[ on Discord ](https://rubyonrails.org/2022/6/13/rails-discord-server-is-now-open-to-the-public) to get more visibility but let's not ping individuals ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1561175540/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48130
https://api.github.com/repos/rails/rails/issues/comments/1552288521,https://github.com/rails/rails/pull/48117#issuecomment-1552288521,https://api.github.com/repos/rails/rails/issues/48117,1552288521,IC_kwDNIULOXIYLCQ,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-05-18T01:36:25Z,2023-05-18T01:36:25Z,MEMBER,"Thanks for opening this pull request. Please create a pull request for `main` branch, not `7-0-stable` and add necessary unit tests.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1552288521/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48117
https://api.github.com/repos/rails/rails/issues/comments/1559374565,https://github.com/rails/rails/pull/48117#issuecomment-1559374565,https://api.github.com/repos/rails/rails/issues/48117,1559374565,IC_kwDNIULOXPIq5Q,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-05-23T13:34:20Z,2023-05-23T13:34:20Z,MEMBER,"Thanks for the update. 

* Query updated by this pull request

```sql
SELECT c.relname FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE n.nspname = ANY (array_prepend((SELECT pg_my_temp_schema()::regnamespace::name),current_schemas(false))) AND c.relkind IN ('r','v','m','p','f')
```

* Current query

```sql
SELECT c.relname FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE n.nspname = ANY (current_schemas(false)) AND c.relkind IN ('r','v','m','p','f')
```

I recall that as of right now, the main Rails branch must support PostgreSQL 9.3.

https://github.com/rails/rails/blob/70e74216d7556dc8b68841814fb8accafb4e6cbf/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L601-L605

However, since PostgreSQL 9.5, the `regnamespace' type has been introduced. 
Therefore, it will require one of these two options:

- Replace `regnamespace` with something supported by PostgreSQL 9.3.
- Bump the PostgreSQL version requirements to 9.5 or higher.

Actually, I opened this pull request to bump the minimum version of PostgreSQL https://github.com/rails/rails/pull/41526, which was closed. I think it is worth reopening it to get some more feedback if the option 1 is not suitable.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1559374565/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48117
https://api.github.com/repos/rails/rails/issues/comments/1559906487,https://github.com/rails/rails/pull/48117#issuecomment-1559906487,https://api.github.com/repos/rails/rails/issues/48117,1559906487,IC_kwDNIULOXPpItw,"{'login': 'rschellhorn', 'id': 260602, 'node_id': 'MDQ6VXNlcjI2MDYwMg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/260602?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rschellhorn', 'html_url': 'https://github.com/rschellhorn', 'followers_url': 'https://api.github.com/users/rschellhorn/followers', 'following_url': 'https://api.github.com/users/rschellhorn/following{/other_user}', 'gists_url': 'https://api.github.com/users/rschellhorn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rschellhorn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rschellhorn/subscriptions', 'organizations_url': 'https://api.github.com/users/rschellhorn/orgs', 'repos_url': 'https://api.github.com/users/rschellhorn/repos', 'events_url': 'https://api.github.com/users/rschellhorn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rschellhorn/received_events', 'type': 'User', 'site_admin': False}",2023-05-23T18:02:38Z,2023-05-23T18:02:38Z,NONE,"Thanks for the feedback. I did not consider a minimum Postgresql version.

> Replace regnamespace with something supported by PostgreSQL 9.3.

I'll look into that. There probably is something available.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1559906487/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48117
https://api.github.com/repos/rails/rails/issues/comments/1582206348,https://github.com/rails/rails/pull/48117#issuecomment-1582206348,https://api.github.com/repos/rails/rails/issues/48117,1582206348,IC_kwDNIULOXk6NjA,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-06-08T09:21:32Z,2023-06-08T09:21:32Z,MEMBER,"PG version/API considerations aside, it seems like this would be Very Bad News for the schema cache. I don't believe we even have it account for the fact that newly-created tables can disappear during a rollback, let alone the more creative ways that the dynamic behaviour of temp tables can complicate things... they'll be persistent as long as the connection is active (despite it passing through the pool, and thus moving between requests); they'll be present on one connection but not another (the schema cache is shared within a pool, not unique per connection); you could end up with two codepaths creating differently-shaped but same-named temp tables.

Basically, while I don't think this is currently deliberately broken, and it also sounds like it mostly sorta-kinda works... I do think the underlying behaviour (accessing a temp table from an AR model) seems likely to be a generally bad idea, and thus not something we should encourage, given all the other limitations.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1582206348/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48117
https://api.github.com/repos/rails/rails/issues/comments/1582636767,https://github.com/rails/rails/pull/48117#issuecomment-1582636767,https://api.github.com/repos/rails/rails/issues/48117,1582636767,IC_kwDNIULOXlUe3w,"{'login': 'rschellhorn', 'id': 260602, 'node_id': 'MDQ6VXNlcjI2MDYwMg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/260602?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rschellhorn', 'html_url': 'https://github.com/rschellhorn', 'followers_url': 'https://api.github.com/users/rschellhorn/followers', 'following_url': 'https://api.github.com/users/rschellhorn/following{/other_user}', 'gists_url': 'https://api.github.com/users/rschellhorn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rschellhorn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rschellhorn/subscriptions', 'organizations_url': 'https://api.github.com/users/rschellhorn/orgs', 'repos_url': 'https://api.github.com/users/rschellhorn/repos', 'events_url': 'https://api.github.com/users/rschellhorn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rschellhorn/received_events', 'type': 'User', 'site_admin': False}",2023-06-08T14:03:41Z,2023-06-08T14:03:41Z,NONE,"Thank you for the feedback.

> you could end up with two codepaths creating differently-shaped but same-named temp tables.

As in, this is a result of the global schema cache in Rails you mean? In Postgresql this is also an issue for applications that use a connection pool of course. It solves it by offering a means to scope the temp table to a transaction instead of the connection. You can pass in the option `ON COMMIT DROP`. Rails can do the same:

```ruby
TempModel.with_temp_table(as: ""select 1 as id, 'foo' as some_column"", option: 'ON COMMIT DROP') { ... }
```

I see how this is really complicated to work around with a global schema cache. My PR certainly won't cut it.

> I do think the underlying behaviour (accessing a temp table from an AR model) seems likely to be a generally bad idea, and thus not something we should encourage, given all the other limitations.

In most cases I would agree. There are however use cases that could benefit. Mine is one imho:
- we are annotating many records
- there are too many rows to load in memory, so I really like to keep the data in the DB. They need to be annotated in one go unfortunately; they are dependent.
- I don't want to put a long running transaction on the source table
- So instead, I first copy the data in a temp, process it (many subsequent upserts) and finally write the result back to the source table.

This indeed is perhaps a niche use case Active Record doesn't have to support. Falling back to raw sql is a good enough alternative for me.

So, thanks you again for reviewing it and put my change in perspective. I am fine with closing this PR.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1582636767/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48117
https://api.github.com/repos/rails/rails/issues/comments/1532096878,https://github.com/rails/rails/pull/48114#issuecomment-1532096878,https://api.github.com/repos/rails/rails/issues/48114,1532096878,IC_kwDNIULOW1Hxbg,"{'login': 'edaroit', 'id': 13070410, 'node_id': 'MDQ6VXNlcjEzMDcwNDEw', 'avatar_url': 'https://avatars.githubusercontent.com/u/13070410?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/edaroit', 'html_url': 'https://github.com/edaroit', 'followers_url': 'https://api.github.com/users/edaroit/followers', 'following_url': 'https://api.github.com/users/edaroit/following{/other_user}', 'gists_url': 'https://api.github.com/users/edaroit/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/edaroit/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/edaroit/subscriptions', 'organizations_url': 'https://api.github.com/users/edaroit/orgs', 'repos_url': 'https://api.github.com/users/edaroit/repos', 'events_url': 'https://api.github.com/users/edaroit/events{/privacy}', 'received_events_url': 'https://api.github.com/users/edaroit/received_events', 'type': 'User', 'site_admin': False}",2023-05-02T20:20:56Z,2023-05-02T20:20:56Z,NONE,"> I wonder if we shouldn't limit this to numericality but let it work with different sized text columns for example.

Do you mean as in a new type of validator?

@skipkayhil ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1532096878/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48114
https://api.github.com/repos/rails/rails/issues/comments/1525553072,https://github.com/rails/rails/pull/48073#issuecomment-1525553072,https://api.github.com/repos/rails/rails/issues/48073,1525553072,IC_kwDNIULOWu4XsA,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2023-04-27T11:49:35Z,2023-04-27T11:49:35Z,CONTRIBUTOR,":thinking: This is problem for more than failed system tests screenshots. `log/` directory can bloat really fast with big test suites and `test.log` file.

In my experience, it is enough to keep failing screenshots only until next run. It would be enough to introduce method to just delete them and let user use it in before suite hook (aka solution 1).

I'm not sure about the terminology as well. In my eyes ""log rotation"" doesn't mean logs are deleted, but moved and archived. `ActionDispatch::SystemTesting.delete_screenshots` as suggested per @jean-francois-labbe works better for me.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1525553072/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48073
https://api.github.com/repos/rails/rails/issues/comments/1525754701,https://github.com/rails/rails/pull/48073#issuecomment-1525754701,https://api.github.com/repos/rails/rails/issues/48073,1525754701,IC_kwDNIULOWvErTQ,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-04-27T14:02:09Z,2023-04-27T14:02:09Z,MEMBER,"> log/ directory can bloat really fast with big test suites and test.log file.

That should no longer be an issue after https://github.com/rails/rails/pull/44888

> In my experience, it is enough to keep failing screenshots only until next run. It would be enough to introduce method to just delete them and let user use it in before suite hook (aka solution 1).

I was thinking exactly the same.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1525754701/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48073
https://api.github.com/repos/rails/rails/issues/comments/1525755790,https://github.com/rails/rails/pull/48073#issuecomment-1525755790,https://api.github.com/repos/rails/rails/issues/48073,1525755790,IC_kwDNIULOWvEvjg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-04-27T14:02:34Z,2023-04-27T14:02:34Z,MEMBER,"Actually, I think we should just clear the screenshots directory at the start of a test run by default.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1525755790/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48073
https://api.github.com/repos/rails/rails/issues/comments/1526136217,https://github.com/rails/rails/pull/48073#issuecomment-1526136217,https://api.github.com/repos/rails/rails/issues/48073,1526136217,IC_kwDNIULOWvb9mQ,"{'login': 'palkan', 'id': 1516722, 'node_id': 'MDQ6VXNlcjE1MTY3MjI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1516722?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/palkan', 'html_url': 'https://github.com/palkan', 'followers_url': 'https://api.github.com/users/palkan/followers', 'following_url': 'https://api.github.com/users/palkan/following{/other_user}', 'gists_url': 'https://api.github.com/users/palkan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/palkan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/palkan/subscriptions', 'organizations_url': 'https://api.github.com/users/palkan/orgs', 'repos_url': 'https://api.github.com/users/palkan/repos', 'events_url': 'https://api.github.com/users/palkan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/palkan/received_events', 'type': 'User', 'site_admin': False}",2023-04-27T18:23:31Z,2023-04-27T18:23:31Z,CONTRIBUTOR,"> I think we should just clear the screenshots directory at the start of a test run by default.

I had situations where I compared screenshots from a few consecutive runs; that's probably not the most common scenario, but still possible. We can make it flexible:

```ruby
# Simply delete all
ActionDispatch::SystemTesting.delete_screenshots

# Only delete files older than 1 hour
ActionDispatch::SystemTesting.delete_screenshots(older_than: 1.hour)
```

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1526136217/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48073
https://api.github.com/repos/rails/rails/issues/comments/1526137454,https://github.com/rails/rails/pull/48073#issuecomment-1526137454,https://api.github.com/repos/rails/rails/issues/48073,1526137454,IC_kwDNIULOWvcCbg,"{'login': 'palkan', 'id': 1516722, 'node_id': 'MDQ6VXNlcjE1MTY3MjI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1516722?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/palkan', 'html_url': 'https://github.com/palkan', 'followers_url': 'https://api.github.com/users/palkan/followers', 'following_url': 'https://api.github.com/users/palkan/following{/other_user}', 'gists_url': 'https://api.github.com/users/palkan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/palkan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/palkan/subscriptions', 'organizations_url': 'https://api.github.com/users/palkan/orgs', 'repos_url': 'https://api.github.com/users/palkan/repos', 'events_url': 'https://api.github.com/users/palkan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/palkan/received_events', 'type': 'User', 'site_admin': False}",2023-04-27T18:24:41Z,2023-04-27T18:24:41Z,CONTRIBUTOR,"@byroot Speaking of ""at the start of a test run by default""—any ideas how we can accomplish this? So far, I found that whenever we call `rails test`, we load test files first and then we require `testing/autorun`; I was thinking about relying on this logic to implement before run hooks (see the description). Maybe, there are better options.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1526137454/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48073
https://api.github.com/repos/rails/rails/issues/comments/1526139347,https://github.com/rails/rails/pull/48073#issuecomment-1526139347,https://api.github.com/repos/rails/rails/issues/48073,1526139347,IC_kwDNIULOWvcJ0w,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-04-27T18:26:22Z,2023-04-27T18:26:22Z,MEMBER,"Yeah, but that's easy to `mv tmp/screenshots/blah.png /tmp/blah-old.png`.

Or to have a configuration, but IMO the default behavior should be to clear at the beginning of each run.

> any ideas how we can accomplish this?

Not out of the top of my head, but I'd look at other ""once per process"" things like transactional fixtures insertion, etc.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1526139347/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48073
https://api.github.com/repos/rails/rails/issues/comments/1526153039,https://github.com/rails/rails/pull/48073#issuecomment-1526153039,https://api.github.com/repos/rails/rails/issues/48073,1526153039,IC_kwDNIULOWvc_Tw,"{'login': 'palkan', 'id': 1516722, 'node_id': 'MDQ6VXNlcjE1MTY3MjI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1516722?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/palkan', 'html_url': 'https://github.com/palkan', 'followers_url': 'https://api.github.com/users/palkan/followers', 'following_url': 'https://api.github.com/users/palkan/following{/other_user}', 'gists_url': 'https://api.github.com/users/palkan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/palkan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/palkan/subscriptions', 'organizations_url': 'https://api.github.com/users/palkan/orgs', 'repos_url': 'https://api.github.com/users/palkan/repos', 'events_url': 'https://api.github.com/users/palkan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/palkan/received_events', 'type': 'User', 'site_admin': False}",2023-04-27T18:39:03Z,2023-04-27T18:39:03Z,CONTRIBUTOR,"> I'd look at other ""once per process"" things like transactional fixtures insertion, etc.

Fixtures use a combination of `before_setup` and class variables (`@@already_loaded_fixtures`); that's probably the quickest way to do that (though I would prefer to avoid subsequent no-op `setup` hooks).
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1526153039/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48073
https://api.github.com/repos/rails/rails/issues/comments/1524089644,https://github.com/rails/rails/issues/48072#issuecomment-1524089644,https://api.github.com/repos/rails/rails/issues/48072,1524089644,IC_kwDNIULOWtfDLA,"{'login': 'evansalter', 'id': 10549733, 'node_id': 'MDQ6VXNlcjEwNTQ5NzMz', 'avatar_url': 'https://avatars.githubusercontent.com/u/10549733?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/evansalter', 'html_url': 'https://github.com/evansalter', 'followers_url': 'https://api.github.com/users/evansalter/followers', 'following_url': 'https://api.github.com/users/evansalter/following{/other_user}', 'gists_url': 'https://api.github.com/users/evansalter/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/evansalter/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/evansalter/subscriptions', 'organizations_url': 'https://api.github.com/users/evansalter/orgs', 'repos_url': 'https://api.github.com/users/evansalter/repos', 'events_url': 'https://api.github.com/users/evansalter/events{/privacy}', 'received_events_url': 'https://api.github.com/users/evansalter/received_events', 'type': 'User', 'site_admin': False}",2023-04-26T21:52:33Z,2023-04-26T21:52:33Z,NONE,"@fatkodima thanks a ton for taking a look at this!

Is there any chance that whatever fix is implemented could be backported to v6.1 as well, or will it only be on v7.1+?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1524089644/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48072
https://api.github.com/repos/rails/rails/issues/comments/1524091662,https://github.com/rails/rails/issues/48072#issuecomment-1524091662,https://api.github.com/repos/rails/rails/issues/48072,1524091662,IC_kwDNIULOWtfLDg,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-04-26T21:55:04Z,2023-04-26T21:55:04Z,CONTRIBUTOR,"6.1 is not supported for bug fixes (see https://guides.rubyonrails.org/maintenance_policy.html), so most probably only to 7.0 and 7.1.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1524091662/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48072
https://api.github.com/repos/rails/rails/issues/comments/1660881883,https://github.com/rails/rails/issues/48072#issuecomment-1660881883,https://api.github.com/repos/rails/rails/issues/48072,1660881883,IC_kwDNIULOYv8L2w,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-01T18:40:15Z,2023-08-01T18:40:15Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1660881883/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48072
https://api.github.com/repos/rails/rails/issues/comments/1524085320,https://github.com/rails/rails/pull/48064#issuecomment-1524085320,https://api.github.com/repos/rails/rails/issues/48064,1524085320,IC_kwDNIULOWteySA,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-04-26T21:47:30Z,2023-04-26T21:47:30Z,MEMBER,"Just a thought, but in the mobile screen it's hard to tell the logo is a button to open the menu IMO. I know this came up in the splash screen too and they added a drop shadow. I'm still not convinced though 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1524085320/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48064
https://api.github.com/repos/rails/rails/issues/comments/1555371815,https://github.com/rails/rails/pull/48064#issuecomment-1555371815,https://api.github.com/repos/rails/rails/issues/48064,1555371815,IC_kwDNIULOXLUXJw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-05-19T23:31:31Z,2023-05-19T23:31:31Z,MEMBER,"I'd like to hear some other opinions about the ""logo vs. button"" thing, but another thought I had was just about the ""Guides Index"" feeling too long, maybe that can just always be a hamburger menu after we move the other links out?

Ideally the top navigation should be consistent across the website, api docs, and guides IMO. 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1555371815/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48064
https://api.github.com/repos/rails/rails/issues/comments/1521011410,https://github.com/rails/rails/pull/48057#issuecomment-1521011410,https://api.github.com/repos/rails/rails/issues/48057,1521011410,IC_kwDNIULOWqjK0g,"{'login': 'al2o3cr', 'id': 1191, 'node_id': 'MDQ6VXNlcjExOTE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1191?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/al2o3cr', 'html_url': 'https://github.com/al2o3cr', 'followers_url': 'https://api.github.com/users/al2o3cr/followers', 'following_url': 'https://api.github.com/users/al2o3cr/following{/other_user}', 'gists_url': 'https://api.github.com/users/al2o3cr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/al2o3cr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/al2o3cr/subscriptions', 'organizations_url': 'https://api.github.com/users/al2o3cr/orgs', 'repos_url': 'https://api.github.com/users/al2o3cr/repos', 'events_url': 'https://api.github.com/users/al2o3cr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/al2o3cr/received_events', 'type': 'User', 'site_admin': False}",2023-04-25T00:51:47Z,2023-04-25T00:51:47Z,CONTRIBUTOR,"FWIW, in a new Rails app, `tmp/storage` (and `tmp/storage/.keep`) are generated automatically when an app is generated unless the `--skip-active-storage` flag is given: 

https://github.com/rails/rails/blob/c15ee6e7b5065db3c46afa1f025b8e45f443604e/railties/lib/rails/generators/rails/app/app_generator.rb#L220","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1521011410/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48057
https://api.github.com/repos/rails/rails/issues/comments/1521722423,https://github.com/rails/rails/pull/48057#issuecomment-1521722423,https://api.github.com/repos/rails/rails/issues/48057,1521722423,IC_kwDNIULOWrOkNw,"{'login': 'al2o3cr', 'id': 1191, 'node_id': 'MDQ6VXNlcjExOTE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1191?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/al2o3cr', 'html_url': 'https://github.com/al2o3cr', 'followers_url': 'https://api.github.com/users/al2o3cr/followers', 'following_url': 'https://api.github.com/users/al2o3cr/following{/other_user}', 'gists_url': 'https://api.github.com/users/al2o3cr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/al2o3cr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/al2o3cr/subscriptions', 'organizations_url': 'https://api.github.com/users/al2o3cr/orgs', 'repos_url': 'https://api.github.com/users/al2o3cr/repos', 'events_url': 'https://api.github.com/users/al2o3cr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/al2o3cr/received_events', 'type': 'User', 'site_admin': False}",2023-04-25T12:40:58Z,2023-04-25T12:40:58Z,CONTRIBUTOR,The description of `tmp:clear` and friends in [the guide](https://github.com/rails/rails/blob/4d171a4bde5317c9bb6a6f178597458fed84037f/guides/source/command_line.md#binrails-tmp) will also need updating.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1521722423/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48057
https://api.github.com/repos/rails/rails/issues/comments/1521742506,https://github.com/rails/rails/pull/48057#issuecomment-1521742506,https://api.github.com/repos/rails/rails/issues/48057,1521742506,IC_kwDNIULOWrPyqg,"{'login': 'jasonkarns', 'id': 119972, 'node_id': 'MDQ6VXNlcjExOTk3Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/119972?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jasonkarns', 'html_url': 'https://github.com/jasonkarns', 'followers_url': 'https://api.github.com/users/jasonkarns/followers', 'following_url': 'https://api.github.com/users/jasonkarns/following{/other_user}', 'gists_url': 'https://api.github.com/users/jasonkarns/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jasonkarns/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jasonkarns/subscriptions', 'organizations_url': 'https://api.github.com/users/jasonkarns/orgs', 'repos_url': 'https://api.github.com/users/jasonkarns/repos', 'events_url': 'https://api.github.com/users/jasonkarns/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jasonkarns/received_events', 'type': 'User', 'site_admin': False}",2023-04-25T12:55:07Z,2023-04-25T12:55:07Z,CONTRIBUTOR,"I'm also wondering if it was an oversight that the ""root"" `tmp:clear` task doesn't clear pids.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1521742506/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48057
https://api.github.com/repos/rails/rails/issues/comments/1526283272,https://github.com/rails/rails/pull/48057#issuecomment-1526283272,https://api.github.com/repos/rails/rails/issues/48057,1526283272,IC_kwDNIULOWvk8CA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-04-27T19:44:55Z,2023-04-27T19:44:55Z,MEMBER,"I think if we want to improve `tmp` commands we should probably go through #47698. 

Instead of always creating `storage` and `screenshots`, it should probably depend on whether the app loads Active Storage and whether the app has system tests configured.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1526283272/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48057
https://api.github.com/repos/rails/rails/issues/comments/1519275838,https://github.com/rails/rails/pull/48041#issuecomment-1519275838,https://api.github.com/repos/rails/rails/issues/48041,1519275838,IC_kwDNIULOWo5PPg,"{'login': 'guilleiguaran', 'id': 160941, 'node_id': 'MDQ6VXNlcjE2MDk0MQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/160941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/guilleiguaran', 'html_url': 'https://github.com/guilleiguaran', 'followers_url': 'https://api.github.com/users/guilleiguaran/followers', 'following_url': 'https://api.github.com/users/guilleiguaran/following{/other_user}', 'gists_url': 'https://api.github.com/users/guilleiguaran/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/guilleiguaran/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/guilleiguaran/subscriptions', 'organizations_url': 'https://api.github.com/users/guilleiguaran/orgs', 'repos_url': 'https://api.github.com/users/guilleiguaran/repos', 'events_url': 'https://api.github.com/users/guilleiguaran/events{/privacy}', 'received_events_url': 'https://api.github.com/users/guilleiguaran/received_events', 'type': 'User', 'site_admin': False}",2023-04-24T02:01:48Z,2023-04-24T02:01:48Z,MEMBER,"> My only question is how does the global yarn.lock file get updated?

Maybe this?

```
yarn upgrade karma-sauce-launcher@^4.3.6
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1519275838/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48041
https://api.github.com/repos/rails/rails/issues/comments/1519457746,https://github.com/rails/rails/pull/48041#issuecomment-1519457746,https://api.github.com/repos/rails/rails/issues/48041,1519457746,IC_kwDNIULOWpEV0g,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-04-24T06:25:45Z,2023-04-24T06:25:45Z,MEMBER,"> yarn upgrade karma-sauce-launcher@^4.3.6

This adds a huge diff to the root `yarn.lock` file, and adds `karma-sauce-launcher` to the root `package.json` dependencies.

From the CI config, it seems we run `yarn install` from the root, and `npm install` from the actionview directory.

There doesn't seem to be any documentation for how this file is maintained that I could find. 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1519457746/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48041
https://api.github.com/repos/rails/rails/issues/comments/1525937028,https://github.com/rails/rails/pull/48041#issuecomment-1525937028,https://api.github.com/repos/rails/rails/issues/48041,1525937028,IC_kwDNIULOWvPzhA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-04-27T15:50:28Z,2023-04-27T15:50:28Z,MEMBER,"I _think_ a `yarn install` would update the lockfile?

> and `npm install` from the actionview directory.

This definitely seems wrong, we should probably be using yarn everywhere.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1525937028/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48041
https://api.github.com/repos/rails/rails/issues/comments/1526536015,https://github.com/rails/rails/pull/48041#issuecomment-1526536015,https://api.github.com/repos/rails/rails/issues/48041,1526536015,IC_kwDNIULOWv0XTw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-04-27T21:39:06Z,2023-04-27T21:39:06Z,MEMBER,"> > and `npm install` from the actionview directory.
> 
> This definitely seems wrong, we should probably be using yarn everywhere.

We do except actionview (at least in CI) for whatever reason:
https://github.com/rails/buildkite-config/blob/cde08283a7f570c1b0185eb626f835e393350801/Dockerfile#L115-L124

> I _think_ a `yarn install` would update the lockfile?

Will update the PR with `yarn install` run from the root :pray:
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1526536015/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,48041
https://api.github.com/repos/rails/rails/issues/comments/1511415371,https://github.com/rails/rails/pull/47961#issuecomment-1511415371,https://api.github.com/repos/rails/rails/issues/47961,1511415371,IC_kwDNIULOWhZeSw,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-04-17T14:02:47Z,2023-04-17T14:02:47Z,MEMBER,"cc https://github.com/rails/rails/issues/47811, including some consideration of ways to maintain this info outside the main repo, to side step the problem that the max Ruby version is only really defined after the Rails version ceases to be supported.

(It's also not quite this easy to define the max version: all of Rails 5.* is compatible with Ruby 2.2, but I doubt all of those work with Ruby 2.6.)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1511415371/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47961
https://api.github.com/repos/rails/rails/issues/comments/1511518982,https://github.com/rails/rails/pull/47961#issuecomment-1511518982,https://api.github.com/repos/rails/rails/issues/47961,1511518982,IC_kwDNIULOWhfzBg,"{'login': 'chris-hewitt', 'id': 4896702, 'node_id': 'MDQ6VXNlcjQ4OTY3MDI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4896702?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/chris-hewitt', 'html_url': 'https://github.com/chris-hewitt', 'followers_url': 'https://api.github.com/users/chris-hewitt/followers', 'following_url': 'https://api.github.com/users/chris-hewitt/following{/other_user}', 'gists_url': 'https://api.github.com/users/chris-hewitt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/chris-hewitt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/chris-hewitt/subscriptions', 'organizations_url': 'https://api.github.com/users/chris-hewitt/orgs', 'repos_url': 'https://api.github.com/users/chris-hewitt/repos', 'events_url': 'https://api.github.com/users/chris-hewitt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/chris-hewitt/received_events', 'type': 'User', 'site_admin': False}",2023-04-17T14:51:22Z,2023-04-17T14:51:22Z,CONTRIBUTOR,"Agreed. I think somehow, though, the guide should describe what steps to take and in what order. Sections 1.2 and 1.3 almost get us there, except (currently) for the case of upgrading to Rails 6. In that case the ""latest Ruby you can"" instruction needs a caveat, so users don't waste time upgrading to Ruby 2.7/3.0/etc, only to get a Rails error.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1511518982/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47961
https://api.github.com/repos/rails/rails/issues/comments/1524104839,https://github.com/rails/rails/pull/47961#issuecomment-1524104839,https://api.github.com/repos/rails/rails/issues/47961,1524104839,IC_kwDNIULOWtf-hw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-04-26T22:09:45Z,2023-04-26T22:09:45Z,MEMBER,"This is not necessarily a comment on this PR specifically, but I think that upgrading guide could be split into multiple separate pages, per upgrade path, with the base page talking about overview concepts and links to all of the guides IMO.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1524104839/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47961
https://api.github.com/repos/rails/rails/issues/comments/1551804303,https://github.com/rails/rails/pull/47961#issuecomment-1551804303,https://api.github.com/repos/rails/rails/issues/47961,1551804303,IC_kwDNIULOXH6njw,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-05-17T17:34:30Z,2023-05-17T18:29:38Z,MEMBER,"A [duplicate](https://github.com/rails/rails/pull/47960) of this PR got merged.
Not sure this can be closed, as there is still some discussion going on.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1551804303/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47961
https://api.github.com/repos/rails/rails/issues/comments/1552873150,https://github.com/rails/rails/pull/47961#issuecomment-1552873150,https://api.github.com/repos/rails/rails/issues/47961,1552873150,IC_kwDNIULOXI72vg,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-05-18T10:46:56Z,2023-05-18T10:46:56Z,MEMBER,"Whoops, yeah I saw the other PR and forgot, it's been reverted. :bow:","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1552873150/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47961
https://api.github.com/repos/rails/rails/issues/comments/1509498308,https://github.com/rails/rails/pull/47939#issuecomment-1509498308,https://api.github.com/repos/rails/rails/issues/47939,1509498308,IC_kwDNIULOWfkdxA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-04-15T04:29:15Z,2023-04-15T04:29:15Z,MEMBER,"Hey @sirwolfgang, thanks for the PR! Have you tried using something like [Next.js dynamic imports](https://nextjs.org/docs/advanced-features/dynamic-import#with-no-ssr)? Since Action Cable is explicitly a client library I'm not sure about making changes to it to run it somewhere its not designed to run

Previous discussions
- #36619
- #36652
- #39543
- #44092","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1509498308/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47939
https://api.github.com/repos/rails/rails/issues/comments/1512020971,https://github.com/rails/rails/pull/47939#issuecomment-1512020971,https://api.github.com/repos/rails/rails/issues/47939,1512020971,IC_kwDNIULOWh-b6w,"{'login': 'sirwolfgang', 'id': 722517, 'node_id': 'MDQ6VXNlcjcyMjUxNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/722517?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sirwolfgang', 'html_url': 'https://github.com/sirwolfgang', 'followers_url': 'https://api.github.com/users/sirwolfgang/followers', 'following_url': 'https://api.github.com/users/sirwolfgang/following{/other_user}', 'gists_url': 'https://api.github.com/users/sirwolfgang/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sirwolfgang/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sirwolfgang/subscriptions', 'organizations_url': 'https://api.github.com/users/sirwolfgang/orgs', 'repos_url': 'https://api.github.com/users/sirwolfgang/repos', 'events_url': 'https://api.github.com/users/sirwolfgang/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sirwolfgang/received_events', 'type': 'User', 'site_admin': False}",2023-04-17T20:14:22Z,2023-04-17T20:14:22Z,NONE,"@skipkayhil Thanks for digging up those PRs/Issues. Thats not really a great option for embedding code within packages, which we are doing, that can be used with and with out nextjs. 

My expectation here isn't for action cable to work server side, but the code to be able to compile in all reasonable environment; Which includes being embedded within other ecosystem packages. We've already made the change to support webworkers.

I'm not sure why all the other PRs have been closed in-favor of undocumented work arounds. Part of rails doctrine #1 is optimize of programmer happiness, and I think supporting the embedding and use of rails code within other ecosystems without situationally specific workarounds falls within that.  ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1512020971/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47939
https://api.github.com/repos/rails/rails/issues/comments/1554227416,https://github.com/rails/rails/pull/47939#issuecomment-1554227416,https://api.github.com/repos/rails/rails/issues/47939,1554227416,IC_kwDNIULOXKOg2A,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-05-19T08:28:23Z,2023-05-19T08:28:23Z,MEMBER,"Another concern of supporting multiple environments like this is how do we test it, and ensure it's working as intended?

But ultimately this decision comes down to the core team deciding whether or not they want to support it. :pray:","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1554227416/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47939
https://api.github.com/repos/rails/rails/issues/comments/1504075540,https://github.com/rails/rails/issues/47913#issuecomment-1504075540,https://api.github.com/repos/rails/rails/issues/47913,1504075540,IC_kwDNIULOWaZfFA,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-04-11T20:52:54Z,2023-04-11T20:52:54Z,CONTRIBUTOR,"I was able to reproduce, but not with a `SpecialUser` class, but `UserSpecial`. For `SpecialUser` it works, because the generated regexp is `/user\.email/` which also matches `special_user.email`.

I was able to come up with a solution:

```diff
diff --git a/activerecord/lib/active_record/encryption/encryptable_record.rb b/activerecord/lib/active_record/encryption/encryptable_record.rb
index 2f2b08f39c..1dfcd462d9 100644
--- a/activerecord/lib/active_record/encryption/encryptable_record.rb
+++ b/activerecord/lib/active_record/encryption/encryptable_record.rb
@@ -14,6 +14,13 @@ module EncryptableRecord
       end

       class_methods do
+        def inherited(subclass)
+          encrypted_attributes&.each do |name|
+            ActiveRecord::Encryption.encrypted_attribute_was_declared(subclass, name)
+          end
+          super
+        end
+
         # Encrypts the +name+ attribute.
         #
         # === Options
```

@jorgemanrubia Can you tell if this is a good enough solution, so I will open a PR?

@annettemmm Can you verify this solution solves your problem?

Also, I noticed that after introduction of https://github.com/rails/rails/pull/46452, parameter filtering won't work implicitly in development (meaning eager loading is disabled) if `precompile_filter_parameters` is set. Because on each request all classes are reloaded and parameter filtering regexes are compiled - https://github.com/rails/rails/blob/2675c906b1cc4cc877ddee4d62dc33f544adc748/railties/lib/rails/application.rb#L680-L686 before the models with encrypted attributes are loaded and having a chance to add to it - https://github.com/rails/rails/blob/2675c906b1cc4cc877ddee4d62dc33f544adc748/activerecord/lib/active_record/encryption/configurable.rb#L53-L57

cc @jonathanhefner as an implementor of that feature","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1504075540/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47913
https://api.github.com/repos/rails/rails/issues/comments/1504128062,https://github.com/rails/rails/issues/47913#issuecomment-1504128062,https://api.github.com/repos/rails/rails/issues/47913,1504128062,IC_kwDNIULOWacsPg,"{'login': 'jorgemanrubia', 'id': 129938, 'node_id': 'MDQ6VXNlcjEyOTkzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/129938?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jorgemanrubia', 'html_url': 'https://github.com/jorgemanrubia', 'followers_url': 'https://api.github.com/users/jorgemanrubia/followers', 'following_url': 'https://api.github.com/users/jorgemanrubia/following{/other_user}', 'gists_url': 'https://api.github.com/users/jorgemanrubia/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jorgemanrubia/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jorgemanrubia/subscriptions', 'organizations_url': 'https://api.github.com/users/jorgemanrubia/orgs', 'repos_url': 'https://api.github.com/users/jorgemanrubia/repos', 'events_url': 'https://api.github.com/users/jorgemanrubia/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jorgemanrubia/received_events', 'type': 'User', 'site_admin': False}",2023-04-11T21:39:52Z,2023-04-11T21:39:52Z,CONTRIBUTOR,"@fatkodima I think that's a great fix for the inheritance problem 👍. For the filter parameter one, maybe we could add an additional entry `<model name>_attributes` in parallel to each `<model name>` one?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1504128062/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47913
https://api.github.com/repos/rails/rails/issues/comments/1505722981,https://github.com/rails/rails/issues/47913#issuecomment-1505722981,https://api.github.com/repos/rails/rails/issues/47913,1505722981,IC_kwDNIULOWb-CZQ,"{'login': 'annettemmm', 'id': 79126438, 'node_id': 'MDQ6VXNlcjc5MTI2NDM4', 'avatar_url': 'https://avatars.githubusercontent.com/u/79126438?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/annettemmm', 'html_url': 'https://github.com/annettemmm', 'followers_url': 'https://api.github.com/users/annettemmm/followers', 'following_url': 'https://api.github.com/users/annettemmm/following{/other_user}', 'gists_url': 'https://api.github.com/users/annettemmm/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/annettemmm/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/annettemmm/subscriptions', 'organizations_url': 'https://api.github.com/users/annettemmm/orgs', 'repos_url': 'https://api.github.com/users/annettemmm/repos', 'events_url': 'https://api.github.com/users/annettemmm/events{/privacy}', 'received_events_url': 'https://api.github.com/users/annettemmm/received_events', 'type': 'User', 'site_admin': False}",2023-04-12T18:14:51Z,2023-04-12T18:14:51Z,NONE,"This works great! 

@fatkodima thanks for catching the UserSpecial / SpecialUser thing!

Your solution def solves my inheritance problem, and with @jorgemanrubia's idea to add `<model name>_attributes` in addition to `<model name>` here to https://github.com/rails/rails/blob/2675c906b1cc4cc877ddee4d62dc33f544adc748/activerecord/lib/active_record/encryption/configurable.rb#L53-L57

it should solve the nested attributes problem & the inherited nested params prob.

(I knew about it not working implicitly on development, but when testing/ working on it I just set `config.eager_load = true`) ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1505722981/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47913
https://api.github.com/repos/rails/rails/issues/comments/1504041018,https://github.com/rails/rails/pull/47900#issuecomment-1504041018,https://api.github.com/repos/rails/rails/issues/47900,1504041018,IC_kwDNIULOWaXYOg,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2023-04-11T20:20:40Z,2023-04-11T20:20:40Z,CONTRIBUTOR,"What about to make possible marking query as read-only instead trying to enhance SQL parsing done via reg-exp? Or make it at least user configurable, so you can make some reg-exp you trust to handle your usecases in app itself? I don't think it is possible to write bullet-proof regexp to handle this case.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1504041018/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47900
https://api.github.com/repos/rails/rails/issues/comments/1549467882,https://github.com/rails/rails/pull/47900#issuecomment-1549467882,https://api.github.com/repos/rails/rails/issues/47900,1549467882,IC_kwDNIULOXFsA6g,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-05-16T11:16:31Z,2023-05-16T11:16:31Z,MEMBER,"It looks like `build_read_query_regexp` uses a regexp union, so I wonder if there is a more elegant way to do this without providing one giant regexp for this one use-case:
https://github.com/rails/rails/blob/61c1d25f7e11592803fe0eba50691e1677dd7076/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb#L81","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1549467882/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47900
https://api.github.com/repos/rails/rails/issues/comments/1550381568,https://github.com/rails/rails/pull/47900#issuecomment-1550381568,https://api.github.com/repos/rails/rails/issues/47900,1550381568,IC_kwDNIULOXGjyAA,"{'login': 'nickborromeo', 'id': 1518902, 'node_id': 'MDQ6VXNlcjE1MTg5MDI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1518902?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nickborromeo', 'html_url': 'https://github.com/nickborromeo', 'followers_url': 'https://api.github.com/users/nickborromeo/followers', 'following_url': 'https://api.github.com/users/nickborromeo/following{/other_user}', 'gists_url': 'https://api.github.com/users/nickborromeo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nickborromeo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nickborromeo/subscriptions', 'organizations_url': 'https://api.github.com/users/nickborromeo/orgs', 'repos_url': 'https://api.github.com/users/nickborromeo/repos', 'events_url': 'https://api.github.com/users/nickborromeo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nickborromeo/received_events', 'type': 'User', 'site_admin': True}",2023-05-16T21:32:43Z,2023-05-16T21:32:43Z,CONTRIBUTOR,"@zzak yup it does use that, and I think the reason it uses is that is so that each adapter can pass in specific _markers_ that are read only queries. If we change `build_read_query_regexp` then that will be changed for all adapters which is not the intent here because `COPY TO` is specific only to Postgres. 

However, I am interested if you could expand on 
> a more elegant way to do this

Would love to hear some of your thoughts.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1550381568/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,47900
https://api.github.com/repos/rails/rails/issues/comments/1508499428,https://github.com/rails/rails/pull/47897#issuecomment-1508499428,https://api.github.com/repos/rails/rails/issues/47897,1508499428,IC_kwDNIULOWenf5A,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-04-14T13:23:31Z,2023-04-14T13:23:31Z,MEMBER,"Hey @seanpdoyle thanks for this but I don't know if we want this change. Strict loading is designed to be more global, set it once and you're done. This would encourage applications to sprinkle strict loading around where they want when convenient but I feel like that defeats the purpose of the feature. Can you describe your use case for this feature?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1508499428/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47897
https://api.github.com/repos/rails/rails/issues/comments/1508510297,https://github.com/rails/rails/pull/47897#issuecomment-1508510297,https://api.github.com/repos/rails/rails/issues/47897,1508510297,IC_kwDNIULOWeoKWQ,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-04-14T13:31:13Z,2023-04-14T13:31:13Z,CONTRIBUTOR,"> I feel like that defeats the purpose of the feature. Can you describe your use case for this feature?

@eileencodes appreciate this feedback. I think your assessment is 100% spot on. 

In my experience, there have been times where the self-contained nature of the setup-exercise-verification structure of tests cause strict loading violations.

For those tests,we define our own `with_strict_loading_disabled` test helper that accepts a block. We usually wrap the Verification portion of the test in that block so that we can retrieve records without much consideration for violations. Since the tests themselves are focused and start with a clean slate database, N+1 queries are not a big concern.

This proposal aimed to codify that behavior as part of the framework itself.

Now that you mention it, I don't recall ever using or wanting that behavior on the implementation side.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1508510297/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47897
https://api.github.com/repos/rails/rails/issues/comments/1736325585,https://github.com/rails/rails/pull/47897#issuecomment-1736325585,https://api.github.com/repos/rails/rails/issues/47897,1736325585,IC_kwDNIULOZ3450Q,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T21:26:20Z,2023-09-26T21:27:17Z,CONTRIBUTOR,"@eileencodes more recently, our project has bumped up against strict loading violations in our `ActiveJob::Base` descendants, mostly any job that accepts a Global ID-locatable resource as an argument to `#perform`. Consider a hypothetical scenario to demonstrate the friction.

An `Article` record (that's configured to enforce strict loading) and a `PublishArticleJob` that publishes the article and emails the authors to notify them:

```ruby
class PublishArticleJob < ApplicationJob
  def perform(article)
    # do some publishing logic

    # calling `article.authors` raises a violation
    article.authors.each { |author| notify(author) }
  end
end
```

Since `article` is loaded by a call to [GlobalID::Locator.locate](https://github.com/rails/rails/blob/v7.1.0.beta1/activejob/lib/active_job/arguments.rb#L136-L138), we have no access to the Active Record relation used to execute the query, so we cannot provide eager loading hints (by chaining `includes`, for example).

To work around this, we've called `article.strict_loading!(false)` atop all of our `#perform` definitions.

```ruby
class PublishArticleJob < ApplicationJob
  def perform(article)
    article.strict_loading!(false)

    # do some publishing logic

    # calling `article.authors` no longer raises a violation
    article.authors.each { |author| notify(author) }
  end
end
```

Not only is it noisy, it's also easy to forget to do.

While the idea solution would be to provide Active Job with hooks to control how records are resolved during argument deserialization, a work-around that this PR proposes is to disable strict loading in a `around_perform` block.

Either something global like:

```ruby
around_perform do |job, block|
  ApplicationRecord.strict_loading!(false, &block)
end
```

or something specific like:

```ruby
around_perform do |job, block|
  Article.strict_loading!(false, &block)
end
```

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1736325585/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47897
https://api.github.com/repos/rails/rails/issues/comments/1523996713,https://github.com/rails/rails/issues/47895#issuecomment-1523996713,https://api.github.com/repos/rails/rails/issues/47895,1523996713,IC_kwDNIULOWtZYKQ,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-04-26T20:19:59Z,2023-04-26T20:19:59Z,CONTRIBUTOR,"Hey, I just wanted to share a bit of context as I had a quick look on the issue. 

>Only test_post_find_each_l000_ok pass.

This is actually misleading because the test only passes because we don't have enough `posts` record in the database for it to fail.
If we change our setup to create more than 1000 posts, for example `1010.times do` the first test will start failing as well only returning the `batch_size - 1` records which is `999` as `1000` is the default batch size. I'm still yet to know why it returns `batch_size - 1` records but regardless it sounds like a bug as looking at the relation we do expect to iterate over every single post which means we should expect `find_each.to_a.size` to be equal to `Post.count` 



","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1523996713/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47895
https://api.github.com/repos/rails/rails/issues/comments/1524460625,https://github.com/rails/rails/issues/47895#issuecomment-1524460625,https://api.github.com/repos/rails/rails/issues/47895,1524460625,IC_kwDNIULOWt1sUQ,"{'login': 'yskkin', 'id': 5965113, 'node_id': 'MDQ6VXNlcjU5NjUxMTM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5965113?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yskkin', 'html_url': 'https://github.com/yskkin', 'followers_url': 'https://api.github.com/users/yskkin/followers', 'following_url': 'https://api.github.com/users/yskkin/following{/other_user}', 'gists_url': 'https://api.github.com/users/yskkin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yskkin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yskkin/subscriptions', 'organizations_url': 'https://api.github.com/users/yskkin/orgs', 'repos_url': 'https://api.github.com/users/yskkin/repos', 'events_url': 'https://api.github.com/users/yskkin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yskkin/received_events', 'type': 'User', 'site_admin': False}",2023-04-27T02:08:06Z,2023-04-27T02:08:06Z,CONTRIBUTOR,What we need may be default uniqueness validation for `belongs_to` which is inverse of `has_one`.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1524460625/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47895
https://api.github.com/repos/rails/rails/issues/comments/1665517853,https://github.com/rails/rails/issues/47895#issuecomment-1665517853,https://api.github.com/repos/rails/rails/issues/47895,1665517853,IC_kwDNIULOY0XJHQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-04T12:17:30Z,2023-08-04T12:17:30Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1665517853/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47895
https://api.github.com/repos/rails/rails/issues/comments/1549465147,https://github.com/rails/rails/pull/47894#issuecomment-1549465147,https://api.github.com/repos/rails/rails/issues/47894,1549465147,IC_kwDNIULOXFr2Ow,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-05-16T11:14:31Z,2023-05-16T11:14:31Z,CONTRIBUTOR,For anyone interested in this - currently released as a gem (https://github.com/fatkodima/pluck_in_batches).,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1549465147/reactions', 'total_count': 5, '+1': 5, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47894
https://api.github.com/repos/rails/rails/issues/comments/1529148746,https://github.com/rails/rails/issues/47882#issuecomment-1529148746,https://api.github.com/repos/rails/rails/issues/47882,1529148746,IC_kwDNIULOWyT1Sg,"{'login': 'hahmed', 'id': 658005, 'node_id': 'MDQ6VXNlcjY1ODAwNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/658005?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hahmed', 'html_url': 'https://github.com/hahmed', 'followers_url': 'https://api.github.com/users/hahmed/followers', 'following_url': 'https://api.github.com/users/hahmed/following{/other_user}', 'gists_url': 'https://api.github.com/users/hahmed/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hahmed/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hahmed/subscriptions', 'organizations_url': 'https://api.github.com/users/hahmed/orgs', 'repos_url': 'https://api.github.com/users/hahmed/repos', 'events_url': 'https://api.github.com/users/hahmed/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hahmed/received_events', 'type': 'User', 'site_admin': False}",2023-04-30T21:59:02Z,2023-04-30T21:59:02Z,CONTRIBUTOR,@aedwardg please do open a PR 👍,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1529148746/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47882
https://api.github.com/repos/rails/rails/issues/comments/1626907936,https://github.com/rails/rails/issues/47882#issuecomment-1626907936,https://api.github.com/repos/rails/rails/issues/47882,1626907936,IC_kwDNIULOYPilIA,"{'login': 'RicardoTrindade', 'id': 13217751, 'node_id': 'MDQ6VXNlcjEzMjE3NzUx', 'avatar_url': 'https://avatars.githubusercontent.com/u/13217751?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/RicardoTrindade', 'html_url': 'https://github.com/RicardoTrindade', 'followers_url': 'https://api.github.com/users/RicardoTrindade/followers', 'following_url': 'https://api.github.com/users/RicardoTrindade/following{/other_user}', 'gists_url': 'https://api.github.com/users/RicardoTrindade/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/RicardoTrindade/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/RicardoTrindade/subscriptions', 'organizations_url': 'https://api.github.com/users/RicardoTrindade/orgs', 'repos_url': 'https://api.github.com/users/RicardoTrindade/repos', 'events_url': 'https://api.github.com/users/RicardoTrindade/events{/privacy}', 'received_events_url': 'https://api.github.com/users/RicardoTrindade/received_events', 'type': 'User', 'site_admin': False}",2023-07-08T08:17:14Z,2023-07-08T08:17:14Z,CONTRIBUTOR,"@aedwardg Would it help if instead of adding the path to `application.rb` you declare it in `database.yml`
This way I seem to get both migrations to show up in the error page.

```
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch(""RAILS_MAX_THREADS"") { 5 } %>
  timeout: 5000
  migrations_paths:
   - ""db/migrate""
   - ""packs/stories/db/migrate""

```
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1626907936/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47882
https://api.github.com/repos/rails/rails/issues/comments/1627453295,https://github.com/rails/rails/issues/47882#issuecomment-1627453295,https://api.github.com/repos/rails/rails/issues/47882,1627453295,IC_kwDNIULOYQD3bw,"{'login': 'aedwardg', 'id': 44326005, 'node_id': 'MDQ6VXNlcjQ0MzI2MDA1', 'avatar_url': 'https://avatars.githubusercontent.com/u/44326005?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/aedwardg', 'html_url': 'https://github.com/aedwardg', 'followers_url': 'https://api.github.com/users/aedwardg/followers', 'following_url': 'https://api.github.com/users/aedwardg/following{/other_user}', 'gists_url': 'https://api.github.com/users/aedwardg/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/aedwardg/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/aedwardg/subscriptions', 'organizations_url': 'https://api.github.com/users/aedwardg/orgs', 'repos_url': 'https://api.github.com/users/aedwardg/repos', 'events_url': 'https://api.github.com/users/aedwardg/events{/privacy}', 'received_events_url': 'https://api.github.com/users/aedwardg/received_events', 'type': 'User', 'site_admin': False}",2023-07-08T18:29:26Z,2023-07-08T18:29:26Z,NONE,"@RicardoTrindade while drafting up a fix for this, I came to the same conclusion and we ultimately added it there in our codebase. However, because we are not using `database.yml` for our staging/production environments, this means we ended up having to keep the line in `config/application.rb` as well 😑. 
That's an ""us problem"" though and not a Rails problem.

That said, I still think it is a bug that migrations paths set in `config/application.rb` are only respected by the `db:migrate` command but not the <kbd>Run pending migrations</kbd> button and it would be nice to get a fix in for it.

I currently have some working code, but haven't yet opened up a PR as I'm at a loss for how to test this in the Rails codebase. All the other ActiveRecord pending migration tests use a [config](https://github.com/rails/rails/blob/a5fc471b3f4bbd02e6be38dae023526a49e7d049/activerecord/test/cases/migration/pending_migrations_test.rb#L154-L169) similar to `database.yml` and there is no running `Rails.application` to add a paths configuration to.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1627453295/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47882
https://api.github.com/repos/rails/rails/issues/comments/1498307059,https://github.com/rails/rails/pull/47874#issuecomment-1498307059,https://api.github.com/repos/rails/rails/issues/47874,1498307059,IC_kwDNIULOWU5Z8w,"{'login': 'danielvdao', 'id': 6646409, 'node_id': 'MDQ6VXNlcjY2NDY0MDk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6646409?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/danielvdao', 'html_url': 'https://github.com/danielvdao', 'followers_url': 'https://api.github.com/users/danielvdao/followers', 'following_url': 'https://api.github.com/users/danielvdao/following{/other_user}', 'gists_url': 'https://api.github.com/users/danielvdao/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/danielvdao/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/danielvdao/subscriptions', 'organizations_url': 'https://api.github.com/users/danielvdao/orgs', 'repos_url': 'https://api.github.com/users/danielvdao/repos', 'events_url': 'https://api.github.com/users/danielvdao/events{/privacy}', 'received_events_url': 'https://api.github.com/users/danielvdao/received_events', 'type': 'User', 'site_admin': False}",2023-04-06T00:00:43Z,2023-04-06T01:36:03Z,NONE,"The other issue is how the handles with other currencies. I tried to replicate a test case, but to be honest I'm a bit unfamiliar and I might be a bit over my head here on solving a hard problem, so let me know otherwise 😓 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1498307059/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47874
https://api.github.com/repos/rails/rails/issues/comments/1501200094,https://github.com/rails/rails/pull/47874#issuecomment-1501200094,https://api.github.com/repos/rails/rails/issues/47874,1501200094,IC_kwDNIULOWXp-3g,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-04-09T19:45:48Z,2023-04-09T19:46:48Z,MEMBER,"Thanks for the PR @danielvdao !

- Regarding other currencies, you should be able to inspect the i18n data available [here](https://github.com/rails/rails/blob/82c609e8a62e9b16b7baa8a05f4179ded8e1bcfd/activesupport/lib/active_support/number_helper/number_to_currency_converter.rb#L38). It will return a hash that looks like [this](https://github.com/svenfuchs/rails-i18n/blob/2419073a6408aad1163be353ea15518dc27aea1f/rails/locale/fr.yml#L160).
- Now I look at that... isn't `strip_insignificant_zeros` what you want? How does this differ?
- (Assuming it does differ) Yes, this would need a CHANGELOG entry. It would also need some docs, [here](https://github.com/rails/rails/blob/82c609e8a62e9b16b7baa8a05f4179ded8e1bcfd/activesupport/lib/active_support/number_helper.rb#L90).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1501200094/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47874
https://api.github.com/repos/rails/rails/issues/comments/1501209380,https://github.com/rails/rails/pull/47874#issuecomment-1501209380,https://api.github.com/repos/rails/rails/issues/47874,1501209380,IC_kwDNIULOWXqjJA,"{'login': 'danielvdao', 'id': 6646409, 'node_id': 'MDQ6VXNlcjY2NDY0MDk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6646409?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/danielvdao', 'html_url': 'https://github.com/danielvdao', 'followers_url': 'https://api.github.com/users/danielvdao/followers', 'following_url': 'https://api.github.com/users/danielvdao/following{/other_user}', 'gists_url': 'https://api.github.com/users/danielvdao/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/danielvdao/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/danielvdao/subscriptions', 'organizations_url': 'https://api.github.com/users/danielvdao/orgs', 'repos_url': 'https://api.github.com/users/danielvdao/repos', 'events_url': 'https://api.github.com/users/danielvdao/events{/privacy}', 'received_events_url': 'https://api.github.com/users/danielvdao/received_events', 'type': 'User', 'site_admin': False}",2023-04-09T20:42:41Z,2023-04-09T20:42:41Z,NONE,"@ghiculescu thanks for replying, I'll see the other currencies and how they affect this as well!

The main use case for this is to only strip the zeros off of whole numbers.

For example `$2.50` would get stripped to `$2.5` when I pass in `strip_insignificant_zeros`. This would keep it so that `truncate_whole_numbers` strips whole numbers like `$2.00` to `$2` but not `$2.05` or `$2.50`. Does that make sense? Or is there a way to accomplish that today that I might've missed? ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1501209380/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47874
https://api.github.com/repos/rails/rails/issues/comments/1501227586,https://github.com/rails/rails/pull/47874#issuecomment-1501227586,https://api.github.com/repos/rails/rails/issues/47874,1501227586,IC_kwDNIULOWXrqQg,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-04-09T22:34:12Z,2023-04-09T22:34:12Z,MEMBER,Right. That makes sense. I see the value in that (but I’m not core so can’t merge this). ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1501227586/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47874
https://api.github.com/repos/rails/rails/issues/comments/1501244437,https://github.com/rails/rails/pull/47874#issuecomment-1501244437,https://api.github.com/repos/rails/rails/issues/47874,1501244437,IC_kwDNIULOWXssFQ,"{'login': 'danielvdao', 'id': 6646409, 'node_id': 'MDQ6VXNlcjY2NDY0MDk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6646409?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/danielvdao', 'html_url': 'https://github.com/danielvdao', 'followers_url': 'https://api.github.com/users/danielvdao/followers', 'following_url': 'https://api.github.com/users/danielvdao/following{/other_user}', 'gists_url': 'https://api.github.com/users/danielvdao/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/danielvdao/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/danielvdao/subscriptions', 'organizations_url': 'https://api.github.com/users/danielvdao/orgs', 'repos_url': 'https://api.github.com/users/danielvdao/repos', 'events_url': 'https://api.github.com/users/danielvdao/events{/privacy}', 'received_events_url': 'https://api.github.com/users/danielvdao/received_events', 'type': 'User', 'site_admin': False}",2023-04-09T23:59:04Z,2023-04-09T23:59:04Z,NONE,@ghiculescu thank you! Would you happen to know who I can tag? 🙇🏽‍♂️,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1501244437/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47874
https://api.github.com/repos/rails/rails/issues/comments/1501265822,https://github.com/rails/rails/pull/47874#issuecomment-1501265822,https://api.github.com/repos/rails/rails/issues/47874,1501265822,IC_kwDNIULOWXt_ng,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-04-10T01:07:11Z,2023-04-10T01:07:11Z,MEMBER,"Nah, don’t tag anyone - it will get a review from a team member when they get to it, but it’s not helpful to request it. (Rails gets a lot of PRs, if everyone tagged core life would suck for them.)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1501265822/reactions', 'total_count': 3, '+1': 2, '-1': 0, 'laugh': 1, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47874
https://api.github.com/repos/rails/rails/issues/comments/1530555793,https://github.com/rails/rails/pull/47874#issuecomment-1530555793,https://api.github.com/repos/rails/rails/issues/47874,1530555793,IC_kwDNIULOWzptkQ,"{'login': 'danielvdao', 'id': 6646409, 'node_id': 'MDQ6VXNlcjY2NDY0MDk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6646409?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/danielvdao', 'html_url': 'https://github.com/danielvdao', 'followers_url': 'https://api.github.com/users/danielvdao/followers', 'following_url': 'https://api.github.com/users/danielvdao/following{/other_user}', 'gists_url': 'https://api.github.com/users/danielvdao/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/danielvdao/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/danielvdao/subscriptions', 'organizations_url': 'https://api.github.com/users/danielvdao/orgs', 'repos_url': 'https://api.github.com/users/danielvdao/repos', 'events_url': 'https://api.github.com/users/danielvdao/events{/privacy}', 'received_events_url': 'https://api.github.com/users/danielvdao/received_events', 'type': 'User', 'site_admin': False}",2023-05-01T23:26:11Z,2023-05-01T23:26:11Z,NONE,"@eileencodes thanks for taking the time to review, I really appreciate it. I tried to come up with a better parameter name + squashed my commits, please let me know what you think and if I'm correctly following your train of thought! 🙏🏽   ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1530555793/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47874
https://api.github.com/repos/rails/rails/issues/comments/1536856306,https://github.com/rails/rails/pull/47874#issuecomment-1536856306,https://api.github.com/repos/rails/rails/issues/47874,1536856306,IC_kwDNIULOW5qQ8g,"{'login': 'danielvdao', 'id': 6646409, 'node_id': 'MDQ6VXNlcjY2NDY0MDk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6646409?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/danielvdao', 'html_url': 'https://github.com/danielvdao', 'followers_url': 'https://api.github.com/users/danielvdao/followers', 'following_url': 'https://api.github.com/users/danielvdao/following{/other_user}', 'gists_url': 'https://api.github.com/users/danielvdao/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/danielvdao/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/danielvdao/subscriptions', 'organizations_url': 'https://api.github.com/users/danielvdao/orgs', 'repos_url': 'https://api.github.com/users/danielvdao/repos', 'events_url': 'https://api.github.com/users/danielvdao/events{/privacy}', 'received_events_url': 'https://api.github.com/users/danielvdao/received_events', 'type': 'User', 'site_admin': False}",2023-05-05T22:34:08Z,2023-05-05T22:34:08Z,NONE,"Hey @eileencodes I spoke a bit with some teammates and we came up with a different naming option aside from `strip_final_zeros` -> `trim_empty_fractional`. I think `trim_empty_fractional` is a bit more descriptive with regards to a trailing fractional. We were referencing [this post](https://money.stackexchange.com/questions/22491/is-there-a-country-that-uses-the-term-dollar-for-currency-without-also-using/22492) for inspiration and most (only a few exceptions) countries have fractional units.

I was wondering if there's any feedback / thoughts you might have?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1536856306/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47874
https://api.github.com/repos/rails/rails/issues/comments/1499859476,https://github.com/rails/rails/issues/47870#issuecomment-1499859476,https://api.github.com/repos/rails/rails/issues/47870,1499859476,IC_kwDNIULOWWYKFA,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-04-07T02:18:52Z,2023-04-07T02:18:52Z,MEMBER,"Thanks for the report. Plese feel free to open a pull request.

https://www.postgresql.org/docs/15/sql-copy.html

> COPY moves data between PostgreSQL tables and standard file-system files. COPY TO copies the contents of a table to a file, while COPY FROM copies data from a file to a table (appending the data to whatever is in the table already). COPY TO can also copy the results of a SELECT query.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1499859476/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47870
https://api.github.com/repos/rails/rails/issues/comments/1501203820,https://github.com/rails/rails/issues/47870#issuecomment-1501203820,https://api.github.com/repos/rails/rails/issues/47870,1501203820,IC_kwDNIULOWXqNbA,"{'login': 'nickborromeo', 'id': 1518902, 'node_id': 'MDQ6VXNlcjE1MTg5MDI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1518902?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nickborromeo', 'html_url': 'https://github.com/nickborromeo', 'followers_url': 'https://api.github.com/users/nickborromeo/followers', 'following_url': 'https://api.github.com/users/nickborromeo/following{/other_user}', 'gists_url': 'https://api.github.com/users/nickborromeo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nickborromeo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nickborromeo/subscriptions', 'organizations_url': 'https://api.github.com/users/nickborromeo/orgs', 'repos_url': 'https://api.github.com/users/nickborromeo/repos', 'events_url': 'https://api.github.com/users/nickborromeo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nickborromeo/received_events', 'type': 'User', 'site_admin': True}",2023-04-09T20:07:15Z,2023-04-09T20:07:15Z,CONTRIBUTOR,👋 @kholbekj hope you don't mind that I took a stab at this with https://github.com/rails/rails/pull/47900,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1501203820/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47870
https://api.github.com/repos/rails/rails/issues/comments/1502718792,https://github.com/rails/rails/issues/47870#issuecomment-1502718792,https://api.github.com/repos/rails/rails/issues/47870,1502718792,IC_kwDNIULOWZGrSA,"{'login': 'kholbekj', 'id': 2786571, 'node_id': 'MDQ6VXNlcjI3ODY1NzE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2786571?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kholbekj', 'html_url': 'https://github.com/kholbekj', 'followers_url': 'https://api.github.com/users/kholbekj/followers', 'following_url': 'https://api.github.com/users/kholbekj/following{/other_user}', 'gists_url': 'https://api.github.com/users/kholbekj/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kholbekj/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kholbekj/subscriptions', 'organizations_url': 'https://api.github.com/users/kholbekj/orgs', 'repos_url': 'https://api.github.com/users/kholbekj/repos', 'events_url': 'https://api.github.com/users/kholbekj/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kholbekj/received_events', 'type': 'User', 'site_admin': False}",2023-04-11T05:46:07Z,2023-04-11T05:46:07Z,NONE,"@nickborromeo I'm delighted if you manage to patch it, then I only have to back-port it :) My SQL+regex confidence is pretty nil.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1502718792/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47870
https://api.github.com/repos/rails/rails/issues/comments/1496615293,https://github.com/rails/rails/pull/47861#issuecomment-1496615293,https://api.github.com/repos/rails/rails/issues/47861,1496615293,IC_kwDNIULOWTSJfQ,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-04-04T21:15:05Z,2023-04-04T21:15:05Z,MEMBER,"Hey @arianf, thanks for the PR!

Linking some relevant discussion:
#47608 (interested in configurable ENV var)
#43601 (the name of the file is also `master.key`)

I think I'd be +1 for a new ENV key (and fallback to the current key for compatibility), but not to making it configurable. Definitely interested to hear other opinions","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1496615293/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47861
https://api.github.com/repos/rails/rails/issues/comments/1489452980,https://github.com/rails/rails/issues/47809#issuecomment-1489452980,https://api.github.com/repos/rails/rails/issues/47809,1489452980,IC_kwDNIULOWMc_tA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T23:05:40Z,2023-03-29T23:05:40Z,MEMBER,"Pinning so it doesn't go stale, this is a tracking issue per: https://github.com/rails/rails/issues/45408#issuecomment-1487591213","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1489452980/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47809
https://api.github.com/repos/rails/rails/issues/comments/1489832287,https://github.com/rails/rails/issues/47809#issuecomment-1489832287,https://api.github.com/repos/rails/rails/issues/47809,1489832287,IC_kwDNIULOWM0JXw,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-03-30T07:33:44Z,2023-03-30T07:33:44Z,CONTRIBUTOR,"More context on why it doesn't work today: https://github.com/rails/rails/commit/ee7b4dd51cb9a32887ea9b66feaf118a7cf9c6a8

We need a relatively large refactor so that we can load collection proxies in async mode. Right now `load_async` is delegated to the scope, so it returns new a new `Relation`.

Instead we'd need to call something like `load_target(async: true)`, but we need to go over all the `Association` classes (`BelongsTo`, `HasMany`, etc) to support the async interface.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1489832287/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47809
https://api.github.com/repos/rails/rails/issues/comments/1488877697,https://github.com/rails/rails/pull/47804#issuecomment-1488877697,https://api.github.com/repos/rails/rails/issues/47804,1488877697,IC_kwDNIULOWL54gQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T15:51:38Z,2023-03-29T15:51:38Z,MEMBER,I don't remember but it is possible to define custom marshal loading to keep backwards compatibility?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1488877697/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1488951838,https://github.com/rails/rails/pull/47804#issuecomment-1488951838,https://api.github.com/repos/rails/rails/issues/47804,1488951838,IC_kwDNIULOWL-aHg,"{'login': 'tenderlove', 'id': 3124, 'node_id': 'MDQ6VXNlcjMxMjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3124?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tenderlove', 'html_url': 'https://github.com/tenderlove', 'followers_url': 'https://api.github.com/users/tenderlove/followers', 'following_url': 'https://api.github.com/users/tenderlove/following{/other_user}', 'gists_url': 'https://api.github.com/users/tenderlove/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tenderlove/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tenderlove/subscriptions', 'organizations_url': 'https://api.github.com/users/tenderlove/orgs', 'repos_url': 'https://api.github.com/users/tenderlove/repos', 'events_url': 'https://api.github.com/users/tenderlove/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tenderlove/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T16:48:23Z,2023-03-29T16:48:23Z,MEMBER,"> I don't remember but it is possible to define custom marshal loading to keep backwards compatibility?

I don't think it is.  Additionally, it doesn't seem like there is a way to upgrade marshal formats.  According to [this comment](https://github.com/tenderlove/ruby/blob/59c3fac6c4d803019095eebb92b0d2862450ded6/marshal.c#L2387-L2394) marshal contains its version number, but AFAICT there is no way to deserialize one version then upgrade it to a newer version.

If I understand this PR correctly, we basically want to initialize `@value` and `@value_for_database` to sentinel values.  I wonder if we could possibly change Ruby to call like an `after_load` callback on deserialized objects.  For example:

```ruby
class MyObj
  def initialize name
    @value    = name
    @has_value_for_database = :undef
  end

  # Called after object has been deserialized
  def marshal_loaded
    @has_value_for_database ||= :undef
  end
end

obj = MyObj.new :a
p Marshal.load Marshal.dump(obj)
```

> What about using separate boolean ivars to indicate undefined-ness? Then I think we could unify the implementations with something like:

I think this could work.  We'll still end up with more shapes than we'd like, but over time (old marshal data being replaced) they should go away.  Additionally, those extra shapes would only exist in systems that deserialized old data.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1488951838/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1488952516,https://github.com/rails/rails/pull/47804#issuecomment-1488952516,https://api.github.com/repos/rails/rails/issues/47804,1488952516,IC_kwDNIULOWL-cxA,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T16:48:53Z,2023-03-29T16:48:53Z,CONTRIBUTOR,"> I don't remember but it is possible to define custom marshal loading to keep backwards compatibility?

Yes and no. Payload that were serialized form versions that  didn't have a `marshal_dump` method, won't invoke `marshal_load`.

So if we want to keep compat, we need to handle instance that were serialized in 7.0 :/ ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1488952516/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1488955314,https://github.com/rails/rails/pull/47804#issuecomment-1488955314,https://api.github.com/repos/rails/rails/issues/47804,1488955314,IC_kwDNIULOWL-nsg,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T16:50:38Z,2023-03-29T16:50:38Z,CONTRIBUTOR,"> Since old serializations will not have the boolean ivars, we can detect them with `has_value.nil?` and `has_value_for_database.nil?`, and handle them by falling back to `defined?`.

Yes, except to avoid warnings in 2.7, we'll also have to check for `defined?`, I can try, but I fear we might lose a good part of the optimization -_-","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1488955314/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1488957517,https://github.com/rails/rails/pull/47804#issuecomment-1488957517,https://api.github.com/repos/rails/rails/issues/47804,1488957517,IC_kwDNIULOWL-wTQ,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T16:52:09Z,2023-03-29T16:52:09Z,CONTRIBUTOR,"Also it's not so much forward compatibility that is my problem, but backward, as in `Marshal.dump(rails_7_1_object)` should be loadable from `7.0` so that you can do a rolling release of `7.1`.

Ideally when you first ship 7.1 without the new defaults enabled, it should generate exactly the same payloads as 7.0 used to.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1488957517/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1488971270,https://github.com/rails/rails/pull/47804#issuecomment-1488971270,https://api.github.com/repos/rails/rails/issues/47804,1488971270,IC_kwDNIULOWL_mBg,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T17:00:39Z,2023-03-29T17:00:39Z,MEMBER,"Right, the tricky part is that some of those serialized objects can be in database, which record not being accessed or even updated for years, so in theory we can never delete the compatibility code, unless we generate some kind of helper to help people migrate data.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1488971270/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1488974465,https://github.com/rails/rails/pull/47804#issuecomment-1488974465,https://api.github.com/repos/rails/rails/issues/47804,1488974465,IC_kwDNIULOWL_ygQ,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T17:02:25Z,2023-03-29T17:02:25Z,CONTRIBUTOR,"Hum, in my mind the contract was that we do keep YAML compact for long time, but Marshal is only across one version to the next. Did I imagine this?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1488974465/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1488977924,https://github.com/rails/rails/pull/47804#issuecomment-1488977924,https://api.github.com/repos/rails/rails/issues/47804,1488977924,IC_kwDNIULOWMAABA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T17:04:34Z,2023-03-29T17:04:34Z,MEMBER,"oh yeah. I forgot Marshal is not used in database, so I'd not worry with backwards compatibly. If the new behavior is enabled, we can just tell people to bump the cache version.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1488977924/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1488990222,https://github.com/rails/rails/pull/47804#issuecomment-1488990222,https://api.github.com/repos/rails/rails/issues/47804,1488990222,IC_kwDNIULOWMAwDg,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T17:11:06Z,2023-03-29T17:11:06Z,MEMBER,"> Yes, except to avoid warnings in 2.7, we'll also have to check for `defined?`

In which cases?  I was thinking we could replace all occurrences of `defined?(@value)` with `has_value?`, and `attr_reader :has_value` would eliminate the need for `defined?(@has_value)`.  (Likewise for `@value_for_database` / `has_value_for_database`.)

> Also it's not so much forward compatibility that is my problem, but backward, as in `Marshal.dump(rails_7_1_object)` should be loadable from `7.0` so that you can do a rolling release of `7.1`.

Could that be handled by a `config.*` value + conditional definition of `initialize`?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1488990222/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1488994942,https://github.com/rails/rails/pull/47804#issuecomment-1488994942,https://api.github.com/repos/rails/rails/issues/47804,1488994942,IC_kwDNIULOWMBCfg,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T17:13:22Z,2023-03-29T17:13:22Z,CONTRIBUTOR,"> In which cases?

If you load an object that was serialized by `7.0` from `7.1`, `@has_value` won't be defined.

>  attr_reader :has_value would eliminate the need for defined?(@has_value)

Hum, that's a good point worth testing. 

> Could that be handled by a config.* value + conditional definition of initialize?

That's already the case in this PR. I piggy back on the config introduced in https://github.com/rails/rails/pull/47747","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1488994942/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1489099402,https://github.com/rails/rails/pull/47804#issuecomment-1489099402,https://api.github.com/repos/rails/rails/issues/47804,1489099402,IC_kwDNIULOWMHaig,"{'login': 'tenderlove', 'id': 3124, 'node_id': 'MDQ6VXNlcjMxMjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3124?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tenderlove', 'html_url': 'https://github.com/tenderlove', 'followers_url': 'https://api.github.com/users/tenderlove/followers', 'following_url': 'https://api.github.com/users/tenderlove/following{/other_user}', 'gists_url': 'https://api.github.com/users/tenderlove/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tenderlove/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tenderlove/subscriptions', 'organizations_url': 'https://api.github.com/users/tenderlove/orgs', 'repos_url': 'https://api.github.com/users/tenderlove/repos', 'events_url': 'https://api.github.com/users/tenderlove/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tenderlove/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T18:27:51Z,2023-03-29T18:47:33Z,MEMBER,"One other thing that may (or may not) be important.  `defined?(@iv)` didn't have an inline cache in Ruby 3.2, [but it will in 3.3](https://github.com/ruby/ruby/pull/7433), and ~~I think YJIT will have support (I paired on support but I don't know if it's been upstreamed yet)~~ [YJIT will also have support](https://github.com/ruby/ruby/pull/7579)

Obviously we should reduce the number of shapes in the system, but maybe the performance impact isn't as great in Ruby 3.3?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1489099402/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1491658248,https://github.com/rails/rails/pull/47804#issuecomment-1491658248,https://api.github.com/repos/rails/rails/issues/47804,1491658248,IC_kwDNIULOWOjmCA,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-03-31T09:56:04Z,2023-03-31T09:56:04Z,CONTRIBUTOR,"> but maybe the performance impact isn't as great in Ruby 3.3?

Right, but it's still basically a year away, so I'd like to reap some benefits now if possible.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1491658248/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1491699354,https://github.com/rails/rails/pull/47804#issuecomment-1491699354,https://api.github.com/repos/rails/rails/issues/47804,1491699354,IC_kwDNIULOWOmGmg,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-03-31T10:28:58Z,2023-03-31T10:28:58Z,CONTRIBUTOR,"Ok, so one solution could be to keep that code unchanged, and to use another class entirely e.g. `Attribute71`. So we can have both active at the same time.

But that's quite ugly, so I'm also tempted to just delay this post 7.1 release, and just remove the old format then.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1491699354/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47804
https://api.github.com/repos/rails/rails/issues/comments/1732280351,https://github.com/rails/rails/pull/47798#issuecomment-1732280351,https://api.github.com/repos/rails/rails/issues/47798,1732280351,IC_kwDNIULOZ0CAHw,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-09-23T10:49:11Z,2023-09-23T10:49:11Z,MEMBER,"I'm not sure this is quite enough because some other helpers will call `hidden_field_tag` under the hood (might be mistaken, I haven't done much frontend work in a long time).

Perhaps a better solution would be a config option on `Action View`? If people care more about generation valid HTML than to avoid this Firefox bug, we can turn the workaround off globally.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732280351/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47798
https://api.github.com/repos/rails/rails/issues/comments/1732280457,https://github.com/rails/rails/pull/47798#issuecomment-1732280457,https://api.github.com/repos/rails/rails/issues/47798,1732280457,IC_kwDNIULOZ0CAiQ,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-09-23T10:49:47Z,2023-09-23T10:49:47Z,MEMBER,"But before doing that it would be best to try to reproduce on the latest firefox, perhaps the bug was fixed after all?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732280457/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47798
https://api.github.com/repos/rails/rails/issues/comments/1720982163,https://github.com/rails/rails/pull/47755#issuecomment-1720982163,https://api.github.com/repos/rails/rails/issues/47755,1720982163,IC_kwDNIULOZpQakw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-09-15T09:40:40Z,2023-09-15T09:40:40Z,MEMBER,@AlexMooney Could you [squash your commits](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#squashing-commits) please? :bow: ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1720982163/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47755
https://api.github.com/repos/rails/rails/issues/comments/1481301612,https://github.com/rails/rails/pull/47751#issuecomment-1481301612,https://api.github.com/repos/rails/rails/issues/47751,1481301612,IC_kwDNIULOWErebA,"{'login': 'joeldrapper', 'id': 246692, 'node_id': 'MDQ6VXNlcjI0NjY5Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/246692?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joeldrapper', 'html_url': 'https://github.com/joeldrapper', 'followers_url': 'https://api.github.com/users/joeldrapper/followers', 'following_url': 'https://api.github.com/users/joeldrapper/following{/other_user}', 'gists_url': 'https://api.github.com/users/joeldrapper/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joeldrapper/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joeldrapper/subscriptions', 'organizations_url': 'https://api.github.com/users/joeldrapper/orgs', 'repos_url': 'https://api.github.com/users/joeldrapper/repos', 'events_url': 'https://api.github.com/users/joeldrapper/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joeldrapper/received_events', 'type': 'User', 'site_admin': False}",2023-03-23T14:29:46Z,2023-03-23T14:29:46Z,NONE,"One option for the test is to use a different database adapter. Postgres, for example, has a `pg_sleep` function that would allow us to artificially slow a query enough to test this feature. Alternatively, we could stub the future.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1481301612/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1481549091,https://github.com/rails/rails/pull/47751#issuecomment-1481549091,https://api.github.com/repos/rails/rails/issues/47751,1481549091,IC_kwDNIULOWE6lIw,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-03-23T16:58:01Z,2023-03-23T16:58:01Z,MEMBER,"I didn't see your comment when I reviewed this, but we have async tests that are already testing pending on future result, we can use the same pattern for this one. See https://github.com/rails/rails/blob/main/activerecord/test/cases/asynchronous_queries_test.rb","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1481549091/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1481575868,https://github.com/rails/rails/pull/47751#issuecomment-1481575868,https://api.github.com/repos/rails/rails/issues/47751,1481575868,IC_kwDNIULOWE8NvA,"{'login': 'joeldrapper', 'id': 246692, 'node_id': 'MDQ6VXNlcjI0NjY5Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/246692?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joeldrapper', 'html_url': 'https://github.com/joeldrapper', 'followers_url': 'https://api.github.com/users/joeldrapper/followers', 'following_url': 'https://api.github.com/users/joeldrapper/following{/other_user}', 'gists_url': 'https://api.github.com/users/joeldrapper/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joeldrapper/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joeldrapper/subscriptions', 'organizations_url': 'https://api.github.com/users/joeldrapper/orgs', 'repos_url': 'https://api.github.com/users/joeldrapper/repos', 'events_url': 'https://api.github.com/users/joeldrapper/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joeldrapper/received_events', 'type': 'User', 'site_admin': False}",2023-03-23T17:14:22Z,2023-03-23T17:14:22Z,NONE,"Thanks @eileencodes, I’ll take a look at how those tests are implemented.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1481575868/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1481587348,https://github.com/rails/rails/pull/47751#issuecomment-1481587348,https://api.github.com/repos/rails/rails/issues/47751,1481587348,IC_kwDNIULOWE86lA,"{'login': 'joeldrapper', 'id': 246692, 'node_id': 'MDQ6VXNlcjI0NjY5Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/246692?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joeldrapper', 'html_url': 'https://github.com/joeldrapper', 'followers_url': 'https://api.github.com/users/joeldrapper/followers', 'following_url': 'https://api.github.com/users/joeldrapper/following{/other_user}', 'gists_url': 'https://api.github.com/users/joeldrapper/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joeldrapper/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joeldrapper/subscriptions', 'organizations_url': 'https://api.github.com/users/joeldrapper/orgs', 'repos_url': 'https://api.github.com/users/joeldrapper/repos', 'events_url': 'https://api.github.com/users/joeldrapper/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joeldrapper/received_events', 'type': 'User', 'site_admin': False}",2023-03-23T17:21:26Z,2023-03-23T17:53:00Z,NONE,"Hey @eileencodes I had a look through the file you mentioned and while it looks like there's a helper to ensure an async query isn't pending, there doesn't seem to be a pattern here for getting an async query into a state where it's definitely pending.

The two options I can think of are

1. Use the Postgres adapter for this test and simulate a slow query with `select(""pg_sleep(0.1)"")`. (There doesn't seem to be sleep function in SQLite)
2. Stub the future so that it returns `true` when `pending?` is called

I’ll proceed with option 2 for now but let me know if you think there's a better way to do this.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1481587348/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1481851371,https://github.com/rails/rails/pull/47751#issuecomment-1481851371,https://api.github.com/repos/rails/rails/issues/47751,1481851371,IC_kwDNIULOWFNB6w,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-23T20:27:50Z,2023-03-23T20:28:08Z,MEMBER,@joeldrapper Maybe the following issue and comment is helpful for the test? https://github.com/rails/rails/pull/47503#issuecomment-1455109643,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1481851371/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1481930741,https://github.com/rails/rails/pull/47751#issuecomment-1481930741,https://api.github.com/repos/rails/rails/issues/47751,1481930741,IC_kwDNIULOWFR39Q,"{'login': 'joeldrapper', 'id': 246692, 'node_id': 'MDQ6VXNlcjI0NjY5Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/246692?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joeldrapper', 'html_url': 'https://github.com/joeldrapper', 'followers_url': 'https://api.github.com/users/joeldrapper/followers', 'following_url': 'https://api.github.com/users/joeldrapper/following{/other_user}', 'gists_url': 'https://api.github.com/users/joeldrapper/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joeldrapper/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joeldrapper/subscriptions', 'organizations_url': 'https://api.github.com/users/joeldrapper/orgs', 'repos_url': 'https://api.github.com/users/joeldrapper/repos', 'events_url': 'https://api.github.com/users/joeldrapper/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joeldrapper/received_events', 'type': 'User', 'site_admin': False}",2023-03-23T21:22:27Z,2023-03-23T22:03:14Z,NONE,"Thanks @p8. I’m not sure how this applies. I think the stub is appropriate given that the future's `pending?` method can be tested independently and we can easily cover all three cases:

1. future doesn't exist
2. future exists and is truthy
3. future exists and is falsy","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1481930741/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1482112239,https://github.com/rails/rails/pull/47751#issuecomment-1482112239,https://api.github.com/repos/rails/rails/issues/47751,1482112239,IC_kwDNIULOWFc87w,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-03-24T01:09:05Z,2023-03-24T01:09:05Z,MEMBER,"What do we think about calling this something like `async_pending?`? It seems reasonable to expose, but I'm inclined to give it a more descriptive name to ensure that a future reader, glancing through the method list, doesn't see two semi-synonyms for ""not currently loaded"".","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1482112239/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1482644267,https://github.com/rails/rails/pull/47751#issuecomment-1482644267,https://api.github.com/repos/rails/rails/issues/47751,1482644267,IC_kwDNIULOWF9bKw,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-24T11:19:34Z,2023-03-24T11:19:55Z,MEMBER,"> Thanks @p8. I’m not sure how this applies. 

The basic gist in pseudo code would be something like the following.
Although this might be overkill.

```ruby
    def test_pending_predicate_with_async_query
        $event = Concurrent::Event.new

        waiting_result = Class.new(ActiveRecord::FutureResult) do
        private
          def exec_query(*, **)
            $event.wait
            super
          end
      end
    
      deferred_posts = Post.where(author_id: 1)
      deferred_posts.instance_variable_set(:@future_result, waiting_result.new)

     assert_predicate deferred_posts, :pending?
     $event.set
     assert_not_predicate deferred_posts, :pending?
   end
```

Not sure if `Concurrent::Event` is even necessary.
But it might be nice to use dependency injection for the `FutureResult` class here:
https://github.com/rails/rails/blob/3cca0d5205329e28a9879739bb2d3ae3cff1b14f/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb#L71
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1482644267/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1482653145,https://github.com/rails/rails/pull/47751#issuecomment-1482653145,https://api.github.com/repos/rails/rails/issues/47751,1482653145,IC_kwDNIULOWF992Q,"{'login': 'joeldrapper', 'id': 246692, 'node_id': 'MDQ6VXNlcjI0NjY5Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/246692?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joeldrapper', 'html_url': 'https://github.com/joeldrapper', 'followers_url': 'https://api.github.com/users/joeldrapper/followers', 'following_url': 'https://api.github.com/users/joeldrapper/following{/other_user}', 'gists_url': 'https://api.github.com/users/joeldrapper/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joeldrapper/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joeldrapper/subscriptions', 'organizations_url': 'https://api.github.com/users/joeldrapper/orgs', 'repos_url': 'https://api.github.com/users/joeldrapper/repos', 'events_url': 'https://api.github.com/users/joeldrapper/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joeldrapper/received_events', 'type': 'User', 'site_admin': False}",2023-03-24T11:26:48Z,2023-03-24T11:26:48Z,NONE,@matthewd I think that makes sense. I’ve renamed the method to `async_pending?` in the latest commit. I’ll rebase if this is approved.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1482653145/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483735925,https://github.com/rails/rails/pull/47751#issuecomment-1483735925,https://api.github.com/repos/rails/rails/issues/47751,1483735925,IC_kwDNIULOWHADdQ,"{'login': 'joeldrapper', 'id': 246692, 'node_id': 'MDQ6VXNlcjI0NjY5Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/246692?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joeldrapper', 'html_url': 'https://github.com/joeldrapper', 'followers_url': 'https://api.github.com/users/joeldrapper/followers', 'following_url': 'https://api.github.com/users/joeldrapper/following{/other_user}', 'gists_url': 'https://api.github.com/users/joeldrapper/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joeldrapper/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joeldrapper/subscriptions', 'organizations_url': 'https://api.github.com/users/joeldrapper/orgs', 'repos_url': 'https://api.github.com/users/joeldrapper/repos', 'events_url': 'https://api.github.com/users/joeldrapper/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joeldrapper/received_events', 'type': 'User', 'site_admin': False}",2023-03-25T05:56:46Z,2023-03-25T05:56:46Z,NONE,"I’ve rebased this PR with the suggested changes. Also, David Mills [suggested](https://discuss.rubyonrails.org/t/is-there-a-way-to-check-of-an-async-database-query-has-actually-loaded/82538/4?u=joeldrapper) an alternative name for the inverse of this as `ready?`

> What I would want to know is if the data fetched by the query was ready for use. To my mind `ready?` captures the concept as a synchronously loaded relation is _ready_ when it is loaded, but an asynchronously loaded relation is ready when the result is available.

If the maintainers agree this is a better name, I’m happy to make the necessary changes. Otherwise, I think this is ready for another review. Thanks!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483735925/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483797387,https://github.com/rails/rails/pull/47751#issuecomment-1483797387,https://api.github.com/repos/rails/rails/issues/47751,1483797387,IC_kwDNIULOWHDziw,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-03-25T11:12:30Z,2023-03-25T11:12:30Z,MEMBER,"For now I think I prefer this: it's a slightly lower-level concept than (essentially) ""will `to_a` block?"", but that feels like it fits with the current UX of `load_async`. 

In a future where, among other things, we felt comfortable automatically shunting queries into async, I might imagine that most potential callers of a `ready?`, your use case included, might actually want a single method that will start an async load if one isn't already running, _then_ return whether the result is already available. If async is safe and free, and the result isn't loaded yet, ISTM you should take the time to do your flush even if you have to initiate the query.

I think your test needs an `unless in_memory_db?` around the method (or to migrate into the existing one).

If you can also fix the commit message to reflect the new method name, LGTM.

I did miss the existing adjacent `scheduled?`. I think my ""pending sounds too ambiguous to someone not thinking of async"" argument still holds [and doesn't apply to 'scheduled']. 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483797387/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483801394,https://github.com/rails/rails/pull/47751#issuecomment-1483801394,https://api.github.com/repos/rails/rails/issues/47751,1483801394,IC_kwDNIULOWHEDMg,"{'login': 'joeldrapper', 'id': 246692, 'node_id': 'MDQ6VXNlcjI0NjY5Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/246692?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joeldrapper', 'html_url': 'https://github.com/joeldrapper', 'followers_url': 'https://api.github.com/users/joeldrapper/followers', 'following_url': 'https://api.github.com/users/joeldrapper/following{/other_user}', 'gists_url': 'https://api.github.com/users/joeldrapper/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joeldrapper/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joeldrapper/subscriptions', 'organizations_url': 'https://api.github.com/users/joeldrapper/orgs', 'repos_url': 'https://api.github.com/users/joeldrapper/repos', 'events_url': 'https://api.github.com/users/joeldrapper/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joeldrapper/received_events', 'type': 'User', 'site_admin': False}",2023-03-25T11:35:46Z,2023-03-25T11:36:05Z,NONE,@matthewd makes sense. 👍 I updated the commit message and added that condition to the tests.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483801394/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483831591,https://github.com/rails/rails/pull/47751#issuecomment-1483831591,https://api.github.com/repos/rails/rails/issues/47751,1483831591,IC_kwDNIULOWHF5Jw,"{'login': 'joeldrapper', 'id': 246692, 'node_id': 'MDQ6VXNlcjI0NjY5Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/246692?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joeldrapper', 'html_url': 'https://github.com/joeldrapper', 'followers_url': 'https://api.github.com/users/joeldrapper/followers', 'following_url': 'https://api.github.com/users/joeldrapper/following{/other_user}', 'gists_url': 'https://api.github.com/users/joeldrapper/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joeldrapper/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joeldrapper/subscriptions', 'organizations_url': 'https://api.github.com/users/joeldrapper/orgs', 'repos_url': 'https://api.github.com/users/joeldrapper/repos', 'events_url': 'https://api.github.com/users/joeldrapper/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joeldrapper/received_events', 'type': 'User', 'site_admin': False}",2023-03-25T13:57:13Z,2023-03-25T13:58:14Z,NONE,"I thought that was how `loaded?` works, but it actually becomes `loaded?` immediately when scheduled and there isn't a way to tell if it's actually finished loading in the background.

`scheduled?` tells us this is an async query, but it doesn't tell us if the query has finished or if it's still running.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483831591/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483832007,https://github.com/rails/rails/pull/47751#issuecomment-1483832007,https://api.github.com/repos/rails/rails/issues/47751,1483832007,IC_kwDNIULOWHF6xw,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-03-25T13:59:00Z,2023-03-25T13:59:00Z,MEMBER,"> there isn't a way to tell if it's actually finished loading in the background.

Yes there is. `loaded? && !scheduled?`.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483832007/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483833793,https://github.com/rails/rails/pull/47751#issuecomment-1483833793,https://api.github.com/repos/rails/rails/issues/47751,1483833793,IC_kwDNIULOWHGBwQ,"{'login': 'joeldrapper', 'id': 246692, 'node_id': 'MDQ6VXNlcjI0NjY5Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/246692?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joeldrapper', 'html_url': 'https://github.com/joeldrapper', 'followers_url': 'https://api.github.com/users/joeldrapper/followers', 'following_url': 'https://api.github.com/users/joeldrapper/following{/other_user}', 'gists_url': 'https://api.github.com/users/joeldrapper/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joeldrapper/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joeldrapper/subscriptions', 'organizations_url': 'https://api.github.com/users/joeldrapper/orgs', 'repos_url': 'https://api.github.com/users/joeldrapper/repos', 'events_url': 'https://api.github.com/users/joeldrapper/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joeldrapper/received_events', 'type': 'User', 'site_admin': False}",2023-03-25T14:07:47Z,2023-03-25T14:07:47Z,NONE,"> Yes there is. `loaded?` && !scheduled?`.

That doesn't seem to be how `scheduled?` works.

Currently:

1. When you call `load_async`, the relation becomes `scheduled?` and `loaded?`. [Apparently](https://discuss.rubyonrails.org/t/is-there-a-way-to-check-of-an-async-database-query-has-actually-loaded/82538/3?u=joeldrapper), loaded here means “a query was sent to the database for a result”.
2. When the future result completes, the relation is still `scheduled?` and `loaded?`. It never becomes not `scheduled?`.

What I’m proposing is:

1. When you call `load_async`, the relation becomes `scheduled?` and `loaded?` and `pending?`
2. When the future result is ready, the relation becomes not `pending?`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483833793/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483834620,https://github.com/rails/rails/pull/47751#issuecomment-1483834620,https://api.github.com/repos/rails/rails/issues/47751,1483834620,IC_kwDNIULOWHGE_A,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-03-25T14:12:06Z,2023-03-25T14:12:06Z,MEMBER,"> 2\. It never becomes not `scheduled?`.

Yes it does: https://github.com/rails/rails/blob/9f49959fee522f2f38a07eb07a23830b99db30f6/activerecord/lib/active_record/relation.rb#L924-L926

Might be a bit too late for your use case though, but we could change `scheduled?` to check that too and ""finalize"" the loading if the background query is completed. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483834620/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483835194,https://github.com/rails/rails/pull/47751#issuecomment-1483835194,https://api.github.com/repos/rails/rails/issues/47751,1483835194,IC_kwDNIULOWHGHOg,"{'login': 'joeldrapper', 'id': 246692, 'node_id': 'MDQ6VXNlcjI0NjY5Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/246692?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joeldrapper', 'html_url': 'https://github.com/joeldrapper', 'followers_url': 'https://api.github.com/users/joeldrapper/followers', 'following_url': 'https://api.github.com/users/joeldrapper/following{/other_user}', 'gists_url': 'https://api.github.com/users/joeldrapper/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joeldrapper/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joeldrapper/subscriptions', 'organizations_url': 'https://api.github.com/users/joeldrapper/orgs', 'repos_url': 'https://api.github.com/users/joeldrapper/repos', 'events_url': 'https://api.github.com/users/joeldrapper/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joeldrapper/received_events', 'type': 'User', 'site_admin': False}",2023-03-25T14:15:04Z,2023-03-25T14:15:04Z,NONE,I see so that happens after looking at (and waiting on) the result? I can try to change `scheduled?` so it starts returning `false` once the background query is no longer `pending?`.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483835194/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483848367,https://github.com/rails/rails/pull/47751#issuecomment-1483848367,https://api.github.com/repos/rails/rails/issues/47751,1483848367,IC_kwDNIULOWHG6rw,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-03-25T15:14:45Z,2023-03-25T15:14:45Z,MEMBER,"> I can try to change `scheduled?` so it starts returning `false` once the background query is no longer `pending?`.

Yes.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483848367/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483857484,https://github.com/rails/rails/pull/47751#issuecomment-1483857484,https://api.github.com/repos/rails/rails/issues/47751,1483857484,IC_kwDNIULOWHHeTA,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-03-25T16:00:30Z,2023-03-25T16:00:30Z,MEMBER,"I had wondered about that, but then realised it would mean changing the condition in `load` to look elsewhere (because it cares about whether the records have been materialized, not just whether the query result has returned), so that seemed like it would still leave us needing the same set of methods no matter how we shuffle the names.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483857484/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483870091,https://github.com/rails/rails/pull/47751#issuecomment-1483870091,https://api.github.com/repos/rails/rails/issues/47751,1483870091,IC_kwDNIULOWHIPiw,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-03-25T16:59:00Z,2023-03-25T16:59:00Z,MEMBER,"> so that seemed like it would still leave us needing the same set of methods no matter how we shuffle the names.

Yes, but the distinction between `scheduled` and `pending` would remain entirely a private concern, and wouldn't be exposed as a method (or would be private).

I see no use for publishing that state difference (but not opposed to doing it if someone comes up with a concrete use case).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483870091/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483901425,https://github.com/rails/rails/pull/47751#issuecomment-1483901425,https://api.github.com/repos/rails/rails/issues/47751,1483901425,IC_kwDNIULOWHKJ8Q,"{'login': 'bensheldon', 'id': 47554, 'node_id': 'MDQ6VXNlcjQ3NTU0', 'avatar_url': 'https://avatars.githubusercontent.com/u/47554?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bensheldon', 'html_url': 'https://github.com/bensheldon', 'followers_url': 'https://api.github.com/users/bensheldon/followers', 'following_url': 'https://api.github.com/users/bensheldon/following{/other_user}', 'gists_url': 'https://api.github.com/users/bensheldon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bensheldon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bensheldon/subscriptions', 'organizations_url': 'https://api.github.com/users/bensheldon/orgs', 'repos_url': 'https://api.github.com/users/bensheldon/repos', 'events_url': 'https://api.github.com/users/bensheldon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bensheldon/received_events', 'type': 'User', 'site_admin': True}",2023-03-25T19:17:24Z,2023-03-25T19:17:24Z,CONTRIBUTOR,"I just wanted to chime in with a perspective from Concurrent Ruby, which makes a [distinction between `pending` and `processing`](https://github.com/ruby-concurrency/concurrent-ruby/blob/e7ff945661a93a2e094b3259f23ccb1b3eea9bcf/lib/concurrent-ruby/concurrent/promise.rb#L35-L38) in Futures/Promises/IVar, which like `ActiveRecord::FutureResult` will process either in a background thread _or the foreground thread_ if it is resolved before a background thread picks it up. (apologies if I'm misunderstanding FutureResult).  

This is a pedantic distinction, but it seems relevant if the intention around the `await` example is to orchestrate across threads. The counter-scenario is that it's possible that resolving the `pending` FutureResult(s) on the current thread is faster than performing the `await`ed extra-stuff and then resolving the Futures; it's possible this could _all_ take place on the foreground thread if just looking at `pending` and the Executor is otherwise busy.

If the intention is to know when it is actually executing on a background thread, my suggestion would be to introduce the idea of `processing` that would be set to true within `FutureResult#execute_or_skip` which is the method that is run on the background thread.

https://github.com/rails/rails/blob/89bd41201a060e8e6ee39591430d136e9e012c34/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L500-L503
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483901425/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1483923606,https://github.com/rails/rails/pull/47751#issuecomment-1483923606,https://api.github.com/repos/rails/rails/issues/47751,1483923606,IC_kwDNIULOWHLglg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-03-25T21:13:39Z,2023-03-25T21:13:39Z,MEMBER,"@bensheldon concurrent-ruby operates at a much lower level, and yes in this case distinguishing between ""queued"" and ""executing"" is important. We do even use this distinction internally when iterating on a relation to know if we should perform the query or wait on the background thread.

What I'm saying is that I don't see an use case for that distinction at the Relation layer.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483923606/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1484137270,https://github.com/rails/rails/pull/47751#issuecomment-1484137270,https://api.github.com/repos/rails/rails/issues/47751,1484137270,IC_kwDNIULOWHYjNg,"{'login': 'bensheldon', 'id': 47554, 'node_id': 'MDQ6VXNlcjQ3NTU0', 'avatar_url': 'https://avatars.githubusercontent.com/u/47554?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bensheldon', 'html_url': 'https://github.com/bensheldon', 'followers_url': 'https://api.github.com/users/bensheldon/followers', 'following_url': 'https://api.github.com/users/bensheldon/following{/other_user}', 'gists_url': 'https://api.github.com/users/bensheldon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bensheldon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bensheldon/subscriptions', 'organizations_url': 'https://api.github.com/users/bensheldon/orgs', 'repos_url': 'https://api.github.com/users/bensheldon/repos', 'events_url': 'https://api.github.com/users/bensheldon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bensheldon/received_events', 'type': 'User', 'site_admin': True}",2023-03-26T15:48:08Z,2023-03-26T15:48:08Z,CONTRIBUTOR,"Thanks @byroot. I think I've convinced myself that the `await` use case is valid and functional (though still not optimal without looking into the state of the future itself, which I agree isn't appropriate for the Relation interface).

Changing `Relation#scheduled?` to return false after the query result is returned would functionally [introduce a seam between](https://github.com/bensheldon/rails/blob/03a1da9c34f6a86d2117fe87f1e60b0259d32337/activerecord/lib/active_record/relation.rb#L921-L932) the query result returning (IO) and instantiating the records (Ruby). Though I still think it's incorrect to imply via documentation that _it's on a background thread_... it's more like: take advantage of the situation on this thread while the query _might/could_ be on a different thread. 



","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1484137270/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1486268739,https://github.com/rails/rails/pull/47751#issuecomment-1486268739,https://api.github.com/repos/rails/rails/issues/47751,1486268739,IC_kwDNIULOWJapQw,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-03-28T06:06:12Z,2023-03-28T06:06:12Z,MEMBER,"@bensheldon I'm not sure whether it helps / is relevant, but for some context I'll note that Relation is not thread-safe (other than internally, relative to its own async behaviour), so no thread other than its ""owner"" should be poking at it, and I think that simplifies some of the anticipated requirements around a raw `await`.

@byroot I do think there's a plausibly-useful distinction between ""if I take a while here, I won't be blocking the query from getting underway"" (""has `load_async` been called?""), vs ""the result would arrive faster if I called `load` right now"".

Specifically, if the query has been async-ified but has not yet been started (because the async executor is busy), then ISTM you'd generally want to treat that the same as a not-loaded non-async relation:

* You know there's going to be delay before the result is available (so maybe you _would_ choose to flush output in the inspiring use case here), 
* but you also know that the sooner you block waiting on the result, the sooner the query will be started (so maybe you would choose _not_ to do anything that might even marginally slow that down).

Perhaps an API middle-ish ground would be a `scheduled?` that returns nil when it's not scheduled, or a more-specific-state symbol if it is? (`:future` vs `:running`, or whatever) 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1486268739/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1486431174,https://github.com/rails/rails/pull/47751#issuecomment-1486431174,https://api.github.com/repos/rails/rails/issues/47751,1486431174,IC_kwDNIULOWJkjxg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-03-28T08:27:07Z,2023-03-28T08:27:07Z,MEMBER,"> plausibly-useful

Yes, but I can't really think of a practical use case for it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1486431174/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47751
https://api.github.com/repos/rails/rails/issues/comments/1480556083,https://github.com/rails/rails/issues/47740#issuecomment-1480556083,https://api.github.com/repos/rails/rails/issues/47740,1480556083,IC_kwDNIULOWD9-Mw,"{'login': 'dorianmariefr', 'id': 58794487, 'node_id': 'MDQ6VXNlcjU4Nzk0NDg3', 'avatar_url': 'https://avatars.githubusercontent.com/u/58794487?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dorianmariefr', 'html_url': 'https://github.com/dorianmariefr', 'followers_url': 'https://api.github.com/users/dorianmariefr/followers', 'following_url': 'https://api.github.com/users/dorianmariefr/following{/other_user}', 'gists_url': 'https://api.github.com/users/dorianmariefr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dorianmariefr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dorianmariefr/subscriptions', 'organizations_url': 'https://api.github.com/users/dorianmariefr/orgs', 'repos_url': 'https://api.github.com/users/dorianmariefr/repos', 'events_url': 'https://api.github.com/users/dorianmariefr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dorianmariefr/received_events', 'type': 'User', 'site_admin': False}",2023-03-23T03:39:15Z,2023-03-23T03:39:15Z,CONTRIBUTOR,"I don't think the inflector is going to change because of backward compatibility like you mention.

I kinda have a patch for this but it breaks at least one test:

```diff
diff --git a/activesupport/lib/active_support/inflector/methods.rb b/activesupport/lib/active_support/inflector/methods.rb
index 0ee91fe08f..316f4f41ca 100644
--- a/activesupport/lib/active_support/inflector/methods.rb
+++ b/activesupport/lib/active_support/inflector/methods.rb
@@ -70,12 +70,12 @@ def camelize(term, uppercase_first_letter = true)
       # String#camelize takes a symbol (:upper or :lower), so here we also support :lower to keep the methods consistent.
       if !uppercase_first_letter || uppercase_first_letter == :lower
         string = string.sub(inflections.acronyms_camelize_regex) { |match| match.downcase! || match }
-      elsif string.match?(/\A[a-z\d]*\z/)
+      elsif string.match?(/\A[a-z]*\z/)
         return inflections.acronyms[string] || string.capitalize
       else
-        string = string.sub(/^[a-z\d]*/) { |match| inflections.acronyms[match] || match.capitalize! || match }
+        string = string.sub(/^[a-z]*/) { |match| inflections.acronyms[match] || match.capitalize! || match }
       end
-      string.gsub!(/(?:_|(\/))([a-z\d]*)/i) do
+      string.gsub!(/(?:_|(\/))([a-z]*)/i) do
         word = $2
         substituted = inflections.acronyms[word] || word.capitalize! || word
         $1 ? ""::#{substituted}"" : substituted
diff --git a/activesupport/test/inflector_test.rb b/activesupport/test/inflector_test.rb
index 7814326e00..de13f5e2c9 100644
--- a/activesupport/test/inflector_test.rb
+++ b/activesupport/test/inflector_test.rb
@@ -209,6 +209,7 @@ def test_acronyms
       [""HTTP::RESTful"",     ""http/restful"",       ""HTTP/RESTful"",       ""HTTP/RESTful""],
       [""HTTP::RESTfulAPI"",  ""http/restful_api"",   ""HTTP/RESTful API"",   ""HTTP/RESTful API""],
       [""APIRESTful"",        ""api_restful"",        ""API RESTful"",        ""API RESTful""],
+      [""HTTP1.1"",           ""http1.1"",            ""HTTP1.1"",            ""HTTP1.1""],
 
       # misdirection
       [""Capistrano"",        ""capistrano"",         ""Capistrano"",       ""Capistrano""],
```

```
Failure:
InflectorTest#test_acronyms [/Users/dorianmariefr/src/github/rails/activesupport/test/inflector_test.rb:222]:
Expected: ""IHeartW3C""
  Actual: ""IHeartW3c""
```

To me, the solution is adding an inflection on `HTTP1` which doesn't seem too bad.

```ruby
inflect.acronym(""HTTP1"")
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1480556083/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47740
https://api.github.com/repos/rails/rails/issues/comments/1481576287,https://github.com/rails/rails/issues/47740#issuecomment-1481576287,https://api.github.com/repos/rails/rails/issues/47740,1481576287,IC_kwDNIULOWE8PXw,"{'login': 'b-loyola', 'id': 16454659, 'node_id': 'MDQ6VXNlcjE2NDU0NjU5', 'avatar_url': 'https://avatars.githubusercontent.com/u/16454659?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/b-loyola', 'html_url': 'https://github.com/b-loyola', 'followers_url': 'https://api.github.com/users/b-loyola/followers', 'following_url': 'https://api.github.com/users/b-loyola/following{/other_user}', 'gists_url': 'https://api.github.com/users/b-loyola/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/b-loyola/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/b-loyola/subscriptions', 'organizations_url': 'https://api.github.com/users/b-loyola/orgs', 'repos_url': 'https://api.github.com/users/b-loyola/repos', 'events_url': 'https://api.github.com/users/b-loyola/events{/privacy}', 'received_events_url': 'https://api.github.com/users/b-loyola/received_events', 'type': 'User', 'site_admin': False}",2023-03-23T17:14:37Z,2023-03-23T17:14:37Z,NONE,"Thanks @dorianmariefr 
To give some context, we have some acronyms in our codebase which are always followed by numbers, but the list of numbers is almost infinite.
The change you have above is the exact monkey patch we have right now to fix this.

I was thinking that to avoid issues with backwards compatibility, the regex could change depending on a setting passed to the inflector (as a configuration). So by default it would still use the old regex, avoiding any backwards compatibility issues, but users who might want the new behaviour could opt-in by passing configuring the inflector with the new option.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1481576287/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47740
https://api.github.com/repos/rails/rails/issues/comments/1607774166,https://github.com/rails/rails/issues/47740#issuecomment-1607774166,https://api.github.com/repos/rails/rails/issues/47740,1607774166,IC_kwDNIULOX9Sv1g,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-06-26T15:58:18Z,2023-06-26T15:58:18Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1607774166/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47740
https://api.github.com/repos/rails/rails/issues/comments/1609014678,https://github.com/rails/rails/issues/47740#issuecomment-1609014678,https://api.github.com/repos/rails/rails/issues/47740,1609014678,IC_kwDNIULOX-edlg,"{'login': 'dorianmariefr', 'id': 58794487, 'node_id': 'MDQ6VXNlcjU4Nzk0NDg3', 'avatar_url': 'https://avatars.githubusercontent.com/u/58794487?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dorianmariefr', 'html_url': 'https://github.com/dorianmariefr', 'followers_url': 'https://api.github.com/users/dorianmariefr/followers', 'following_url': 'https://api.github.com/users/dorianmariefr/following{/other_user}', 'gists_url': 'https://api.github.com/users/dorianmariefr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dorianmariefr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dorianmariefr/subscriptions', 'organizations_url': 'https://api.github.com/users/dorianmariefr/orgs', 'repos_url': 'https://api.github.com/users/dorianmariefr/repos', 'events_url': 'https://api.github.com/users/dorianmariefr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dorianmariefr/received_events', 'type': 'User', 'site_admin': False}",2023-06-27T08:13:14Z,2023-06-27T09:12:10Z,CONTRIBUTOR,"Does this look good to you?

<img width=""652"" alt=""Screenshot 2023-06-27 at 10 12 59"" src=""https://github.com/rails/rails/assets/58794487/6338c0f2-727a-4a3f-912a-6a55daa43c4c"">
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1609014678/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47740
https://api.github.com/repos/rails/rails/issues/comments/1650287927,https://github.com/rails/rails/issues/47740#issuecomment-1650287927,https://api.github.com/repos/rails/rails/issues/47740,1650287927,IC_kwDNIULOYl1lNw,"{'login': 'b-loyola', 'id': 16454659, 'node_id': 'MDQ6VXNlcjE2NDU0NjU5', 'avatar_url': 'https://avatars.githubusercontent.com/u/16454659?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/b-loyola', 'html_url': 'https://github.com/b-loyola', 'followers_url': 'https://api.github.com/users/b-loyola/followers', 'following_url': 'https://api.github.com/users/b-loyola/following{/other_user}', 'gists_url': 'https://api.github.com/users/b-loyola/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/b-loyola/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/b-loyola/subscriptions', 'organizations_url': 'https://api.github.com/users/b-loyola/orgs', 'repos_url': 'https://api.github.com/users/b-loyola/repos', 'events_url': 'https://api.github.com/users/b-loyola/events{/privacy}', 'received_events_url': 'https://api.github.com/users/b-loyola/received_events', 'type': 'User', 'site_admin': False}",2023-07-25T17:54:01Z,2023-07-25T17:54:01Z,NONE,"@dorianmariefr yeah that looks perfect, but I think that would be a breaking change right? So I think it would have to be opt-in via some option/configuration to be considered here? ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1650287927/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47740
https://api.github.com/repos/rails/rails/issues/comments/1640231033,https://github.com/rails/rails/pull/47730#issuecomment-1640231033,https://api.github.com/repos/rails/rails/issues/47730,1640231033,IC_kwDNIULOYcPweQ,"{'login': 'fschwahn', 'id': 57876, 'node_id': 'MDQ6VXNlcjU3ODc2', 'avatar_url': 'https://avatars.githubusercontent.com/u/57876?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fschwahn', 'html_url': 'https://github.com/fschwahn', 'followers_url': 'https://api.github.com/users/fschwahn/followers', 'following_url': 'https://api.github.com/users/fschwahn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fschwahn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fschwahn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fschwahn/subscriptions', 'organizations_url': 'https://api.github.com/users/fschwahn/orgs', 'repos_url': 'https://api.github.com/users/fschwahn/repos', 'events_url': 'https://api.github.com/users/fschwahn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fschwahn/received_events', 'type': 'User', 'site_admin': False}",2023-07-18T13:28:34Z,2023-07-18T13:49:55Z,CONTRIBUTOR,"I ran into the same bug, and searched a bit before I found this PR. ~~It seems it is also possible to pass `true` or `false` as constraint values~~: https://github.com/rails/rails/blob/835eb8a213ddba835684004c9c333dd653ede8fd/actionpack/lib/action_dispatch/journey/route.rb#L146-L162

Sorry, what I wrote above is wrong: this only applies to `request`-requirements.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1640231033/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47730
https://api.github.com/repos/rails/rails/issues/comments/1478599114,https://github.com/rails/rails/pull/47727#issuecomment-1478599114,https://api.github.com/repos/rails/rails/issues/47727,1478599114,IC_kwDNIULOWCGhyg,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-21T21:24:22Z,2023-03-21T21:24:22Z,MEMBER,"Maybe it's better to move it under a more generic ""3rd party extensions"" and include Minitest there as well.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1478599114/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47727
https://api.github.com/repos/rails/rails/issues/comments/1479225414,https://github.com/rails/rails/pull/47727#issuecomment-1479225414,https://api.github.com/repos/rails/rails/issues/47727,1479225414,IC_kwDNIULOWCswRg,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-22T09:45:29Z,2023-03-22T09:53:25Z,MEMBER,"> I'm not sure ""Mail extensions"" makes sense, what does it mean? We're extending the `mail` gem?

Yes, it's extending the `mail` gem.
It's named after the directory it's included in `actionmailbox/lib/action_mailbox/mail_ext`.
Maybe ""Gem extensions"" or ""Vendor extensions"" is a better name?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1479225414/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47727
https://api.github.com/repos/rails/rails/issues/comments/1478636078,https://github.com/rails/rails/issues/47726#issuecomment-1478636078,https://api.github.com/repos/rails/rails/issues/47726,1478636078,IC_kwDNIULOWCIyLg,"{'login': 'dorianmariefr', 'id': 58794487, 'node_id': 'MDQ6VXNlcjU4Nzk0NDg3', 'avatar_url': 'https://avatars.githubusercontent.com/u/58794487?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dorianmariefr', 'html_url': 'https://github.com/dorianmariefr', 'followers_url': 'https://api.github.com/users/dorianmariefr/followers', 'following_url': 'https://api.github.com/users/dorianmariefr/following{/other_user}', 'gists_url': 'https://api.github.com/users/dorianmariefr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dorianmariefr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dorianmariefr/subscriptions', 'organizations_url': 'https://api.github.com/users/dorianmariefr/orgs', 'repos_url': 'https://api.github.com/users/dorianmariefr/repos', 'events_url': 'https://api.github.com/users/dorianmariefr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dorianmariefr/received_events', 'type': 'User', 'site_admin': False}",2023-03-21T21:54:34Z,2023-03-21T21:54:34Z,CONTRIBUTOR,"I can reproduce with:

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""action_controller/railtie""

class DownloadController < ActionController::Base
  def platform
  end
end

class TestApp < Rails::Application
  routes.draw do
    get '/download/:platform' => 'download#platform',
      constraints: {
        platform: %w[windows linux macos],
      },
      as: :download_platform
  end
end

require ""minitest/autorun""

class BugTest < Minitest::Test
  include Rails.application.routes.url_helpers

  def test_returns_success
    assert_equal ""/download/windows"", download_platform_path(""windows"")
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1478636078/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47726
https://api.github.com/repos/rails/rails/issues/comments/1478650798,https://github.com/rails/rails/issues/47726#issuecomment-1478650798,https://api.github.com/repos/rails/rails/issues/47726,1478650798,IC_kwDNIULOWCJrrg,"{'login': 'dorianmariefr', 'id': 58794487, 'node_id': 'MDQ6VXNlcjU4Nzk0NDg3', 'avatar_url': 'https://avatars.githubusercontent.com/u/58794487?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dorianmariefr', 'html_url': 'https://github.com/dorianmariefr', 'followers_url': 'https://api.github.com/users/dorianmariefr/followers', 'following_url': 'https://api.github.com/users/dorianmariefr/following{/other_user}', 'gists_url': 'https://api.github.com/users/dorianmariefr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dorianmariefr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dorianmariefr/subscriptions', 'organizations_url': 'https://api.github.com/users/dorianmariefr/orgs', 'repos_url': 'https://api.github.com/users/dorianmariefr/repos', 'events_url': 'https://api.github.com/users/dorianmariefr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dorianmariefr/received_events', 'type': 'User', 'site_admin': False}",2023-03-21T22:05:15Z,2023-03-21T22:05:15Z,CONTRIBUTOR,The constraints triggers the bug,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1478650798/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47726
https://api.github.com/repos/rails/rails/issues/comments/1478675433,https://github.com/rails/rails/issues/47726#issuecomment-1478675433,https://api.github.com/repos/rails/rails/issues/47726,1478675433,IC_kwDNIULOWCLL6Q,"{'login': 'dorianmariefr', 'id': 58794487, 'node_id': 'MDQ6VXNlcjU4Nzk0NDg3', 'avatar_url': 'https://avatars.githubusercontent.com/u/58794487?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dorianmariefr', 'html_url': 'https://github.com/dorianmariefr', 'followers_url': 'https://api.github.com/users/dorianmariefr/followers', 'following_url': 'https://api.github.com/users/dorianmariefr/following{/other_user}', 'gists_url': 'https://api.github.com/users/dorianmariefr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dorianmariefr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dorianmariefr/subscriptions', 'organizations_url': 'https://api.github.com/users/dorianmariefr/orgs', 'repos_url': 'https://api.github.com/users/dorianmariefr/repos', 'events_url': 'https://api.github.com/users/dorianmariefr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dorianmariefr/received_events', 'type': 'User', 'site_admin': False}",2023-03-21T22:24:05Z,2023-03-21T22:24:05Z,CONTRIBUTOR,"Here is a patch with the a failing test on rails/rails:

```diff
diff --git a/actionpack/test/dispatch/routing/custom_url_helpers_test.rb b/actionpack/test/dispatch/routing/custom_url_helpers_test.rb
index a1a1e79884..56cb2ec2ab 100644
--- a/actionpack/test/dispatch/routing/custom_url_helpers_test.rb
+++ b/actionpack/test/dispatch/routing/custom_url_helpers_test.rb
@@ -85,6 +85,11 @@ class ProductPage < Page; end
     get ""/profile"", to: ""users#profile"", as: :profile
     get ""/media/:id"", to: ""media#show"", as: :media
     get ""/pages/:id"", to: ""pages#show"", as: :page
+    get(
+      ""/download/:platform"" => ""download#platform"",
+      constraints: { platform: %w[windows linux macos] },
+      as: :download
+    )
 
     resources :categories, :collections, :products, :manufacturers
 
@@ -145,6 +150,10 @@ def params
     ActionController::Parameters.new(page: 2, size: 25)
   end
 
+  def test_constraints_path
+    assert_equal ""/download/macos"", download_path(platform: :macos)
+  end
+
   def test_direct_paths
     assert_equal ""/"", website_path
     assert_equal ""/"", Routes.url_helpers.website_path
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1478675433/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47726
https://api.github.com/repos/rails/rails/issues/comments/1478727558,https://github.com/rails/rails/issues/47726#issuecomment-1478727558,https://api.github.com/repos/rails/rails/issues/47726,1478727558,IC_kwDNIULOWCOXhg,"{'login': 'dorianmariefr', 'id': 58794487, 'node_id': 'MDQ6VXNlcjU4Nzk0NDg3', 'avatar_url': 'https://avatars.githubusercontent.com/u/58794487?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dorianmariefr', 'html_url': 'https://github.com/dorianmariefr', 'followers_url': 'https://api.github.com/users/dorianmariefr/followers', 'following_url': 'https://api.github.com/users/dorianmariefr/following{/other_user}', 'gists_url': 'https://api.github.com/users/dorianmariefr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dorianmariefr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dorianmariefr/subscriptions', 'organizations_url': 'https://api.github.com/users/dorianmariefr/orgs', 'repos_url': 'https://api.github.com/users/dorianmariefr/repos', 'events_url': 'https://api.github.com/users/dorianmariefr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dorianmariefr/received_events', 'type': 'User', 'site_admin': False}",2023-03-21T23:35:08Z,2023-03-21T23:35:08Z,CONTRIBUTOR,"It looks like array constraints aren't supported and that your array is being converted to a regexp

```ruby
route.path.requirements_for_missing_keys_check
# => {:platform=>/\A[""windows"", ""linux"", ""macos""]\Z/}
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1478727558/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47726
https://api.github.com/repos/rails/rails/issues/comments/1478732268,https://github.com/rails/rails/issues/47726#issuecomment-1478732268,https://api.github.com/repos/rails/rails/issues/47726,1478732268,IC_kwDNIULOWCOp7A,"{'login': 'dorianmariefr', 'id': 58794487, 'node_id': 'MDQ6VXNlcjU4Nzk0NDg3', 'avatar_url': 'https://avatars.githubusercontent.com/u/58794487?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dorianmariefr', 'html_url': 'https://github.com/dorianmariefr', 'followers_url': 'https://api.github.com/users/dorianmariefr/followers', 'following_url': 'https://api.github.com/users/dorianmariefr/following{/other_user}', 'gists_url': 'https://api.github.com/users/dorianmariefr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dorianmariefr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dorianmariefr/subscriptions', 'organizations_url': 'https://api.github.com/users/dorianmariefr/orgs', 'repos_url': 'https://api.github.com/users/dorianmariefr/repos', 'events_url': 'https://api.github.com/users/dorianmariefr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dorianmariefr/received_events', 'type': 'User', 'site_admin': False}",2023-03-21T23:43:23Z,2023-03-21T23:43:39Z,CONTRIBUTOR,"Ok, got a patch, gonna submit a pull request:

```diff
diff --git a/actionpack/lib/action_dispatch/journey/formatter.rb b/actionpack/lib/action_dispatch/journey/formatter.rb
index 61d6d5c184..cf2ca9d7d3 100644
--- a/actionpack/lib/action_dispatch/journey/formatter.rb
+++ b/actionpack/lib/action_dispatch/journey/formatter.rb
@@ -175,6 +175,11 @@ def missing_keys(route, parts)
                 missing_keys ||= []
                 missing_keys << key
               end
+            when Array
+              unless tests[key].any? { |value| value.match?(parts[key]) }
+                missing_keys ||= []
+                missing_keys << key
+              end
             else
               unless tests[key].match?(parts[key])
                 missing_keys ||= []
diff --git a/actionpack/lib/action_dispatch/journey/path/pattern.rb b/actionpack/lib/action_dispatch/journey/path/pattern.rb
index d156adc108..29253e4211 100644
--- a/actionpack/lib/action_dispatch/journey/path/pattern.rb
+++ b/actionpack/lib/action_dispatch/journey/path/pattern.rb
@@ -172,8 +172,14 @@ def to_regexp
         end
 
         def requirements_for_missing_keys_check
-          @requirements_for_missing_keys_check ||= requirements.transform_values do |regex|
-            /\A#{regex}\Z/
+          @requirements_for_missing_keys_check ||= requirements.transform_values do |object|
+            if object.is_a?(Array)
+              object.map do |element|
+                /\A#{element}\Z/
+              end
+            else
+              /\A#{object}\Z/
+            end
           end
         end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1478732268/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47726
https://api.github.com/repos/rails/rails/issues/comments/1685302893,https://github.com/rails/rails/issues/47726#issuecomment-1685302893,https://api.github.com/repos/rails/rails/issues/47726,1685302893,IC_kwDNIULOZHOubQ,"{'login': 'javierav', 'id': 99700, 'node_id': 'MDQ6VXNlcjk5NzAw', 'avatar_url': 'https://avatars.githubusercontent.com/u/99700?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/javierav', 'html_url': 'https://github.com/javierav', 'followers_url': 'https://api.github.com/users/javierav/followers', 'following_url': 'https://api.github.com/users/javierav/following{/other_user}', 'gists_url': 'https://api.github.com/users/javierav/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/javierav/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/javierav/subscriptions', 'organizations_url': 'https://api.github.com/users/javierav/orgs', 'repos_url': 'https://api.github.com/users/javierav/repos', 'events_url': 'https://api.github.com/users/javierav/events{/privacy}', 'received_events_url': 'https://api.github.com/users/javierav/received_events', 'type': 'User', 'site_admin': False}",2023-08-20T14:45:11Z,2023-08-20T14:45:11Z,CONTRIBUTOR,"> It looks like array constraints aren't supported and that your array is being converted to a regexp
> 
> ```ruby
> route.path.requirements_for_missing_keys_check
> # => {:platform=>/\A[""windows"", ""linux"", ""macos""]\Z/}
> ```

I also have the same issue. The documentation is clear, but not works:

https://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-match

> :constraints
Constrains parameters with a hash of regular expressions or an object that responds to matches?. In addition, constraints other than path can also be specified with any object that responds to === (e.g. [String](https://api.rubyonrails.org/classes/String.html), [Array](https://api.rubyonrails.org/classes/Array.html), [Range](https://api.rubyonrails.org/classes/Range.html), etc.).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1685302893/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47726
https://api.github.com/repos/rails/rails/issues/comments/1476576020,https://github.com/rails/rails/pull/47713#issuecomment-1476576020,https://api.github.com/repos/rails/rails/issues/47713,1476576020,IC_kwDNIULOWALDFA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-20T16:38:40Z,2023-03-20T16:39:16Z,MEMBER,"It looks like `statistics.rake` is still included in the Rakefile for engines/plugins:
https://github.com/rails/rails/blob/25f8d57100546bad54fbcf2487a34f459e8d2989/railties/lib/rails/generators/rails/plugin/templates/Rakefile.tt#L9
Removing it would break a lot of plugins.
We probably need keep the file but show a deprecation warning instead.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1476576020/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 1, 'eyes': 0}",,47713
https://api.github.com/repos/rails/rails/issues/comments/1484041481,https://github.com/rails/rails/pull/47713#issuecomment-1484041481,https://api.github.com/repos/rails/rails/issues/47713,1484041481,IC_kwDNIULOWHStCQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-26T09:22:11Z,2023-03-26T09:22:11Z,MEMBER,"@JuanVqz https://github.com/rails/rails/pull/47313 got merged into main.
So you should probably rebase on main.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1484041481/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47713
https://api.github.com/repos/rails/rails/issues/comments/1474152944,https://github.com/rails/rails/pull/47705#issuecomment-1474152944,https://api.github.com/repos/rails/rails/issues/47705,1474152944,IC_kwDNIULOV93J8A,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-03-17T17:12:10Z,2023-03-17T17:12:10Z,CONTRIBUTOR,"Interesting, however there's the issue that `will_save_change_to_attribute?` takes some optional parameters for regular attributes: https://api.rubyonrails.org/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-will_save_change_to_attribute-3F
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1474152944/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47705
https://api.github.com/repos/rails/rails/issues/comments/1474752722,https://github.com/rails/rails/pull/47705#issuecomment-1474752722,https://api.github.com/repos/rails/rails/issues/47705,1474752722,IC_kwDNIULOV-bw0g,"{'login': 'a5-stable', 'id': 52599949, 'node_id': 'MDQ6VXNlcjUyNTk5OTQ5', 'avatar_url': 'https://avatars.githubusercontent.com/u/52599949?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/a5-stable', 'html_url': 'https://github.com/a5-stable', 'followers_url': 'https://api.github.com/users/a5-stable/followers', 'following_url': 'https://api.github.com/users/a5-stable/following{/other_user}', 'gists_url': 'https://api.github.com/users/a5-stable/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/a5-stable/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/a5-stable/subscriptions', 'organizations_url': 'https://api.github.com/users/a5-stable/orgs', 'repos_url': 'https://api.github.com/users/a5-stable/repos', 'events_url': 'https://api.github.com/users/a5-stable/events{/privacy}', 'received_events_url': 'https://api.github.com/users/a5-stable/received_events', 'type': 'User', 'site_admin': False}",2023-03-18T06:58:07Z,2023-04-01T13:45:20Z,CONTRIBUTOR,"@casperisfine 
Thank you for your checking.
As you pointed out, `will_save_change_to_attribute?` needs to take the 'from' and 'to' options as arguments.
It would be more consistent to allow passing options to `attribute_changed?`, I think.

```
### allow optional parameters
""#{accessor_key}_changed?""
""saved_change_to_#{accessor_key}?""

### add alias method
""{accessor_key}_changed?"" -> ""will_save_change_to_#{accessor_key}?""
""#{accessor_key}_change"" -> ""#{accessor_key}_change_to_be_saved""
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1474752722/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47705
https://api.github.com/repos/rails/rails/issues/comments/1581731262,https://github.com/rails/rails/pull/47705#issuecomment-1581731262,https://api.github.com/repos/rails/rails/issues/47705,1581731262,IC_kwDNIULOXkdNvg,"{'login': 'a5-stable', 'id': 52599949, 'node_id': 'MDQ6VXNlcjUyNTk5OTQ5', 'avatar_url': 'https://avatars.githubusercontent.com/u/52599949?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/a5-stable', 'html_url': 'https://github.com/a5-stable', 'followers_url': 'https://api.github.com/users/a5-stable/followers', 'following_url': 'https://api.github.com/users/a5-stable/following{/other_user}', 'gists_url': 'https://api.github.com/users/a5-stable/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/a5-stable/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/a5-stable/subscriptions', 'organizations_url': 'https://api.github.com/users/a5-stable/orgs', 'repos_url': 'https://api.github.com/users/a5-stable/repos', 'events_url': 'https://api.github.com/users/a5-stable/events{/privacy}', 'received_events_url': 'https://api.github.com/users/a5-stable/received_events', 'type': 'User', 'site_admin': False}",2023-06-08T01:00:44Z,2023-06-08T01:00:44Z,CONTRIBUTOR,"@casperisfine 
Hi, what do you think about it?
(I don't mean to rush you, I would appreciate it if you could take a look when you have some time available.)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1581731262/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47705
https://api.github.com/repos/rails/rails/issues/comments/1582034804,https://github.com/rails/rails/pull/47705#issuecomment-1582034804,https://api.github.com/repos/rails/rails/issues/47705,1582034804,IC_kwDNIULOXkvvdA,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-06-08T07:23:16Z,2023-06-08T07:23:16Z,CONTRIBUTOR,"I think your feature request is valid, but that this PR is not a proper solution.

If we want to support this properly, we'd need store attributes to be refactored so that they are defined like model attributes, hence get all the common attribute methods.

A half-way solution like this IMO makes it even more confusing. Either we support all the attribute methods, or we don't, but supporting a few of them is confusing.

Sorry.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1582034804/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47705
https://api.github.com/repos/rails/rails/issues/comments/1473533695,https://github.com/rails/rails/issues/47699#issuecomment-1473533695,https://api.github.com/repos/rails/rails/issues/47699,1473533695,IC_kwDNIULOV9RW_w,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-03-17T09:40:14Z,2023-03-17T09:40:14Z,MEMBER,"Looks like this has been the case since at least Rails 4.2 on Ruby 2.7 (where I stopped because earlier Rubies get more complicated to check).

Given that and git blame, it looks to date back at least to 7ec947d59c1bc3e9772788b757fe70f51b0ffd9b (which was in 3.0), and probably further, given the prior code literally replaced `include`.

The problem is this branch: https://github.com/rails/rails/blob/f91bd408f3edeb997812c20ab4443358f4bbdf7f/activesupport/lib/active_support/concern.rb#L128-L130

When including a concern into another concern, we don't `super`, so at a Ruby / class-hierarchy level, the include has not happened. I would guess we're deferring it so the `included` / `ClassMethods` hit the final class, and not the intermediary module.

I haven't properly considered or explored their respective implications, but two ways to make the above file behave as expected are:

Change this to `super`: https://github.com/rails/rails/blob/f91bd408f3edeb997812c20ab4443358f4bbdf7f/activesupport/lib/active_support/concern.rb#L130

or

```ruby
    def ancestors # :nodoc:
      if instance_variable_defined?(:@_dependencies)
        super + @_dependencies
      else
        super
      end
    end
```

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1473533695/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47699
https://api.github.com/repos/rails/rails/issues/comments/1473537245,https://github.com/rails/rails/issues/47699#issuecomment-1473537245,https://api.github.com/repos/rails/rails/issues/47699,1473537245,IC_kwDNIULOV9Rk3Q,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-03-17T09:41:59Z,2023-03-17T09:41:59Z,MEMBER,"At first glance, I think your first solution is less invasive and more correct.

Redefining `ancestors` seem super wrong / dangerous to me.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1473537245/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47699
https://api.github.com/repos/rails/rails/issues/comments/1473586202,https://github.com/rails/rails/issues/47699#issuecomment-1473586202,https://api.github.com/repos/rails/rails/issues/47699,1473586202,IC_kwDNIULOV9UkGg,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-03-17T10:05:45Z,2023-03-17T10:05:45Z,MEMBER,"> Redefining `ancestors` seem super wrong / dangerous to me

Yeah, me too.

But it does seem a bit more consistent with the existing intention of ""don't really do the include until we hit a non-concern, and until then just accumulate a todo-list"".

If the `super` works, great. I'm mostly just wary that it feels like the obvious choice, so I wonder if there's a reason it wasn't previously written that way. 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1473586202/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47699
https://api.github.com/repos/rails/rails/issues/comments/1474411779,https://github.com/rails/rails/issues/47699#issuecomment-1474411779,https://api.github.com/repos/rails/rails/issues/47699,1474411779,IC_kwDNIULOV-G9Aw,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-03-17T21:18:17Z,2023-03-17T21:18:17Z,MEMBER,"Hey! Thanks for looking into this, @matthewd you did quite a bit or archaeology :). I'll followup soon too!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1474411779/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47699
https://api.github.com/repos/rails/rails/issues/comments/1475146947,https://github.com/rails/rails/issues/47699#issuecomment-1475146947,https://api.github.com/repos/rails/rails/issues/47699,1475146947,IC_kwDNIULOV-z0ww,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-03-19T08:17:38Z,2023-03-19T08:19:11Z,MEMBER,"To be honest, I don't quite get the dependencies aspect of `AS::Concern`. Why do you need that? The documentation is not clear to me. If I understand it correctly, you can do what it says in the callbacks (which are indeed nice). Probably I am missing something, but in either case maybe we could also work on improving that documentation. Does `Host` need `Foo` or not? Should `Bar` inject `Foo` to `Host` or not? Should `Bar` depend on `Foo` but not inject on `Host`?

I'd say the litmus test for this ticket is that if `M::FOO` exists, this should work regardless of whether `M` extends `AS::Concern`:

```ruby
module N
  extend ActiveSupport::Concern
  include M
  FOO
end
```

Overridding `ancestors` does not address that.

Also, note that if we change `false` with `super`, the AS test suite passes.

Additionally, `append_features` is supposed to return a `Module` object according to its documenation (checked as back as [2.0](https://docs.ruby-lang.org/en/2.0.0/Module.html#method-i-append_features)).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1475146947/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47699
https://api.github.com/repos/rails/rails/issues/comments/1561481827,https://github.com/rails/rails/issues/47699#issuecomment-1561481827,https://api.github.com/repos/rails/rails/issues/47699,1561481827,IC_kwDNIULOXRJSYw,"{'login': 'abrisse', 'id': 263838, 'node_id': 'MDQ6VXNlcjI2MzgzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/263838?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abrisse', 'html_url': 'https://github.com/abrisse', 'followers_url': 'https://api.github.com/users/abrisse/followers', 'following_url': 'https://api.github.com/users/abrisse/following{/other_user}', 'gists_url': 'https://api.github.com/users/abrisse/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abrisse/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abrisse/subscriptions', 'organizations_url': 'https://api.github.com/users/abrisse/orgs', 'repos_url': 'https://api.github.com/users/abrisse/repos', 'events_url': 'https://api.github.com/users/abrisse/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abrisse/received_events', 'type': 'User', 'site_admin': False}",2023-05-24T16:08:00Z,2023-05-24T16:08:00Z,NONE,This seems related to this issue: [`ActionController::API` ancestors are not updated once its class has been loaded](https://stackoverflow.com/questions/76321710/actioncontrollerapi-ancestors-are-not-updated-once-its-class-has-been-loaded),"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1561481827/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47699
https://api.github.com/repos/rails/rails/issues/comments/1561836977,https://github.com/rails/rails/issues/47699#issuecomment-1561836977,https://api.github.com/repos/rails/rails/issues/47699,1561836977,IC_kwDNIULOXRe9sQ,"{'login': 'jan-vitek', 'id': 2705408, 'node_id': 'MDQ6VXNlcjI3MDU0MDg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2705408?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jan-vitek', 'html_url': 'https://github.com/jan-vitek', 'followers_url': 'https://api.github.com/users/jan-vitek/followers', 'following_url': 'https://api.github.com/users/jan-vitek/following{/other_user}', 'gists_url': 'https://api.github.com/users/jan-vitek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jan-vitek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jan-vitek/subscriptions', 'organizations_url': 'https://api.github.com/users/jan-vitek/orgs', 'repos_url': 'https://api.github.com/users/jan-vitek/repos', 'events_url': 'https://api.github.com/users/jan-vitek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jan-vitek/received_events', 'type': 'User', 'site_admin': False}",2023-05-24T19:46:56Z,2023-05-24T19:46:56Z,NONE,"The behaviour of the `ancestors` method is correct since the concern `Foo` is never included into `Bar`. It is only stored as a dependency of `Bar` and later included wherever `Bar` is included. 

Therefore `ConcernFoo` which is expected to be included in `ConcernBar` should expect the `base` of `self.included(base)` not to be `ConcernBar` but something where `ConcernBar` would eventually be included.

If you want to actually include something into `Bar` you have to do it before the `extend ActiveSupport::Concern` is called.

[Source](https://api.rubyonrails.org/v7.0.4.2/classes/ActiveSupport/Concern.html), pay close attention to the scenario why including `Foo` into `Bar` and later `Bar` into `Host` would not work. Personally I think this is a needless abuse of the `include` method and could have been solved by defining something like `add_dependency`, however this is the intended behaviour of the `Concern` and should not be altered.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1561836977/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47699
https://api.github.com/repos/rails/rails/issues/comments/1688857407,https://github.com/rails/rails/issues/47699#issuecomment-1688857407,https://api.github.com/repos/rails/rails/issues/47699,1688857407,IC_kwDNIULOZKnrPw,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-22T20:11:16Z,2023-08-22T20:11:16Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1688857407/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47699
https://api.github.com/repos/rails/rails/issues/comments/1474815649,https://github.com/rails/rails/pull/47698#issuecomment-1474815649,https://api.github.com/repos/rails/rails/issues/47698,1474815649,IC_kwDNIULOV-fmoQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-18T11:07:47Z,2023-03-18T11:07:47Z,MEMBER,"> Which editor are you seeing this problem in? Would it possible to add a dot file in the command's directory (like a `.keep` file) to force the editor to recognize the directory?

I'm using Neovim with NerdTree.
I thought this was a more common problem, but I'm probably mistaken.
I've updated my vim config and renamed the files 😄 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1474815649/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47698
https://api.github.com/repos/rails/rails/issues/comments/1498378950,https://github.com/rails/rails/issues/47695#issuecomment-1498378950,https://api.github.com/repos/rails/rails/issues/47695,1498378950,IC_kwDNIULOWU9yxg,"{'login': 'nickborromeo', 'id': 1518902, 'node_id': 'MDQ6VXNlcjE1MTg5MDI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1518902?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nickborromeo', 'html_url': 'https://github.com/nickborromeo', 'followers_url': 'https://api.github.com/users/nickborromeo/followers', 'following_url': 'https://api.github.com/users/nickborromeo/following{/other_user}', 'gists_url': 'https://api.github.com/users/nickborromeo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nickborromeo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nickborromeo/subscriptions', 'organizations_url': 'https://api.github.com/users/nickborromeo/orgs', 'repos_url': 'https://api.github.com/users/nickborromeo/repos', 'events_url': 'https://api.github.com/users/nickborromeo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nickborromeo/received_events', 'type': 'User', 'site_admin': True}",2023-04-06T01:44:52Z,2023-04-06T01:44:52Z,CONTRIBUTOR,"This looks to be intentional behavior. There is more context on this in this commit https://github.com/rails/rails/commit/16ae3db5a5c6a08383b974ae6c96faac5b4a3c81

In the main PR https://github.com/rails/rails/pull/25337 there is a useful table that summarizes the changes. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1498378950/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47695
https://api.github.com/repos/rails/rails/issues/comments/1503769052,https://github.com/rails/rails/issues/47695#issuecomment-1503769052,https://api.github.com/repos/rails/rails/issues/47695,1503769052,IC_kwDNIULOWaGx3A,"{'login': 'MaxLap', 'id': 894561, 'node_id': 'MDQ6VXNlcjg5NDU2MQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/894561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/MaxLap', 'html_url': 'https://github.com/MaxLap', 'followers_url': 'https://api.github.com/users/MaxLap/followers', 'following_url': 'https://api.github.com/users/MaxLap/following{/other_user}', 'gists_url': 'https://api.github.com/users/MaxLap/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/MaxLap/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/MaxLap/subscriptions', 'organizations_url': 'https://api.github.com/users/MaxLap/orgs', 'repos_url': 'https://api.github.com/users/MaxLap/repos', 'events_url': 'https://api.github.com/users/MaxLap/events{/privacy}', 'received_events_url': 'https://api.github.com/users/MaxLap/received_events', 'type': 'User', 'site_admin': False}",2023-04-11T16:52:25Z,2023-04-11T16:52:25Z,CONTRIBUTOR,"I doubt it's intentional that a record's callback might never be called with a ""X attribute has changed"" when it does change.

I understand there were lots of changed and that can have unexpected side effects. But to me, it's still a bug.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1503769052/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47695
https://api.github.com/repos/rails/rails/issues/comments/1616708314,https://github.com/rails/rails/issues/47695#issuecomment-1616708314,https://api.github.com/repos/rails/rails/issues/47695,1616708314,IC_kwDNIULOYF0C2g,"{'login': 'abhisheksarka', 'id': 4833588, 'node_id': 'MDQ6VXNlcjQ4MzM1ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4833588?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abhisheksarka', 'html_url': 'https://github.com/abhisheksarka', 'followers_url': 'https://api.github.com/users/abhisheksarka/followers', 'following_url': 'https://api.github.com/users/abhisheksarka/following{/other_user}', 'gists_url': 'https://api.github.com/users/abhisheksarka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abhisheksarka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abhisheksarka/subscriptions', 'organizations_url': 'https://api.github.com/users/abhisheksarka/orgs', 'repos_url': 'https://api.github.com/users/abhisheksarka/repos', 'events_url': 'https://api.github.com/users/abhisheksarka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abhisheksarka/received_events', 'type': 'User', 'site_admin': False}",2023-07-02T15:46:59Z,2023-07-02T15:46:59Z,CONTRIBUTOR,"I don't think this can be classified as a bug since the documentation states that nested callbacks of this sort are to be avoided

From the [guides](https://guides.rubyonrails.org/active_record_callbacks.html)
```
Avoid updating or saving attributes in callbacks. For example, don't call update(attribute: ""value"")
within a callback. 
This can alter the state of the model and may result in unexpected side effects during commit.
Instead, you can safely assign values directly (for example, self.attribute = ""value"") in before_create / before_update or earlier callbacks.
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1616708314/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47695
https://api.github.com/repos/rails/rails/issues/comments/1467244679,https://github.com/rails/rails/pull/47654#issuecomment-1467244679,https://api.github.com/repos/rails/rails/issues/47654,1467244679,IC_kwDNIULOV3Rghw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-03-14T02:20:02Z,2023-03-14T02:20:02Z,MEMBER,"> I wonder if instead of warnings we should just always raise. Then theoretically --dry-run could be a way to lint without generating files?

My plan was not to introduce any breaking changes, since there are a few places that try to build the guides, buildkite and rails-docs-server come to mind. Instead, I wanted to introduce a separate workflow for linting the guides, this is a foot-hold to add more hooks we could apply there.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1467244679/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47654
https://api.github.com/repos/rails/rails/issues/comments/1472633379,https://github.com/rails/rails/pull/47646#issuecomment-1472633379,https://api.github.com/repos/rails/rails/issues/47646,1472633379,IC_kwDNIULOV8aaIw,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-16T19:36:20Z,2023-03-16T19:36:20Z,MEMBER,"@jonathanhefner There are a lot of possible combinations with subcommands and arguments that are difficult to fit in the `desc` of commands.
So I've added a USAGE file to show some possibilities.
I've also made some changes to allow subcommands to work with arguments as well.
For example: 
```bash
bin/rails time:zones:us -7:00

* UTC -07:00 *
America/Boise
Arizona
Mountain Time (US & Canada)
```

and
```bash
OFFSET=6 bin/rails time:zones:all CN

* UTC +06:00 *
Urumqi

```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1472633379/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47646
https://api.github.com/repos/rails/rails/issues/comments/1472699938,https://github.com/rails/rails/pull/47646#issuecomment-1472699938,https://api.github.com/repos/rails/rails/issues/47646,1472699938,IC_kwDNIULOV8eeIg,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2023-03-16T20:31:51Z,2023-03-16T20:31:51Z,MEMBER,"Hmm, I actually hadn't noticed `ENV[""OFFSET""]` before. :eyes:

I feel like using environment variables like that is convenient when you don't have a good parser for arguments and options, but actual arguments and options are still preferable.  So I'm inclined to just drop support for it.  (It seems unlikely that there would be any scripts in the wild relying on `ENV[""OFFSET""]` support for these commands.)  Although if we need to, we can do e.g. `def us(offset = ENV[""OFFSET""])`.

Also, I think we can limit ourselves to the combinations that the Rake commands currently support.  Essentially:

* `time:zones [COUNTRY_OR_OFFSET]`
* `time:zones:all [OFFSET]`
* `time:zones:us [OFFSET]`
* `time:zones:local`

Even `time:zones:all` seems redundant, so I would be inclined to remove that too, but I'm not sure how others feel.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1472699938/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47646
https://api.github.com/repos/rails/rails/issues/comments/1474747782,https://github.com/rails/rails/pull/47646#issuecomment-1474747782,https://api.github.com/repos/rails/rails/issues/47646,1474747782,IC_kwDNIULOV-bdhg,"{'login': 'guilleiguaran', 'id': 160941, 'node_id': 'MDQ6VXNlcjE2MDk0MQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/160941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/guilleiguaran', 'html_url': 'https://github.com/guilleiguaran', 'followers_url': 'https://api.github.com/users/guilleiguaran/followers', 'following_url': 'https://api.github.com/users/guilleiguaran/following{/other_user}', 'gists_url': 'https://api.github.com/users/guilleiguaran/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/guilleiguaran/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/guilleiguaran/subscriptions', 'organizations_url': 'https://api.github.com/users/guilleiguaran/orgs', 'repos_url': 'https://api.github.com/users/guilleiguaran/repos', 'events_url': 'https://api.github.com/users/guilleiguaran/events{/privacy}', 'received_events_url': 'https://api.github.com/users/guilleiguaran/received_events', 'type': 'User', 'site_admin': False}",2023-03-18T06:28:39Z,2023-03-18T06:28:39Z,MEMBER,"Unfortunately, we can't drop any of the existing features without first deprecating them, we can discuss/deprecate them (in a separate PR) but let's keep them there meanwhile.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1474747782/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47646
https://api.github.com/repos/rails/rails/issues/comments/1474886998,https://github.com/rails/rails/pull/47646#issuecomment-1474886998,https://api.github.com/repos/rails/rails/issues/47646,1474886998,IC_kwDNIULOV-j9Vg,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2023-03-18T16:00:08Z,2023-03-18T16:00:08Z,MEMBER,"@guilleiguaran  Supporting `ENV[""OFFSET""]` is no problem, but what about other Rake syntax, such as postfix environment variables and multiple tasks?  For example, with `main`:

```console
$ bin/rails time:zones:local time:zones:us OFFSET=-8

* UTC -06:00 *
Central America
Central Time (US & Canada)
Chihuahua
Guadalajara
Mexico City
Monterrey
Saskatchewan


* UTC -08:00 *
Pacific Time (US & Canada)
```

Where do we want to draw the line?  And should we make more of an effort for backward compatibility of some commands vs others?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1474886998/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47646
https://api.github.com/repos/rails/rails/issues/comments/1465020634,https://github.com/rails/rails/pull/47634#issuecomment-1465020634,https://api.github.com/repos/rails/rails/issues/47634,1465020634,IC_kwDNIULOV1Jw2g,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-11T21:14:09Z,2023-03-12T16:32:48Z,MEMBER,"Thanks @jonathanhefner !
I didn't know commands were only loaded if necessary.

Testing it locally I didn't see an improvement either, but I thought
that was because I still missed some requires.

Adding a benchmark to the `Rails::Command::Behavior#lookup!`
```ruby
$LOAD_PATH.each do |base|
  Dir[File.join(base, *file_lookup_paths)].each do |path|
    puts path
    puts Benchmark.ms {
      path = path.delete_prefix(""#{base}/"")
      require path
    }
  rescue Exception
     No problem
  end
```

I see the following:
```
rails/railties/lib/rails/commands/application/application_command.rb
 42.7ms (main)
  0.6ms (this branch)
rails/railties/lib/rails/commands/console/console_command.rb
  1.5ms
  2.5ms
rails/railties/lib/rails/commands/credentials/credentials_command.rb
116.5ms
207.9ms
rails/railties/lib/rails/commands/db/system/change/change_command.rb
  1.2ms
  0.5ms
rails/railties/lib/rails/commands/dbconsole/dbconsole_command.rb
  0.7ms
  1.4ms
rails/railties/lib/rails/commands/destroy/destroy_command.rb
  0.4ms
  0.5ms
rails/railties/lib/rails/commands/dev/dev_command.rb
  0.5ms
  0.4ms
rails/railties/lib/rails/commands/encrypted/encrypted_command.rb
  0.69ms
  1.56ms
rails/railties/lib/rails/commands/gem_help/gem_help_command.rb
  0.3ms
  1.3ms
rails/railties/lib/rails/commands/generate/generate_command.rb
  0.4ms
  0.7ms
rails/railties/lib/rails/commands/help/help_command.rb
  0.004ms
  0.005ms
rails/railties/lib/rails/commands/initializers/initializers_command.rb
  0.4ms
  1.6ms
rails/railties/lib/rails/commands/new/new_command.rb
  0.4ms
  1.6ms
rails/railties/lib/rails/commands/notes/notes_command.rb
 11.3ms
 16.0ms
rails/railties/lib/rails/commands/plugin/plugin_command.rb
  1.0ms
  1.1ms
rails/railties/lib/rails/commands/rake/rake_command.rb
  0.8ms
  0.9ms
rails/railties/lib/rails/commands/routes/routes_command.rb
  0.7ms
  1.2ms
rails/railties/lib/rails/commands/runner/runner_command.rb
  0.6ms
  1.3ms
rails/railties/lib/rails/commands/secret/secret_command.rb
  0.5ms
  1.1ms
rails/railties/lib/rails/commands/secrets/secrets_command.rb
 33.9ms
  0.5ms
rails/railties/lib/rails/commands/server/server_command.rb
 59.9ms
154.5ms
rails/railties/lib/rails/commands/test/test_command.rb
 28.7ms
 45.0ms
rails/railties/lib/rails/commands/unused_routes/unused_routes_command.rb
  1.0ms
  1.6ms
rails/railties/lib/rails/commands/version/version_command.rb
  0.5ms
  1.1ms
```

Some standouts are the credentials command and the server command.
I've removed the require of ""active_support/encrypted_file"" that improves the credential command:
```
rails/railties/lib/rails/commands/credentials/credentials_command.rb
116.5ms (main)
207.9ms (original version of this branch)
   3.4ms (latest version of this branch)
```

Of course the quickest solution for the help task would be just expanding the USAGE file and only printing that.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1465020634/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47634
https://api.github.com/repos/rails/rails/issues/comments/1465026959,https://github.com/rails/rails/pull/47634#issuecomment-1465026959,https://api.github.com/repos/rails/rails/issues/47634,1465026959,IC_kwDNIULOV1KJjw,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-11T21:38:42Z,2023-03-12T16:39:55Z,MEMBER,"Most time is still spend loading the Rake tasks as this seems to load the Rails application:

https://github.com/rails/rails/blob/main/railties/lib/rails/commands/rake/rake_command.rb#L33-L48","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1465026959/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47634
https://api.github.com/repos/rails/rails/issues/comments/1465303803,https://github.com/rails/rails/pull/47634#issuecomment-1465303803,https://api.github.com/repos/rails/rails/issues/47634,1465303803,IC_kwDNIULOV1bC-w,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2023-03-12T21:26:00Z,2023-03-12T21:43:57Z,MEMBER,"> Most time is still spend loading the Rake tasks as this seems to load the Rails application:

Yes, that is unfortunate. :disappointed:

However, if we do migrate all Rails commands to Thor, perhaps we can drop that behavior.  It seems reasonable to me that `bin/rails --help` would only list Rails commands, while `rake -T` would list user-defined Rake tasks.

With that in mind, I played with the changes a bit and pushed a new commit.

For simplicity, I benchmarked using this patch:

```diff
--- a/railties/lib/rails/command.rb
+++ b/railties/lib/rails/command.rb
@@ -114,6 +114,10 @@ def root
       end

       def printing_commands # :nodoc:
+        require ""benchmark""
+        Benchmark.bm { |x| x.report { lookup! } }
+        return []
+
         lookup!

         (subclasses - hidden_commands).flat_map(&:printing_commands)
```

So it just loads the files via `lookup!` and returns.  i.e. It doesn't load the app or Rake tasks.

Before the commit, I saw times like:

```
       user     system      total        real
   0.256478   0.059193   0.315671 (  0.320427)
```

After the commit, I am seeing times like:

```
       user     system      total        real
   0.026311   0.004534   0.030845 (  0.031154)
```

Do you see a similar improvement on your end?

(I will take a look at the test failures tomorrow.)
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1465303803/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47634
https://api.github.com/repos/rails/rails/issues/comments/1466616046,https://github.com/rails/rails/pull/47634#issuecomment-1466616046,https://api.github.com/repos/rails/rails/issues/47634,1466616046,IC_kwDNIULOV2rI7g,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-13T17:45:25Z,2023-03-13T17:45:25Z,MEMBER,"Ah nice! Yes, I get something similar as well.
I'm also interested in loading the Rake tasks, so with the following diff:
```diff
--- a/railties/lib/rails/command.rb
+++ b/railties/lib/rails/command.rb
@@ -114,9 +114,13 @@ def root
       def printing_commands # :nodoc:
-        lookup!
+        require ""benchmark""
+        Benchmark.bm do |x|
+          x.report { lookup! }
+          x.report { (subclasses - hidden_commands).flat_map(&:printing_commands) }
+        end

-        (subclasses - hidden_commands).flat_map(&:printing_commands)
+        return []
       end
```

I get before the commit:
```bash
       user     system      total        real
   0.252565   0.107071   0.359636 (  0.490064)
   0.706445   0.234218   0.940663 (  1.295827)
```

After this commit:
```bash
       user     system      total        real
   0.015605   0.006880   0.022485 (  0.030612)
   0.902632   0.328635   1.231267 (  1.718313)
```

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1466616046/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47634
https://api.github.com/repos/rails/rails/issues/comments/1466652043,https://github.com/rails/rails/pull/47634#issuecomment-1466652043,https://api.github.com/repos/rails/rails/issues/47634,1466652043,IC_kwDNIULOV2tViw,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2023-03-13T18:05:27Z,2023-03-13T18:05:27Z,MEMBER,"Yes, if we have to load the app (for the Rake tasks), then all the expensive dependencies get loaded anyway.

We can drill down to verify:

```diff
--- a/railties/lib/rails/commands/rake/rake_command.rb
+++ b/railties/lib/rails/commands/rake/rake_command.rb
@@ -35,7 +35,8 @@ def rake_tasks
 
             return @rake_tasks if defined?(@rake_tasks)
 
-            require_application!
+            require ""benchmark""
+            Benchmark.bm { |x| x.report { require_application! } }
 
             Rake::TaskManager.record_task_metadata = true
             Rake.application.instance_variable_set(:@name, ""rails"")
```

On `main`:

```
       user     system      total        real
   0.777506   0.146819   0.924325 (  0.935428)
```

In this PR:

```
       user     system      total        real
   0.973329   0.224609   1.197938 (  1.225671)
```

I don't think there is a way around that.  But, like I said, if we migrate all Rails commands to Thor, I think it would be reasonable to skip Rake tasks in `bin/rails --help`.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1466652043/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47634
https://api.github.com/repos/rails/rails/issues/comments/1466729833,https://github.com/rails/rails/pull/47634#issuecomment-1466729833,https://api.github.com/repos/rails/rails/issues/47634,1466729833,IC_kwDNIULOV2yFaQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-13T18:42:07Z,2023-03-13T18:42:07Z,MEMBER,"@jonathanhefner Yes, sounds good to me ❤️ 
Hopefully migrating the `db` tasks will be possible as well.
Thanks for picking up extracting the server.rb.
I was a bit hesitant about that one. 😄 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1466729833/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47634
https://api.github.com/repos/rails/rails/issues/comments/1463200377,https://github.com/rails/rails/pull/47623#issuecomment-1463200377,https://api.github.com/repos/rails/rails/issues/47623,1463200377,IC_kwDNIULOVzaqeQ,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-03-10T03:28:09Z,2023-03-10T03:28:09Z,MEMBER,Same concern as https://github.com/rails/rails/pull/47619#discussion_r1131745563 I think this could allow for modifying files outside of the application folder now,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1463200377/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47623
https://api.github.com/repos/rails/rails/issues/comments/1463201454,https://github.com/rails/rails/pull/47623#issuecomment-1463201454,https://api.github.com/repos/rails/rails/issues/47623,1463201454,IC_kwDNIULOVzaurg,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-03-10T03:30:15Z,2023-03-10T03:30:15Z,MEMBER,"That is fine. Rake would as well, it just don't right now because the Rakefile can't be loaded.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1463201454/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47623
https://api.github.com/repos/rails/rails/issues/comments/1468616093,https://github.com/rails/rails/pull/47623#issuecomment-1468616093,https://api.github.com/repos/rails/rails/issues/47623,1468616093,IC_kwDNIULOV4lNnQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-14T18:23:55Z,2023-03-14T18:23:55Z,MEMBER,"This now also works outside the app directory so we can do:
```bash
BUNDLE_GEMFILE=demo/Gemfile demo/bin/rails log:clear
```

I've also fixed the case for passing ""LOGS=all"".
I wanted to add a test but it's currently pretty difficult to pass ENV vars to the `rails` test helper.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1468616093/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47623
https://api.github.com/repos/rails/rails/issues/comments/1477637265,https://github.com/rails/rails/pull/47623#issuecomment-1477637265,https://api.github.com/repos/rails/rails/issues/47623,1477637265,IC_kwDNIULOWBL0kQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-21T11:01:26Z,2023-03-21T11:01:26Z,MEMBER,"@jonathanhefner To keep things backwards compatible I've introduced a `strip_legacy_env_argument` to make the following not break:
```bash
bin/rails log:clear LOGS=all
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1477637265/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47623
https://api.github.com/repos/rails/rails/issues/comments/1487364829,https://github.com/rails/rails/pull/47623#issuecomment-1487364829,https://api.github.com/repos/rails/rails/issues/47623,1487364829,IC_kwDNIULOWKdi3Q,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2023-03-28T17:55:19Z,2023-03-28T17:55:19Z,MEMBER,"@p8  I talked with the Rails Core team, and it was decided that we should print a deprecation warning for all of the Rake command idioms before eventually dropping them.  The idioms being:

* Using environment variables instead of positional args, such as `LOGS=development,test bin/rails log:clear`.
* Postfix environment variables, such as `bin/rails time:zones:us OFFSET=-5`.
* Rake-style positional args, such as `bin/rails time:zones[-5]`.
* Chaining commands, such as `bin/rails log:clear tmp:clear`.

The last one is particularly important, but would also be very difficult to do with Thor.  So the plan is to add a new command that can achieve the same effect, and to deprecate the old commands entirely.

For replacing `log:clear`, it would look like:

```console
# Truncate log/*.log
$ bin/rails clear --logs

# Truncate log/{development,test}.log
$ bin/rails clear --logs development test
```

Which can be implemented with a combination of Thor's `type: :array` and a `lazy_default` value:

```ruby
option :logs, type: :array, lazy_default: []
```

Then we'd do the same thing for `tmp:clear` plus its siblings.  And we'll use a similar strategy for the `time:zones` commands.  (But let's focus on `log:clear` first.)

I realize you have already spent *a lot* of time on these PRs and there has been a lot of back and forth.  So I would understand if you don't want to invest more time on a completely different approach.  If that is the case, just let me know, and I can open a PR and add you as an author.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1487364829/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47623
https://api.github.com/repos/rails/rails/issues/comments/1487433200,https://github.com/rails/rails/pull/47623#issuecomment-1487433200,https://api.github.com/repos/rails/rails/issues/47623,1487433200,IC_kwDNIULOWKht8A,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-28T18:44:39Z,2023-03-28T18:44:39Z,MEMBER,"@jonathanhefner Thanks for the heads up!
I can pick up these changes. No worries.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1487433200/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47623
https://api.github.com/repos/rails/rails/issues/comments/1487477835,https://github.com/rails/rails/pull/47623#issuecomment-1487477835,https://api.github.com/repos/rails/rails/issues/47623,1487477835,IC_kwDNIULOWKkcSw,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-03-28T19:23:10Z,2023-03-28T19:30:12Z,MEMBER,"@jonathanhefner Do you want me to deprecate `rails log:clear` in this PR as well?
I guess it makes more sense after we implement `rails clear --tmp` (or whatever the option will be)?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1487477835/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47623
https://api.github.com/repos/rails/rails/issues/comments/1487523598,https://github.com/rails/rails/pull/47623#issuecomment-1487523598,https://api.github.com/repos/rails/rails/issues/47623,1487523598,IC_kwDNIULOWKnPDg,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2023-03-28T20:04:13Z,2023-03-28T20:04:13Z,MEMBER,"@p8 Yes, I think we can deprecate `log:clear` in this PR.  Then, once this PR is merged, we can implement `clear --tmp` and deprecate `tmp:clear` in the other PR (after a rebase).
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1487523598/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47623
https://api.github.com/repos/rails/rails/issues/comments/1463142642,https://github.com/rails/rails/pull/47620#issuecomment-1463142642,https://api.github.com/repos/rails/rails/issues/47620,1463142642,IC_kwDNIULOVzXI8g,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-03-10T02:33:43Z,2023-03-10T02:33:43Z,MEMBER,"This is great, but I have a question. how people know about how to install Ruby, how to install Rails and how to generate a new rails app but didn’t find at least some documentation about rails yet?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1463142642/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47620
https://api.github.com/repos/rails/rails/issues/comments/1472722157,https://github.com/rails/rails/pull/47620#issuecomment-1472722157,https://api.github.com/repos/rails/rails/issues/47620,1472722157,IC_kwDNIULOV8f07Q,"{'login': 'bradgessler', 'id': 4628, 'node_id': 'MDQ6VXNlcjQ2Mjg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4628?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bradgessler', 'html_url': 'https://github.com/bradgessler', 'followers_url': 'https://api.github.com/users/bradgessler/followers', 'following_url': 'https://api.github.com/users/bradgessler/following{/other_user}', 'gists_url': 'https://api.github.com/users/bradgessler/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bradgessler/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bradgessler/subscriptions', 'organizations_url': 'https://api.github.com/users/bradgessler/orgs', 'repos_url': 'https://api.github.com/users/bradgessler/repos', 'events_url': 'https://api.github.com/users/bradgessler/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bradgessler/received_events', 'type': 'User', 'site_admin': False}",2023-03-16T20:51:27Z,2023-03-16T20:51:27Z,NONE,"I'm reasonably happy now with the ""flow"" we're giving new Rails users. The Home Screen could probably stand to link to the guide and have a few other improvements, but this PR eliminates all of the ""brick walls"" that people might encounter during their first go at a Rails App.

If it looks good I can squash everything (or leave it as is, whatevs) and do whatever cleanup is needed to get this into main.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1472722157/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47620
https://api.github.com/repos/rails/rails/issues/comments/1472971338,https://github.com/rails/rails/pull/47620#issuecomment-1472971338,https://api.github.com/repos/rails/rails/issues/47620,1472971338,IC_kwDNIULOV8vCSg,"{'login': 'dhh', 'id': 2741, 'node_id': 'MDQ6VXNlcjI3NDE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2741?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dhh', 'html_url': 'https://github.com/dhh', 'followers_url': 'https://api.github.com/users/dhh/followers', 'following_url': 'https://api.github.com/users/dhh/following{/other_user}', 'gists_url': 'https://api.github.com/users/dhh/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dhh/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dhh/subscriptions', 'organizations_url': 'https://api.github.com/users/dhh/orgs', 'repos_url': 'https://api.github.com/users/dhh/repos', 'events_url': 'https://api.github.com/users/dhh/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dhh/received_events', 'type': 'User', 'site_admin': False}",2023-03-17T01:19:25Z,2023-03-17T01:19:25Z,MEMBER,"Like the reminder on how to start a server. Not loving the path added to the splash screen or the other points.

Ultimately, I don't think we should be solving for ""what if someone installed rails but didn't have any other guidance at all"" in the new app flow. Not realistic or even doable.

The foundation will soon be commissioning a new first tutorial. That's the place we should be driving the first encounter from.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1472971338/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47620
https://api.github.com/repos/rails/rails/issues/comments/1487459219,https://github.com/rails/rails/pull/47620#issuecomment-1487459219,https://api.github.com/repos/rails/rails/issues/47620,1487459219,IC_kwDNIULOWKjTkw,"{'login': 'bradgessler', 'id': 4628, 'node_id': 'MDQ6VXNlcjQ2Mjg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4628?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bradgessler', 'html_url': 'https://github.com/bradgessler', 'followers_url': 'https://api.github.com/users/bradgessler/followers', 'following_url': 'https://api.github.com/users/bradgessler/following{/other_user}', 'gists_url': 'https://api.github.com/users/bradgessler/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bradgessler/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bradgessler/subscriptions', 'organizations_url': 'https://api.github.com/users/bradgessler/orgs', 'repos_url': 'https://api.github.com/users/bradgessler/repos', 'events_url': 'https://api.github.com/users/bradgessler/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bradgessler/received_events', 'type': 'User', 'site_admin': False}",2023-03-28T19:06:33Z,2023-03-28T19:06:33Z,NONE,"@dhh I'm not sure what to make of your comment. From what I can tell you're stating a preference, but leaving the PR as it currently stands seems to satisfy everybody else's goals of making Rails marginally easier for people just getting started.

I don't think there's an expectation of, ""what if someone installed rails but didn't have any other guidance at all""—it's more a matter of putting signs up on the road that assure people who are running through the tutorial that they're the right path. by that logic, signs and maps/guides are complimentary, not mutually exclusive.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1487459219/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47620
https://api.github.com/repos/rails/rails/issues/comments/1487607843,https://github.com/rails/rails/pull/47620#issuecomment-1487607843,https://api.github.com/repos/rails/rails/issues/47620,1487607843,IC_kwDNIULOWKsYIw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-03-28T21:20:19Z,2023-03-28T21:20:19Z,MEMBER,"I agree with David in the general idea and in the specific that this change in the welcome page doesn't add much value. But I'm ok with the next steps banner. It is very common to see people generating a new application and not knowing they need to `cd` to the directory.

@bradgessler what do you think of leaving out the welcome page change, and move on with the next step banner in the generator?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1487607843/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47620
https://api.github.com/repos/rails/rails/issues/comments/1487762544,https://github.com/rails/rails/pull/47620#issuecomment-1487762544,https://api.github.com/repos/rails/rails/issues/47620,1487762544,IC_kwDNIULOWK10cA,"{'login': 'bradgessler', 'id': 4628, 'node_id': 'MDQ6VXNlcjQ2Mjg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4628?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bradgessler', 'html_url': 'https://github.com/bradgessler', 'followers_url': 'https://api.github.com/users/bradgessler/followers', 'following_url': 'https://api.github.com/users/bradgessler/following{/other_user}', 'gists_url': 'https://api.github.com/users/bradgessler/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bradgessler/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bradgessler/subscriptions', 'organizations_url': 'https://api.github.com/users/bradgessler/orgs', 'repos_url': 'https://api.github.com/users/bradgessler/repos', 'events_url': 'https://api.github.com/users/bradgessler/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bradgessler/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T00:06:16Z,2023-03-29T00:06:16Z,NONE,"That seems reasonable. I think more could be done to the welcome page in a different PR to make it more useful and at least on par with Phoenix, Laravel, etc.

K so my next steps are:

* [ ] Remove the welcome screen message
* [ ] Squash all the commits

Chime in if I'm missing anything. I've got a few other things on my plate right now so it might be a few days before I finish the few things above.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1487762544/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47620
https://api.github.com/repos/rails/rails/issues/comments/1488733126,https://github.com/rails/rails/pull/47620#issuecomment-1488733126,https://api.github.com/repos/rails/rails/issues/47620,1488733126,IC_kwDNIULOWLxDxg,"{'login': 'dhh', 'id': 2741, 'node_id': 'MDQ6VXNlcjI3NDE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2741?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dhh', 'html_url': 'https://github.com/dhh', 'followers_url': 'https://api.github.com/users/dhh/followers', 'following_url': 'https://api.github.com/users/dhh/following{/other_user}', 'gists_url': 'https://api.github.com/users/dhh/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dhh/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dhh/subscriptions', 'organizations_url': 'https://api.github.com/users/dhh/orgs', 'repos_url': 'https://api.github.com/users/dhh/repos', 'events_url': 'https://api.github.com/users/dhh/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dhh/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T14:27:31Z,2023-03-29T14:27:31Z,MEMBER,"I think either we point to rails help or we point to the guides, but not both. Then fine keeping the rest of the next step banner, and removing the stuff on the splash screen.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1488733126/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47620
https://api.github.com/repos/rails/rails/issues/comments/1461040935,https://github.com/rails/rails/pull/47599#issuecomment-1461040935,https://api.github.com/repos/rails/rails/issues/47599,1461040935,IC_kwDNIULOVxW3Jw,"{'login': 'maxnotarangelo', 'id': 2966419, 'node_id': 'MDQ6VXNlcjI5NjY0MTk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2966419?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/maxnotarangelo', 'html_url': 'https://github.com/maxnotarangelo', 'followers_url': 'https://api.github.com/users/maxnotarangelo/followers', 'following_url': 'https://api.github.com/users/maxnotarangelo/following{/other_user}', 'gists_url': 'https://api.github.com/users/maxnotarangelo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/maxnotarangelo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/maxnotarangelo/subscriptions', 'organizations_url': 'https://api.github.com/users/maxnotarangelo/orgs', 'repos_url': 'https://api.github.com/users/maxnotarangelo/repos', 'events_url': 'https://api.github.com/users/maxnotarangelo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/maxnotarangelo/received_events', 'type': 'User', 'site_admin': False}",2023-03-08T23:42:18Z,2023-03-08T23:42:18Z,CONTRIBUTOR,"I think this is an improvement, but can we remove more (even most) of the keys from `STRUCTURAL_VALUE_METHODS_FOR_AND`?

I'd think that the preloading keys (`:includes`, `:eager_load`, and `:preload`) would be fine, and `:left_outer_joins` should work if `:joins` does. But if we could add almost all of the keys, that would be better; I just don't know whether any of them would cause problems. My instinct is they wouldn't cause any issues, though, since `relation.merge` is able to deal with all of them fine.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1461040935/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47599
https://api.github.com/repos/rails/rails/issues/comments/1462435924,https://github.com/rails/rails/pull/47599#issuecomment-1462435924,https://api.github.com/repos/rails/rails/issues/47599,1462435924,IC_kwDNIULOVysAVA,"{'login': 'marcelobarreto', 'id': 1276556, 'node_id': 'MDQ6VXNlcjEyNzY1NTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1276556?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/marcelobarreto', 'html_url': 'https://github.com/marcelobarreto', 'followers_url': 'https://api.github.com/users/marcelobarreto/followers', 'following_url': 'https://api.github.com/users/marcelobarreto/following{/other_user}', 'gists_url': 'https://api.github.com/users/marcelobarreto/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/marcelobarreto/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/marcelobarreto/subscriptions', 'organizations_url': 'https://api.github.com/users/marcelobarreto/orgs', 'repos_url': 'https://api.github.com/users/marcelobarreto/repos', 'events_url': 'https://api.github.com/users/marcelobarreto/events{/privacy}', 'received_events_url': 'https://api.github.com/users/marcelobarreto/received_events', 'type': 'User', 'site_admin': False}",2023-03-09T17:09:20Z,2023-03-09T17:09:20Z,NONE,sure @maxnotarangelo ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1462435924/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47599
https://api.github.com/repos/rails/rails/issues/comments/1462450117,https://github.com/rails/rails/pull/47599#issuecomment-1462450117,https://api.github.com/repos/rails/rails/issues/47599,1462450117,IC_kwDNIULOVys3xQ,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-03-09T17:19:24Z,2023-03-09T17:19:24Z,MEMBER,"This change allows combining incompatible relations, but doesn't seem to address why that's a good idea (nor, indeed, why it might be a bad idea). Thanks for the pull request, but... that check is there for a reason.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1462450117/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47599
https://api.github.com/repos/rails/rails/issues/comments/1462915024,https://github.com/rails/rails/pull/47599#issuecomment-1462915024,https://api.github.com/repos/rails/rails/issues/47599,1462915024,IC_kwDNIULOVzJP0A,"{'login': 'maxnotarangelo', 'id': 2966419, 'node_id': 'MDQ6VXNlcjI5NjY0MTk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2966419?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/maxnotarangelo', 'html_url': 'https://github.com/maxnotarangelo', 'followers_url': 'https://api.github.com/users/maxnotarangelo/followers', 'following_url': 'https://api.github.com/users/maxnotarangelo/following{/other_user}', 'gists_url': 'https://api.github.com/users/maxnotarangelo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/maxnotarangelo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/maxnotarangelo/subscriptions', 'organizations_url': 'https://api.github.com/users/maxnotarangelo/orgs', 'repos_url': 'https://api.github.com/users/maxnotarangelo/repos', 'events_url': 'https://api.github.com/users/maxnotarangelo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/maxnotarangelo/received_events', 'type': 'User', 'site_admin': False}",2023-03-09T22:28:05Z,2023-03-09T22:28:05Z,CONTRIBUTOR,"> This change allows combining incompatible relations, but doesn't seem to address why that's a good idea (nor, indeed, why it might be a bad idea). Thanks for the pull request, but... that check is there for a reason.

What exactly is the reason? It didn't seem obvious to me why e.g. having two scopes with different `:joins` on them couldn't be combined, especially because they can be combined with `merge`, which is why I made the issue.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1462915024/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47599
https://api.github.com/repos/rails/rails/issues/comments/1464201151,https://github.com/rails/rails/pull/47599#issuecomment-1464201151,https://api.github.com/repos/rails/rails/issues/47599,1464201151,IC_kwDNIULOV0Xvvw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-03-10T18:21:38Z,2023-03-10T18:21:54Z,MEMBER,"@matthewd I worked with @marcelobarreto on this one and I could not remember the reason why we have this check, that is why I asked him to open a PR so we could have you reviewing and remembering what was the reason why we don't accept incompatible relations.

The check was originally added to the `or` operation, and it seems when `and` was added we just reused it, without trying to understand why it is there.

Do you remember which cases we would get wrong results by allowing those relations to be `and`ed?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1464201151/reactions', 'total_count': 8, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 8, 'rocket': 0, 'eyes': 0}",,47599
https://api.github.com/repos/rails/rails/issues/comments/1484580399,https://github.com/rails/rails/pull/47598#issuecomment-1484580399,https://api.github.com/repos/rails/rails/issues/47598,1484580399,IC_kwDNIULOWHzmLw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-03-27T06:32:56Z,2023-03-27T06:32:56Z,MEMBER,"I'm definitely probably missing some context here, but not seeing any tests explicitly for `assign_parameters` and it looks like this class might be deprecated in the future:
https://github.com/rails/rails/blob/99096b88ae7a7c9019f2cbcf867e29ba42768e65/actionpack/lib/action_controller/test_case.rb#L32-L33

> ActionController::TestCase will be deprecated and moved to a gem in the future.

RE: relevant tests, this might be one place to look:
https://github.com/rails/rails/blob/main/actionpack/test/controller/test_case_test.rb","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1484580399/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47598
https://api.github.com/repos/rails/rails/issues/comments/1456756319,https://github.com/rails/rails/pull/47589#issuecomment-1456756319,https://api.github.com/repos/rails/rails/issues/47589,1456756319,IC_kwDNIULOVtRWXw,"{'login': 'youngbloodcyb', 'id': 95453018, 'node_id': 'U_kgDOBbB_Wg', 'avatar_url': 'https://avatars.githubusercontent.com/u/95453018?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/youngbloodcyb', 'html_url': 'https://github.com/youngbloodcyb', 'followers_url': 'https://api.github.com/users/youngbloodcyb/followers', 'following_url': 'https://api.github.com/users/youngbloodcyb/following{/other_user}', 'gists_url': 'https://api.github.com/users/youngbloodcyb/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/youngbloodcyb/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/youngbloodcyb/subscriptions', 'organizations_url': 'https://api.github.com/users/youngbloodcyb/orgs', 'repos_url': 'https://api.github.com/users/youngbloodcyb/repos', 'events_url': 'https://api.github.com/users/youngbloodcyb/events{/privacy}', 'received_events_url': 'https://api.github.com/users/youngbloodcyb/received_events', 'type': 'User', 'site_admin': False}",2023-03-06T18:48:21Z,2023-03-06T18:48:21Z,NONE,@p8 Thanks for opening this up! I think it'll be really helpful. I'm more than happy to help out on this as much as I can,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1456756319/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47589
https://api.github.com/repos/rails/rails/issues/comments/1482091792,https://github.com/rails/rails/issues/47574#issuecomment-1482091792,https://api.github.com/repos/rails/rails/issues/47574,1482091792,IC_kwDNIULOWFbtEA,"{'login': 'nickborromeo', 'id': 1518902, 'node_id': 'MDQ6VXNlcjE1MTg5MDI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1518902?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nickborromeo', 'html_url': 'https://github.com/nickborromeo', 'followers_url': 'https://api.github.com/users/nickborromeo/followers', 'following_url': 'https://api.github.com/users/nickborromeo/following{/other_user}', 'gists_url': 'https://api.github.com/users/nickborromeo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nickborromeo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nickborromeo/subscriptions', 'organizations_url': 'https://api.github.com/users/nickborromeo/orgs', 'repos_url': 'https://api.github.com/users/nickborromeo/repos', 'events_url': 'https://api.github.com/users/nickborromeo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nickborromeo/received_events', 'type': 'User', 'site_admin': True}",2023-03-24T00:35:35Z,2023-03-24T00:35:35Z,CONTRIBUTOR,"I opened https://github.com/rails/rails/pull/47756 based on your report and suggested change 🙇 lets see if it gets accepted.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1482091792/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47574
https://api.github.com/repos/rails/rails/issues/comments/1453651155,https://github.com/rails/rails/issues/47559#issuecomment-1453651155,https://api.github.com/repos/rails/rails/issues/47559,1453651155,IC_kwDNIULOVqT00w,"{'login': 'jhottenstein', 'id': 302333, 'node_id': 'MDQ6VXNlcjMwMjMzMw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/302333?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhottenstein', 'html_url': 'https://github.com/jhottenstein', 'followers_url': 'https://api.github.com/users/jhottenstein/followers', 'following_url': 'https://api.github.com/users/jhottenstein/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhottenstein/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhottenstein/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhottenstein/subscriptions', 'organizations_url': 'https://api.github.com/users/jhottenstein/orgs', 'repos_url': 'https://api.github.com/users/jhottenstein/repos', 'events_url': 'https://api.github.com/users/jhottenstein/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhottenstein/received_events', 'type': 'User', 'site_admin': False}",2023-03-03T14:55:22Z,2023-03-03T14:55:22Z,NONE,"My current workaround is to remove the explicit `inverse_of:` on the belongs_to but I feel like this is masking the issue. 

I'm happy to contribute a PR but I'd like to know what people think the expected behavior is. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1453651155/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47559
https://api.github.com/repos/rails/rails/issues/comments/1620136717,https://github.com/rails/rails/issues/47559#issuecomment-1620136717,https://api.github.com/repos/rails/rails/issues/47559,1620136717,IC_kwDNIULOYJFTDQ,"{'login': 'abaldwin88', 'id': 15172605, 'node_id': 'MDQ6VXNlcjE1MTcyNjA1', 'avatar_url': 'https://avatars.githubusercontent.com/u/15172605?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/abaldwin88', 'html_url': 'https://github.com/abaldwin88', 'followers_url': 'https://api.github.com/users/abaldwin88/followers', 'following_url': 'https://api.github.com/users/abaldwin88/following{/other_user}', 'gists_url': 'https://api.github.com/users/abaldwin88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/abaldwin88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/abaldwin88/subscriptions', 'organizations_url': 'https://api.github.com/users/abaldwin88/orgs', 'repos_url': 'https://api.github.com/users/abaldwin88/repos', 'events_url': 'https://api.github.com/users/abaldwin88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/abaldwin88/received_events', 'type': 'User', 'site_admin': False}",2023-07-04T12:13:21Z,2023-07-04T12:13:21Z,CONTRIBUTOR,"Note that it need not be a fully duplicate record for this behavior to occur. The intermediate records just need the same associations.

e.g. In the reproduction script we still get an error if we add a `body` column and assign different values.

```rb
post.comments.build(author: author, body: 'my first comment')
post.comments.build(author: author, body: 'my second comment')
post.save! 
```

```sql
INSERT INTO ""comments"" (""post_id"", ""author_id"", ""body"") VALUES ($1, $2, $3) RETURNING ""id""  [[""post_id"", 1], [""author_id"", 1], [""body"", ""my first comment""]]
INSERT INTO ""comments"" (""author_id"", ""body"") VALUES ($1, $2) RETURNING ""id""  [[""author_id"", 1], [""body"", ""my second comment""]]

-- Error because post_id not included in INSERT statement
```


---
(I have a fix ready. Will put together a PR soon)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1620136717/reactions', 'total_count': 2, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 1, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47559
https://api.github.com/repos/rails/rails/issues/comments/1571320260,https://github.com/rails/rails/issues/47558#issuecomment-1571320260,https://api.github.com/repos/rails/rails/issues/47558,1571320260,IC_kwDNIULOXahxxA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-06-01T04:32:15Z,2023-06-01T04:32:15Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1571320260/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47558
https://api.github.com/repos/rails/rails/issues/comments/1572137518,https://github.com/rails/rails/issues/47558#issuecomment-1572137518,https://api.github.com/repos/rails/rails/issues/47558,1572137518,IC_kwDNIULOXbTqLg,"{'login': 'JeremyC-za', 'id': 21086480, 'node_id': 'MDQ6VXNlcjIxMDg2NDgw', 'avatar_url': 'https://avatars.githubusercontent.com/u/21086480?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/JeremyC-za', 'html_url': 'https://github.com/JeremyC-za', 'followers_url': 'https://api.github.com/users/JeremyC-za/followers', 'following_url': 'https://api.github.com/users/JeremyC-za/following{/other_user}', 'gists_url': 'https://api.github.com/users/JeremyC-za/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/JeremyC-za/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/JeremyC-za/subscriptions', 'organizations_url': 'https://api.github.com/users/JeremyC-za/orgs', 'repos_url': 'https://api.github.com/users/JeremyC-za/repos', 'events_url': 'https://api.github.com/users/JeremyC-za/events{/privacy}', 'received_events_url': 'https://api.github.com/users/JeremyC-za/received_events', 'type': 'User', 'site_admin': False}",2023-06-01T14:13:16Z,2023-06-01T14:13:16Z,NONE,Replication steps are exactly the same for `7-0-stable`.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1572137518/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47558
https://api.github.com/repos/rails/rails/issues/comments/1699356612,https://github.com/rails/rails/issues/47558#issuecomment-1699356612,https://api.github.com/repos/rails/rails/issues/47558,1699356612,IC_kwDNIULOZUofxA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-30T15:04:27Z,2023-08-30T15:04:27Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1699356612/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47558
https://api.github.com/repos/rails/rails/issues/comments/1452535395,https://github.com/rails/rails/issues/47555#issuecomment-1452535395,https://api.github.com/repos/rails/rails/issues/47555,1452535395,IC_kwDNIULOVpPuYw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-03-02T20:59:13Z,2023-03-02T20:59:13Z,CONTRIBUTOR,"I am not sure that `couner_cache` in `has_many :specializations, through: :specialization_steps, counter_cache: :specializations_count` is needed. I think you can remove it.

See also a similar stackoverflow question - https://stackoverflow.com/questions/8991118/has-many-through-with-counter-cache","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1452535395/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47555
https://api.github.com/repos/rails/rails/issues/comments/1453085063,https://github.com/rails/rails/issues/47555#issuecomment-1453085063,https://api.github.com/repos/rails/rails/issues/47555,1453085063,IC_kwDNIULOVpxRhw,"{'login': 'konalegi', 'id': 1387057, 'node_id': 'MDQ6VXNlcjEzODcwNTc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1387057?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/konalegi', 'html_url': 'https://github.com/konalegi', 'followers_url': 'https://api.github.com/users/konalegi/followers', 'following_url': 'https://api.github.com/users/konalegi/following{/other_user}', 'gists_url': 'https://api.github.com/users/konalegi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/konalegi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/konalegi/subscriptions', 'organizations_url': 'https://api.github.com/users/konalegi/orgs', 'repos_url': 'https://api.github.com/users/konalegi/repos', 'events_url': 'https://api.github.com/users/konalegi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/konalegi/received_events', 'type': 'User', 'site_admin': False}",2023-03-03T07:17:04Z,2023-03-03T07:17:04Z,NONE,"@fatkodima thanks for your reply, unfortunetly it's needed, sorry that the test case was incomplete.
I've added another test `test_2` which shows the problem. If we remove `counter_cache:  specializations_count` then if we initialize `Step` with `Specialization` the `specializations_count` do not get updated. 

I think the bug comes from the point that previously `specializations_count` wasn't passed to insert command during object creation, but now it is. The proper solution would be to disable increments on creation if partial_inserts are disabled.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1453085063/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47555
https://api.github.com/repos/rails/rails/issues/comments/1665595241,https://github.com/rails/rails/issues/47555#issuecomment-1665595241,https://api.github.com/repos/rails/rails/issues/47555,1665595241,IC_kwDNIULOY0b3aQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-04T13:17:31Z,2023-08-04T13:17:31Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1665595241/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47555
https://api.github.com/repos/rails/rails/issues/comments/1467043478,https://github.com/rails/rails/issues/47521#issuecomment-1467043478,https://api.github.com/repos/rails/rails/issues/47521,1467043478,IC_kwDNIULOV3FOlg,"{'login': 'benngarcia', 'id': 49890553, 'node_id': 'MDQ6VXNlcjQ5ODkwNTUz', 'avatar_url': 'https://avatars.githubusercontent.com/u/49890553?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/benngarcia', 'html_url': 'https://github.com/benngarcia', 'followers_url': 'https://api.github.com/users/benngarcia/followers', 'following_url': 'https://api.github.com/users/benngarcia/following{/other_user}', 'gists_url': 'https://api.github.com/users/benngarcia/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/benngarcia/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/benngarcia/subscriptions', 'organizations_url': 'https://api.github.com/users/benngarcia/orgs', 'repos_url': 'https://api.github.com/users/benngarcia/repos', 'events_url': 'https://api.github.com/users/benngarcia/events{/privacy}', 'received_events_url': 'https://api.github.com/users/benngarcia/received_events', 'type': 'User', 'site_admin': False}",2023-03-13T22:15:48Z,2023-03-13T22:15:48Z,NONE,"Documentation only mentions using this as the parent class (via has_one and has_many). When using it that way (define the `accepts_nested_attributes_for` in supplier). 

`supplier = Supplier.create(name: ‘Supplier 1’, account_attributes: …)` dirty works as intended (`supplier.account.saved_changes`). 

However, I would like to be able to use `supplier.saved_changes` and see what has changes with account IFF I made those modifications via the nested attributes helpers.

My thought is to enable an option on `accepts_nested_attribute_for`, such as `nest_dirty: true`, which would show changes made to associations modified via the helper. I.e.

```
  supplier = Supplier.create(name: ‘supplier 1’, account_attributes: { name: “account 1” })
  supplier.saved_changes
  # => { id: [nil, 1], name: [nil, ‘supplier 1’], account: {  id: [nil, 1], name: [nil, ‘account 1’] } }
```

Since conceptually the `accepts_nested_attributes_for` helper is creating a model writer which can be dirtied, I think this would be within their respective domains.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1467043478/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47521
https://api.github.com/repos/rails/rails/issues/comments/1487359944,https://github.com/rails/rails/issues/47521#issuecomment-1487359944,https://api.github.com/repos/rails/rails/issues/47521,1487359944,IC_kwDNIULOWKdPyA,"{'login': 'saiqulhaq', 'id': 1275215, 'node_id': 'MDQ6VXNlcjEyNzUyMTU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1275215?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/saiqulhaq', 'html_url': 'https://github.com/saiqulhaq', 'followers_url': 'https://api.github.com/users/saiqulhaq/followers', 'following_url': 'https://api.github.com/users/saiqulhaq/following{/other_user}', 'gists_url': 'https://api.github.com/users/saiqulhaq/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/saiqulhaq/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/saiqulhaq/subscriptions', 'organizations_url': 'https://api.github.com/users/saiqulhaq/orgs', 'repos_url': 'https://api.github.com/users/saiqulhaq/repos', 'events_url': 'https://api.github.com/users/saiqulhaq/events{/privacy}', 'received_events_url': 'https://api.github.com/users/saiqulhaq/received_events', 'type': 'User', 'site_admin': False}",2023-03-28T17:51:27Z,2023-03-28T17:51:27Z,CONTRIBUTOR,"@Tao-Galasse in your example, you update the name of the supplier only ```account.update(supplier_attributes: { name: 'new supplier' })```
why do you expect the `account` instance to have a different supplier_id?

> I expect account.saved_changes to return something like {""supplier_id""=>[1, 2]}

How come updating the name could change the ID too?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1487359944/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47521
https://api.github.com/repos/rails/rails/issues/comments/1488616017,https://github.com/rails/rails/issues/47521#issuecomment-1488616017,https://api.github.com/repos/rails/rails/issues/47521,1488616017,IC_kwDNIULOWLp6UQ,"{'login': 'Tao-Galasse', 'id': 32199278, 'node_id': 'MDQ6VXNlcjMyMTk5Mjc4', 'avatar_url': 'https://avatars.githubusercontent.com/u/32199278?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Tao-Galasse', 'html_url': 'https://github.com/Tao-Galasse', 'followers_url': 'https://api.github.com/users/Tao-Galasse/followers', 'following_url': 'https://api.github.com/users/Tao-Galasse/following{/other_user}', 'gists_url': 'https://api.github.com/users/Tao-Galasse/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Tao-Galasse/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Tao-Galasse/subscriptions', 'organizations_url': 'https://api.github.com/users/Tao-Galasse/orgs', 'repos_url': 'https://api.github.com/users/Tao-Galasse/repos', 'events_url': 'https://api.github.com/users/Tao-Galasse/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Tao-Galasse/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T13:29:27Z,2023-03-29T13:29:27Z,NONE,"@saiqulhaq because i didn't update the existing supplier here, I created a new one.

If I wanted to update the existing one, I should have passed its ID in the `supplier_attributes`, like this : 
`account.update(supplier_attributes: { id: account.supplier_id, name: 'update my supplier' })`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1488616017/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47521
https://api.github.com/repos/rails/rails/issues/comments/1563771492,https://github.com/rails/rails/issues/47521#issuecomment-1563771492,https://api.github.com/repos/rails/rails/issues/47521,1563771492,IC_kwDNIULOXTVCZA,"{'login': 'saiqulhaq', 'id': 1275215, 'node_id': 'MDQ6VXNlcjEyNzUyMTU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1275215?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/saiqulhaq', 'html_url': 'https://github.com/saiqulhaq', 'followers_url': 'https://api.github.com/users/saiqulhaq/followers', 'following_url': 'https://api.github.com/users/saiqulhaq/following{/other_user}', 'gists_url': 'https://api.github.com/users/saiqulhaq/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/saiqulhaq/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/saiqulhaq/subscriptions', 'organizations_url': 'https://api.github.com/users/saiqulhaq/orgs', 'repos_url': 'https://api.github.com/users/saiqulhaq/repos', 'events_url': 'https://api.github.com/users/saiqulhaq/events{/privacy}', 'received_events_url': 'https://api.github.com/users/saiqulhaq/received_events', 'type': 'User', 'site_admin': False}",2023-05-26T03:43:40Z,2023-05-26T03:43:40Z,CONTRIBUTOR,"ok I got it
I also found that there is `update_only` for one on one associations to force always updating the existing record
and found this one https://discuss.rubyonrails.org/t/rails-dirty-object-concept-is-not-working-with-nested-att/54505 that raised at 2010
I think the feature to check the saved changes on nested has one and has many won't be implemented because the cost is high

what you can do is enumerate each nested record and check the saved_changes data
see https://github.com/saiqulhaq/rails-issue-test-cases/blob/c7885ddda73ea537f41a8a212d14b7a9269e7461/project/48291.rb#L82 as an example","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1563771492/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47521
https://api.github.com/repos/rails/rails/issues/comments/1570332433,https://github.com/rails/rails/issues/47521#issuecomment-1570332433,https://api.github.com/repos/rails/rails/issues/47521,1570332433,IC_kwDNIULOXZlfEQ,"{'login': 'Tao-Galasse', 'id': 32199278, 'node_id': 'MDQ6VXNlcjMyMTk5Mjc4', 'avatar_url': 'https://avatars.githubusercontent.com/u/32199278?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Tao-Galasse', 'html_url': 'https://github.com/Tao-Galasse', 'followers_url': 'https://api.github.com/users/Tao-Galasse/followers', 'following_url': 'https://api.github.com/users/Tao-Galasse/following{/other_user}', 'gists_url': 'https://api.github.com/users/Tao-Galasse/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Tao-Galasse/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Tao-Galasse/subscriptions', 'organizations_url': 'https://api.github.com/users/Tao-Galasse/orgs', 'repos_url': 'https://api.github.com/users/Tao-Galasse/repos', 'events_url': 'https://api.github.com/users/Tao-Galasse/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Tao-Galasse/received_events', 'type': 'User', 'site_admin': False}",2023-05-31T14:19:50Z,2023-05-31T14:21:23Z,NONE,"In my real life case, I cannot use the `update_only: true` because my nested record could be shared on other objects where it must not be updated.

But thanks a lot for the example, it could be useful in the future :)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1570332433/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47521
https://api.github.com/repos/rails/rails/issues/comments/1492337878,https://github.com/rails/rails/issues/47498#issuecomment-1492337878,https://api.github.com/repos/rails/rails/issues/47498,1492337878,IC_kwDNIULOWPNE1g,"{'login': 'MatheusRich', 'id': 20938712, 'node_id': 'MDQ6VXNlcjIwOTM4NzEy', 'avatar_url': 'https://avatars.githubusercontent.com/u/20938712?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/MatheusRich', 'html_url': 'https://github.com/MatheusRich', 'followers_url': 'https://api.github.com/users/MatheusRich/followers', 'following_url': 'https://api.github.com/users/MatheusRich/following{/other_user}', 'gists_url': 'https://api.github.com/users/MatheusRich/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/MatheusRich/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/MatheusRich/subscriptions', 'organizations_url': 'https://api.github.com/users/MatheusRich/orgs', 'repos_url': 'https://api.github.com/users/MatheusRich/repos', 'events_url': 'https://api.github.com/users/MatheusRich/events{/privacy}', 'received_events_url': 'https://api.github.com/users/MatheusRich/received_events', 'type': 'User', 'site_admin': False}",2023-03-31T17:32:58Z,2023-03-31T17:32:58Z,CONTRIBUTOR,"One way to improve the behavior for has_one associations is to mark that as `strict_loading: false`

```rb
class Employee < ActiveRecord::Base
  has_one :company, through: :team, strict_loading: false
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1492337878/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47498
https://api.github.com/repos/rails/rails/issues/comments/1613626657,https://github.com/rails/rails/issues/47498#issuecomment-1613626657,https://api.github.com/repos/rails/rails/issues/47498,1613626657,IC_kwDNIULOYC39IQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-06-29T18:44:33Z,2023-06-29T18:44:33Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1613626657/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47498
https://api.github.com/repos/rails/rails/issues/comments/1613638846,https://github.com/rails/rails/issues/47498#issuecomment-1613638846,https://api.github.com/repos/rails/rails/issues/47498,1613638846,IC_kwDNIULOYC4svg,"{'login': 'MatheusRich', 'id': 20938712, 'node_id': 'MDQ6VXNlcjIwOTM4NzEy', 'avatar_url': 'https://avatars.githubusercontent.com/u/20938712?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/MatheusRich', 'html_url': 'https://github.com/MatheusRich', 'followers_url': 'https://api.github.com/users/MatheusRich/followers', 'following_url': 'https://api.github.com/users/MatheusRich/following{/other_user}', 'gists_url': 'https://api.github.com/users/MatheusRich/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/MatheusRich/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/MatheusRich/subscriptions', 'organizations_url': 'https://api.github.com/users/MatheusRich/orgs', 'repos_url': 'https://api.github.com/users/MatheusRich/repos', 'events_url': 'https://api.github.com/users/MatheusRich/events{/privacy}', 'received_events_url': 'https://api.github.com/users/MatheusRich/received_events', 'type': 'User', 'site_admin': False}",2023-06-29T18:55:13Z,2023-06-29T18:55:13Z,CONTRIBUTOR,Unstale.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1613638846/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47498
https://api.github.com/repos/rails/rails/issues/comments/1737984554,https://github.com/rails/rails/issues/47498#issuecomment-1737984554,https://api.github.com/repos/rails/rails/issues/47498,1737984554,IC_kwDNIULOZ5eKKg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-09-27T19:49:51Z,2023-09-27T19:49:51Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1737984554/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47498
https://api.github.com/repos/rails/rails/issues/comments/1738029846,https://github.com/rails/rails/issues/47498#issuecomment-1738029846,https://api.github.com/repos/rails/rails/issues/47498,1738029846,IC_kwDNIULOZ5g7Fg,"{'login': 'MatheusRich', 'id': 20938712, 'node_id': 'MDQ6VXNlcjIwOTM4NzEy', 'avatar_url': 'https://avatars.githubusercontent.com/u/20938712?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/MatheusRich', 'html_url': 'https://github.com/MatheusRich', 'followers_url': 'https://api.github.com/users/MatheusRich/followers', 'following_url': 'https://api.github.com/users/MatheusRich/following{/other_user}', 'gists_url': 'https://api.github.com/users/MatheusRich/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/MatheusRich/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/MatheusRich/subscriptions', 'organizations_url': 'https://api.github.com/users/MatheusRich/orgs', 'repos_url': 'https://api.github.com/users/MatheusRich/repos', 'events_url': 'https://api.github.com/users/MatheusRich/events{/privacy}', 'received_events_url': 'https://api.github.com/users/MatheusRich/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T20:25:29Z,2023-09-27T20:25:29Z,CONTRIBUTOR,Unstale,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1738029846/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47498
https://api.github.com/repos/rails/rails/issues/comments/1444003813,https://github.com/rails/rails/pull/47497#issuecomment-1444003813,https://api.github.com/repos/rails/rails/issues/47497,1444003813,IC_kwDNIULOVhG_5Q,"{'login': 'djmb', 'id': 1734607, 'node_id': 'MDQ6VXNlcjE3MzQ2MDc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1734607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/djmb', 'html_url': 'https://github.com/djmb', 'followers_url': 'https://api.github.com/users/djmb/followers', 'following_url': 'https://api.github.com/users/djmb/following{/other_user}', 'gists_url': 'https://api.github.com/users/djmb/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/djmb/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/djmb/subscriptions', 'organizations_url': 'https://api.github.com/users/djmb/orgs', 'repos_url': 'https://api.github.com/users/djmb/repos', 'events_url': 'https://api.github.com/users/djmb/events{/privacy}', 'received_events_url': 'https://api.github.com/users/djmb/received_events', 'type': 'User', 'site_admin': False}",2023-02-24T16:50:34Z,2023-02-24T16:50:34Z,CONTRIBUTOR,There are some test failures for postgres and sqlite3_mem - I'll take a look at the start of next week.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1444003813/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47497
https://api.github.com/repos/rails/rails/issues/comments/1445278755,https://github.com/rails/rails/pull/47497#issuecomment-1445278755,https://api.github.com/repos/rails/rails/issues/47497,1445278755,IC_kwDNIULOViU0Iw,"{'login': 'natematykiewicz', 'id': 5104186, 'node_id': 'MDQ6VXNlcjUxMDQxODY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5104186?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/natematykiewicz', 'html_url': 'https://github.com/natematykiewicz', 'followers_url': 'https://api.github.com/users/natematykiewicz/followers', 'following_url': 'https://api.github.com/users/natematykiewicz/following{/other_user}', 'gists_url': 'https://api.github.com/users/natematykiewicz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/natematykiewicz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/natematykiewicz/subscriptions', 'organizations_url': 'https://api.github.com/users/natematykiewicz/orgs', 'repos_url': 'https://api.github.com/users/natematykiewicz/repos', 'events_url': 'https://api.github.com/users/natematykiewicz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/natematykiewicz/received_events', 'type': 'User', 'site_admin': False}",2023-02-26T06:23:11Z,2023-02-26T06:23:11Z,CONTRIBUTOR,"Sorting by any column that's mutable can result in skipped rows, if the value is updated during iteration.

I think the documentation needs to make this gotcha incredibly clear, lest people think they're iterating the entire table, but actually only iterate 98% of the rows due to some shuffling during iteration.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1445278755/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47497
https://api.github.com/repos/rails/rails/issues/comments/1446000146,https://github.com/rails/rails/pull/47497#issuecomment-1446000146,https://api.github.com/repos/rails/rails/issues/47497,1446000146,IC_kwDNIULOVjA2Eg,"{'login': 'djmb', 'id': 1734607, 'node_id': 'MDQ6VXNlcjE3MzQ2MDc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1734607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/djmb', 'html_url': 'https://github.com/djmb', 'followers_url': 'https://api.github.com/users/djmb/followers', 'following_url': 'https://api.github.com/users/djmb/following{/other_user}', 'gists_url': 'https://api.github.com/users/djmb/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/djmb/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/djmb/subscriptions', 'organizations_url': 'https://api.github.com/users/djmb/orgs', 'repos_url': 'https://api.github.com/users/djmb/repos', 'events_url': 'https://api.github.com/users/djmb/events{/privacy}', 'received_events_url': 'https://api.github.com/users/djmb/received_events', 'type': 'User', 'site_admin': False}",2023-02-27T09:34:15Z,2023-02-27T09:34:15Z,CONTRIBUTOR,"> Sorting by any column that's mutable can result in skipped rows, if the value is updated during iteration.
> 
> I think the documentation needs to make this gotcha incredibly clear, lest people think they're iterating the entire table, but actually only iterate 98% of the rows due to some shuffling during iteration.

Thanks @natematykiewicz - that's a great point.

I think if you start updating later or earlier rows while iterating so they change position in the batch then all bets are off really. I don't see it as being too different from adding or removing other rows and changing what show up when iterating by primary key. 

But the main issue I would see is if you modify the row that you are currently working on so that it shows up again later. I'll add something to the documentation mentioning this.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1446000146/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47497
https://api.github.com/repos/rails/rails/issues/comments/1446578941,https://github.com/rails/rails/pull/47497#issuecomment-1446578941,https://api.github.com/repos/rails/rails/issues/47497,1446578941,IC_kwDNIULOVjkK_Q,"{'login': 'natematykiewicz', 'id': 5104186, 'node_id': 'MDQ6VXNlcjUxMDQxODY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5104186?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/natematykiewicz', 'html_url': 'https://github.com/natematykiewicz', 'followers_url': 'https://api.github.com/users/natematykiewicz/followers', 'following_url': 'https://api.github.com/users/natematykiewicz/following{/other_user}', 'gists_url': 'https://api.github.com/users/natematykiewicz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/natematykiewicz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/natematykiewicz/subscriptions', 'organizations_url': 'https://api.github.com/users/natematykiewicz/orgs', 'repos_url': 'https://api.github.com/users/natematykiewicz/repos', 'events_url': 'https://api.github.com/users/natematykiewicz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/natematykiewicz/received_events', 'type': 'User', 'site_admin': False}",2023-02-27T15:52:37Z,2023-02-27T15:52:37Z,CONTRIBUTOR,"> I don't see it as being too different from adding or removing other rows and changing what show up when iterating by primary key.

When it's the primary key (of an auto-incrementing bigint), added rows always go at the end, so they can't be skipped. If a row is deleted, the next batch can be found based on the max id of the last batch so no rows are skipped. It's impossible to update a primary key, so updates are not an issue.

What you're adding right now is a very unstable enumerator that will likely lead to bugs in a production environment, where you have no control over the records between batches. If this were implemented using a cursor, it'd be much more performant and also stable.

https://www.postgresql.org/docs/current/plpgsql-cursors.html","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1446578941/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47497
https://api.github.com/repos/rails/rails/issues/comments/1442005935,https://github.com/rails/rails/pull/47466#issuecomment-1442005935,https://api.github.com/repos/rails/rails/issues/47466,1442005935,IC_kwDNIULOVfNDrw,"{'login': 'benedikt', 'id': 9696, 'node_id': 'MDQ6VXNlcjk2OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9696?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/benedikt', 'html_url': 'https://github.com/benedikt', 'followers_url': 'https://api.github.com/users/benedikt/followers', 'following_url': 'https://api.github.com/users/benedikt/following{/other_user}', 'gists_url': 'https://api.github.com/users/benedikt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/benedikt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/benedikt/subscriptions', 'organizations_url': 'https://api.github.com/users/benedikt/orgs', 'repos_url': 'https://api.github.com/users/benedikt/repos', 'events_url': 'https://api.github.com/users/benedikt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/benedikt/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T15:43:18Z,2023-02-23T15:43:18Z,CONTRIBUTOR,"What about checking `#arity` of the block instead of always passing both the relation and the ids? This way existing code wouldn't break. 

The check can be done once before the loop, so it shouldn't be a big hit on performance. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442005935/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47466
https://api.github.com/repos/rails/rails/issues/comments/1442021430,https://github.com/rails/rails/pull/47466#issuecomment-1442021430,https://api.github.com/repos/rails/rails/issues/47466,1442021430,IC_kwDNIULOVfOANg,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-02-23T15:54:03Z,2023-02-23T15:54:03Z,MEMBER,"How horrible would it be to pre-load the `.ids` into the relation, rather than passing them separately? Seems nicer to make the existing natural user-level APIs just incidentally do a better thing... depending on just how bad it gets internally.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442021430/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47466
https://api.github.com/repos/rails/rails/issues/comments/1442032130,https://github.com/rails/rails/pull/47466#issuecomment-1442032130,https://api.github.com/repos/rails/rails/issues/47466,1442032130,IC_kwDNIULOVfOqAg,"{'login': 'bogdan', 'id': 122436, 'node_id': 'MDQ6VXNlcjEyMjQzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/122436?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bogdan', 'html_url': 'https://github.com/bogdan', 'followers_url': 'https://api.github.com/users/bogdan/followers', 'following_url': 'https://api.github.com/users/bogdan/following{/other_user}', 'gists_url': 'https://api.github.com/users/bogdan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bogdan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bogdan/subscriptions', 'organizations_url': 'https://api.github.com/users/bogdan/orgs', 'repos_url': 'https://api.github.com/users/bogdan/repos', 'events_url': 'https://api.github.com/users/bogdan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bogdan/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T16:01:29Z,2023-02-23T16:01:29Z,CONTRIBUTOR,"It seems like `CollectionAssociation#ids` is [cached](https://github.com/rails/rails/blob/e90bc0d9e9e5d146bb4a16eb56028ec29a4ea7d7/activerecord/lib/active_record/associations/collection_association.rb#L55), but `Relation#ids)` is not. 
I believe the better way of fixing that is moving ids cache from `CollectionAssociation` to `Relation` and also chaning `.pluck(primary_key)` to `.ids` inside batches code (called twice): https://github.com/rails/rails/blob/0c208297f4a46cdfbf7dc977fd0624476dc90403/activerecord/lib/active_record/relation/batches.rb#L243

and the problem will be solved","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442032130/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47466
https://api.github.com/repos/rails/rails/issues/comments/1442150945,https://github.com/rails/rails/pull/47466#issuecomment-1442150945,https://api.github.com/repos/rails/rails/issues/47466,1442150945,IC_kwDNIULOVfV6IQ,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T17:20:19Z,2023-02-23T17:20:19Z,CONTRIBUTOR,"@bogdan's suggestion seems like should work, but how should we deal with `async` queries - https://github.com/rails/rails/blob/b0dd7c7ae21d692b6e38428e8abe0e9538b75711/activerecord/lib/active_record/relation/calculations.rb#L324-L347

Do not cache them?
And there is problem (might not be a big problem), that user can call `pluck(:id)` (instead of `.ids`) inside the batching block, so this optimization will be ignored, unless we extend `pluck` with special ""caching"" handling of primary keys, which I am not sure is a good idea.

Explicitly passing ids into the block is more verbose, but more explicit. 🤔  

@benedikt 

> What about checking #arity of the block instead of always passing both the relation and the ids? This way existing code wouldn't break.

Can we do this in cases like this https://github.com/rails/rails/pull/47466/files#diff-d7c138a139e1856b3b09ca966d268d40e501bd7974dad612256d4c914730d5a1R443 ?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442150945/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47466
https://api.github.com/repos/rails/rails/issues/comments/1442174773,https://github.com/rails/rails/pull/47466#issuecomment-1442174773,https://api.github.com/repos/rails/rails/issues/47466,1442174773,IC_kwDNIULOVfXXNQ,"{'login': 'benedikt', 'id': 9696, 'node_id': 'MDQ6VXNlcjk2OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9696?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/benedikt', 'html_url': 'https://github.com/benedikt', 'followers_url': 'https://api.github.com/users/benedikt/followers', 'following_url': 'https://api.github.com/users/benedikt/following{/other_user}', 'gists_url': 'https://api.github.com/users/benedikt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/benedikt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/benedikt/subscriptions', 'organizations_url': 'https://api.github.com/users/benedikt/orgs', 'repos_url': 'https://api.github.com/users/benedikt/repos', 'events_url': 'https://api.github.com/users/benedikt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/benedikt/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T17:36:39Z,2023-02-23T17:36:39Z,CONTRIBUTOR,"@fatkodima Yeah, my idea doesn't work for that case. But I really like @matthewd and @bogdan's idea of using `.ids`. That doesn't break the current interface.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442174773/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47466
https://api.github.com/repos/rails/rails/issues/comments/1442184989,https://github.com/rails/rails/pull/47466#issuecomment-1442184989,https://api.github.com/repos/rails/rails/issues/47466,1442184989,IC_kwDNIULOVfX_HQ,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T17:45:08Z,2023-02-23T17:45:08Z,CONTRIBUTOR,"> That doesn't break the current interface.

It doesn't break an interface per se, because blocks are happily ignoring extra arguments. 
So,
```ruby
User.in_batches do |relation, ids|
# or
User.in_batches do |relation|
```
both will work fine.

It's when some Enumerable method is called on `in_batches`, like `in_batches.first`, so now it returns an array, instead of a single relation. But that is not a very popular use-case, I think. Most of the time, `in_batches` is called with a block or chained with methods like `delete_all`/`update_all`, which works fine.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442184989/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47466
https://api.github.com/repos/rails/rails/issues/comments/1440800146,https://github.com/rails/rails/issues/47462#issuecomment-1440800146,https://api.github.com/repos/rails/rails/issues/47462,1440800146,IC_kwDNIULOVeDdkg,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-02-22T21:09:47Z,2023-02-22T21:10:39Z,MEMBER,"This should work as you expect if you include the `load: true` option.

```ruby
Person.in_batches(load: true).each do |batch|
  batch.pluck(:id)
end
```

See [docs](https://api.rubyonrails.org/classes/ActiveRecord/Batches.html#method-i-in_batches).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1440800146/reactions', 'total_count': 2, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 1, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1441991963,https://github.com/rails/rails/issues/47462#issuecomment-1441991963,https://api.github.com/repos/rails/rails/issues/47462,1441991963,IC_kwDNIULOVfMNGw,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T15:36:50Z,2023-02-23T15:36:50Z,CONTRIBUTOR,"Nope, same behavior.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1441991963/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1442007987,https://github.com/rails/rails/issues/47462#issuecomment-1442007987,https://api.github.com/repos/rails/rails/issues/47462,1442007987,IC_kwDNIULOVfNLsw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T15:44:41Z,2023-02-23T15:44:41Z,CONTRIBUTOR,"You need to use (no `each`):
```ruby
Person.in_batches(load: true) do |batch|
  batch.pluck(:id)
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442007987/reactions', 'total_count': 2, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 1, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1442011165,https://github.com/rails/rails/issues/47462#issuecomment-1442011165,https://api.github.com/repos/rails/rails/issues/47462,1442011165,IC_kwDNIULOVfNYHQ,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T15:46:48Z,2023-02-23T15:46:48Z,CONTRIBUTOR,"I actually think, that provided `:load` should be passed to `BatchEnumerator`, to avoid such surprises. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442011165/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1442013152,https://github.com/rails/rails/issues/47462#issuecomment-1442013152,https://api.github.com/repos/rails/rails/issues/47462,1442013152,IC_kwDNIULOVfNf4A,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T15:48:14Z,2023-02-23T15:48:14Z,CONTRIBUTOR,"But that will instantiate the records into AR objects wasting memory, no?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442013152/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1442017571,https://github.com/rails/rails/issues/47462#issuecomment-1442017571,https://api.github.com/repos/rails/rails/issues/47462,1442017571,IC_kwDNIULOVfNxIw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T15:51:19Z,2023-02-23T15:51:19Z,CONTRIBUTOR,"Yes. 
I created a PR with an alternative implementation yesterday - https://github.com/rails/rails/pull/47466, but that is only for ids. For other columns you will still get extra queries.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442017571/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1442020283,https://github.com/rails/rails/issues/47462#issuecomment-1442020283,https://api.github.com/repos/rails/rails/issues/47462,1442020283,IC_kwDNIULOVfN7uw,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T15:53:15Z,2023-02-23T15:53:15Z,CONTRIBUTOR,"Why not `yield yielded_relation, batch_relation` so I can get the ids or whatever? :)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442020283/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1442021337,https://github.com/rails/rails/issues/47462#issuecomment-1442021337,https://api.github.com/repos/rails/rails/issues/47462,1442021337,IC_kwDNIULOVfN_2Q,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T15:53:59Z,2023-02-23T15:53:59Z,CONTRIBUTOR,"Oh, I see, the pluck would still be executed.

Maybe we can work with the BatchEnumerator to add a special case just for pluck?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442021337/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1442027866,https://github.com/rails/rails/issues/47462#issuecomment-1442027866,https://api.github.com/repos/rails/rails/issues/47462,1442027866,IC_kwDNIULOVfOZWg,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T15:58:32Z,2023-02-23T15:58:32Z,CONTRIBUTOR,"We might use a strategy where we decide what to yield like (pseudo):

```ruby
if load == :relation
  yielded_relation = batch_relation
elsif load
          records = batch_relation.records
          ids = records.map(&:id)
          yielded_relation = where(primary_key => ids)
          yielded_relation.load_records(records)
        elsif (empty_scope && use_ranges != false) || use_ranges
          ids = batch_relation.pluck(primary_key)
          finish = ids.last
          if finish
            yielded_relation = apply_finish_limit(batch_relation, finish, order)
            yielded_relation = yielded_relation.except(:limit, :order)
            yielded_relation.skip_query_cache!(false)
          end
        else
          ids = batch_relation.pluck(primary_key)
          yielded_relation = where(primary_key => ids)
        end
        ...

       yield yielded_relation
```

And usage:

```ruby
Person.in_batches(load: :batch_relation) do |batch|
  batch.pluck(:id)
end
```

Not looking the any edges here, just wondering that we can define the strategy we want to receive:


true => yield loaded records
false => yield yielded_relation
relation => yield batch_relation and don't perform the pluck the method already does
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442027866/reactions', 'total_count': 2, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 1, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1442034615,https://github.com/rails/rails/issues/47462#issuecomment-1442034615,https://api.github.com/repos/rails/rails/issues/47462,1442034615,IC_kwDNIULOVfOztw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T16:03:10Z,2023-02-23T16:03:10Z,CONTRIBUTOR,"`batch_relation` is an ActiveRecord::Relation, not an array of records. It is used only to get ids for the currently yielded relation.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442034615/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1442048472,https://github.com/rails/rails/issues/47462#issuecomment-1442048472,https://api.github.com/repos/rails/rails/issues/47462,1442048472,IC_kwDNIULOVfPp2A,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T16:12:05Z,2023-02-23T16:12:05Z,CONTRIBUTOR,"Yeah, too much effort for other columns and in that case probably worths to make an extra SQL.

Since in my case I'm looking for the primary key anyways, your PR seems the right way!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442048472/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1442049621,https://github.com/rails/rails/issues/47462#issuecomment-1442049621,https://api.github.com/repos/rails/rails/issues/47462,1442049621,IC_kwDNIULOVfPuVQ,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T16:12:50Z,2023-02-23T16:12:50Z,CONTRIBUTOR,"I'm guessing we could do `ids = batch_relation.pluck(primary_key, *extra_pluck_columns)` and yield along with the ids but too hacky.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442049621/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1561809154,https://github.com/rails/rails/issues/47462#issuecomment-1561809154,https://api.github.com/repos/rails/rails/issues/47462,1561809154,IC_kwDNIULOXRdRAg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-05-24T19:24:35Z,2023-05-24T19:24:35Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1561809154/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1561812095,https://github.com/rails/rails/issues/47462#issuecomment-1561812095,https://api.github.com/repos/rails/rails/issues/47462,1561812095,IC_kwDNIULOXRdcfw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-05-24T19:27:07Z,2023-05-24T19:27:07Z,CONTRIBUTOR,"For anyone interested in this optimization, I currently released such as a gem - https://github.com/fatkodima/pluck_in_batches","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1561812095/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1688857426,https://github.com/rails/rails/issues/47462#issuecomment-1688857426,https://api.github.com/repos/rails/rails/issues/47462,1688857426,IC_kwDNIULOZKnrUg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-22T20:11:17Z,2023-08-22T20:11:17Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1688857426/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1688859001,https://github.com/rails/rails/issues/47462#issuecomment-1688859001,https://api.github.com/repos/rails/rails/issues/47462,1688859001,IC_kwDNIULOZKnxeQ,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-08-22T20:12:38Z,2023-08-22T20:12:38Z,CONTRIBUTOR,Relevant.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1688859001/reactions', 'total_count': 3, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 2, 'rocket': 1, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1729471451,https://github.com/rails/rails/issues/47462#issuecomment-1729471451,https://api.github.com/repos/rails/rails/issues/47462,1729471451,IC_kwDNIULOZxWj2w,"{'login': 'sobrinho', 'id': 26460, 'node_id': 'MDQ6VXNlcjI2NDYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/26460?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sobrinho', 'html_url': 'https://github.com/sobrinho', 'followers_url': 'https://api.github.com/users/sobrinho/followers', 'following_url': 'https://api.github.com/users/sobrinho/following{/other_user}', 'gists_url': 'https://api.github.com/users/sobrinho/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sobrinho/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sobrinho/subscriptions', 'organizations_url': 'https://api.github.com/users/sobrinho/orgs', 'repos_url': 'https://api.github.com/users/sobrinho/repos', 'events_url': 'https://api.github.com/users/sobrinho/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sobrinho/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T12:29:48Z,2023-09-21T12:30:00Z,CONTRIBUTOR,"If it's about the primary key, currently can be worked around with:

```ruby
Model.in_batches do |batch|
  ids = batch.where_values_hash[batch.klass.primary_key]
end
```

I'm using this with success so far.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1729471451/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1730500645,https://github.com/rails/rails/issues/47462#issuecomment-1730500645,https://api.github.com/repos/rails/rails/issues/47462,1730500645,IC_kwDNIULOZyVYJQ,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T23:45:04Z,2023-09-21T23:45:04Z,MEMBER,"

> Relevant.

@fatkodima  is that because https://github.com/rails/rails/pull/47466 would resolve it?  Or because you think https://github.com/fatkodima/pluck_in_batches should be upstreamed? (or something else?)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1730500645/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1730507514,https://github.com/rails/rails/issues/47462#issuecomment-1730507514,https://api.github.com/repos/rails/rails/issues/47462,1730507514,IC_kwDNIULOZyVy-g,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-09-21T23:55:16Z,2023-09-21T23:55:16Z,CONTRIBUTOR,"@ghiculescu I mean that this problem was not resolved. For primary keys, it can be fixed by the user itself in a hacky way, as suggested. 
If the gem will be upstreamed (https://github.com/rails/rails/pull/47894), then https://github.com/rails/rails/pull/47466 will be unneeded. But upstreaming is a larger change than just additionally yielding ids.

So, I am for upstreaming the gem, or if not, then merging https://github.com/rails/rails/pull/47466.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1730507514/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47462
https://api.github.com/repos/rails/rails/issues/comments/1439496892,https://github.com/rails/rails/pull/47448#issuecomment-1439496892,https://api.github.com/repos/rails/rails/issues/47448,1439496892,IC_kwDNIULOVcz6vA,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-22T06:20:31Z,2023-02-22T06:20:31Z,MEMBER,"I feel like this could have unintended consequences, wouldn't it be less risky if this could happen per route? But I may just be missing some context here.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1439496892/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47448
https://api.github.com/repos/rails/rails/issues/comments/1439532150,https://github.com/rails/rails/pull/47448#issuecomment-1439532150,https://api.github.com/repos/rails/rails/issues/47448,1439532150,IC_kwDNIULOVc2Edg,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-02-22T07:07:53Z,2023-02-22T07:07:53Z,MEMBER,"Is this substantially different from setting up a `format.any` in the target route?

At a glance, it sounds like this only happens after we've given up on the actual MIME negotiation, and we're making an any-available-clues fallback attempt to guess what the no-preference-expressed response should be. 

I'm not particularly fond of the current behaviour -- IMO once the route has parsed the URL into its declared parts, we have no business making assumptions based on its original string form -- but I also dislike global config settings: they make life especially difficult for 3rd party gems/engines, which have to account for all possible global-config combinations.

I am reluctant to change long-established behaviour (this was introduced in https://github.com/rails/rails/pull/20831), but if we do think it's a bad idea to make this guess, IMO it's probably better to deprecate and remove it entirely rather than make it configurable.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1439532150/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47448
https://api.github.com/repos/rails/rails/issues/comments/1441103312,https://github.com/rails/rails/pull/47448#issuecomment-1441103312,https://api.github.com/repos/rails/rails/issues/47448,1441103312,IC_kwDNIULOVeV90A,"{'login': 'youpy', 'id': 9128, 'node_id': 'MDQ6VXNlcjkxMjg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9128?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/youpy', 'html_url': 'https://github.com/youpy', 'followers_url': 'https://api.github.com/users/youpy/followers', 'following_url': 'https://api.github.com/users/youpy/following{/other_user}', 'gists_url': 'https://api.github.com/users/youpy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/youpy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/youpy/subscriptions', 'organizations_url': 'https://api.github.com/users/youpy/orgs', 'repos_url': 'https://api.github.com/users/youpy/repos', 'events_url': 'https://api.github.com/users/youpy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/youpy/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T01:19:01Z,2023-02-23T01:21:14Z,NONE,"> I feel like this could have unintended consequences, wouldn't it be less risky if this could happen per route?

>  but I also dislike global config settings

Well I too would like to minimize the impact.
I'll see if it can be done with controller actions (e.g., using filters) instead of globals.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1441103312/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47448
https://api.github.com/repos/rails/rails/issues/comments/1441104335,https://github.com/rails/rails/pull/47448#issuecomment-1441104335,https://api.github.com/repos/rails/rails/issues/47448,1441104335,IC_kwDNIULOVeWBzw,"{'login': 'youpy', 'id': 9128, 'node_id': 'MDQ6VXNlcjkxMjg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9128?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/youpy', 'html_url': 'https://github.com/youpy', 'followers_url': 'https://api.github.com/users/youpy/followers', 'following_url': 'https://api.github.com/users/youpy/following{/other_user}', 'gists_url': 'https://api.github.com/users/youpy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/youpy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/youpy/subscriptions', 'organizations_url': 'https://api.github.com/users/youpy/orgs', 'repos_url': 'https://api.github.com/users/youpy/repos', 'events_url': 'https://api.github.com/users/youpy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/youpy/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T01:20:31Z,2023-02-23T01:20:31Z,NONE,"> I am reluctant to change long-established behaviour (this was introduced in https://github.com/rails/rails/pull/20831), but if we do think it's a bad idea to make this guess, IMO it's probably better to deprecate and remove it entirely rather than make it configurable.

I agree. I don't know how much of an impact this change will have, but if it can be done, I too think it is a good idea.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1441104335/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47448
https://api.github.com/repos/rails/rails/issues/comments/1436553500,https://github.com/rails/rails/pull/47437#issuecomment-1436553500,https://api.github.com/repos/rails/rails/issues/47437,1436553500,IC_kwDNIULOVaARHA,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-20T08:41:06Z,2023-02-20T08:41:06Z,MEMBER,"🔴 

```
Failure:
--
  | AppGeneratorTest#test_generation_runs_bundle_install [test/generators/app_generator_test.rb:694]:
  | Expected file ""/rails/railties/test/fixtures/tmp/Gemfile.lock"" to exist, but does not

```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1436553500/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47437
https://api.github.com/repos/rails/rails/issues/comments/1478837265,https://github.com/rails/rails/pull/47437#issuecomment-1478837265,https://api.github.com/repos/rails/rails/issues/47437,1478837265,IC_kwDNIULOWCVEEQ,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-03-22T02:30:19Z,2023-03-22T02:30:19Z,MEMBER,Would love to know why this test is failing 🤔 ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1478837265/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47437
https://api.github.com/repos/rails/rails/issues/comments/1479631251,https://github.com/rails/rails/pull/47437#issuecomment-1479631251,https://api.github.com/repos/rails/rails/issues/47437,1479631251,IC_kwDNIULOWDFhkw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-03-22T14:07:43Z,2023-03-22T14:07:43Z,MEMBER,I think for `bundle install` to actually work we would need to change the test like #46478,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1479631251/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47437
https://api.github.com/repos/rails/rails/issues/comments/1482499092,https://github.com/rails/rails/pull/47437#issuecomment-1482499092,https://api.github.com/repos/rails/rails/issues/47437,1482499092,IC_kwDNIULOWF0kFA,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-03-24T09:27:58Z,2023-03-24T09:27:58Z,MEMBER,FWIW I did try `run_generator_and_bundler` but couldn't get it to work /cc @jonathanhefner ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1482499092/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47437
https://api.github.com/repos/rails/rails/issues/comments/1489269862,https://github.com/rails/rails/pull/47437#issuecomment-1489269862,https://api.github.com/repos/rails/rails/issues/47437,1489269862,IC_kwDNIULOWMR0Zg,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2023-03-29T20:32:37Z,2023-03-29T20:32:37Z,MEMBER,"The reason the assertion fails is because `run_generator_instance` does not run Bundler (for performance reasons).  Instead, it stubs `bundle_command` and tracks Bundler invocations in `@bundle_commands`:

https://github.com/rails/rails/blob/4d171a4bde5317c9bb6a6f178597458fed84037f/railties/test/generators/shared_generator_tests.rb#L337-L344

I'm not sure why the assertion passes for you locally.  Maybe you have a `Gemfile.lock` from another source that didn't get cleared?

> FWIW I did try `run_generator_and_bundler` but couldn't get it to work

How so?  What did not work?

Keep in mind, though, that we should only run Bundler when necessary (for performance reasons).  Asserting that `Gemfile.lock` exists is essentially testing Bundler's behavior, which *should be* unnecessary.  Asserting that we've called Bundler properly *should be* enough.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1489269862/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47437
https://api.github.com/repos/rails/rails/issues/comments/1655070764,https://github.com/rails/rails/pull/47430#issuecomment-1655070764,https://api.github.com/repos/rails/rails/issues/47430,1655070764,IC_kwDNIULOYqZgLA,"{'login': 'KJTsanaktsidis', 'id': 1418177, 'node_id': 'MDQ6VXNlcjE0MTgxNzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1418177?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/KJTsanaktsidis', 'html_url': 'https://github.com/KJTsanaktsidis', 'followers_url': 'https://api.github.com/users/KJTsanaktsidis/followers', 'following_url': 'https://api.github.com/users/KJTsanaktsidis/following{/other_user}', 'gists_url': 'https://api.github.com/users/KJTsanaktsidis/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/KJTsanaktsidis/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/KJTsanaktsidis/subscriptions', 'organizations_url': 'https://api.github.com/users/KJTsanaktsidis/orgs', 'repos_url': 'https://api.github.com/users/KJTsanaktsidis/repos', 'events_url': 'https://api.github.com/users/KJTsanaktsidis/events{/privacy}', 'received_events_url': 'https://api.github.com/users/KJTsanaktsidis/received_events', 'type': 'User', 'site_admin': False}",2023-07-28T05:59:10Z,2023-07-28T05:59:10Z,NONE,"💯 - I'm trying to customize the logging behaviour of my Rails app and the lack of this is quite painful. I'm trying to refactor how we do structured request logs in our app, and the lack of status/response header information in the `request.action_dispatch` notification means I have to _also_ add a middleware below `Rails::Rack::Logger` to get this. It would be much neater if I could avoid the need for middleware.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1655070764/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47430
https://api.github.com/repos/rails/rails/issues/comments/1507727186,https://github.com/rails/rails/issues/47426#issuecomment-1507727186,https://api.github.com/repos/rails/rails/issues/47426,1507727186,IC_kwDNIULOWd4XUg,"{'login': 'doconnor-clintel', 'id': 86343144, 'node_id': 'MDQ6VXNlcjg2MzQzMTQ0', 'avatar_url': 'https://avatars.githubusercontent.com/u/86343144?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/doconnor-clintel', 'html_url': 'https://github.com/doconnor-clintel', 'followers_url': 'https://api.github.com/users/doconnor-clintel/followers', 'following_url': 'https://api.github.com/users/doconnor-clintel/following{/other_user}', 'gists_url': 'https://api.github.com/users/doconnor-clintel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/doconnor-clintel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/doconnor-clintel/subscriptions', 'organizations_url': 'https://api.github.com/users/doconnor-clintel/orgs', 'repos_url': 'https://api.github.com/users/doconnor-clintel/repos', 'events_url': 'https://api.github.com/users/doconnor-clintel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/doconnor-clintel/received_events', 'type': 'User', 'site_admin': False}",2023-04-13T23:28:54Z,2023-04-13T23:36:07Z,NONE,"I think I am experiencing something similar, rails 6.1 + ruby 2.6.6 where:

```
class Receipt
   ...
   accepts_nested_attributes_for :transactions
   has_many :transactions
   
end

transactions = [Transaction.new(a: 1), Transaction.new(a: 2)]

r = Receipt.new
transactions.each do |t|
   r.transactions << t

   puts r.transactions
end
```

Rather than seeing two records, you see only one.

```
r.transactions.proxy_association
...
@replaced_or_added_targets=
  #<Set: {#<Transaction:0x000055f5b5f166b0
     a: 2: """">}>,
```

However, if you do:
```
r = Receipt.new
transactions.each do |t|
   r.transactions << t

   puts r.transactions.length
end
```
You then get the expected behaviour.

I worked around this by doing an explicit save *before* pushing the records onto the has many relationship, which seems to avoid the issue.

Issue is not present in Rails 6","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1507727186/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47426
https://api.github.com/repos/rails/rails/issues/comments/1554242845,https://github.com/rails/rails/issues/47426#issuecomment-1554242845,https://api.github.com/repos/rails/rails/issues/47426,1554242845,IC_kwDNIULOXKPdHQ,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-05-19T08:43:00Z,2023-05-19T08:43:00Z,MEMBER,"Thanks for your report!

I think the main question here is whether or not this behavior is intended.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1554242845/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47426
https://api.github.com/repos/rails/rails/issues/comments/1551578521,https://github.com/rails/rails/issues/47416#issuecomment-1551578521,https://api.github.com/repos/rails/rails/issues/47416,1551578521,IC_kwDNIULOXHs1mQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-05-17T15:10:01Z,2023-05-17T15:10:01Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1551578521/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47416
https://api.github.com/repos/rails/rails/issues/comments/1679230670,https://github.com/rails/rails/issues/47416#issuecomment-1679230670,https://api.github.com/repos/rails/rails/issues/47416,1679230670,IC_kwDNIULOZBcGzg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-15T16:13:54Z,2023-08-15T16:13:54Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1679230670/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47416
https://api.github.com/repos/rails/rails/issues/comments/1679463866,https://github.com/rails/rails/issues/47416#issuecomment-1679463866,https://api.github.com/repos/rails/rails/issues/47416,1679463866,IC_kwDNIULOZBqVug,"{'login': 'rubys', 'id': 4815, 'node_id': 'MDQ6VXNlcjQ4MTU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4815?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rubys', 'html_url': 'https://github.com/rubys', 'followers_url': 'https://api.github.com/users/rubys/followers', 'following_url': 'https://api.github.com/users/rubys/following{/other_user}', 'gists_url': 'https://api.github.com/users/rubys/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rubys/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rubys/subscriptions', 'organizations_url': 'https://api.github.com/users/rubys/orgs', 'repos_url': 'https://api.github.com/users/rubys/repos', 'events_url': 'https://api.github.com/users/rubys/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rubys/received_events', 'type': 'User', 'site_admin': False}",2023-08-15T19:15:57Z,2023-08-15T19:15:57Z,CONTRIBUTOR,"I don't know if Rails is interested in this code, let me know, but I have had the code running in production on fly.io for some time now: https://github.com/fly-apps/dockerfile-rails/blob/6730970a434d01d22af5fe84cc102fc2fd5b5f52/lib/generators/dockerfile_generator.rb#L913-L936

Let me know and I'll create a pull request.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1679463866/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47416
https://api.github.com/repos/rails/rails/issues/comments/1680853571,https://github.com/rails/rails/issues/47416#issuecomment-1680853571,https://api.github.com/repos/rails/rails/issues/47416,1680853571,IC_kwDNIULOZC_KQw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-08-16T15:43:31Z,2023-08-16T15:43:31Z,MEMBER,"That is a good question @rubys. It is being a while that I'm bothered by yarn, I think maybe we should change to use npm. We probably would still need to track the npm version we care about. Also, I was thinking, why we have yarn or even npm in Rails if the default assets pipeline doesn't require node anymore.

I have too many questions about how this is working right now.

I'll take a look and if we really need this I'll let you know in case you want to send a PR.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1680853571/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47416
https://api.github.com/repos/rails/rails/issues/comments/1681442001,https://github.com/rails/rails/issues/47416#issuecomment-1681442001,https://api.github.com/repos/rails/rails/issues/47416,1681442001,IC_kwDNIULOZDjE0Q,"{'login': 'rubys', 'id': 4815, 'node_id': 'MDQ6VXNlcjQ4MTU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4815?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rubys', 'html_url': 'https://github.com/rubys', 'followers_url': 'https://api.github.com/users/rubys/followers', 'following_url': 'https://api.github.com/users/rubys/following{/other_user}', 'gists_url': 'https://api.github.com/users/rubys/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rubys/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rubys/subscriptions', 'organizations_url': 'https://api.github.com/users/rubys/orgs', 'repos_url': 'https://api.github.com/users/rubys/repos', 'events_url': 'https://api.github.com/users/rubys/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rubys/received_events', 'type': 'User', 'site_admin': False}",2023-08-17T00:41:47Z,2023-08-17T00:41:47Z,CONTRIBUTOR,"> Also, I was thinking, why we have yarn or even npm in Rails if the default assets pipeline doesn't require node anymore.

By default, we don't have it (at least not in the dockerfile).  But the dockerfile template supports the options that pull in node.

Yarn is an interesting beast: most people use yarn v1.  But there is a v2 and v3, and even a v4 rc.  And there is a new upstart: pnpm.  And bun has its own package manager.

Given that node is no longer the default for Rails, and that npm has caught up with (and perhaps even surpassed) yarn v1; I do think that their is a good case for Rails choosing npm as the new default; a default that those that care to venture out to other package mangers can chose to change if they so desire.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1681442001/reactions', 'total_count': 3, '+1': 3, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47416
https://api.github.com/repos/rails/rails/issues/comments/1426343732,https://github.com/rails/rails/pull/47360#issuecomment-1426343732,https://api.github.com/repos/rails/rails/issues/47360,1426343732,IC_kwDNIULOVQRHNA,"{'login': 'bradhuskins', 'id': 107579835, 'node_id': 'U_kgDOBmmJuw', 'avatar_url': 'https://avatars.githubusercontent.com/u/107579835?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bradhuskins', 'html_url': 'https://github.com/bradhuskins', 'followers_url': 'https://api.github.com/users/bradhuskins/followers', 'following_url': 'https://api.github.com/users/bradhuskins/following{/other_user}', 'gists_url': 'https://api.github.com/users/bradhuskins/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bradhuskins/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bradhuskins/subscriptions', 'organizations_url': 'https://api.github.com/users/bradhuskins/orgs', 'repos_url': 'https://api.github.com/users/bradhuskins/repos', 'events_url': 'https://api.github.com/users/bradhuskins/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bradhuskins/received_events', 'type': 'User', 'site_admin': False}",2023-02-10T21:04:05Z,2023-02-10T21:04:05Z,NONE,"lgtm. Deprecating non-proc default attributes would have been a worse UX for devs, imo.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1426343732/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47360
https://api.github.com/repos/rails/rails/issues/comments/1541631023,https://github.com/rails/rails/pull/47360#issuecomment-1541631023,https://api.github.com/repos/rails/rails/issues/47360,1541631023,IC_kwDNIULOW-NsLw,"{'login': 'ihoka', 'id': 30113, 'node_id': 'MDQ6VXNlcjMwMTEz', 'avatar_url': 'https://avatars.githubusercontent.com/u/30113?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ihoka', 'html_url': 'https://github.com/ihoka', 'followers_url': 'https://api.github.com/users/ihoka/followers', 'following_url': 'https://api.github.com/users/ihoka/following{/other_user}', 'gists_url': 'https://api.github.com/users/ihoka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ihoka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ihoka/subscriptions', 'organizations_url': 'https://api.github.com/users/ihoka/orgs', 'repos_url': 'https://api.github.com/users/ihoka/repos', 'events_url': 'https://api.github.com/users/ihoka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ihoka/received_events', 'type': 'User', 'site_admin': False}",2023-05-10T09:06:25Z,2023-05-10T09:06:25Z,NONE,"It seems to me that such a change should come with an accompanying documentation update, stating the change in behaviour.

Are there concerns about what this might do to existing applications which rely on the non-duping behaviour?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1541631023/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47360
https://api.github.com/repos/rails/rails/issues/comments/1546193573,https://github.com/rails/rails/pull/47360#issuecomment-1546193573,https://api.github.com/repos/rails/rails/issues/47360,1546193573,IC_kwDNIULOXCkKpQ,"{'login': 'jesse-shopify', 'id': 85650604, 'node_id': 'MDQ6VXNlcjg1NjUwNjA0', 'avatar_url': 'https://avatars.githubusercontent.com/u/85650604?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jesse-shopify', 'html_url': 'https://github.com/jesse-shopify', 'followers_url': 'https://api.github.com/users/jesse-shopify/followers', 'following_url': 'https://api.github.com/users/jesse-shopify/following{/other_user}', 'gists_url': 'https://api.github.com/users/jesse-shopify/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jesse-shopify/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jesse-shopify/subscriptions', 'organizations_url': 'https://api.github.com/users/jesse-shopify/orgs', 'repos_url': 'https://api.github.com/users/jesse-shopify/repos', 'events_url': 'https://api.github.com/users/jesse-shopify/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jesse-shopify/received_events', 'type': 'User', 'site_admin': False}",2023-05-12T19:34:33Z,2023-05-12T19:35:11Z,CONTRIBUTOR,"I don't think anyone can go wrong with a documentation update. However, the existing documentation already seems at odds with the existing behavior. There is no documentation that changing an instance class member set by a default will change the default of classes created afterward.

This also seems unlikely to have users dependent on this. The point of having a default is that it is unchanging, or that changing would be through changing on the base class, not on an instance.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1546193573/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47360
https://api.github.com/repos/rails/rails/issues/comments/1634881422,https://github.com/rails/rails/pull/47360#issuecomment-1634881422,https://api.github.com/repos/rails/rails/issues/47360,1634881422,IC_kwDNIULOYXJPjg,"{'login': 'mweitzel', 'id': 318925, 'node_id': 'MDQ6VXNlcjMxODkyNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/318925?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mweitzel', 'html_url': 'https://github.com/mweitzel', 'followers_url': 'https://api.github.com/users/mweitzel/followers', 'following_url': 'https://api.github.com/users/mweitzel/following{/other_user}', 'gists_url': 'https://api.github.com/users/mweitzel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mweitzel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mweitzel/subscriptions', 'organizations_url': 'https://api.github.com/users/mweitzel/orgs', 'repos_url': 'https://api.github.com/users/mweitzel/repos', 'events_url': 'https://api.github.com/users/mweitzel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mweitzel/received_events', 'type': 'User', 'site_admin': False}",2023-07-13T20:40:17Z,2023-07-13T20:40:17Z,NONE,"Can this please merge? It is not documented anywhere that this was expected behavior. I was astonished to see this is a two-year-old open issue.

This is super strange to see the Attributes API behavior for defaults change depending on whether or not the object is backed by a db column. That alone I'd consider a bug.

```ruby
class User
  attribute :db_attr, default: {}   # not a shared object, since the type_cast duplicates
  attribute :mem_attr, default: {}  # yes a shared object!? even without type_cast I'd expect this to duplicate
end
```

This is a HUGE issue. It is wildly compounded if you're using a gem like [StoreModel](https://github.com/DmitryTsepelev/store_model), where:
1. all attributes are serialized, and
2. none of the attributes get a default type_cast, since there's no db column to check

Basic features like form updates can create data leaks across different objects.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1634881422/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47360
https://api.github.com/repos/rails/rails/issues/comments/1635253567,https://github.com/rails/rails/pull/47360#issuecomment-1635253567,https://api.github.com/repos/rails/rails/issues/47360,1635253567,IC_kwDNIULOYXf9Pw,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-07-14T04:30:40Z,2023-07-14T04:30:40Z,MEMBER,"This assumes that the supplied object supports `deep_dup` (and that any `frozen?` object is deeply frozen / semantically immutable). That's true of an empty hash, but do we risk a harder-to-document, greater, surprise if some mutable objects are shared and some are not?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1635253567/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47360
https://api.github.com/repos/rails/rails/issues/comments/1636355500,https://github.com/rails/rails/pull/47360#issuecomment-1636355500,https://api.github.com/repos/rails/rails/issues/47360,1636355500,IC_kwDNIULOYYjNrA,"{'login': 'mweitzel', 'id': 318925, 'node_id': 'MDQ6VXNlcjMxODkyNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/318925?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mweitzel', 'html_url': 'https://github.com/mweitzel', 'followers_url': 'https://api.github.com/users/mweitzel/followers', 'following_url': 'https://api.github.com/users/mweitzel/following{/other_user}', 'gists_url': 'https://api.github.com/users/mweitzel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mweitzel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mweitzel/subscriptions', 'organizations_url': 'https://api.github.com/users/mweitzel/orgs', 'repos_url': 'https://api.github.com/users/mweitzel/repos', 'events_url': 'https://api.github.com/users/mweitzel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mweitzel/received_events', 'type': 'User', 'site_admin': False}",2023-07-14T20:01:57Z,2023-07-14T20:01:57Z,NONE,"@matthewd good point on the `frozen?` branching. This would just push inconsistencies down a layer.

> This assumes that the supplied object supports deep_dup

I think it is safe to assume `deep_dup` is provided to all objects, since it is a [Active Support Core Extension](https://github.com/rails/rails/blob/v7.0.6/activesupport/lib/active_support/core_ext/object/deep_dup.rb) (am I wrong?). Calling that should be safe and the PR would simplify.

Can we merge this if it just calls `@user_provided_value.deep_dup` and doesn't branch on frozen?

And @jesse-shopify, what was the reason you chose to guard this call with a frozen check?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1636355500/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47360
https://api.github.com/repos/rails/rails/issues/comments/1664611431,https://github.com/rails/rails/pull/47360#issuecomment-1664611431,https://api.github.com/repos/rails/rails/issues/47360,1664611431,IC_kwDNIULOYzf0Zw,"{'login': 'jesse-shopify', 'id': 85650604, 'node_id': 'MDQ6VXNlcjg1NjUwNjA0', 'avatar_url': 'https://avatars.githubusercontent.com/u/85650604?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jesse-shopify', 'html_url': 'https://github.com/jesse-shopify', 'followers_url': 'https://api.github.com/users/jesse-shopify/followers', 'following_url': 'https://api.github.com/users/jesse-shopify/following{/other_user}', 'gists_url': 'https://api.github.com/users/jesse-shopify/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jesse-shopify/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jesse-shopify/subscriptions', 'organizations_url': 'https://api.github.com/users/jesse-shopify/orgs', 'repos_url': 'https://api.github.com/users/jesse-shopify/repos', 'events_url': 'https://api.github.com/users/jesse-shopify/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jesse-shopify/received_events', 'type': 'User', 'site_admin': False}",2023-08-03T20:33:35Z,2023-08-10T18:21:41Z,CONTRIBUTOR,"> @matthewd good point on the `frozen?` branching. This would just push inconsistencies down a layer.
> 
> > This assumes that the supplied object supports deep_dup
> 
> I think it is safe to assume `deep_dup` is provided to all objects, since it is a [Active Support Core Extension](https://github.com/rails/rails/blob/v7.0.6/activesupport/lib/active_support/core_ext/object/deep_dup.rb) (am I wrong?). Calling that should be safe and the PR would simplify.
> 
> Can we merge this if it just calls `@user_provided_value.deep_dup` and doesn't branch on frozen?
> 
> And @jesse-shopify, what was the reason you chose to guard this call with a frozen check?

The goal was to reduce allocations. It's a pretty small use case I suspect, but strings would be a case where frozen is likely and `deep_dup` is not needed. However if removing the branch has more support than I don't see any problem with that.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1664611431/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47360
https://api.github.com/repos/rails/rails/issues/comments/1546117468,https://github.com/rails/rails/issues/47357#issuecomment-1546117468,https://api.github.com/repos/rails/rails/issues/47357,1546117468,IC_kwDNIULOXCfhXA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-05-12T18:21:33Z,2023-05-12T18:21:33Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1546117468/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47357
https://api.github.com/repos/rails/rails/issues/comments/1426854879,https://github.com/rails/rails/pull/47350#issuecomment-1426854879,https://api.github.com/repos/rails/rails/issues/47350,1426854879,IC_kwDNIULOVQwT3w,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-02-11T19:02:36Z,2023-02-11T19:02:36Z,MEMBER,"Hi @krtschmr 👋
A similar PR has been submitted before but was rejected: https://github.com/rails/rails/pull/33497","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1426854879/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47350
https://api.github.com/repos/rails/rails/issues/comments/1426880436,https://github.com/rails/rails/pull/47350#issuecomment-1426880436,https://api.github.com/repos/rails/rails/issues/47350,1426880436,IC_kwDNIULOVQx3tA,"{'login': 'krtschmr', 'id': 13366714, 'node_id': 'MDQ6VXNlcjEzMzY2NzE0', 'avatar_url': 'https://avatars.githubusercontent.com/u/13366714?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/krtschmr', 'html_url': 'https://github.com/krtschmr', 'followers_url': 'https://api.github.com/users/krtschmr/followers', 'following_url': 'https://api.github.com/users/krtschmr/following{/other_user}', 'gists_url': 'https://api.github.com/users/krtschmr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/krtschmr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/krtschmr/subscriptions', 'organizations_url': 'https://api.github.com/users/krtschmr/orgs', 'repos_url': 'https://api.github.com/users/krtschmr/repos', 'events_url': 'https://api.github.com/users/krtschmr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/krtschmr/received_events', 'type': 'User', 'site_admin': False}",2023-02-11T21:30:25Z,2023-02-11T21:30:25Z,NONE,"@p8 thanks for the information. i looked before but couldn't find it. It seems that my PR is the third try to get _something like this_ merged into active-record, maybe it's time to rethink and actually make it happen. I like the `Hash and zip` implementation of the other PRs. 

the suggested alternative ""use `Person.select(:id, :name, :something)` , which is somewhat ""good enough"" doesn't sound good enough to me. IT still consumes more memory, and is slower. Sometimes, you really just want to render big datasets quickly, `render json: DataSet.pluck_as_hash(:id, :name, :data, :value)` and that's about it. 
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1426880436/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47350
https://api.github.com/repos/rails/rails/issues/comments/1437150912,https://github.com/rails/rails/pull/47350#issuecomment-1437150912,https://api.github.com/repos/rails/rails/issues/47350,1437150912,IC_kwDNIULOVakuwA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-02-20T14:58:20Z,2023-02-20T14:58:47Z,MEMBER,Another related PR to retrieve the raw results: https://github.com/rails/rails/pull/33839,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1437150912/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47350
https://api.github.com/repos/rails/rails/issues/comments/1425928503,https://github.com/rails/rails/pull/47341#issuecomment-1425928503,https://api.github.com/repos/rails/rails/issues/47341,1425928503,IC_kwDNIULOVP3xNw,"{'login': 'bradhuskins', 'id': 107579835, 'node_id': 'U_kgDOBmmJuw', 'avatar_url': 'https://avatars.githubusercontent.com/u/107579835?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bradhuskins', 'html_url': 'https://github.com/bradhuskins', 'followers_url': 'https://api.github.com/users/bradhuskins/followers', 'following_url': 'https://api.github.com/users/bradhuskins/following{/other_user}', 'gists_url': 'https://api.github.com/users/bradhuskins/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bradhuskins/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bradhuskins/subscriptions', 'organizations_url': 'https://api.github.com/users/bradhuskins/orgs', 'repos_url': 'https://api.github.com/users/bradhuskins/repos', 'events_url': 'https://api.github.com/users/bradhuskins/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bradhuskins/received_events', 'type': 'User', 'site_admin': False}",2023-02-10T15:01:51Z,2023-02-10T15:01:51Z,NONE,"> 

Thanks for the feedback! We're not supposed to create Drafts apparently, otherwise this would have been.
I have restricted the scope of the ""route equivalency"" check to only be applied when the root route is requested without parameters, since this was really the crux of the issue created.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1425928503/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47341
https://api.github.com/repos/rails/rails/issues/comments/1430431898,https://github.com/rails/rails/pull/47341#issuecomment-1430431898,https://api.github.com/repos/rails/rails/issues/47341,1430431898,IC_kwDNIULOVUKomg,"{'login': 'bradhuskins', 'id': 107579835, 'node_id': 'U_kgDOBmmJuw', 'avatar_url': 'https://avatars.githubusercontent.com/u/107579835?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bradhuskins', 'html_url': 'https://github.com/bradhuskins', 'followers_url': 'https://api.github.com/users/bradhuskins/followers', 'following_url': 'https://api.github.com/users/bradhuskins/following{/other_user}', 'gists_url': 'https://api.github.com/users/bradhuskins/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bradhuskins/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bradhuskins/subscriptions', 'organizations_url': 'https://api.github.com/users/bradhuskins/orgs', 'repos_url': 'https://api.github.com/users/bradhuskins/repos', 'events_url': 'https://api.github.com/users/bradhuskins/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bradhuskins/received_events', 'type': 'User', 'site_admin': False}",2023-02-14T22:00:33Z,2023-02-14T22:00:33Z,NONE,"@skipkayhil Any thoughts on this scaled back approach, where we only perform the route equivalency check if the path passed maps to '/'? I believe it addresses your concerns.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1430431898/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47341
https://api.github.com/repos/rails/rails/issues/comments/1520910131,https://github.com/rails/rails/issues/47334#issuecomment-1520910131,https://api.github.com/repos/rails/rails/issues/47334,1520910131,IC_kwDNIULOWqc_Mw,"{'login': 'fmichaut-diff', 'id': 102073083, 'node_id': 'U_kgDOBhWC-w', 'avatar_url': 'https://avatars.githubusercontent.com/u/102073083?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fmichaut-diff', 'html_url': 'https://github.com/fmichaut-diff', 'followers_url': 'https://api.github.com/users/fmichaut-diff/followers', 'following_url': 'https://api.github.com/users/fmichaut-diff/following{/other_user}', 'gists_url': 'https://api.github.com/users/fmichaut-diff/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fmichaut-diff/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fmichaut-diff/subscriptions', 'organizations_url': 'https://api.github.com/users/fmichaut-diff/orgs', 'repos_url': 'https://api.github.com/users/fmichaut-diff/repos', 'events_url': 'https://api.github.com/users/fmichaut-diff/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fmichaut-diff/received_events', 'type': 'User', 'site_admin': False}",2023-04-24T22:32:04Z,2023-04-24T22:32:53Z,NONE,"Currently facing the same issue on Rails 7.0.4, Ruby 3.2.0 with only 2 models instead of 3.

```
class Parent
  has_many :children
end

class Child
  belongs_to :parent

  validates :name, uniqueness: { scope: :parent }
end
```

I also get `parent.errors.full_messages #=> ""Children invalid""` instead of the `Child's name already taken` which I want to display.
Passing `message: 'some message'` to `validate` or using `errors.add` or `i18n` all are giving the same result : the custom error message is only present on the child record, and is replaced by the `invalid` message on the parent

I would have expected the full error messages to be reported on the parent, as currently the custom messages can't be displayed","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1520910131/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47334
https://api.github.com/repos/rails/rails/issues/comments/1665595215,https://github.com/rails/rails/issues/47334#issuecomment-1665595215,https://api.github.com/repos/rails/rails/issues/47334,1665595215,IC_kwDNIULOY0b3Tw,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-04T13:17:30Z,2023-08-04T13:17:30Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1665595215/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47334
https://api.github.com/repos/rails/rails/issues/comments/1427217229,https://github.com/rails/rails/pull/47324#issuecomment-1427217229,https://api.github.com/repos/rails/rails/issues/47324,1427217229,IC_kwDNIULOVRGbTQ,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-13T01:57:21Z,2023-02-13T01:57:21Z,MEMBER,LGTM but we still need to get a review. Can you squash your commits please? :bow:,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1427217229/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47324
https://api.github.com/repos/rails/rails/issues/comments/1429172142,https://github.com/rails/rails/pull/47306#issuecomment-1429172142,https://api.github.com/repos/rails/rails/issues/47306,1429172142,IC_kwDNIULOVS9vrg,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-14T06:07:09Z,2023-02-14T06:07:09Z,MEMBER,@rafaelfranca Do you think we need a test for `route_uri_pattern=`? ([ref](https://github.com/rails/rails/blob/75a1871b3919db95fcaf19089b5ada0889092c0c/actionpack/lib/action_dispatch/http/request.rb#L156-L158)),"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1429172142/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47306
https://api.github.com/repos/rails/rails/issues/comments/1431099584,https://github.com/rails/rails/pull/47292#issuecomment-1431099584,https://api.github.com/repos/rails/rails/issues/47292,1431099584,IC_kwDNIULOVUzYwA,"{'login': 'exosty', 'id': 14030560, 'node_id': 'MDQ6VXNlcjE0MDMwNTYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/14030560?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/exosty', 'html_url': 'https://github.com/exosty', 'followers_url': 'https://api.github.com/users/exosty/followers', 'following_url': 'https://api.github.com/users/exosty/following{/other_user}', 'gists_url': 'https://api.github.com/users/exosty/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/exosty/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/exosty/subscriptions', 'organizations_url': 'https://api.github.com/users/exosty/orgs', 'repos_url': 'https://api.github.com/users/exosty/repos', 'events_url': 'https://api.github.com/users/exosty/events{/privacy}', 'received_events_url': 'https://api.github.com/users/exosty/received_events', 'type': 'User', 'site_admin': False}",2023-02-15T10:28:34Z,2023-02-15T10:28:34Z,NONE,@jonathanhefner Hey. Can you review it please?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1431099584/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47292
https://api.github.com/repos/rails/rails/issues/comments/1453594668,https://github.com/rails/rails/pull/47292#issuecomment-1453594668,https://api.github.com/repos/rails/rails/issues/47292,1453594668,IC_kwDNIULOVqQYLA,"{'login': 'exosty', 'id': 14030560, 'node_id': 'MDQ6VXNlcjE0MDMwNTYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/14030560?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/exosty', 'html_url': 'https://github.com/exosty', 'followers_url': 'https://api.github.com/users/exosty/followers', 'following_url': 'https://api.github.com/users/exosty/following{/other_user}', 'gists_url': 'https://api.github.com/users/exosty/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/exosty/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/exosty/subscriptions', 'organizations_url': 'https://api.github.com/users/exosty/orgs', 'repos_url': 'https://api.github.com/users/exosty/repos', 'events_url': 'https://api.github.com/users/exosty/events{/privacy}', 'received_events_url': 'https://api.github.com/users/exosty/received_events', 'type': 'User', 'site_admin': False}",2023-03-03T14:14:12Z,2023-03-03T14:14:12Z,NONE,"@jonathanhefner ping 🙂  
would be nice either to have it either merged or cancelled ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1453594668/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47292
https://api.github.com/repos/rails/rails/issues/comments/1454267616,https://github.com/rails/rails/pull/47292#issuecomment-1454267616,https://api.github.com/repos/rails/rails/issues/47292,1454267616,IC_kwDNIULOVq5c4A,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-03-03T23:37:52Z,2023-03-03T23:37:52Z,MEMBER,"@exosty Thanks for your PR, but please don't ping contributors. Someone will review it when they have time, if you want to get feedback we recommend posting it on the discord. :bow:","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1454267616/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47292
https://api.github.com/repos/rails/rails/issues/comments/1480818294,https://github.com/rails/rails/pull/47292#issuecomment-1480818294,https://api.github.com/repos/rails/rails/issues/47292,1480818294,IC_kwDNIULOWEN-dg,"{'login': 'exosty', 'id': 14030560, 'node_id': 'MDQ6VXNlcjE0MDMwNTYw', 'avatar_url': 'https://avatars.githubusercontent.com/u/14030560?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/exosty', 'html_url': 'https://github.com/exosty', 'followers_url': 'https://api.github.com/users/exosty/followers', 'following_url': 'https://api.github.com/users/exosty/following{/other_user}', 'gists_url': 'https://api.github.com/users/exosty/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/exosty/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/exosty/subscriptions', 'organizations_url': 'https://api.github.com/users/exosty/orgs', 'repos_url': 'https://api.github.com/users/exosty/repos', 'events_url': 'https://api.github.com/users/exosty/events{/privacy}', 'received_events_url': 'https://api.github.com/users/exosty/received_events', 'type': 'User', 'site_admin': False}",2023-03-23T09:00:09Z,2023-03-23T09:00:09Z,NONE,[ping],"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1480818294/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47292
https://api.github.com/repos/rails/rails/issues/comments/1657553983,https://github.com/rails/rails/pull/47292#issuecomment-1657553983,https://api.github.com/repos/rails/rails/issues/47292,1657553983,IC_kwDNIULOYsxEPw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-07-31T04:36:03Z,2023-07-31T04:36:03Z,MEMBER,"hey @exosty, can you rebase on `main`? I believe a lot of the CI failures you are seeing have been fixed and your branch just needs to include them","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1657553983/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47292
https://api.github.com/repos/rails/rails/issues/comments/1436062467,https://github.com/rails/rails/pull/47290#issuecomment-1436062467,https://api.github.com/repos/rails/rails/issues/47290,1436062467,IC_kwDNIULOVZiTAw,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-02-19T18:42:14Z,2023-02-19T18:42:20Z,MEMBER,"For what it's worth, I agree this is a bug. Have you had a chance to work on a patch?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1436062467/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47290
https://api.github.com/repos/rails/rails/issues/comments/1437089246,https://github.com/rails/rails/pull/47290#issuecomment-1437089246,https://api.github.com/repos/rails/rails/issues/47290,1437089246,IC_kwDNIULOVag93g,"{'login': 'yoones', 'id': 1333898, 'node_id': 'MDQ6VXNlcjEzMzM4OTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1333898?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yoones', 'html_url': 'https://github.com/yoones', 'followers_url': 'https://api.github.com/users/yoones/followers', 'following_url': 'https://api.github.com/users/yoones/following{/other_user}', 'gists_url': 'https://api.github.com/users/yoones/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yoones/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yoones/subscriptions', 'organizations_url': 'https://api.github.com/users/yoones/orgs', 'repos_url': 'https://api.github.com/users/yoones/repos', 'events_url': 'https://api.github.com/users/yoones/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yoones/received_events', 'type': 'User', 'site_admin': False}",2023-02-20T14:14:23Z,2023-02-20T14:14:23Z,CONTRIBUTOR,"> For what it's worth, I agree this is a bug. Have you had a chance to work on a patch?

Yes, I pushed a proposition a few hours ago. I'm not sure whether I'm patching the bug at the right place as I'm not super familiar with ActiveRecord source code, please let me know if this is going in the right direction or not :)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1437089246/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47290
https://api.github.com/repos/rails/rails/issues/comments/1437341842,https://github.com/rails/rails/pull/47290#issuecomment-1437341842,https://api.github.com/repos/rails/rails/issues/47290,1437341842,IC_kwDNIULOVawYkg,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-02-20T17:18:48Z,2023-02-20T17:19:03Z,MEMBER,"There's some failing tests that look relevant, I can have a look again when they're resolved, but it seems like it's on the right track to me (note: I'm not on core team so wouldn't be able to merge this regardless).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1437341842/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47290
https://api.github.com/repos/rails/rails/issues/comments/1443540714,https://github.com/rails/rails/pull/47290#issuecomment-1443540714,https://api.github.com/repos/rails/rails/issues/47290,1443540714,IC_kwDNIULOVgqu6g,"{'login': 'yoones', 'id': 1333898, 'node_id': 'MDQ6VXNlcjEzMzM4OTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1333898?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yoones', 'html_url': 'https://github.com/yoones', 'followers_url': 'https://api.github.com/users/yoones/followers', 'following_url': 'https://api.github.com/users/yoones/following{/other_user}', 'gists_url': 'https://api.github.com/users/yoones/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yoones/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yoones/subscriptions', 'organizations_url': 'https://api.github.com/users/yoones/orgs', 'repos_url': 'https://api.github.com/users/yoones/repos', 'events_url': 'https://api.github.com/users/yoones/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yoones/received_events', 'type': 'User', 'site_admin': False}",2023-02-24T11:16:16Z,2023-02-24T11:24:13Z,CONTRIBUTOR,I force-push to stay up-to-date with the `main` branch but the PR is ready for review.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1443540714/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47290
https://api.github.com/repos/rails/rails/issues/comments/1416728810,https://github.com/rails/rails/pull/47248#issuecomment-1416728810,https://api.github.com/repos/rails/rails/issues/47248,1416728810,IC_kwDNIULOVHGQ6g,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2023-02-04T11:33:57Z,2023-02-04T11:33:57Z,MEMBER,"I don't have any easy alternative suggestion right now, but I feel like ""change"" is a somewhat unfortunately hollow verb here, FWIW.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1416728810/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47248
https://api.github.com/repos/rails/rails/issues/comments/1416809482,https://github.com/rails/rails/pull/47248#issuecomment-1416809482,https://api.github.com/repos/rails/rails/issues/47248,1416809482,IC_kwDNIULOVHLMCg,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2023-02-04T17:41:07Z,2023-02-04T17:41:07Z,MEMBER,"> I don't have any easy alternative suggestion right now, but I feel like ""change"" is a somewhat unfortunately hollow verb here, FWIW.

My original thought was to name this `binstubs:repair`, building on the `dockerfile_binfile_fixups` method it replaces.  But then I added the `--pattern` and `--interpreter` options, and a more generic name seemed appropriate.  (""Change"" shebang from `--pattern` to `--interpreter`, and ""change mode"" to `a+x`.)

I considered `binstubs:update`, but thought it might carry a connotation of changing the code content a la `app:update`.

How do you feel about `binstubs:migrate`?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1416809482/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47248
https://api.github.com/repos/rails/rails/issues/comments/1421382427,https://github.com/rails/rails/pull/47248#issuecomment-1421382427,https://api.github.com/repos/rails/rails/issues/47248,1421382427,IC_kwDNIULOVLiTGw,"{'login': 'guilleiguaran', 'id': 160941, 'node_id': 'MDQ6VXNlcjE2MDk0MQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/160941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/guilleiguaran', 'html_url': 'https://github.com/guilleiguaran', 'followers_url': 'https://api.github.com/users/guilleiguaran/followers', 'following_url': 'https://api.github.com/users/guilleiguaran/following{/other_user}', 'gists_url': 'https://api.github.com/users/guilleiguaran/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/guilleiguaran/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/guilleiguaran/subscriptions', 'organizations_url': 'https://api.github.com/users/guilleiguaran/orgs', 'repos_url': 'https://api.github.com/users/guilleiguaran/repos', 'events_url': 'https://api.github.com/users/guilleiguaran/events{/privacy}', 'received_events_url': 'https://api.github.com/users/guilleiguaran/received_events', 'type': 'User', 'site_admin': False}",2023-02-07T20:13:57Z,2023-02-07T20:13:57Z,MEMBER,wdyt about `binstubs:rebuild` ?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1421382427/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47248
https://api.github.com/repos/rails/rails/issues/comments/1424885731,https://github.com/rails/rails/pull/47248#issuecomment-1424885731,https://api.github.com/repos/rails/rails/issues/47248,1424885731,IC_kwDNIULOVO4H4w,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2023-02-09T21:52:56Z,2023-02-09T21:52:56Z,MEMBER,"> wdyt about `binstubs:rebuild` ?

For me, ""rebuild"" sounds like it would build the binstubs from scratch, replacing existing code content.  Perhaps ""reformat"" is a bit closer?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1424885731/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47248
https://api.github.com/repos/rails/rails/issues/comments/1427244228,https://github.com/rails/rails/pull/47248#issuecomment-1427244228,https://api.github.com/repos/rails/rails/issues/47248,1427244228,IC_kwDNIULOVRIExA,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-13T02:36:37Z,2023-02-13T02:36:37Z,MEMBER,"Does this only apply for updating from Windows -> UNIX? Or are you able to go back?

`binstubs:format` makes sense to me, and leaves the door open if we want to add more functionality later, while `binstubs:update` is too open-ended.

I feel `migrate` is also good if users only run this command once and they're done, but what are they migrating ""to"", and why?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1427244228/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47248
https://api.github.com/repos/rails/rails/issues/comments/1427303935,https://github.com/rails/rails/pull/47248#issuecomment-1427303935,https://api.github.com/repos/rails/rails/issues/47248,1427303935,IC_kwDNIULOVRLt_w,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-02-13T04:00:48Z,2023-02-13T04:00:48Z,MEMBER,"Some ideas I had for the command name were centered around this being a change in `platform`:
- `binstubs:platform:change` (like `db:system:change`)
- `binstubs:replatform`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1427303935/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47248
https://api.github.com/repos/rails/rails/issues/comments/1435781428,https://github.com/rails/rails/pull/47248#issuecomment-1435781428,https://api.github.com/repos/rails/rails/issues/47248,1435781428,IC_kwDNIULOVZRJNA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-02-18T22:21:31Z,2023-02-19T18:02:22Z,MEMBER,"Bundler uses the `bundle binstubs GEM_NAME--shebang` option to change the shebang.
https://bundler.io/v2.4/man/bundle-binstubs.1.html

Maybe: `bin/rails binstubs:shebang`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1435781428/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47248
https://api.github.com/repos/rails/rails/issues/comments/1412892935,https://github.com/rails/rails/pull/47218#issuecomment-1412892935,https://api.github.com/repos/rails/rails/issues/47218,1412892935,IC_kwDNIULOVDcJBw,"{'login': 'alexandreruban', 'id': 33979976, 'node_id': 'MDQ6VXNlcjMzOTc5OTc2', 'avatar_url': 'https://avatars.githubusercontent.com/u/33979976?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/alexandreruban', 'html_url': 'https://github.com/alexandreruban', 'followers_url': 'https://api.github.com/users/alexandreruban/followers', 'following_url': 'https://api.github.com/users/alexandreruban/following{/other_user}', 'gists_url': 'https://api.github.com/users/alexandreruban/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/alexandreruban/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/alexandreruban/subscriptions', 'organizations_url': 'https://api.github.com/users/alexandreruban/orgs', 'repos_url': 'https://api.github.com/users/alexandreruban/repos', 'events_url': 'https://api.github.com/users/alexandreruban/events{/privacy}', 'received_events_url': 'https://api.github.com/users/alexandreruban/received_events', 'type': 'User', 'site_admin': False}",2023-02-01T23:18:38Z,2023-02-01T23:18:51Z,CONTRIBUTOR,Tests failures seem unrelated to the current change.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1412892935/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47218
https://api.github.com/repos/rails/rails/issues/comments/1409886766,https://github.com/rails/rails/pull/47197#issuecomment-1409886766,https://api.github.com/repos/rails/rails/issues/47197,1409886766,IC_kwDNIULOVAkqLg,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-01-31T07:23:53Z,2023-01-31T07:23:53Z,MEMBER,"The same code snippet is being used for the `LoadError` Core Extension below:

https://github.com/rails/rails/blob/ac6e5d4a42aa81b76b2ddc0ab7221576668acf51/guides/source/active_support_core_extensions.md?plain=1#L4052-L4060

However, as I found in #47196, `is_missing` is no longer used anywhere in Rails so I'm not sure if we should update this other snippet or not.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1409886766/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47197
https://api.github.com/repos/rails/rails/issues/comments/1413137811,https://github.com/rails/rails/pull/47197#issuecomment-1413137811,https://api.github.com/repos/rails/rails/issues/47197,1413137811,IC_kwDNIULOVDrFkw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-02T04:32:07Z,2023-02-02T04:32:07Z,MEMBER,"@skipkayhil Should we just link to the docs for this method instead? It doesn't feel right copy-pasting code into the guides, I've seen other places where the pasted code goes out of date, has bugs, etc.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1413137811/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47197
https://api.github.com/repos/rails/rails/issues/comments/1414591035,https://github.com/rails/rails/pull/47197#issuecomment-1414591035,https://api.github.com/repos/rails/rails/issues/47197,1414591035,IC_kwDNIULOVFDyOw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-02-03T01:32:30Z,2023-02-03T01:32:30Z,MEMBER,"> @skipkayhil Should we just link to the docs for this method instead? It doesn't feel right copy-pasting code into the guides, I've seen other places where the pasted code goes out of date, has bugs, etc.

In this case I don't think that would be possible because the method is private: https://github.com/rails/rails/blob/6980ebd1fcc57023c659e451ada6b4f5792383a1/actionpack/lib/abstract_controller/helpers.rb#L250

> It doesn't feel right copy-pasting code into the guides, I've seen other places where the pasted code goes out of date, has bugs, etc.

I totally agree with this, I've been wondering if we could add a step to doc generation that would copy the code snippets for us so that they don't go out of date. I suppose a counter argument to that would be the code could change out from under you (like this method no longer rescuing `LoadError` even though its used for the `LoadError` extension doc), but since that's happening already maybe it isn't that bad?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1414591035/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47197
https://api.github.com/repos/rails/rails/issues/comments/1416532057,https://github.com/rails/rails/pull/47197#issuecomment-1416532057,https://api.github.com/repos/rails/rails/issues/47197,1416532057,IC_kwDNIULOVG6QWQ,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-03T23:38:36Z,2023-02-03T23:38:36Z,MEMBER,"If we document a private API, doesn't that make it public? :trollface: 

This is just my opinion, but if the point of this example is to demonstrate the use-case for `missing_name?` we could come up with any arbitrary example to do that -- and not have to publish our internal API code, or maintain it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1416532057/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47197
https://api.github.com/repos/rails/rails/issues/comments/1425256717,https://github.com/rails/rails/pull/47193#issuecomment-1425256717,https://api.github.com/repos/rails/rails/issues/47193,1425256717,IC_kwDNIULOVPOxDQ,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-10T06:30:57Z,2023-02-10T06:30:57Z,MEMBER,I could be wrong but this seems similar to #46843 ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1425256717/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47193
https://api.github.com/repos/rails/rails/issues/comments/1425310234,https://github.com/rails/rails/pull/47193#issuecomment-1425310234,https://api.github.com/repos/rails/rails/issues/47193,1425310234,IC_kwDNIULOVPSCGg,"{'login': 'benedikt', 'id': 9696, 'node_id': 'MDQ6VXNlcjk2OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9696?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/benedikt', 'html_url': 'https://github.com/benedikt', 'followers_url': 'https://api.github.com/users/benedikt/followers', 'following_url': 'https://api.github.com/users/benedikt/following{/other_user}', 'gists_url': 'https://api.github.com/users/benedikt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/benedikt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/benedikt/subscriptions', 'organizations_url': 'https://api.github.com/users/benedikt/orgs', 'repos_url': 'https://api.github.com/users/benedikt/repos', 'events_url': 'https://api.github.com/users/benedikt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/benedikt/received_events', 'type': 'User', 'site_admin': False}",2023-02-10T07:29:24Z,2023-02-10T07:29:24Z,CONTRIBUTOR,"It's similar in that it makes CTEs usable in more situations. 

However, this pull request aims to make them available on queries where they are not possible at the moment.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1425310234/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47193
https://api.github.com/repos/rails/rails/issues/comments/1427222421,https://github.com/rails/rails/pull/47193#issuecomment-1427222421,https://api.github.com/repos/rails/rails/issues/47193,1427222421,IC_kwDNIULOVRGvlQ,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-13T02:04:27Z,2023-02-13T02:06:25Z,MEMBER,"@benedikt Does this also cover use-cases in the other PR? I'm wondering if we can combine them, and co-author?

Just my preference, but it's nice if when we supplant PRs that the original authors be credited, even if the implementations vary slightly.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1427222421/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47193
https://api.github.com/repos/rails/rails/issues/comments/1428248153,https://github.com/rails/rails/pull/47193#issuecomment-1428248153,https://api.github.com/repos/rails/rails/issues/47193,1428248153,IC_kwDNIULOVSFWWQ,"{'login': 'benedikt', 'id': 9696, 'node_id': 'MDQ6VXNlcjk2OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9696?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/benedikt', 'html_url': 'https://github.com/benedikt', 'followers_url': 'https://api.github.com/users/benedikt/followers', 'following_url': 'https://api.github.com/users/benedikt/following{/other_user}', 'gists_url': 'https://api.github.com/users/benedikt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/benedikt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/benedikt/subscriptions', 'organizations_url': 'https://api.github.com/users/benedikt/orgs', 'repos_url': 'https://api.github.com/users/benedikt/repos', 'events_url': 'https://api.github.com/users/benedikt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/benedikt/received_events', 'type': 'User', 'site_admin': False}",2023-02-13T16:30:18Z,2023-02-13T16:30:18Z,CONTRIBUTOR,"@zzak I don't think it does. This PR is a change to Arel, the other is a change to ActiveRecord. 

I don't think there's overlap (functionality wise) between both PRs. They are both related to CTEs, but merging one doesn't make the other obsolete and vice-versa. 

@palkan What do you think? ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1428248153/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47193
https://api.github.com/repos/rails/rails/issues/comments/1430636903,https://github.com/rails/rails/pull/47193#issuecomment-1430636903,https://api.github.com/repos/rails/rails/issues/47193,1430636903,IC_kwDNIULOVUXJZw,"{'login': 'palkan', 'id': 1516722, 'node_id': 'MDQ6VXNlcjE1MTY3MjI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1516722?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/palkan', 'html_url': 'https://github.com/palkan', 'followers_url': 'https://api.github.com/users/palkan/followers', 'following_url': 'https://api.github.com/users/palkan/following{/other_user}', 'gists_url': 'https://api.github.com/users/palkan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/palkan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/palkan/subscriptions', 'organizations_url': 'https://api.github.com/users/palkan/orgs', 'repos_url': 'https://api.github.com/users/palkan/repos', 'events_url': 'https://api.github.com/users/palkan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/palkan/received_events', 'type': 'User', 'site_admin': False}",2023-02-15T01:49:14Z,2023-02-15T01:49:14Z,CONTRIBUTOR,"@benedikt Agree. We propose changes at different levels of abstraction; so, they can be finalized/merged independently. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1430636903/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47193
https://api.github.com/repos/rails/rails/issues/comments/1424308429,https://github.com/rails/rails/issues/47184#issuecomment-1424308429,https://api.github.com/repos/rails/rails/issues/47184,1424308429,IC_kwDNIULOVOU4zQ,"{'login': 'bradhuskins', 'id': 107579835, 'node_id': 'U_kgDOBmmJuw', 'avatar_url': 'https://avatars.githubusercontent.com/u/107579835?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bradhuskins', 'html_url': 'https://github.com/bradhuskins', 'followers_url': 'https://api.github.com/users/bradhuskins/followers', 'following_url': 'https://api.github.com/users/bradhuskins/following{/other_user}', 'gists_url': 'https://api.github.com/users/bradhuskins/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bradhuskins/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bradhuskins/subscriptions', 'organizations_url': 'https://api.github.com/users/bradhuskins/orgs', 'repos_url': 'https://api.github.com/users/bradhuskins/repos', 'events_url': 'https://api.github.com/users/bradhuskins/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bradhuskins/received_events', 'type': 'User', 'site_admin': False}",2023-02-09T14:48:39Z,2023-02-09T14:49:38Z,NONE,"On a preliminary pass, as mentioned, url_for() [in actionpack/lib/action_dispatch/http/url.rb] does not _appear_ to respect controller or action, but rather expects path to already be built.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1424308429/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47184
https://api.github.com/repos/rails/rails/issues/comments/1424745978,https://github.com/rails/rails/issues/47184#issuecomment-1424745978,https://api.github.com/repos/rails/rails/issues/47184,1424745978,IC_kwDNIULOVOvl-g,"{'login': 'bradhuskins', 'id': 107579835, 'node_id': 'U_kgDOBmmJuw', 'avatar_url': 'https://avatars.githubusercontent.com/u/107579835?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bradhuskins', 'html_url': 'https://github.com/bradhuskins', 'followers_url': 'https://api.github.com/users/bradhuskins/followers', 'following_url': 'https://api.github.com/users/bradhuskins/following{/other_user}', 'gists_url': 'https://api.github.com/users/bradhuskins/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bradhuskins/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bradhuskins/subscriptions', 'organizations_url': 'https://api.github.com/users/bradhuskins/orgs', 'repos_url': 'https://api.github.com/users/bradhuskins/repos', 'events_url': 'https://api.github.com/users/bradhuskins/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bradhuskins/received_events', 'type': 'User', 'site_admin': False}",2023-02-09T20:08:01Z,2023-02-09T20:08:52Z,NONE,"Threw up a [draft](https://github.com/rails/rails/pull/47341) of a possible approach which determines target controller/action and compares on that. Requires quite a bit of extra plumbing, so may not meet the performance benchmarks required.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1424745978/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47184
https://api.github.com/repos/rails/rails/issues/comments/1423084940,https://github.com/rails/rails/issues/47175#issuecomment-1423084940,https://api.github.com/repos/rails/rails/issues/47175,1423084940,IC_kwDNIULOVNKNjA,"{'login': 'bradhuskins', 'id': 107579835, 'node_id': 'U_kgDOBmmJuw', 'avatar_url': 'https://avatars.githubusercontent.com/u/107579835?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bradhuskins', 'html_url': 'https://github.com/bradhuskins', 'followers_url': 'https://api.github.com/users/bradhuskins/followers', 'following_url': 'https://api.github.com/users/bradhuskins/following{/other_user}', 'gists_url': 'https://api.github.com/users/bradhuskins/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bradhuskins/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bradhuskins/subscriptions', 'organizations_url': 'https://api.github.com/users/bradhuskins/orgs', 'repos_url': 'https://api.github.com/users/bradhuskins/repos', 'events_url': 'https://api.github.com/users/bradhuskins/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bradhuskins/received_events', 'type': 'User', 'site_admin': False}",2023-02-08T18:49:03Z,2023-02-08T18:49:03Z,NONE,#check_eager_loadable! appears to be checking the method's arity to ensure it's a class method. Just verifying whether that's the suggested solution here.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1423084940/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47175
https://api.github.com/repos/rails/rails/issues/comments/1426655564,https://github.com/rails/rails/issues/47175#issuecomment-1426655564,https://api.github.com/repos/rails/rails/issues/47175,1426655564,IC_kwDNIULOVQkJTA,"{'login': 'OuYangJinTing', 'id': 33079237, 'node_id': 'MDQ6VXNlcjMzMDc5MjM3', 'avatar_url': 'https://avatars.githubusercontent.com/u/33079237?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OuYangJinTing', 'html_url': 'https://github.com/OuYangJinTing', 'followers_url': 'https://api.github.com/users/OuYangJinTing/followers', 'following_url': 'https://api.github.com/users/OuYangJinTing/following{/other_user}', 'gists_url': 'https://api.github.com/users/OuYangJinTing/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OuYangJinTing/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OuYangJinTing/subscriptions', 'organizations_url': 'https://api.github.com/users/OuYangJinTing/orgs', 'repos_url': 'https://api.github.com/users/OuYangJinTing/repos', 'events_url': 'https://api.github.com/users/OuYangJinTing/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OuYangJinTing/received_events', 'type': 'User', 'site_admin': False}",2023-02-11T08:06:31Z,2023-02-11T08:06:31Z,CONTRIBUTOR,"@bradhuskins Yes, as you said. `#check_eager_loadable!` can't deal with this problem. Here need to add a new method.

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1426655564/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47175
https://api.github.com/repos/rails/rails/issues/comments/1545366402,https://github.com/rails/rails/issues/47175#issuecomment-1545366402,https://api.github.com/repos/rails/rails/issues/47175,1545366402,IC_kwDNIULOXBxrgg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-05-12T08:21:33Z,2023-05-12T08:21:33Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1545366402/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47175
https://api.github.com/repos/rails/rails/issues/comments/1545713953,https://github.com/rails/rails/issues/47175#issuecomment-1545713953,https://api.github.com/repos/rails/rails/issues/47175,1545713953,IC_kwDNIULOXCG5IQ,"{'login': 'bradhuskins', 'id': 107579835, 'node_id': 'U_kgDOBmmJuw', 'avatar_url': 'https://avatars.githubusercontent.com/u/107579835?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bradhuskins', 'html_url': 'https://github.com/bradhuskins', 'followers_url': 'https://api.github.com/users/bradhuskins/followers', 'following_url': 'https://api.github.com/users/bradhuskins/following{/other_user}', 'gists_url': 'https://api.github.com/users/bradhuskins/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bradhuskins/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bradhuskins/subscriptions', 'organizations_url': 'https://api.github.com/users/bradhuskins/orgs', 'repos_url': 'https://api.github.com/users/bradhuskins/repos', 'events_url': 'https://api.github.com/users/bradhuskins/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bradhuskins/received_events', 'type': 'User', 'site_admin': False}",2023-05-12T13:03:59Z,2023-05-12T13:03:59Z,NONE,Bump,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1545713953/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47175
https://api.github.com/repos/rails/rails/issues/comments/1673246508,https://github.com/rails/rails/issues/47175#issuecomment-1673246508,https://api.github.com/repos/rails/rails/issues/47175,1673246508,IC_kwDNIULOY7u3LA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-10T13:40:05Z,2023-08-10T13:40:05Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1673246508/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47175
https://api.github.com/repos/rails/rails/issues/comments/1683291182,https://github.com/rails/rails/issues/47175#issuecomment-1683291182,https://api.github.com/repos/rails/rails/issues/47175,1683291182,IC_kwDNIULOZFT8Lg,"{'login': 'OuYangJinTing', 'id': 33079237, 'node_id': 'MDQ6VXNlcjMzMDc5MjM3', 'avatar_url': 'https://avatars.githubusercontent.com/u/33079237?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OuYangJinTing', 'html_url': 'https://github.com/OuYangJinTing', 'followers_url': 'https://api.github.com/users/OuYangJinTing/followers', 'following_url': 'https://api.github.com/users/OuYangJinTing/following{/other_user}', 'gists_url': 'https://api.github.com/users/OuYangJinTing/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OuYangJinTing/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OuYangJinTing/subscriptions', 'organizations_url': 'https://api.github.com/users/OuYangJinTing/orgs', 'repos_url': 'https://api.github.com/users/OuYangJinTing/repos', 'events_url': 'https://api.github.com/users/OuYangJinTing/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OuYangJinTing/received_events', 'type': 'User', 'site_admin': False}",2023-08-18T03:25:38Z,2023-08-18T03:25:38Z,CONTRIBUTOR,Bump,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1683291182/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47175
https://api.github.com/repos/rails/rails/issues/comments/1684183315,https://github.com/rails/rails/issues/47175#issuecomment-1684183315,https://api.github.com/repos/rails/rails/issues/47175,1684183315,IC_kwDNIULOZGKZEw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-08-18T16:52:03Z,2023-08-18T16:52:03Z,MEMBER,"```
class User < ActiveRecord::Base
  has_many :posts, dependent: :destroy

  has_one :latest_post, -> { order(id: :desc) }, class_name: ""Post""
end
```

I'm curious if this usage of `has_one` is something that should be supported. Did this work with previous versions of Rails?

My expectation would be to do something like:

```
class User < ActiveRecord::Base
  has_many :posts, dependent: :destroy

  def latest_post
    posts.last # or some other scope on `posts`
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1684183315/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47175
https://api.github.com/repos/rails/rails/issues/comments/1684691653,https://github.com/rails/rails/issues/47175#issuecomment-1684691653,https://api.github.com/repos/rails/rails/issues/47175,1684691653,IC_kwDNIULOZGpaxQ,"{'login': 'OuYangJinTing', 'id': 33079237, 'node_id': 'MDQ6VXNlcjMzMDc5MjM3', 'avatar_url': 'https://avatars.githubusercontent.com/u/33079237?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OuYangJinTing', 'html_url': 'https://github.com/OuYangJinTing', 'followers_url': 'https://api.github.com/users/OuYangJinTing/followers', 'following_url': 'https://api.github.com/users/OuYangJinTing/following{/other_user}', 'gists_url': 'https://api.github.com/users/OuYangJinTing/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OuYangJinTing/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OuYangJinTing/subscriptions', 'organizations_url': 'https://api.github.com/users/OuYangJinTing/orgs', 'repos_url': 'https://api.github.com/users/OuYangJinTing/repos', 'events_url': 'https://api.github.com/users/OuYangJinTing/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OuYangJinTing/received_events', 'type': 'User', 'site_admin': False}",2023-08-19T02:20:55Z,2023-08-19T02:20:55Z,CONTRIBUTOR,"> ```
> class User < ActiveRecord::Base
>   has_many :posts, dependent: :destroy
> 
>   has_one :latest_post, -> { order(id: :desc) }, class_name: ""Post""
> end
> ```
> 
> I'm curious if this usage of `has_one` is something that should be supported. Did this work with previous versions of Rails?
> 
> My expectation would be to do something like:
> 
> ```
> class User < ActiveRecord::Base
>   has_many :posts, dependent: :destroy
> 
>   def latest_post
>     posts.last # or some other scope on `posts`
>   end
> end
> ```

@skipkayhil Thank your reply.

To the best of my knowledge, in Rails versions 5 through 7, this feature doesn't exist.

The examples you've provided are perfectly fine, and adopting your approach can indeed resolve the issue.

However, I believe it would be even more user-friendly if this detection were supported. This could help newcomers identify issues in advance, which I find beneficial.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1684691653/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47175
https://api.github.com/repos/rails/rails/issues/comments/1422645326,https://github.com/rails/rails/issues/47171#issuecomment-1422645326,https://api.github.com/repos/rails/rails/issues/47171,1422645326,IC_kwDNIULOVMvYTg,"{'login': 'albertpaulp', 'id': 1706765, 'node_id': 'MDQ6VXNlcjE3MDY3NjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1706765?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/albertpaulp', 'html_url': 'https://github.com/albertpaulp', 'followers_url': 'https://api.github.com/users/albertpaulp/followers', 'following_url': 'https://api.github.com/users/albertpaulp/following{/other_user}', 'gists_url': 'https://api.github.com/users/albertpaulp/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/albertpaulp/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/albertpaulp/subscriptions', 'organizations_url': 'https://api.github.com/users/albertpaulp/orgs', 'repos_url': 'https://api.github.com/users/albertpaulp/repos', 'events_url': 'https://api.github.com/users/albertpaulp/events{/privacy}', 'received_events_url': 'https://api.github.com/users/albertpaulp/received_events', 'type': 'User', 'site_admin': False}",2023-02-08T14:01:53Z,2023-02-09T11:38:41Z,NONE,"@kyanagi I was able to reproduce this behaviour in `main` and `6.1 stable` branches.
I believe this is caused by default `autosave: true` option for `has_one` association.
Work arounds for this situation are,
1. Set `has_one :comment, autosave: false` OR
2. Use `after_create` instead of `before_create` if possible

Here is a relevant warning about this situation from [docs](https://api.rubyonrails.org/classes/ActiveRecord/Callbacks.html).
>You should avoid modifying the association content before autosave callbacks are executed. Placing your callbacks after associations is usually a good practice.

_____
I am trying to debug this issue and see if I can come up with a fix.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1422645326/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47171
https://api.github.com/repos/rails/rails/issues/comments/1458821929,https://github.com/rails/rails/issues/47171#issuecomment-1458821929,https://api.github.com/repos/rails/rails/issues/47171,1458821929,IC_kwDNIULOVvPbKQ,"{'login': 'JeffLtz', 'id': 22090, 'node_id': 'MDQ6VXNlcjIyMDkw', 'avatar_url': 'https://avatars.githubusercontent.com/u/22090?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/JeffLtz', 'html_url': 'https://github.com/JeffLtz', 'followers_url': 'https://api.github.com/users/JeffLtz/followers', 'following_url': 'https://api.github.com/users/JeffLtz/following{/other_user}', 'gists_url': 'https://api.github.com/users/JeffLtz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/JeffLtz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/JeffLtz/subscriptions', 'organizations_url': 'https://api.github.com/users/JeffLtz/orgs', 'repos_url': 'https://api.github.com/users/JeffLtz/repos', 'events_url': 'https://api.github.com/users/JeffLtz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/JeffLtz/received_events', 'type': 'User', 'site_admin': False}",2023-03-07T20:26:15Z,2023-03-07T20:26:39Z,NONE,"Dug into this a bit. I found a couple other possible workarounds that may help point to an eventual fix:

1. `has_many :comments, autosave: true` works.
2. `before_validation` instead of `before_create` works.

I think the reason that `has_many` works and `has_one` does not is that the association cache behaves differently with `has_one` associations and `has_many` associations. The child object (instance of `Comment`) is cached in the parent object (instance of `Post`) with `has_one`, but not with `has_many`.

It's also worth noting, though, that based on my investigation, the ""duplicate"" `Comment` object in the association cache has it's `post_id` set — but the `post_id` doesn't get saved in the database. Notice these two lines from the trace above:

```
D, [2023-01-29T08:17:44.632850 #32858] DEBUG -- :   Comment Create (0.0ms)  INSERT INTO ""comments"" (""post_id"") VALUES (?)  [[""post_id"", 1]]
D, [2023-01-29T08:17:44.632919 #32858] DEBUG -- :   Comment Create (0.0ms)  INSERT INTO ""comments"" DEFAULT VALUES
```

The first line is the record we want, the second line inserts `DEFAULT VALUES`. The duplicate record isn't even saved with the attributes it has in the association cache.

Gonna chew on this some more another day. @albertpaulp have you had any insights that might help?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1458821929/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47171
https://api.github.com/repos/rails/rails/issues/comments/1577482217,https://github.com/rails/rails/issues/47171#issuecomment-1577482217,https://api.github.com/repos/rails/rails/issues/47171,1577482217,IC_kwDNIULOXgZ36Q,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-06-05T21:11:38Z,2023-06-05T21:11:38Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1577482217/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47171
https://api.github.com/repos/rails/rails/issues/comments/1588260851,https://github.com/rails/rails/issues/47171#issuecomment-1588260851,https://api.github.com/repos/rails/rails/issues/47171,1588260851,IC_kwDNIULOXqrv8w,"{'login': 'kyanagi', 'id': 181194, 'node_id': 'MDQ6VXNlcjE4MTE5NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/181194?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kyanagi', 'html_url': 'https://github.com/kyanagi', 'followers_url': 'https://api.github.com/users/kyanagi/followers', 'following_url': 'https://api.github.com/users/kyanagi/following{/other_user}', 'gists_url': 'https://api.github.com/users/kyanagi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kyanagi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kyanagi/subscriptions', 'organizations_url': 'https://api.github.com/users/kyanagi/orgs', 'repos_url': 'https://api.github.com/users/kyanagi/repos', 'events_url': 'https://api.github.com/users/kyanagi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kyanagi/received_events', 'type': 'User', 'site_admin': False}",2023-06-12T23:55:27Z,2023-06-12T23:55:27Z,NONE,I can still reproduce this error on `main`.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1588260851/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47171
https://api.github.com/repos/rails/rails/issues/comments/1647385971,https://github.com/rails/rails/issues/47171#issuecomment-1647385971,https://api.github.com/repos/rails/rails/issues/47171,1647385971,IC_kwDNIULOYjEdcw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-07-24T07:44:35Z,2023-07-24T07:44:35Z,MEMBER,"So I looked into this, and it does seem like autosave maybe playing a part here.

It doesn't happen when using `before_save` too, fwiw.

When I turn off the nested save, like with this diff the test passes, and surprisingly only one or two tests fail on AR:

```diff
diff --git a/activerecord/lib/active_record/autosave_association.rb b/activerecord/lib/active_record/autosave_association.rb
index dbffe1803b..f774b10df3 100644
--- a/activerecord/lib/active_record/autosave_association.rb
+++ b/activerecord/lib/active_record/autosave_association.rb
@@ -463,7 +463,7 @@ def save_has_one_association(reflection)
                 association.set_inverse_instance(record)
               end

-              saved = record.save(validate: !autosave)
+              saved = true
               raise ActiveRecord::Rollback if !saved && autosave
               saved
             end
```

I think the problem is deeper then that though, but I wanted to update this thread with what I've found out today.

There are a few other related issues and attempts to solve this double save problem, mainly:

* #35597
* #31381
* #36362
* #41990
* #41714
* #41701

I also tried to reproduce the behavior in #31381 using a similar patch, but did not come up with anything yet.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1647385971/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47171
https://api.github.com/repos/rails/rails/issues/comments/1407014934,https://github.com/rails/rails/pull/47163#issuecomment-1407014934,https://api.github.com/repos/rails/rails/issues/47163,1407014934,IC_kwDNIULOU91YFg,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-01-27T20:02:10Z,2023-01-27T20:02:10Z,CONTRIBUTOR,"@joelhawksley thank you for your response to https://github.com/rails/rails/pull/47159.

What do you think about this set of changes (note, it extends https://github.com/rails/rails/pull/47159, so there's some duplicate commits).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1407014934/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47163
https://api.github.com/repos/rails/rails/issues/comments/1743252803,https://github.com/rails/rails/pull/47163#issuecomment-1743252803,https://api.github.com/repos/rails/rails/issues/47163,1743252803,IC_kwDNIULOZ-ftQw,"{'login': 'MatheusRich', 'id': 20938712, 'node_id': 'MDQ6VXNlcjIwOTM4NzEy', 'avatar_url': 'https://avatars.githubusercontent.com/u/20938712?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/MatheusRich', 'html_url': 'https://github.com/MatheusRich', 'followers_url': 'https://api.github.com/users/MatheusRich/followers', 'following_url': 'https://api.github.com/users/MatheusRich/following{/other_user}', 'gists_url': 'https://api.github.com/users/MatheusRich/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/MatheusRich/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/MatheusRich/subscriptions', 'organizations_url': 'https://api.github.com/users/MatheusRich/orgs', 'repos_url': 'https://api.github.com/users/MatheusRich/repos', 'events_url': 'https://api.github.com/users/MatheusRich/events{/privacy}', 'received_events_url': 'https://api.github.com/users/MatheusRich/received_events', 'type': 'User', 'site_admin': False}",2023-10-02T15:38:37Z,2023-10-02T15:38:37Z,CONTRIBUTOR,@rafaelfranca is there something actionable here? Can we get this merged?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1743252803/reactions', 'total_count': 2, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,47163
https://api.github.com/repos/rails/rails/issues/comments/1407553732,https://github.com/rails/rails/pull/47161#issuecomment-1407553732,https://api.github.com/repos/rails/rails/issues/47161,1407553732,IC_kwDNIULOU-WQxA,"{'login': 'natematykiewicz', 'id': 5104186, 'node_id': 'MDQ6VXNlcjUxMDQxODY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5104186?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/natematykiewicz', 'html_url': 'https://github.com/natematykiewicz', 'followers_url': 'https://api.github.com/users/natematykiewicz/followers', 'following_url': 'https://api.github.com/users/natematykiewicz/following{/other_user}', 'gists_url': 'https://api.github.com/users/natematykiewicz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/natematykiewicz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/natematykiewicz/subscriptions', 'organizations_url': 'https://api.github.com/users/natematykiewicz/orgs', 'repos_url': 'https://api.github.com/users/natematykiewicz/repos', 'events_url': 'https://api.github.com/users/natematykiewicz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/natematykiewicz/received_events', 'type': 'User', 'site_admin': False}",2023-01-29T03:54:19Z,2023-01-29T03:54:19Z,CONTRIBUTOR,We've been trying to get https://github.com/rails/rails/pull/39968 merged for a while. I'm curious if any traction will be found on either of these 2.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1407553732/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47161
https://api.github.com/repos/rails/rails/issues/comments/1406660542,https://github.com/rails/rails/pull/47159#issuecomment-1406660542,https://api.github.com/repos/rails/rails/issues/47159,1406660542,IC_kwDNIULOU9fvvg,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-01-27T15:30:18Z,2023-01-27T15:30:18Z,CONTRIBUTOR,"@muan @joelhawksley pinging you two, since we both thought to introduce `tag.attributes`/[tag_attributes](https://github.com/rails/rails/pull/39105).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1406660542/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47159
https://api.github.com/repos/rails/rails/issues/comments/1406624493,https://github.com/rails/rails/pull/47157#issuecomment-1406624493,https://api.github.com/repos/rails/rails/issues/47157,1406624493,IC_kwDNIULOU9di7Q,"{'login': 'lazaronixon', 'id': 2651240, 'node_id': 'MDQ6VXNlcjI2NTEyNDA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2651240?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lazaronixon', 'html_url': 'https://github.com/lazaronixon', 'followers_url': 'https://api.github.com/users/lazaronixon/followers', 'following_url': 'https://api.github.com/users/lazaronixon/following{/other_user}', 'gists_url': 'https://api.github.com/users/lazaronixon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lazaronixon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lazaronixon/subscriptions', 'organizations_url': 'https://api.github.com/users/lazaronixon/orgs', 'repos_url': 'https://api.github.com/users/lazaronixon/repos', 'events_url': 'https://api.github.com/users/lazaronixon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lazaronixon/received_events', 'type': 'User', 'site_admin': False}",2023-01-27T15:02:15Z,2023-01-27T15:02:15Z,CONTRIBUTOR,https://github.com/rails/rails/pull/46487,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1406624493/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47157
https://api.github.com/repos/rails/rails/issues/comments/1406641921,https://github.com/rails/rails/pull/47157#issuecomment-1406641921,https://api.github.com/repos/rails/rails/issues/47157,1406641921,IC_kwDNIULOU9enAQ,"{'login': 'benedikt', 'id': 9696, 'node_id': 'MDQ6VXNlcjk2OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9696?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/benedikt', 'html_url': 'https://github.com/benedikt', 'followers_url': 'https://api.github.com/users/benedikt/followers', 'following_url': 'https://api.github.com/users/benedikt/following{/other_user}', 'gists_url': 'https://api.github.com/users/benedikt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/benedikt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/benedikt/subscriptions', 'organizations_url': 'https://api.github.com/users/benedikt/orgs', 'repos_url': 'https://api.github.com/users/benedikt/repos', 'events_url': 'https://api.github.com/users/benedikt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/benedikt/received_events', 'type': 'User', 'site_admin': False}",2023-01-27T15:15:24Z,2023-01-27T15:15:24Z,CONTRIBUTOR,"@lazaronixon Oh no, I missed your PR for this! Didn't mean to be rude. Let's try and get one of them merged :D ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1406641921/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47157
https://api.github.com/repos/rails/rails/issues/comments/1405798320,https://github.com/rails/rails/pull/47153#issuecomment-1405798320,https://api.github.com/repos/rails/rails/issues/47153,1405798320,IC_kwDNIULOU8rHsA,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-01-26T23:13:48Z,2023-01-26T23:13:48Z,MEMBER,Why are those directories missing though?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1405798320/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47153
https://api.github.com/repos/rails/rails/issues/comments/1406287325,https://github.com/rails/rails/pull/47153#issuecomment-1406287325,https://api.github.com/repos/rails/rails/issues/47153,1406287325,IC_kwDNIULOU9I93Q,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-01-27T10:09:09Z,2023-01-27T10:09:09Z,MEMBER,"@zzak those directories were renamed in: https://github.com/rails/rails/pull/7878

[Another PR](https://github.com/rails/rails/pull/19216/files#diff-fedf876ad34374f08ea919c90d49b24510e757cd849a05418299be8e65297d86R35-R42) changed the glob pattern to directories, which makes sense for the `test:models` task, but currently breaks `test:units`.

Thinking about it a bit more, these tasks seem outdated in a modern version of Rails.
We now have a lot more test directories (`test/channels`, `test/jobs`) that might also be added to `test:units`.
Also the difference between `rails test:functionals` and `rails test:integration` can be confusing.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1406287325/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47153
https://api.github.com/repos/rails/rails/issues/comments/1531234863,https://github.com/rails/rails/pull/47151#issuecomment-1531234863,https://api.github.com/repos/rails/rails/issues/47151,1531234863,IC_kwDNIULOW0TKLw,"{'login': 'joshuay03', 'id': 54629302, 'node_id': 'MDQ6VXNlcjU0NjI5MzAy', 'avatar_url': 'https://avatars.githubusercontent.com/u/54629302?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joshuay03', 'html_url': 'https://github.com/joshuay03', 'followers_url': 'https://api.github.com/users/joshuay03/followers', 'following_url': 'https://api.github.com/users/joshuay03/following{/other_user}', 'gists_url': 'https://api.github.com/users/joshuay03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joshuay03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joshuay03/subscriptions', 'organizations_url': 'https://api.github.com/users/joshuay03/orgs', 'repos_url': 'https://api.github.com/users/joshuay03/repos', 'events_url': 'https://api.github.com/users/joshuay03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joshuay03/received_events', 'type': 'User', 'site_admin': False}",2023-05-02T10:26:18Z,2023-05-02T10:26:18Z,CONTRIBUTOR,Thanks! @tenderlove,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1531234863/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47151
https://api.github.com/repos/rails/rails/issues/comments/1554321520,https://github.com/rails/rails/pull/47151#issuecomment-1554321520,https://api.github.com/repos/rails/rails/issues/47151,1554321520,IC_kwDNIULOXKUQcA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-05-19T09:52:15Z,2023-05-19T09:52:15Z,MEMBER,"I think the issue is that we shouldn't replace the target on the `has_one` association as this will cause skipping of nullifing the old target:
https://github.com/rails/rails/blob/43fa801967305ec1aab794fac269e1ba024ba3ce/activerecord/lib/active_record/associations/has_one_association.rb#L99

So `payment_account` shouldn't be updated on `subscription` when calling `new_payment_account.subscription = subscription`.
This would also make it consistent with `has_many` where we also don't update target.
This can be tested by changing the bug report to a `has_many`:
```ruby
#!/usr/bin/env ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails"", '~> 6.1.0'
  gem ""sqlite3""
  gem ""byebug""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :subscriptions do |t|
    t.string :name
  end

  create_table :payment_accounts do |t|
    t.string :name
    t.references :subscription
  end
end

class Subscription < ActiveRecord::Base
  has_many :payment_accounts, inverse_of: :subscription, dependent: :destroy
end

class PaymentAccount < ActiveRecord::Base
  belongs_to :subscription, inverse_of: :payment_accounts, optional: true
end

class TestDoubleBackwardsAssigment < Minitest::Test
  def test_double_backward_assignment
    subscription = Subscription.create(name: 'Example subsciption')
    original_payment_account = PaymentAccount.create(subscription: subscription, name: ""Bob's account"")
    assert_equal [""Bob's account""], subscription.payment_accounts.pluck(:name)

    new_payment_account = PaymentAccount.new(name: ""Fran's account"")
    new_payment_account.subscription = subscription

    assert_equal [""Bob's account""], subscription.payment_accounts.map(&:name)
    # The result for has_one is:
    # assert_equal ""Fran's account"", subscription.payment_account.name
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1554321520/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47151
https://api.github.com/repos/rails/rails/issues/comments/1554340973,https://github.com/rails/rails/pull/47151#issuecomment-1554340973,https://api.github.com/repos/rails/rails/issues/47151,1554340973,IC_kwDNIULOXKVcbQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-05-19T10:08:03Z,2023-05-19T10:08:03Z,MEMBER,"Hmm, inversing not assigning on a `has_many` seems like a shortcoming of HasMany, as we can do it correctly for all other associations.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1554340973/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47151
https://api.github.com/repos/rails/rails/issues/comments/1585309902,https://github.com/rails/rails/pull/47151#issuecomment-1585309902,https://api.github.com/repos/rails/rails/issues/47151,1585309902,IC_kwDNIULOXn3ozg,"{'login': 'joshuay03', 'id': 54629302, 'node_id': 'MDQ6VXNlcjU0NjI5MzAy', 'avatar_url': 'https://avatars.githubusercontent.com/u/54629302?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joshuay03', 'html_url': 'https://github.com/joshuay03', 'followers_url': 'https://api.github.com/users/joshuay03/followers', 'following_url': 'https://api.github.com/users/joshuay03/following{/other_user}', 'gists_url': 'https://api.github.com/users/joshuay03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joshuay03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joshuay03/subscriptions', 'organizations_url': 'https://api.github.com/users/joshuay03/orgs', 'repos_url': 'https://api.github.com/users/joshuay03/repos', 'events_url': 'https://api.github.com/users/joshuay03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joshuay03/received_events', 'type': 'User', 'site_admin': False}",2023-06-10T00:39:44Z,2023-06-10T00:39:44Z,CONTRIBUTOR,@p8 Is there anything more I can do to get this PR over the line?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1585309902/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47151
https://api.github.com/repos/rails/rails/issues/comments/1422094481,https://github.com/rails/rails/pull/47149#issuecomment-1422094481,https://api.github.com/repos/rails/rails/issues/47149,1422094481,IC_kwDNIULOVMNwkQ,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-08T06:46:24Z,2023-02-08T06:46:24Z,MEMBER,Do you think this should be in the changelog?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1422094481/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47149
https://api.github.com/repos/rails/rails/issues/comments/1403862940,https://github.com/rails/rails/pull/47136#issuecomment-1403862940,https://api.github.com/repos/rails/rails/issues/47136,1403862940,IC_kwDNIULOU60_nA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-01-25T16:12:43Z,2023-01-25T16:12:43Z,MEMBER,"I'm not sure I see much value on this feature. Using exception for control flow is usually a smell.

So can you please provide a real use case for this feature that would simplify the code?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1403862940/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47136
https://api.github.com/repos/rails/rails/issues/comments/1403947490,https://github.com/rails/rails/pull/47136#issuecomment-1403947490,https://api.github.com/repos/rails/rails/issues/47136,1403947490,IC_kwDNIULOU66J4g,"{'login': 'stevepolitodesign', 'id': 5122678, 'node_id': 'MDQ6VXNlcjUxMjI2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5122678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/stevepolitodesign', 'html_url': 'https://github.com/stevepolitodesign', 'followers_url': 'https://api.github.com/users/stevepolitodesign/followers', 'following_url': 'https://api.github.com/users/stevepolitodesign/following{/other_user}', 'gists_url': 'https://api.github.com/users/stevepolitodesign/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/stevepolitodesign/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/stevepolitodesign/subscriptions', 'organizations_url': 'https://api.github.com/users/stevepolitodesign/orgs', 'repos_url': 'https://api.github.com/users/stevepolitodesign/repos', 'events_url': 'https://api.github.com/users/stevepolitodesign/events{/privacy}', 'received_events_url': 'https://api.github.com/users/stevepolitodesign/received_events', 'type': 'User', 'site_admin': False}",2023-01-25T17:06:48Z,2023-01-25T17:06:48Z,CONTRIBUTOR,"> I'm not sure I see much value on this feature. Using exception for control flow is usually a smell.
> 
> So can you please provide a real use case for this feature that would simplify the code?

One use case could be working with a [singular resource](https://guides.rubyonrails.org/routing.html#singular-resources). Something like this.

```ruby
resources :accounts do
  get 'benificiary', to: 'accounts/benificiaries#show'
end

class Accounts::Benificiaries < ApplicationController
  def show
    @benificiary = Account.find(params[:id]).benificiary!
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1403947490/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47136
https://api.github.com/repos/rails/rails/issues/comments/1404051539,https://github.com/rails/rails/pull/47136#issuecomment-1404051539,https://api.github.com/repos/rails/rails/issues/47136,1404051539,IC_kwDNIULOU7AgUw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-01-25T18:31:17Z,2023-01-25T18:31:17Z,MEMBER,Would not `@benificiary = Venificiary.find_by!(account_id: params[:id])` be better?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1404051539/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47136
https://api.github.com/repos/rails/rails/issues/comments/1404161144,https://github.com/rails/rails/pull/47136#issuecomment-1404161144,https://api.github.com/repos/rails/rails/issues/47136,1404161144,IC_kwDNIULOU7HMeA,"{'login': 'dhh', 'id': 2741, 'node_id': 'MDQ6VXNlcjI3NDE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2741?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dhh', 'html_url': 'https://github.com/dhh', 'followers_url': 'https://api.github.com/users/dhh/followers', 'following_url': 'https://api.github.com/users/dhh/following{/other_user}', 'gists_url': 'https://api.github.com/users/dhh/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dhh/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dhh/subscriptions', 'organizations_url': 'https://api.github.com/users/dhh/orgs', 'repos_url': 'https://api.github.com/users/dhh/repos', 'events_url': 'https://api.github.com/users/dhh/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dhh/received_events', 'type': 'User', 'site_admin': False}",2023-01-25T20:03:59Z,2023-01-25T20:03:59Z,MEMBER,"I like this, tbh. Similar to how we have #sole and #sole!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1404161144/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47136
https://api.github.com/repos/rails/rails/issues/comments/1404166485,https://github.com/rails/rails/pull/47136#issuecomment-1404166485,https://api.github.com/repos/rails/rails/issues/47136,1404166485,IC_kwDNIULOU7HhVQ,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2023-01-25T20:08:59Z,2023-01-25T20:08:59Z,CONTRIBUTOR,"> I like this, tbh. Similar to how we have #sole and #sole!

I'm not sure I do follow, but is there a `sole!` method? I can't find it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1404166485/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47136
https://api.github.com/repos/rails/rails/issues/comments/1404173642,https://github.com/rails/rails/pull/47136#issuecomment-1404173642,https://api.github.com/repos/rails/rails/issues/47136,1404173642,IC_kwDNIULOU7H9Sg,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-01-25T20:15:57Z,2023-01-25T20:16:04Z,MEMBER,"So, should we be calling `sole` instead of using `present?`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1404173642/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47136
https://api.github.com/repos/rails/rails/issues/comments/1404183859,https://github.com/rails/rails/pull/47136#issuecomment-1404183859,https://api.github.com/repos/rails/rails/issues/47136,1404183859,IC_kwDNIULOU7IlMw,"{'login': 'stevepolitodesign', 'id': 5122678, 'node_id': 'MDQ6VXNlcjUxMjI2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5122678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/stevepolitodesign', 'html_url': 'https://github.com/stevepolitodesign', 'followers_url': 'https://api.github.com/users/stevepolitodesign/followers', 'following_url': 'https://api.github.com/users/stevepolitodesign/following{/other_user}', 'gists_url': 'https://api.github.com/users/stevepolitodesign/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/stevepolitodesign/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/stevepolitodesign/subscriptions', 'organizations_url': 'https://api.github.com/users/stevepolitodesign/orgs', 'repos_url': 'https://api.github.com/users/stevepolitodesign/repos', 'events_url': 'https://api.github.com/users/stevepolitodesign/events{/privacy}', 'received_events_url': 'https://api.github.com/users/stevepolitodesign/received_events', 'type': 'User', 'site_admin': False}",2023-01-25T20:26:09Z,2023-01-25T20:58:17Z,CONTRIBUTOR,"@rafaelfranca thank you for your diligence here. Maybe this example is more practicle.

> Would not `@benificiary = Venificiary.find_by!(account_id: params[:id])` be better?

```ruby
class Post
  has_many :comments
  has_one :last_comment, -> { order('posted_on') }, class_name: ""Comment""
end

post.comments.find_by!(...) || post.last_comment!
```

I can image a case where it would be nice to fall back to a `has_one` association, but `raise` if it's missing.

@dhh 

> I like this, tbh. Similar to how we have #sole and #sole!

Exactly. Also, somewhat similar to `last!` and `first!`.

@simi 

> I'm not sure I do follow, but is there a `sole!` method? I can't find it.

My implementation is open for discussion. Using `sole` might be a better approach, but for now, I was focused on raising an error if the association returns `nil`.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1404183859/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47136
https://api.github.com/repos/rails/rails/issues/comments/1404965211,https://github.com/rails/rails/pull/47136#issuecomment-1404965211,https://api.github.com/repos/rails/rails/issues/47136,1404965211,IC_kwDNIULOU74RWw,"{'login': 'stevepolitodesign', 'id': 5122678, 'node_id': 'MDQ6VXNlcjUxMjI2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5122678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/stevepolitodesign', 'html_url': 'https://github.com/stevepolitodesign', 'followers_url': 'https://api.github.com/users/stevepolitodesign/followers', 'following_url': 'https://api.github.com/users/stevepolitodesign/following{/other_user}', 'gists_url': 'https://api.github.com/users/stevepolitodesign/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/stevepolitodesign/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/stevepolitodesign/subscriptions', 'organizations_url': 'https://api.github.com/users/stevepolitodesign/orgs', 'repos_url': 'https://api.github.com/users/stevepolitodesign/repos', 'events_url': 'https://api.github.com/users/stevepolitodesign/events{/privacy}', 'received_events_url': 'https://api.github.com/users/stevepolitodesign/received_events', 'type': 'User', 'site_admin': False}",2023-01-26T12:54:34Z,2023-01-26T12:54:34Z,CONTRIBUTOR,"I ended up leveraging [sole](https://api.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-sole) for my implementation.

38d16ea05b2ff885009bd632a560194582feaf04","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1404965211/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47136
https://api.github.com/repos/rails/rails/issues/comments/1404151185,https://github.com/rails/rails/issues/47135#issuecomment-1404151185,https://api.github.com/repos/rails/rails/issues/47135,1404151185,IC_kwDNIULOU7GlkQ,"{'login': 'ahowardm', 'id': 14304368, 'node_id': 'MDQ6VXNlcjE0MzA0MzY4', 'avatar_url': 'https://avatars.githubusercontent.com/u/14304368?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ahowardm', 'html_url': 'https://github.com/ahowardm', 'followers_url': 'https://api.github.com/users/ahowardm/followers', 'following_url': 'https://api.github.com/users/ahowardm/following{/other_user}', 'gists_url': 'https://api.github.com/users/ahowardm/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ahowardm/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ahowardm/subscriptions', 'organizations_url': 'https://api.github.com/users/ahowardm/orgs', 'repos_url': 'https://api.github.com/users/ahowardm/repos', 'events_url': 'https://api.github.com/users/ahowardm/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ahowardm/received_events', 'type': 'User', 'site_admin': False}",2023-01-25T19:54:49Z,2023-01-25T19:54:49Z,NONE,"@montdidier I think the problem is that you are editing the associations on both ends: on `subscription` and on `new_payment_account`. The correct way is 

```ruby
new_payment_account = PaymentAccount.new(name: ""Fran's account"")
subscription.payment_account = new_payment_account
subscription.save!
```

This way all validations are correct and the test passes","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1404151185/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47135
https://api.github.com/repos/rails/rails/issues/comments/1404337696,https://github.com/rails/rails/issues/47135#issuecomment-1404337696,https://api.github.com/repos/rails/rails/issues/47135,1404337696,IC_kwDNIULOU7R-IA,"{'login': 'montdidier', 'id': 1673628, 'node_id': 'MDQ6VXNlcjE2NzM2Mjg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1673628?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/montdidier', 'html_url': 'https://github.com/montdidier', 'followers_url': 'https://api.github.com/users/montdidier/followers', 'following_url': 'https://api.github.com/users/montdidier/following{/other_user}', 'gists_url': 'https://api.github.com/users/montdidier/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/montdidier/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/montdidier/subscriptions', 'organizations_url': 'https://api.github.com/users/montdidier/orgs', 'repos_url': 'https://api.github.com/users/montdidier/repos', 'events_url': 'https://api.github.com/users/montdidier/events{/privacy}', 'received_events_url': 'https://api.github.com/users/montdidier/received_events', 'type': 'User', 'site_admin': False}",2023-01-25T23:04:22Z,2023-01-25T23:04:22Z,CONTRIBUTOR,"@ahowardm Yes your example works great and would be proper/sensible but I am working with a legacy app and this is a distilled projection of what is going on. It took me some time to identify my problem. I noted this behaviour and while it is not particularly sensible for somebody to implement it like this, I think it is still surprising that it does not have the expected outcome. My intuition is that this can be solved in `activerecord` and it is unexpected behaviour that perhaps others have experienced. Best case it gets fixed, worst case it serves as documentation for the next person who experiences this problem. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1404337696/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47135
https://api.github.com/repos/rails/rails/issues/comments/1404523647,https://github.com/rails/rails/issues/47135#issuecomment-1404523647,https://api.github.com/repos/rails/rails/issues/47135,1404523647,IC_kwDNIULOU7dUfw,"{'login': 'joshuay03', 'id': 54629302, 'node_id': 'MDQ6VXNlcjU0NjI5MzAy', 'avatar_url': 'https://avatars.githubusercontent.com/u/54629302?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joshuay03', 'html_url': 'https://github.com/joshuay03', 'followers_url': 'https://api.github.com/users/joshuay03/followers', 'following_url': 'https://api.github.com/users/joshuay03/following{/other_user}', 'gists_url': 'https://api.github.com/users/joshuay03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joshuay03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joshuay03/subscriptions', 'organizations_url': 'https://api.github.com/users/joshuay03/orgs', 'repos_url': 'https://api.github.com/users/joshuay03/repos', 'events_url': 'https://api.github.com/users/joshuay03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joshuay03/received_events', 'type': 'User', 'site_admin': False}",2023-01-26T03:26:25Z,2023-01-26T03:47:05Z,CONTRIBUTOR,"@montdidier I've got [this PR up](https://github.com/rails/rails/pull/47151) that achieves what you want, however an additional query is performed to replace the preloaded target. Maybe there's a better solution 🤷🏽‍♂️","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1404523647/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47135
https://api.github.com/repos/rails/rails/issues/comments/1410305121,https://github.com/rails/rails/issues/47125#issuecomment-1410305121,https://api.github.com/repos/rails/rails/issues/47125,1410305121,IC_kwDNIULOVA-MYQ,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-01-31T13:03:59Z,2023-01-31T13:03:59Z,MEMBER,"Thanks for the report. I also have reproduced this case using MariaDB 10.11.1. so I'd say this issue is a database specific issue.
So I'd like to know what causes this issue first.

- Reproduced

```
$ ruby -v
ruby 3.2.0 (2022-12-25 revision a528908271) [x86_64-linux]
...
MariaDB [(none)]> select version()\G
*************************** 1. row ***************************
version(): 10.11.1-MariaDB
1 row in set (0.001 sec)

MariaDB [(none)]>
```

- Not reproduced
```
$ ruby -v
ruby 3.2.0 (2022-12-25 revision a528908271) [x86_64-linux]
...
mysql> select version()\G
*************************** 1. row ***************************
version(): 8.0.32
1 row in set (0.00 sec)
```

I also want to know 

- SQL statements generated by the test case provided

```sql
DROP TABLE IF EXISTS `posts`;
CREATE TABLE `posts` (`id` bigint NOT NULL AUTO_INCREMENT PRIMARY KEY);
DROP TABLE IF EXISTS `comments`;
CREATE TABLE `comments` (`id` bigint NOT NULL AUTO_INCREMENT PRIMARY KEY, `post_id` int, `status` varchar(255));
BEGIN;
INSERT INTO `posts` VALUES ();
COMMIT;
BEGIN;
INSERT INTO `comments` (`status`) VALUES ('a');
COMMIT;
BEGIN;
UPDATE `comments` SET `comments`.`post_id` = 1 WHERE `comments`.`id` = 1;
COMMIT;
BEGIN;
INSERT INTO `comments` (`status`) VALUES ('b');
COMMIT;
BEGIN;
UPDATE `comments` SET `comments`.`post_id` = 1 WHERE `comments`.`id` = 2;
COMMIT;
SELECT COUNT(DISTINCT `comments`.`post_id`) AS `count_post_id`, `comments`.`status` AS `comments_status` FROM `comments` GROUP BY `comments`.`status`\G
SELECT COUNT(DISTINCT `comments`.`post_id`) AS `count_struct_arel_attributes_attribute_relation_arel_table_0x000000010b20ba50_name_comments_klass_comment_id_integer_post_id_integer_status_string_type_caster_activerecord_typecaster_map_0x000000011166bfb8_klass_comment_id_integer_post_id_integer_status_st`, `comments`.`status` AS `comments_status` FROM `comments` GROUP BY `comments`.`status`\G
```

Both MariaDB  10.11.1 and MySQL 8.0.32 return the same result

- MySQL 8.0.32

```
mysql> DROP TABLE IF EXISTS `posts`;
Query OK, 0 rows affected (0.00 sec)

mysql> CREATE TABLE `posts` (`id` bigint NOT NULL AUTO_INCREMENT PRIMARY KEY);
NCT `comments`.`post_id`) AS `count_struct_arel_attributes_attribute_relation_arel_table_0x000000010b20ba50_name_comments_klass_comment_id_integer_post_id_integer_status_string_type_caster_activerecord_typecaster_map_0x000000011166bfb8_klass_comment_id_integer_post_id_integer_status_st`, `comments`.`status` AS `comments_status` FROM `comments` GROUP BY `comments`.`status`\GQuery OK, 0 rows affected (0.01 sec)

mysql> DROP TABLE IF EXISTS `comments`;
Query OK, 0 rows affected (0.00 sec)

mysql> CREATE TABLE `comments` (`id` bigint NOT NULL AUTO_INCREMENT PRIMARY KEY, `post_id` int, `status` varchar(255));
Query OK, 0 rows affected (0.01 sec)

mysql> BEGIN;
Query OK, 0 rows affected (0.00 sec)

mysql> INSERT INTO `posts` VALUES ();
Query OK, 1 row affected (0.00 sec)

mysql> COMMIT;
Query OK, 0 rows affected (0.00 sec)

mysql> BEGIN;
Query OK, 0 rows affected (0.00 sec)

mysql> INSERT INTO `comments` (`status`) VALUES ('a');
Query OK, 1 row affected (0.00 sec)

mysql> COMMIT;
Query OK, 0 rows affected (0.00 sec)

mysql> BEGIN;
Query OK, 0 rows affected (0.00 sec)

mysql> UPDATE `comments` SET `comments`.`post_id` = 1 WHERE `comments`.`id` = 1;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> COMMIT;
Query OK, 0 rows affected (0.01 sec)

mysql> BEGIN;
Query OK, 0 rows affected (0.00 sec)

mysql> INSERT INTO `comments` (`status`) VALUES ('b');
Query OK, 1 row affected (0.00 sec)

mysql> COMMIT;
Query OK, 0 rows affected (0.00 sec)

mysql> BEGIN;
Query OK, 0 rows affected (0.00 sec)

mysql> UPDATE `comments` SET `comments`.`post_id` = 1 WHERE `comments`.`id` = 2;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> COMMIT;
Query OK, 0 rows affected (0.00 sec)

mysql> SELECT COUNT(DISTINCT `comments`.`post_id`) AS `count_post_id`, `comments`.`status` AS `comments_status` FROM `comments` GROUP BY `comments`.`status`\G
*************************** 1. row ***************************
  count_post_id: 1
comments_status: a
*************************** 2. row ***************************
  count_post_id: 1
comments_status: b
2 rows in set (0.00 sec)

mysql> SELECT COUNT(DISTINCT `comments`.`post_id`) AS `count_struct_arel_attributes_attribute_relation_arel_table_0x000000010b20ba50_name_comments_klass_comment_id_integer_post_id_integer_status_string_type_caster_activerecord_typecaster_map_0x000000011166bfb8_klass_comment_id_integer_post_id_integer_status_st`, `comments`.`status` AS `comments_status` FROM `comments` GROUP BY `comments`.`status`\G
*************************** 1. row ***************************
count_struct_arel_attributes_attribute_relation_arel_table_0x000000010b20ba50_name_comments_klass_comment_id_integer_post_id_integer_status_string_type_caster_activerecord_typecaster_map_0x000000011166bfb8_klass_comment_id_integer_post_id_integer_status_st: 1
                                                                                                                                                                                                                                                 comments_status: a
*************************** 2. row ***************************
count_struct_arel_attributes_attribute_relation_arel_table_0x000000010b20ba50_name_comments_klass_comment_id_integer_post_id_integer_status_string_type_caster_activerecord_typecaster_map_0x000000011166bfb8_klass_comment_id_integer_post_id_integer_status_st: 1
                                                                                                                                                                                                                                                 comments_status: b
2 rows in set (0.00 sec)

mysql>
```

- MariaDB10.11.1

```sql
MariaDB [test]> DROP TABLE IF EXISTS `posts`;
NCT `comments`.`post_id`) AS `count_struct_arel_attributes_attribute_relation_arel_table_0x000000010b20ba50_name_comments_klass_comment_id_integer_post_id_integer_status_string_type_caster_activerecord_typecaster_map_0x000000011166bfb8_klass_comment_id_integer_post_id_integer_status_st`, `comments`.`status` AS `comments_status` FROM `comments` GROUP BY `comments`.`status`\GQuery OK, 0 rows affected (0.024 sec)

MariaDB [test]> CREATE TABLE `posts` (`id` bigint NOT NULL AUTO_INCREMENT PRIMARY KEY);
Query OK, 0 rows affected (0.022 sec)

MariaDB [test]> DROP TABLE IF EXISTS `comments`;
Query OK, 0 rows affected (0.016 sec)

MariaDB [test]> CREATE TABLE `comments` (`id` bigint NOT NULL AUTO_INCREMENT PRIMARY KEY, `post_id` int, `status` varchar(255));
Query OK, 0 rows affected (0.020 sec)

MariaDB [test]> BEGIN;
Query OK, 0 rows affected (0.000 sec)

MariaDB [test]> INSERT INTO `posts` VALUES ();
Query OK, 1 row affected (0.002 sec)

MariaDB [test]> COMMIT;
Query OK, 0 rows affected (0.002 sec)

MariaDB [test]> BEGIN;
Query OK, 0 rows affected (0.000 sec)

MariaDB [test]> INSERT INTO `comments` (`status`) VALUES ('a');
Query OK, 1 row affected (0.001 sec)

MariaDB [test]> COMMIT;
Query OK, 0 rows affected (0.002 sec)

MariaDB [test]> BEGIN;
Query OK, 0 rows affected (0.000 sec)

MariaDB [test]> UPDATE `comments` SET `comments`.`post_id` = 1 WHERE `comments`.`id` = 1;
Query OK, 1 row affected (0.001 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [test]> COMMIT;
Query OK, 0 rows affected (0.002 sec)

MariaDB [test]> BEGIN;
Query OK, 0 rows affected (0.000 sec)

MariaDB [test]> INSERT INTO `comments` (`status`) VALUES ('b');
Query OK, 1 row affected (0.001 sec)

MariaDB [test]> COMMIT;
Query OK, 0 rows affected (0.002 sec)

MariaDB [test]> BEGIN;
Query OK, 0 rows affected (0.000 sec)

MariaDB [test]> UPDATE `comments` SET `comments`.`post_id` = 1 WHERE `comments`.`id` = 2;
Query OK, 1 row affected (0.000 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [test]> COMMIT;
Query OK, 0 rows affected (0.002 sec)

MariaDB [test]> SELECT COUNT(DISTINCT `comments`.`post_id`) AS `count_post_id`, `comments`.`status` AS `comments_status` FROM `comments` GROUP BY `comments`.`status`\G
*************************** 1. row ***************************
  count_post_id: 1
comments_status: a
*************************** 2. row ***************************
  count_post_id: 1
comments_status: b
2 rows in set (0.000 sec)

MariaDB [test]> SELECT COUNT(DISTINCT `comments`.`post_id`) AS `count_struct_arel_attributes_attribute_relation_arel_table_0x000000010b20ba50_name_comments_klass_comment_id_integer_post_id_integer_status_string_type_caster_activerecord_typecaster_map_0x000000011166bfb8_klass_comment_id_integer_post_id_integer_status_st`, `comments`.`status` AS `comments_status` FROM `comments` GROUP BY `comments`.`status`\G
*************************** 1. row ***************************
count_struct_arel_attributes_attribute_relation_arel_table_0x000000010b20ba50_name_comments_klass_comment_id_integer_post_id_integer_status_string_type_caster_activerecord_typecaster_map_0x000000011166bfb8_klass_comment_id_integer_post_id_integer_status_s: 1
                                                                                                                                                                                                                                                comments_status: a
*************************** 2. row ***************************
count_struct_arel_attributes_attribute_relation_arel_table_0x000000010b20ba50_name_comments_klass_comment_id_integer_post_id_integer_status_string_type_caster_activerecord_typecaster_map_0x000000011166bfb8_klass_comment_id_integer_post_id_integer_status_s: 1
                                                                                                                                                                                                                                                comments_status: b
2 rows in set (0.001 sec)

MariaDB [test]>
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1410305121/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47125
https://api.github.com/repos/rails/rails/issues/comments/1398881253,https://github.com/rails/rails/pull/47088#issuecomment-1398881253,https://api.github.com/repos/rails/rails/issues/47088,1398881253,IC_kwDNIULOU2E75Q,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-01-20T20:14:04Z,2023-01-20T20:14:04Z,MEMBER,"I'm not sure about this new concept of ""raw value changed"". It seems it is too heavy handed to solve this specific problem. For what I got from the issue it is a combination of numerically validation and nested attributes, and it seems that they are trying to get information in different ways about the attribute. Maybe we should make sure they all use the same information, without introducing a new concept?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1398881253/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47088
https://api.github.com/repos/rails/rails/issues/comments/1398999451,https://github.com/rails/rails/pull/47088#issuecomment-1398999451,https://api.github.com/repos/rails/rails/issues/47088,1398999451,IC_kwDNIULOU2MJmw,"{'login': 'JohnAnon9771', 'id': 42195321, 'node_id': 'MDQ6VXNlcjQyMTk1MzIx', 'avatar_url': 'https://avatars.githubusercontent.com/u/42195321?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/JohnAnon9771', 'html_url': 'https://github.com/JohnAnon9771', 'followers_url': 'https://api.github.com/users/JohnAnon9771/followers', 'following_url': 'https://api.github.com/users/JohnAnon9771/following{/other_user}', 'gists_url': 'https://api.github.com/users/JohnAnon9771/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/JohnAnon9771/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/JohnAnon9771/subscriptions', 'organizations_url': 'https://api.github.com/users/JohnAnon9771/orgs', 'repos_url': 'https://api.github.com/users/JohnAnon9771/repos', 'events_url': 'https://api.github.com/users/JohnAnon9771/events{/privacy}', 'received_events_url': 'https://api.github.com/users/JohnAnon9771/received_events', 'type': 'User', 'site_admin': False}",2023-01-20T21:56:21Z,2023-01-20T21:56:21Z,CONTRIBUTOR,"> I'm not sure about this new concept of ""raw value changed"". It seems it is too heavy handed to solve this specific problem. For what I got from the issue it is a combination of numerically validation and nested attributes, and it seems that they are trying to get information in different ways about the attribute. Maybe we should make sure they all use the same information, without introducing a new concept?

Yes, I agree with you. But I'm still not sure how this can be linked, since the autosave always looks for changes and those changes reflect the actual value changes that don't happen... I'll think about it, thank you for the comment.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1398999451/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47088
https://api.github.com/repos/rails/rails/issues/comments/1399003497,https://github.com/rails/rails/pull/47088#issuecomment-1399003497,https://api.github.com/repos/rails/rails/issues/47088,1399003497,IC_kwDNIULOU2MZaQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-01-20T22:01:34Z,2023-01-20T22:01:34Z,MEMBER,"yeah, this a tricky one. It just feel weird to have association know about change specifically for validation. Maybe this is indeed the right fix. It is clearly a bug that validation is being skipped because autosave thinks there wasn't a change in the record. Maybe we should look on making autosave first run validations and then look if there was errors in the object?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1399003497/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47088
https://api.github.com/repos/rails/rails/issues/comments/1399027363,https://github.com/rails/rails/pull/47088#issuecomment-1399027363,https://api.github.com/repos/rails/rails/issues/47088,1399027363,IC_kwDNIULOU2N2ow,"{'login': 'JohnAnon9771', 'id': 42195321, 'node_id': 'MDQ6VXNlcjQyMTk1MzIx', 'avatar_url': 'https://avatars.githubusercontent.com/u/42195321?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/JohnAnon9771', 'html_url': 'https://github.com/JohnAnon9771', 'followers_url': 'https://api.github.com/users/JohnAnon9771/followers', 'following_url': 'https://api.github.com/users/JohnAnon9771/following{/other_user}', 'gists_url': 'https://api.github.com/users/JohnAnon9771/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/JohnAnon9771/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/JohnAnon9771/subscriptions', 'organizations_url': 'https://api.github.com/users/JohnAnon9771/orgs', 'repos_url': 'https://api.github.com/users/JohnAnon9771/repos', 'events_url': 'https://api.github.com/users/JohnAnon9771/events{/privacy}', 'received_events_url': 'https://api.github.com/users/JohnAnon9771/received_events', 'type': 'User', 'site_admin': False}",2023-01-20T22:25:38Z,2023-01-20T22:25:38Z,CONTRIBUTOR,"> Maybe we should look on making autosave first run validations and then look if there was errors in the object?

I'm not sure I understand correctly... are you suggesting to run the validations first regardless of the changes or not? Wouldn't that affect performance?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1399027363/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47088
https://api.github.com/repos/rails/rails/issues/comments/1399029237,https://github.com/rails/rails/pull/47088#issuecomment-1399029237,https://api.github.com/repos/rails/rails/issues/47088,1399029237,IC_kwDNIULOU2N99Q,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-01-20T22:28:22Z,2023-01-20T22:28:22Z,MEMBER,"> I'm not sure I understand correctly... are you suggesting to run the validations first regardless of the changes or not? Wouldn't that affect performance?

Yeah, that is what I was suggesting. Yes, that is true, that would affect performance. This is what makes fixing this tricky.

It seems your approach is the one that make most sense right now. It is just feel that we are mixing validation and autosave concerns.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1399029237/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47088
https://api.github.com/repos/rails/rails/issues/comments/1399047741,https://github.com/rails/rails/pull/47088#issuecomment-1399047741,https://api.github.com/repos/rails/rails/issues/47088,1399047741,IC_kwDNIULOU2PGPQ,"{'login': 'JohnAnon9771', 'id': 42195321, 'node_id': 'MDQ6VXNlcjQyMTk1MzIx', 'avatar_url': 'https://avatars.githubusercontent.com/u/42195321?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/JohnAnon9771', 'html_url': 'https://github.com/JohnAnon9771', 'followers_url': 'https://api.github.com/users/JohnAnon9771/followers', 'following_url': 'https://api.github.com/users/JohnAnon9771/following{/other_user}', 'gists_url': 'https://api.github.com/users/JohnAnon9771/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/JohnAnon9771/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/JohnAnon9771/subscriptions', 'organizations_url': 'https://api.github.com/users/JohnAnon9771/orgs', 'repos_url': 'https://api.github.com/users/JohnAnon9771/repos', 'events_url': 'https://api.github.com/users/JohnAnon9771/events{/privacy}', 'received_events_url': 'https://api.github.com/users/JohnAnon9771/received_events', 'type': 'User', 'site_admin': False}",2023-01-20T22:56:58Z,2023-01-20T22:56:58Z,CONTRIBUTOR,"> > I'm not sure I understand correctly... are you suggesting to run the validations first regardless of the changes or not? Wouldn't that affect performance?
> 
> Yeah, that is what I was suggesting. Yes, that is true, that would affect performance. This is what makes fixing this tricky.
> 
> It seems your approach is the one that make most sense right now. It is just feel that we are mixing validation and autosave concerns.

Yes, I'll look at other approaches and see if I can do this separation... Thank you very much for your opinion.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1399047741/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47088
https://api.github.com/repos/rails/rails/issues/comments/1684913414,https://github.com/rails/rails/pull/47088#issuecomment-1684913414,https://api.github.com/repos/rails/rails/issues/47088,1684913414,IC_kwDNIULOZG29Bg,"{'login': 'joshuay03', 'id': 54629302, 'node_id': 'MDQ6VXNlcjU0NjI5MzAy', 'avatar_url': 'https://avatars.githubusercontent.com/u/54629302?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/joshuay03', 'html_url': 'https://github.com/joshuay03', 'followers_url': 'https://api.github.com/users/joshuay03/followers', 'following_url': 'https://api.github.com/users/joshuay03/following{/other_user}', 'gists_url': 'https://api.github.com/users/joshuay03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/joshuay03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/joshuay03/subscriptions', 'organizations_url': 'https://api.github.com/users/joshuay03/orgs', 'repos_url': 'https://api.github.com/users/joshuay03/repos', 'events_url': 'https://api.github.com/users/joshuay03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/joshuay03/received_events', 'type': 'User', 'site_admin': False}",2023-08-19T10:26:48Z,2023-08-19T10:26:48Z,CONTRIBUTOR,"Hey @JohnAnon9771, are you still looking into this? I wanted to check before I got a PR up. I personally think decoupling changes and validations makes the most sense here, seeing as the two are not interdependent for direct updates as shown in https://github.com/rails/rails/issues/46509#issuecomment-1322641993, I don't see why it should be any different for autosave?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1684913414/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47088
https://api.github.com/repos/rails/rails/issues/comments/1685090749,https://github.com/rails/rails/pull/47088#issuecomment-1685090749,https://api.github.com/repos/rails/rails/issues/47088,1685090749,IC_kwDNIULOZHBxvQ,"{'login': 'JohnAnon9771', 'id': 42195321, 'node_id': 'MDQ6VXNlcjQyMTk1MzIx', 'avatar_url': 'https://avatars.githubusercontent.com/u/42195321?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/JohnAnon9771', 'html_url': 'https://github.com/JohnAnon9771', 'followers_url': 'https://api.github.com/users/JohnAnon9771/followers', 'following_url': 'https://api.github.com/users/JohnAnon9771/following{/other_user}', 'gists_url': 'https://api.github.com/users/JohnAnon9771/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/JohnAnon9771/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/JohnAnon9771/subscriptions', 'organizations_url': 'https://api.github.com/users/JohnAnon9771/orgs', 'repos_url': 'https://api.github.com/users/JohnAnon9771/repos', 'events_url': 'https://api.github.com/users/JohnAnon9771/events{/privacy}', 'received_events_url': 'https://api.github.com/users/JohnAnon9771/received_events', 'type': 'User', 'site_admin': False}",2023-08-19T19:35:30Z,2023-08-19T19:35:30Z,CONTRIBUTOR,"> Hey @JohnAnon9771, are you still looking into this? I wanted to check before I got a PR up. I personally think decoupling changes and validations makes the most sense here, seeing as the two are not interdependent for direct updates as shown in [#46509 (comment)](https://github.com/rails/rails/issues/46509#issuecomment-1322641993), I don't see why it should be any different for autosave?

Feel free to open the PR! Unfortunately, I haven't had the time to look into this problem. I completely agree with the separation, at the time it was just a POC.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1685090749/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47088
https://api.github.com/repos/rails/rails/issues/comments/1409377376,https://github.com/rails/rails/issues/47071#issuecomment-1409377376,https://api.github.com/repos/rails/rails/issues/47071,1409377376,IC_kwDNIULOVAFkYA,"{'login': 'alexandreruban', 'id': 33979976, 'node_id': 'MDQ6VXNlcjMzOTc5OTc2', 'avatar_url': 'https://avatars.githubusercontent.com/u/33979976?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/alexandreruban', 'html_url': 'https://github.com/alexandreruban', 'followers_url': 'https://api.github.com/users/alexandreruban/followers', 'following_url': 'https://api.github.com/users/alexandreruban/following{/other_user}', 'gists_url': 'https://api.github.com/users/alexandreruban/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/alexandreruban/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/alexandreruban/subscriptions', 'organizations_url': 'https://api.github.com/users/alexandreruban/orgs', 'repos_url': 'https://api.github.com/users/alexandreruban/repos', 'events_url': 'https://api.github.com/users/alexandreruban/events{/privacy}', 'received_events_url': 'https://api.github.com/users/alexandreruban/received_events', 'type': 'User', 'site_admin': False}",2023-01-30T21:35:22Z,2023-01-30T21:35:52Z,CONTRIBUTOR,"I can reproduce the issue on `main`. The `resolve_model_to_route` configuration can take two values:

1. `rails_storage_redirect`
2. `rails_storage_proxy`

--- 

When using the `rails_storage_redirect` configuration, `message.video.preview(resize_to_limit: [100, 100])` will end up in the `ActiveStorage::Representations::RedirectController#show` action. In this controller, we redirect to `@blob.representation(params[:variation_key]).processed.url`.

In that case, the url we redirect to is the url of the variant corresponding to the applied transformations:

```rb
# activestorage/app/models/active_storage/preview.rb

def url(**options)
  if processed?
    variant.url(**options)
  else
    raise UnprocessedError
  end
end
```

--- 

When using the `rails_storage_proxy` configuration, `message.video.preview(resize_to_limit: [100, 100])` will end up in the `ActiveStorage::Representations::ProxyController#show` action. In this controller, we stream `@blob.representation(params[:variation_key]).processed.image`.

In that case, the `image` is always the blob's `preview_image` without any transformations:

```rb
# activestorage/app/models/active_storage/preview.rb

def image
  blob.preview_image
end
```

--- 

I'm not sure why there are two different approaches here. 
In the `ProxyController`, we should also return the correct variation by doing something like this (in pseudo code):

```rb
# activestorage/app/controllers/active_storage/representations/proxy_controller.rb

def show
  http_cache_forever public: true do
    send_blob_stream @representation.variant.image, disposition: params[:disposition]
  end
end
```

I've tested and it works. If you think the approach is correct, I'd love to draft a PR!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1409377376/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47071
https://api.github.com/repos/rails/rails/issues/comments/1396173719,https://github.com/rails/rails/issues/47047#issuecomment-1396173719,https://api.github.com/repos/rails/rails/issues/47047,1396173719,IC_kwDNIULOUzfrlw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-01-18T22:24:32Z,2023-01-18T22:24:32Z,MEMBER,"Thanks for reporting this issue, TIL something new!

I think the docs could be improved, to call out these types of gotchas, feel free to submit a PR.

Looking at the guides, there is one small reference to this here:
https://guides.rubyonrails.org/active_storage_overview.html#downloading-files

> It's important to know that the file is not yet available in the after_create callback but in the after_create_commit only.

I have no checked the API docs yet, but also something to consider.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1396173719/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47047
https://api.github.com/repos/rails/rails/issues/comments/1396945198,https://github.com/rails/rails/issues/47047#issuecomment-1396945198,https://api.github.com/repos/rails/rails/issues/47047,1396945198,IC_kwDNIULOU0OxLg,"{'login': 'sbungartz', 'id': 7670818, 'node_id': 'MDQ6VXNlcjc2NzA4MTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7670818?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sbungartz', 'html_url': 'https://github.com/sbungartz', 'followers_url': 'https://api.github.com/users/sbungartz/followers', 'following_url': 'https://api.github.com/users/sbungartz/following{/other_user}', 'gists_url': 'https://api.github.com/users/sbungartz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sbungartz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sbungartz/subscriptions', 'organizations_url': 'https://api.github.com/users/sbungartz/orgs', 'repos_url': 'https://api.github.com/users/sbungartz/repos', 'events_url': 'https://api.github.com/users/sbungartz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sbungartz/received_events', 'type': 'User', 'site_admin': False}",2023-01-19T13:05:09Z,2023-01-19T13:05:09Z,NONE,"@zzak Thanks, I will try to find the time for a PR.

I also just updated the workaround code in the description, because my original version broke presence validation.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1396945198/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47047
https://api.github.com/repos/rails/rails/issues/comments/1397705500,https://github.com/rails/rails/issues/47047#issuecomment-1397705500,https://api.github.com/repos/rails/rails/issues/47047,1397705500,IC_kwDNIULOU09LHA,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-01-19T22:40:21Z,2023-01-19T22:40:21Z,MEMBER,"Also somewhat related, but I wonder in this case why not wrap the whole thing in a transaction 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1397705500/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47047
https://api.github.com/repos/rails/rails/issues/comments/1398643168,https://github.com/rails/rails/issues/47047#issuecomment-1398643168,https://api.github.com/repos/rails/rails/issues/47047,1398643168,IC_kwDNIULOU12Z4A,"{'login': 'sbungartz', 'id': 7670818, 'node_id': 'MDQ6VXNlcjc2NzA4MTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7670818?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sbungartz', 'html_url': 'https://github.com/sbungartz', 'followers_url': 'https://api.github.com/users/sbungartz/followers', 'following_url': 'https://api.github.com/users/sbungartz/following{/other_user}', 'gists_url': 'https://api.github.com/users/sbungartz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sbungartz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sbungartz/subscriptions', 'organizations_url': 'https://api.github.com/users/sbungartz/orgs', 'repos_url': 'https://api.github.com/users/sbungartz/repos', 'events_url': 'https://api.github.com/users/sbungartz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sbungartz/received_events', 'type': 'User', 'site_admin': False}",2023-01-20T16:38:56Z,2023-01-20T16:39:11Z,NONE,"> Also somewhat related, but I wonder in this case why not wrap the whole thing in a transaction thinking

I do have reservations about doing the upload within a transaction, since having long running transactions could cause problems, especially if other validations or callbacks cause widespread locking.
With the workaround code, we would have the possibility of `Blobs` being created that are never attached.
If I am not mistaken this could also happen using direct upload, even more likely because the client device is still involved.
Maybe there should be a cleanup job that gets rid of these periodically.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1398643168/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47047
https://api.github.com/repos/rails/rails/issues/comments/1436946332,https://github.com/rails/rails/issues/47047#issuecomment-1436946332,https://api.github.com/repos/rails/rails/issues/47047,1436946332,IC_kwDNIULOVaYPnA,"{'login': 'Polo2', 'id': 32060402, 'node_id': 'MDQ6VXNlcjMyMDYwNDAy', 'avatar_url': 'https://avatars.githubusercontent.com/u/32060402?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Polo2', 'html_url': 'https://github.com/Polo2', 'followers_url': 'https://api.github.com/users/Polo2/followers', 'following_url': 'https://api.github.com/users/Polo2/following{/other_user}', 'gists_url': 'https://api.github.com/users/Polo2/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Polo2/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Polo2/subscriptions', 'organizations_url': 'https://api.github.com/users/Polo2/orgs', 'repos_url': 'https://api.github.com/users/Polo2/repos', 'events_url': 'https://api.github.com/users/Polo2/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Polo2/received_events', 'type': 'User', 'site_admin': False}",2023-02-20T12:38:11Z,2023-02-20T12:38:11Z,NONE,"👋 ,

As mentioned by @paulRbr , we have a similar issue on our project.

What happens:

1.  User upload a logo for his documentation (our product is a tool to generate API documentation from OpenAPI/AsyncAPI specification)
2. Consequently, a job `ActiveStorage::AnalyzeJob` is scheduled (native behavior, no change in our app).
3. But User may destroy its documentation (blob's resource) before this job is performed
4. Exception `ActiveStorage::FileNotFoundError` is raised, and job failed.

My first impression here was that this exception `ActiveStorage::FileNotFoundError` should prevent this job `ActiveStorage::AnalyzeJob` to be re-scheduled.
Solution could be to discard also `ActiveStorage::FileNotFoundError` in `ActiveStorage::AnalyzeJob`, as it's already done with `ActiveRecord::RecordNotFound` (introduced by 06f8baf73c677303353c79609838caaeec3ccc9a)

Something like:
```ruby
class ActiveStorage::AnalyzeJob < ActiveStorage::BaseJob
  queue_as { ActiveStorage.queues[:analysis] }

  discard_on ActiveRecord::RecordNotFound
  discard_on ActiveRecord::FileNotFoundError # new line here
  retry_on ActiveStorage::IntegrityError, attempts: 10, wait: :exponentially_longer

  def perform(blob)
    blob.analyze
  end
end
```

WDYT?


","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1436946332/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47047
https://api.github.com/repos/rails/rails/issues/comments/1556170560,https://github.com/rails/rails/issues/47047#issuecomment-1556170560,https://api.github.com/repos/rails/rails/issues/47047,1556170560,IC_kwDNIULOXMFHQA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-05-21T12:42:15Z,2023-05-21T12:42:15Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1556170560/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47047
https://api.github.com/repos/rails/rails/issues/comments/1685236548,https://github.com/rails/rails/issues/47047#issuecomment-1685236548,https://api.github.com/repos/rails/rails/issues/47047,1685236548,IC_kwDNIULOZHKrRA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-20T09:29:21Z,2023-08-20T09:29:21Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1685236548/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47047
https://api.github.com/repos/rails/rails/issues/comments/1740396005,https://github.com/rails/rails/issues/47047#issuecomment-1740396005,https://api.github.com/repos/rails/rails/issues/47047,1740396005,IC_kwDNIULOZ7xV5Q,"{'login': 'palexvs', 'id': 1415597, 'node_id': 'MDQ6VXNlcjE0MTU1OTc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1415597?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/palexvs', 'html_url': 'https://github.com/palexvs', 'followers_url': 'https://api.github.com/users/palexvs/followers', 'following_url': 'https://api.github.com/users/palexvs/following{/other_user}', 'gists_url': 'https://api.github.com/users/palexvs/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/palexvs/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/palexvs/subscriptions', 'organizations_url': 'https://api.github.com/users/palexvs/orgs', 'repos_url': 'https://api.github.com/users/palexvs/repos', 'events_url': 'https://api.github.com/users/palexvs/events{/privacy}', 'received_events_url': 'https://api.github.com/users/palexvs/received_events', 'type': 'User', 'site_admin': False}",2023-09-29T06:55:36Z,2023-09-29T06:55:36Z,NONE,"we have the same issue, and it's possible to reproduce:
in first console run:
```

loop do
  if (image = some_model.find(1).image).attached?
    resp = Faraday.get Rails.application.routes.url_helpers.rails_storage_proxy_url(image)
    puts resp.status
    break if resp.status == 200
  else
    sleep(0.01)
  end
rescue => e
  puts e
  sleep(0.01)
end
```
in the second console:
```
some_model.find(1).image.attach(io: StringIO.new(file), filename: filename, content_type: ""image/jpg"")
```

I'm getting this output:
```
502 <-- first request fails
200
```

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1740396005/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47047
https://api.github.com/repos/rails/rails/issues/comments/1742382189,https://github.com/rails/rails/issues/47047#issuecomment-1742382189,https://api.github.com/repos/rails/rails/issues/47047,1742382189,IC_kwDNIULOZ9qkbQ,"{'login': 'palexvs', 'id': 1415597, 'node_id': 'MDQ6VXNlcjE0MTU1OTc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1415597?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/palexvs', 'html_url': 'https://github.com/palexvs', 'followers_url': 'https://api.github.com/users/palexvs/followers', 'following_url': 'https://api.github.com/users/palexvs/following{/other_user}', 'gists_url': 'https://api.github.com/users/palexvs/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/palexvs/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/palexvs/subscriptions', 'organizations_url': 'https://api.github.com/users/palexvs/orgs', 'repos_url': 'https://api.github.com/users/palexvs/repos', 'events_url': 'https://api.github.com/users/palexvs/events{/privacy}', 'received_events_url': 'https://api.github.com/users/palexvs/received_events', 'type': 'User', 'site_admin': False}",2023-10-02T04:24:22Z,2023-10-02T04:24:22Z,NONE,"There is another simpler and more stable way to reproduce the issue:

the first console that fetches the file:
```
loop do
  if (image = some_model.find(1).image).attached?
    key = image.attachment.blob.key
    exist = image.attachment.blob.service.exist?(key)
    puts ""exist?(#{key}) => #{exist}""
    break if exist
  else
    sleep(0.01)
  end
end
```

the second console that uploads the file:
```
class ActiveStorage::Blob < ActiveStorage::Record
  def upload_without_unfurling(io)
    sleep(1) # imitate big file upload or some delay on storage system side
    service.upload key, io, checksum: checksum, **service_metadata
  end
end

some_model.find(1).image.attach(io: StringIO.new(file), filename: filename, content_type: ""image/jpg"")
```

output in the first console 
```
exist?(vpz3azorta188m1aj2ibc2ctbei5) => false
exist?(vpz3azorta188m1aj2ibc2ctbei5) => false
exist?(vpz3azorta188m1aj2ibc2ctbei5) => false
exist?(vpz3azorta188m1aj2ibc2ctbei5) => false
exist?(vpz3azorta188m1aj2ibc2ctbei5) => false
exist?(vpz3azorta188m1aj2ibc2ctbei5) => false
exist?(vpz3azorta188m1aj2ibc2ctbei5) => true
```
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742382189/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47047
https://api.github.com/repos/rails/rails/issues/comments/1742796553,https://github.com/rails/rails/issues/47047#issuecomment-1742796553,https://api.github.com/repos/rails/rails/issues/47047,1742796553,IC_kwDNIULOZ-D3CQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-10-02T10:50:59Z,2023-10-02T10:50:59Z,MEMBER,"This seems like the expected behavior. Maybe we should have a flag in the `Blob` record to say the image isn't yet uploaded to the service so users can check that flag, but I don't see how to change this behavior so the record is only committed when it is uploaded to the service without decreasing considerably the resilience of applications.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1742796553/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47047
https://api.github.com/repos/rails/rails/issues/comments/1385991790,https://github.com/rails/rails/pull/47035#issuecomment-1385991790,https://api.github.com/repos/rails/rails/issues/47035,1385991790,IC_kwDNIULOUpyObg,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-01-17T20:11:30Z,2023-01-17T20:11:30Z,MEMBER,"This makes sense but `config.middleware` is a `Rails::Configuration::MiddlewareStackProxy` that has a different behavior of `ActionDispatch::MiddlewareStack`, so I'm not sure we should be exposing the `ActionDispatch::MiddlewareStack.new` like that.

I think we should be creating sub proxies instead on the configuration since it allow users to delete middleware not matter the order they are defined.

But I don't want people to be creating proxies by the class name so maybe we should create a `app_stack 
 = config.middleware.new_stack`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1385991790/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47035
https://api.github.com/repos/rails/rails/issues/comments/1397919346,https://github.com/rails/rails/pull/47035#issuecomment-1397919346,https://api.github.com/repos/rails/rails/issues/47035,1397919346,IC_kwDNIULOU1KOcg,"{'login': 'nickh', 'id': 6218, 'node_id': 'MDQ6VXNlcjYyMTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6218?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nickh', 'html_url': 'https://github.com/nickh', 'followers_url': 'https://api.github.com/users/nickh/followers', 'following_url': 'https://api.github.com/users/nickh/following{/other_user}', 'gists_url': 'https://api.github.com/users/nickh/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nickh/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nickh/subscriptions', 'organizations_url': 'https://api.github.com/users/nickh/orgs', 'repos_url': 'https://api.github.com/users/nickh/repos', 'events_url': 'https://api.github.com/users/nickh/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nickh/received_events', 'type': 'User', 'site_admin': True}",2023-01-20T04:50:24Z,2023-01-20T04:50:24Z,CONTRIBUTOR,"@rafaelfranca thanks for the feedback! I've been digging in a bit and curious whether there's a preferred direction in how nested stacks are resolved.

The latest commit in this PR has first option I've tried - to handle it in `ActionDispatch::MiddlewareStack#build`. In this approach, given a configuration like this:

```ruby
app_stack = config.middleware.create_stack
config.middleware.unshift app_stack
app_stack.use C
app_stack.use D

other_stack = config.middleware.create_stack
other_stack.use E
other_stack.use F
app_stack.insert_after C, other_stack

config.middleware.use A
config.middleware.use B
```

`MiddlewareStack` accepts a `MiddlewareStackProxy` as an argument, and when the `app` is initially built, the root proxy creates a stack and merges it with the default rails stack:

```ruby
> config.middleware.middlewares
=> [app_stack, A, B]
```

Then `#build` creates a flattened list of middleware by recursively expanding any middleware that can `:merge_into` something. The middlewares in the resulting stack includes each middleware in the expected order:

```ruby
> Rails.application.middleware.middlewares
=> [C, E, F, D, A, B]
```

Since this approach processes all the proxy operations before flattening middleware, the middleware in each stack can't reference middleware in a different stack - eg: `app_stack.insert_after A, G`.  Also `ActionDispatch::MiddlewareStack` needs to know how to accept a `Rails::Configuration::MiddlewareStackProxy`.

Another option would be to put the flattening logic in `Rails::Configuration::MiddlewareStackProxy` instead, which seems more complicated. Each operation method would need to know how to handle a proxy instance differently from a middleware class, and `#merge_into` would need to flatten and run the recorded `@operation` and `@delete_operation` commands in the correct order when merging into the default stack.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1397919346/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47035
https://api.github.com/repos/rails/rails/issues/comments/1414269991,https://github.com/rails/rails/pull/47035#issuecomment-1414269991,https://api.github.com/repos/rails/rails/issues/47035,1414269991,IC_kwDNIULOVEwMJw,"{'login': 'nickh', 'id': 6218, 'node_id': 'MDQ6VXNlcjYyMTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6218?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nickh', 'html_url': 'https://github.com/nickh', 'followers_url': 'https://api.github.com/users/nickh/followers', 'following_url': 'https://api.github.com/users/nickh/following{/other_user}', 'gists_url': 'https://api.github.com/users/nickh/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nickh/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nickh/subscriptions', 'organizations_url': 'https://api.github.com/users/nickh/orgs', 'repos_url': 'https://api.github.com/users/nickh/repos', 'events_url': 'https://api.github.com/users/nickh/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nickh/received_events', 'type': 'User', 'site_admin': True}",2023-02-02T19:40:05Z,2023-02-02T19:40:05Z,CONTRIBUTOR,"@rafaelfranca I've refactored the nesting and flattening to use a new `MiddlewareContainer` class, does this seem reasonable? If it does, I can squash the branch.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1414269991/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47035
https://api.github.com/repos/rails/rails/issues/comments/1426383810,https://github.com/rails/rails/pull/47035#issuecomment-1426383810,https://api.github.com/repos/rails/rails/issues/47035,1426383810,IC_kwDNIULOVQTjwg,"{'login': 'nickh', 'id': 6218, 'node_id': 'MDQ6VXNlcjYyMTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6218?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nickh', 'html_url': 'https://github.com/nickh', 'followers_url': 'https://api.github.com/users/nickh/followers', 'following_url': 'https://api.github.com/users/nickh/following{/other_user}', 'gists_url': 'https://api.github.com/users/nickh/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nickh/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nickh/subscriptions', 'organizations_url': 'https://api.github.com/users/nickh/orgs', 'repos_url': 'https://api.github.com/users/nickh/repos', 'events_url': 'https://api.github.com/users/nickh/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nickh/received_events', 'type': 'User', 'site_admin': True}",2023-02-10T21:47:06Z,2023-02-10T21:47:06Z,CONTRIBUTOR,@rafaelfranca does this look OK?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1426383810/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47035
https://api.github.com/repos/rails/rails/issues/comments/1497856354,https://github.com/rails/rails/pull/47035#issuecomment-1497856354,https://api.github.com/repos/rails/rails/issues/47035,1497856354,IC_kwDNIULOWUd5Yg,"{'login': 'nickh', 'id': 6218, 'node_id': 'MDQ6VXNlcjYyMTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6218?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nickh', 'html_url': 'https://github.com/nickh', 'followers_url': 'https://api.github.com/users/nickh/followers', 'following_url': 'https://api.github.com/users/nickh/following{/other_user}', 'gists_url': 'https://api.github.com/users/nickh/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nickh/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nickh/subscriptions', 'organizations_url': 'https://api.github.com/users/nickh/orgs', 'repos_url': 'https://api.github.com/users/nickh/repos', 'events_url': 'https://api.github.com/users/nickh/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nickh/received_events', 'type': 'User', 'site_admin': True}",2023-04-05T17:21:52Z,2023-04-05T17:21:52Z,CONTRIBUTOR,@rafaelfranca does this seem reasonable?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1497856354/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47035
https://api.github.com/repos/rails/rails/issues/comments/1579296839,https://github.com/rails/rails/pull/47035#issuecomment-1579296839,https://api.github.com/repos/rails/rails/issues/47035,1579296839,IC_kwDNIULOXiIoRw,"{'login': 'nickh', 'id': 6218, 'node_id': 'MDQ6VXNlcjYyMTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6218?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nickh', 'html_url': 'https://github.com/nickh', 'followers_url': 'https://api.github.com/users/nickh/followers', 'following_url': 'https://api.github.com/users/nickh/following{/other_user}', 'gists_url': 'https://api.github.com/users/nickh/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nickh/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nickh/subscriptions', 'organizations_url': 'https://api.github.com/users/nickh/orgs', 'repos_url': 'https://api.github.com/users/nickh/repos', 'events_url': 'https://api.github.com/users/nickh/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nickh/received_events', 'type': 'User', 'site_admin': True}",2023-06-06T19:00:38Z,2023-06-06T19:00:38Z,CONTRIBUTOR,"@rafaelfranca or @zzak - I'm definitely happy to keep resolving merge conflicts if there's interest in moving this forward, and if it doesn't seem like it'll be a useful change I'm happy to close it. Any thoughts?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1579296839/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47035
https://api.github.com/repos/rails/rails/issues/comments/1382237534,https://github.com/rails/rails/pull/47000#issuecomment-1382237534,https://api.github.com/repos/rails/rails/issues/47000,1382237534,IC_kwDNIULOUmNFXg,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-01-13T18:39:33Z,2023-01-13T18:39:33Z,MEMBER,CI is broken because the `build_` methods are being defined more than once. Can you take a look?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1382237534/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,47000
https://api.github.com/repos/rails/rails/issues/comments/1372532721,https://github.com/rails/rails/pull/46900#issuecomment-1372532721,https://api.github.com/repos/rails/rails/issues/46900,1372532721,IC_kwDNIULOUc8v8Q,"{'login': 'fractaledmind', 'id': 5077225, 'node_id': 'MDQ6VXNlcjUwNzcyMjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5077225?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fractaledmind', 'html_url': 'https://github.com/fractaledmind', 'followers_url': 'https://api.github.com/users/fractaledmind/followers', 'following_url': 'https://api.github.com/users/fractaledmind/following{/other_user}', 'gists_url': 'https://api.github.com/users/fractaledmind/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fractaledmind/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fractaledmind/subscriptions', 'organizations_url': 'https://api.github.com/users/fractaledmind/orgs', 'repos_url': 'https://api.github.com/users/fractaledmind/repos', 'events_url': 'https://api.github.com/users/fractaledmind/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fractaledmind/received_events', 'type': 'User', 'site_admin': False}",2023-01-05T17:43:59Z,2023-01-05T17:43:59Z,CONTRIBUTOR,"I should add, I am completely open to adding more tests for more migration types. I just wanted to get the basic idea in front of maintainers first before investing more time into the tests. If you like the feature, then I'll fill out the test suite to cover `create_table` and `remove_column`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1372532721/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46900
https://api.github.com/repos/rails/rails/issues/comments/1372553901,https://github.com/rails/rails/pull/46900#issuecomment-1372553901,https://api.github.com/repos/rails/rails/issues/46900,1372553901,IC_kwDNIULOUc-CrQ,"{'login': 'andrewculver', 'id': 217218, 'node_id': 'MDQ6VXNlcjIxNzIxOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/217218?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andrewculver', 'html_url': 'https://github.com/andrewculver', 'followers_url': 'https://api.github.com/users/andrewculver/followers', 'following_url': 'https://api.github.com/users/andrewculver/following{/other_user}', 'gists_url': 'https://api.github.com/users/andrewculver/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andrewculver/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andrewculver/subscriptions', 'organizations_url': 'https://api.github.com/users/andrewculver/orgs', 'repos_url': 'https://api.github.com/users/andrewculver/repos', 'events_url': 'https://api.github.com/users/andrewculver/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andrewculver/received_events', 'type': 'User', 'site_admin': False}",2023-01-05T18:04:14Z,2023-01-05T18:04:14Z,CONTRIBUTOR,"Having the frequently used options available on the CLI seems like a win. As it is right now, when you're writing a tutorial or recording a screencast, you end up with two steps, one for `rails g` and then another instructing them on how to go into the migration file and which changes to make. Would love to be able to skip the second step more often.

I also wouldn't mind being able to specify `foreign_key: {table_name: ...}` from the CLI somehow. That one comes up a lot for me when working with related models in the same namespace.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1372553901/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46900
https://api.github.com/repos/rails/rails/issues/comments/1372671331,https://github.com/rails/rails/pull/46900#issuecomment-1372671331,https://api.github.com/repos/rails/rails/issues/46900,1372671331,IC_kwDNIULOUdFNYw,"{'login': 'fractaledmind', 'id': 5077225, 'node_id': 'MDQ6VXNlcjUwNzcyMjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5077225?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fractaledmind', 'html_url': 'https://github.com/fractaledmind', 'followers_url': 'https://api.github.com/users/fractaledmind/followers', 'following_url': 'https://api.github.com/users/fractaledmind/following{/other_user}', 'gists_url': 'https://api.github.com/users/fractaledmind/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fractaledmind/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fractaledmind/subscriptions', 'organizations_url': 'https://api.github.com/users/fractaledmind/orgs', 'repos_url': 'https://api.github.com/users/fractaledmind/repos', 'events_url': 'https://api.github.com/users/fractaledmind/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fractaledmind/received_events', 'type': 'User', 'site_admin': False}",2023-01-05T20:00:46Z,2023-01-05T20:00:46Z,CONTRIBUTOR,"@andrewculver: Good point. I didn't want to mutate this PR until I get some more feedback, but after some refactoring, I was able to get the type and options parser to handle nested key-value pairs as well. I have a PR against my fork demonstrating the code and the initial test case: https://github.com/fractaledmind/rails/pull/1

This would enable specifying `owner:references{foreign_key={table_name=users}}` from the CLI","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1372671331/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46900
https://api.github.com/repos/rails/rails/issues/comments/1372747244,https://github.com/rails/rails/pull/46900#issuecomment-1372747244,https://api.github.com/repos/rails/rails/issues/46900,1372747244,IC_kwDNIULOUdJ17A,"{'login': 'fractaledmind', 'id': 5077225, 'node_id': 'MDQ6VXNlcjUwNzcyMjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5077225?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fractaledmind', 'html_url': 'https://github.com/fractaledmind', 'followers_url': 'https://api.github.com/users/fractaledmind/followers', 'following_url': 'https://api.github.com/users/fractaledmind/following{/other_user}', 'gists_url': 'https://api.github.com/users/fractaledmind/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fractaledmind/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fractaledmind/subscriptions', 'organizations_url': 'https://api.github.com/users/fractaledmind/orgs', 'repos_url': 'https://api.github.com/users/fractaledmind/repos', 'events_url': 'https://api.github.com/users/fractaledmind/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fractaledmind/received_events', 'type': 'User', 'site_admin': False}",2023-01-05T21:01:50Z,2023-01-05T21:01:50Z,CONTRIBUTOR,"Also, in conversation with @kaspth, I explored using `:` as the separator for the key-value pairs in addition to being the top-level separator between name, type, and index_type. That was made much easier by building on the refactoring in the referenced PR to enable nested key-value pairs. The tweak on top of that code can be found in this PR: https://github.com/fractaledmind/rails/pull/2

Again, I'm happy to merge these in and fill out this PR as soon as someone signals they like that direction.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1372747244/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46900
https://api.github.com/repos/rails/rails/issues/comments/1372754844,https://github.com/rails/rails/pull/46900#issuecomment-1372754844,https://api.github.com/repos/rails/rails/issues/46900,1372754844,IC_kwDNIULOUdKTnA,"{'login': 'fractaledmind', 'id': 5077225, 'node_id': 'MDQ6VXNlcjUwNzcyMjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5077225?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fractaledmind', 'html_url': 'https://github.com/fractaledmind', 'followers_url': 'https://api.github.com/users/fractaledmind/followers', 'following_url': 'https://api.github.com/users/fractaledmind/following{/other_user}', 'gists_url': 'https://api.github.com/users/fractaledmind/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fractaledmind/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fractaledmind/subscriptions', 'organizations_url': 'https://api.github.com/users/fractaledmind/orgs', 'repos_url': 'https://api.github.com/users/fractaledmind/repos', 'events_url': 'https://api.github.com/users/fractaledmind/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fractaledmind/received_events', 'type': 'User', 'site_admin': False}",2023-01-05T21:05:09Z,2023-01-05T21:05:09Z,CONTRIBUTOR,"@andrewculver: Curious on your thoughts about the choice between `=` and `:` for the key-value separator. What @kaspth and I like about `:` is that the CLI text looks close to a Ruby hash. In the most complex case, the difference would be:

* `owner:references{foreign_key:{table_name:users},null:false}:uniq`
* `owner:references{foreign_key={table_name=users},null=false}:uniq`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1372754844/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46900
https://api.github.com/repos/rails/rails/issues/comments/1372834839,https://github.com/rails/rails/pull/46900#issuecomment-1372834839,https://api.github.com/repos/rails/rails/issues/46900,1372834839,IC_kwDNIULOUdPMFw,"{'login': 'erlingur', 'id': 509720, 'node_id': 'MDQ6VXNlcjUwOTcyMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509720?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/erlingur', 'html_url': 'https://github.com/erlingur', 'followers_url': 'https://api.github.com/users/erlingur/followers', 'following_url': 'https://api.github.com/users/erlingur/following{/other_user}', 'gists_url': 'https://api.github.com/users/erlingur/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/erlingur/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/erlingur/subscriptions', 'organizations_url': 'https://api.github.com/users/erlingur/orgs', 'repos_url': 'https://api.github.com/users/erlingur/repos', 'events_url': 'https://api.github.com/users/erlingur/events{/privacy}', 'received_events_url': 'https://api.github.com/users/erlingur/received_events', 'type': 'User', 'site_admin': False}",2023-01-05T22:01:57Z,2023-01-05T22:01:57Z,NONE,Personally I would prefer using `:` because it's also what ends up in the migration file. I'm pretty sure I would always instinctively write `:` and then have to remember it's supposed to be `=`.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1372834839/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46900
https://api.github.com/repos/rails/rails/issues/comments/1372840227,https://github.com/rails/rails/pull/46900#issuecomment-1372840227,https://api.github.com/repos/rails/rails/issues/46900,1372840227,IC_kwDNIULOUdPhIw,"{'login': 'erlingur', 'id': 509720, 'node_id': 'MDQ6VXNlcjUwOTcyMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509720?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/erlingur', 'html_url': 'https://github.com/erlingur', 'followers_url': 'https://api.github.com/users/erlingur/followers', 'following_url': 'https://api.github.com/users/erlingur/following{/other_user}', 'gists_url': 'https://api.github.com/users/erlingur/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/erlingur/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/erlingur/subscriptions', 'organizations_url': 'https://api.github.com/users/erlingur/orgs', 'repos_url': 'https://api.github.com/users/erlingur/repos', 'events_url': 'https://api.github.com/users/erlingur/events{/privacy}', 'received_events_url': 'https://api.github.com/users/erlingur/received_events', 'type': 'User', 'site_admin': False}",2023-01-05T22:06:44Z,2023-01-05T22:06:44Z,NONE,"Also, this is a great PR! I don't know how often I've googled how to pass `null: false` to a generator just to find out you can't. Thanks! I really hope this gets merged.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1372840227/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,46900
https://api.github.com/repos/rails/rails/issues/comments/1373739117,https://github.com/rails/rails/pull/46893#issuecomment-1373739117,https://api.github.com/repos/rails/rails/issues/46893,1373739117,IC_kwDNIULOUeGYbQ,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-01-06T14:58:51Z,2023-01-06T14:58:51Z,MEMBER,"Not really an argument to not do this given it would already be broken, but `arity` is generally not enough to handle keyword arguments.

I think none of the delegated methods take keyword arguments today, but they may in the future.

I wonder what the performance of `...` is on Ruby 3.2. Last time I benchmarked it, it wasn't any faster than `*args, **kwags`. But Koichi has a PR to speed this up that will likely make it to `3.3` https://github.com/ruby/ruby/pull/6920

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1373739117/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46893
https://api.github.com/repos/rails/rails/issues/comments/1373829950,https://github.com/rails/rails/pull/46893#issuecomment-1373829950,https://api.github.com/repos/rails/rails/issues/46893,1373829950,IC_kwDNIULOUeL7Pg,"{'login': 'amatsuda', 'id': 11493, 'node_id': 'MDQ6VXNlcjExNDkz', 'avatar_url': 'https://avatars.githubusercontent.com/u/11493?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/amatsuda', 'html_url': 'https://github.com/amatsuda', 'followers_url': 'https://api.github.com/users/amatsuda/followers', 'following_url': 'https://api.github.com/users/amatsuda/following{/other_user}', 'gists_url': 'https://api.github.com/users/amatsuda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/amatsuda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/amatsuda/subscriptions', 'organizations_url': 'https://api.github.com/users/amatsuda/orgs', 'repos_url': 'https://api.github.com/users/amatsuda/repos', 'events_url': 'https://api.github.com/users/amatsuda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/amatsuda/received_events', 'type': 'User', 'site_admin': False}",2023-01-06T15:56:24Z,2023-01-06T15:56:24Z,MEMBER,"@byroot 
> Not really an argument to not do this given it would already be broken, but arity is generally not enough to handle keyword arguments.
>
> I think none of the delegated methods take keyword arguments today, but they may in the future.

Yeah, I'm aware that kwargs arity is broken, and that is why I raised this question (with a little bit of anticipation that someone suggests to fix this broken method), and indeed everyone there suggested me to use Method@parameter instead.
https://bugs.ruby-lang.org/issues/19286

If you prefer using `Method#parameters` here instead, I'll try that.

> But Koichi has a PR to speed this up that will likely make it to 3.3 ruby/ruby#6920

That patch from ko1 somewhat improves the `(...)` performance, but it's still way slower than `()`. I don't think ko1 (or anyone else) could make `(...)` to be no overhead indeed.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1373829950/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46893
https://api.github.com/repos/rails/rails/issues/comments/1373832153,https://github.com/rails/rails/pull/46893#issuecomment-1373832153,https://api.github.com/repos/rails/rails/issues/46893,1373832153,IC_kwDNIULOUeMD2Q,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-01-06T15:58:47Z,2023-01-06T15:58:47Z,MEMBER,"> If you prefer using Method#parameters here instead, I'll try that.

Up to you. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1373832153/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46893
https://api.github.com/repos/rails/rails/issues/comments/1374466079,https://github.com/rails/rails/pull/46893#issuecomment-1374466079,https://api.github.com/repos/rails/rails/issues/46893,1374466079,IC_kwDNIULOUeywHw,"{'login': 'eregon', 'id': 168854, 'node_id': 'MDQ6VXNlcjE2ODg1NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/168854?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eregon', 'html_url': 'https://github.com/eregon', 'followers_url': 'https://api.github.com/users/eregon/followers', 'following_url': 'https://api.github.com/users/eregon/following{/other_user}', 'gists_url': 'https://api.github.com/users/eregon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eregon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eregon/subscriptions', 'organizations_url': 'https://api.github.com/users/eregon/orgs', 'repos_url': 'https://api.github.com/users/eregon/repos', 'events_url': 'https://api.github.com/users/eregon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eregon/received_events', 'type': 'User', 'site_admin': False}",2023-01-07T12:32:36Z,2023-01-07T12:42:04Z,CONTRIBUTOR,"> If you prefer using Method#parameters here instead, I'll try that.

I would prefer it, it's much more future-proof to use Method#parameters (and e.g. you can `raise` if you don't want to handle kwargs yet).

> I don't think ko1 (or anyone else) could make `(...)` to be no overhead indeed.

Probably (for `()`), but the overhead could be completely insignificant in real usages.
Can you show an actual improvement on a non-microbenchmark/some usage representative of how SafeBuffer is used e.g. for rendering a view?
If not, IMHO this optimization is not worth doing.

BTW, I could very well imagine that delegation via `(...)` is or becomes faster than delegation via `(a, b, c)` (on CRuby and TruffleRuby), because there is no need to assign local variables etc in the former case, and there is also no need to create a Ruby Array if the VM optimizes this well (it can just pass the internal arguments array from one frame to another, or just memcpy the arguments for the new frame vs many Ruby local var accesses).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1374466079/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46893
https://api.github.com/repos/rails/rails/issues/comments/1379619381,https://github.com/rails/rails/pull/46893#issuecomment-1379619381,https://api.github.com/repos/rails/rails/issues/46893,1379619381,IC_kwDNIULOUjtSNQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-01-11T23:36:00Z,2023-01-11T23:36:00Z,MEMBER,"Does this change at all the time to load this file? If so, in how much?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1379619381/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46893
https://api.github.com/repos/rails/rails/issues/comments/1369163160,https://github.com/rails/rails/issues/46869#issuecomment-1369163160,https://api.github.com/repos/rails/rails/issues/46869,1369163160,IC_kwDNIULOUZvFmA,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-01-02T19:25:50Z,2023-01-02T19:25:50Z,CONTRIBUTOR,"I think, thats because rails logging takes place before the `Rack::ConditionalGet` middleware - https://github.com/rack/rack/blob/717e0e3f90d36314e96c4c9716eb5c109292f98a/lib/rack/conditional_get.rb#L33-L40.

Can you create a small repro app and share with us? The following templates might be helpful - https://github.com/rails/rails/tree/main/guides/bug_report_templates.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1369163160/reactions', 'total_count': 2, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,46869
https://api.github.com/repos/rails/rails/issues/comments/1369562066,https://github.com/rails/rails/issues/46869#issuecomment-1369562066,https://api.github.com/repos/rails/rails/issues/46869,1369562066,IC_kwDNIULOUaHb0g,"{'login': 'matteoredz', 'id': 4482159, 'node_id': 'MDQ6VXNlcjQ0ODIxNTk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4482159?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matteoredz', 'html_url': 'https://github.com/matteoredz', 'followers_url': 'https://api.github.com/users/matteoredz/followers', 'following_url': 'https://api.github.com/users/matteoredz/following{/other_user}', 'gists_url': 'https://api.github.com/users/matteoredz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matteoredz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matteoredz/subscriptions', 'organizations_url': 'https://api.github.com/users/matteoredz/orgs', 'repos_url': 'https://api.github.com/users/matteoredz/repos', 'events_url': 'https://api.github.com/users/matteoredz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matteoredz/received_events', 'type': 'User', 'site_admin': False}",2023-01-03T09:41:56Z,2023-01-03T09:41:56Z,NONE,"Here we go:

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""action_controller/railtie""

class TestApp < Rails::Application
  config.root = __dir__
  config.hosts = nil
  secrets.secret_key_base = ""secret_key_base""

  config.logger = Logger.new($stdout)
  Rails.logger  = config.logger

  routes.draw do
    get ""/"" => ""test#index""
  end
end

class TestController < ActionController::Base
  include Rails.application.routes.url_helpers

  def index
    render plain: ""Home""
  end
end

require ""minitest/autorun""
require ""rack/test""

require ""active_support/log_subscriber/test_helper""

class BugTest < ActionDispatch::IntegrationTest
  include ActiveSupport::LogSubscriber::TestHelper

  def setup
    super
    ActionController::LogSubscriber.attach_to(:action_controller)
  end

  def set_logger(logger)
    ActionController::Base.logger = logger
  end

  def test_logs_ok_instead_of_not_modified
    get ""/""
    assert response.ok?
    etag = response.headers[""ETag""]

    get ""/"", headers: { ""If-None-Match"" => etag }
    assert_equal 304, response.status

    wait
    assert_match /Completed 304 Not Modified in \d+ms/, logs.last
  end

  private

    def app
      Rails.application
    end

    def logs
      @logs ||= @logger.logged(:info)
    end
end
```

And here follows the result:

```shell
❯ ruby bug.rb
Fetching https://github.com/rails/rails.git
Fetching gem metadata from https://rubygems.org/.......
Resolving dependencies...
Using rake 13.0.6
Using concurrent-ruby 1.1.10
Using connection_pool 2.3.0
Using minitest 5.17.0
Using builder 3.2.4
Using racc 1.6.2
Using crass 1.0.6
Using nio4r 2.5.8
Using websocket-extensions 0.1.5
Using zeitwerk 2.6.6
Using marcel 1.0.2
Using mini_mime 1.1.2
Using date 3.3.3
Using i18n 1.12.0
Using byebug 11.1.3
Using nokogiri 1.13.10 (arm64-darwin)
Using thor 1.2.1
Using loofah 2.19.1
Using websocket-driver 0.7.5
Using tzinfo 2.0.5
Using bundler 2.3.26
Using timeout 0.3.1
Using erubi 1.12.0
Using rails-html-sanitizer 1.4.4
Using rack 2.2.5
Using activesupport 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Using rails-dom-testing 2.0.3
Using globalid 1.0.0
Using activemodel 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Using net-protocol 0.2.1
Using actionview 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Using rack-test 2.0.2
Using activejob 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Using activerecord 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Using net-imap 0.3.4
Using net-smtp 0.3.3
Using net-pop 0.1.2
Using actionpack 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Using mail 2.8.0
Using actioncable 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Using activestorage 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Using actionmailer 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Using railties 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Using actionmailbox 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Using actiontext 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Using rails 7.1.0.alpha from https://github.com/rails/rails.git (at main@6287c10)
Run options: --seed 63400

# Running:

I, [2023-01-03T10:39:36.078984 #87323]  INFO -- : ---------------------------------------------
I, [2023-01-03T10:39:36.079009 #87323]  INFO -- : BugTest: test_logs_ok_instead_of_not_modified
I, [2023-01-03T10:39:36.079015 #87323]  INFO -- : ---------------------------------------------
I, [2023-01-03T10:39:36.093454 #87323]  INFO -- : Started GET ""/"" for 127.0.0.1 at 2023-01-03 10:39:36 +0100
I, [2023-01-03T10:39:36.181975 #87323]  INFO -- : Started GET ""/"" for 127.0.0.1 at 2023-01-03 10:39:36 +0100
F

Failure:
BugTest#test_logs_ok_instead_of_not_modified [bug.rb:63]:
Expected /Completed 304 Not Modified in \d+ms/ to match ""Completed 200 OK in 0ms (Views: 0.1ms | Allocations: 116)"".


rails test bug.rb:54



Finished in 0.104205s, 9.5965 runs/s, 38.3859 assertions/s.
1 runs, 4 assertions, 1 failures, 0 errors, 0 skips
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1369562066/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46869
https://api.github.com/repos/rails/rails/issues/comments/1370356310,https://github.com/rails/rails/issues/46869#issuecomment-1370356310,https://api.github.com/repos/rails/rails/issues/46869,1370356310,IC_kwDNIULOUa36Vg,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-01-04T00:21:13Z,2023-01-04T00:21:13Z,MEMBER,"> I think, thats because rails logging takes place before the `Rack::ConditionalGet` middleware - https://github.com/rack/rack/blob/717e0e3f90d36314e96c4c9716eb5c109292f98a/lib/rack/conditional_get.rb#L33-L40.

:+1:

The logging comes from `process_action.action_controller`, which is instrumenting _just_ the controller rendering but nothing before or after it in the middleware stack. As you mention, `Rack::ConditionalGet` changes the `200` it gets from the Controller to `304`, but that means the instrumentation never sees it.

I _think_ if the logging was on a higher middleware level like `Rack::Loggers`'s `request.action_dispatch` (or even higher like https://github.com/rails/rails/pull/40668#issuecomment-736104657) then we could see the correct status code. I wonder if we should improve `request.action_dispatch`'s payload and it could eventually take over as the default log subscriber?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1370356310/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46869
https://api.github.com/repos/rails/rails/issues/comments/1495182391,https://github.com/rails/rails/issues/46869#issuecomment-1495182391,https://api.github.com/repos/rails/rails/issues/46869,1495182391,IC_kwDNIULOWR6sNw,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-04-04T00:41:26Z,2023-04-04T00:41:26Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1495182391/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46869
https://api.github.com/repos/rails/rails/issues/comments/1554190818,https://github.com/rails/rails/issues/46869#issuecomment-1554190818,https://api.github.com/repos/rails/rails/issues/46869,1554190818,IC_kwDNIULOXKMR4g,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-05-19T07:57:27Z,2023-05-19T07:57:27Z,MEMBER,Maybe fixed by #47430,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1554190818/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46869
https://api.github.com/repos/rails/rails/issues/comments/1416289968,https://github.com/rails/rails/pull/46859#issuecomment-1416289968,https://api.github.com/repos/rails/rails/issues/46859,1416289968,IC_kwDNIULOVGresA,"{'login': 'agrobbin', 'id': 46724, 'node_id': 'MDQ6VXNlcjQ2NzI0', 'avatar_url': 'https://avatars.githubusercontent.com/u/46724?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/agrobbin', 'html_url': 'https://github.com/agrobbin', 'followers_url': 'https://api.github.com/users/agrobbin/followers', 'following_url': 'https://api.github.com/users/agrobbin/following{/other_user}', 'gists_url': 'https://api.github.com/users/agrobbin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/agrobbin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/agrobbin/subscriptions', 'organizations_url': 'https://api.github.com/users/agrobbin/orgs', 'repos_url': 'https://api.github.com/users/agrobbin/repos', 'events_url': 'https://api.github.com/users/agrobbin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/agrobbin/received_events', 'type': 'User', 'site_admin': False}",2023-02-03T19:13:45Z,2023-02-03T19:13:45Z,CONTRIBUTOR,"If/when someone from the Core team has a few minutes, it'd be great to get a review! I'd love to get something like this into Rails.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1416289968/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46859
https://api.github.com/repos/rails/rails/issues/comments/1430722313,https://github.com/rails/rails/pull/46825#issuecomment-1430722313,https://api.github.com/repos/rails/rails/issues/46825,1430722313,IC_kwDNIULOVUcXCQ,"{'login': 'jnimety', 'id': 70484, 'node_id': 'MDQ6VXNlcjcwNDg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/70484?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jnimety', 'html_url': 'https://github.com/jnimety', 'followers_url': 'https://api.github.com/users/jnimety/followers', 'following_url': 'https://api.github.com/users/jnimety/following{/other_user}', 'gists_url': 'https://api.github.com/users/jnimety/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jnimety/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jnimety/subscriptions', 'organizations_url': 'https://api.github.com/users/jnimety/orgs', 'repos_url': 'https://api.github.com/users/jnimety/repos', 'events_url': 'https://api.github.com/users/jnimety/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jnimety/received_events', 'type': 'User', 'site_admin': False}",2023-02-15T04:00:52Z,2023-02-15T04:00:52Z,CONTRIBUTOR,Would love to get this merged so I can remove my local patch. Anything left other than a final code review?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1430722313/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46825
https://api.github.com/repos/rails/rails/issues/comments/1365357790,https://github.com/rails/rails/issues/46822#issuecomment-1365357790,https://api.github.com/repos/rails/rails/issues/46822,1365357790,IC_kwDNIULOUWG03g,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-12-26T18:57:47Z,2022-12-26T19:16:55Z,MEMBER,"This is the cause:

```ruby
3.1.3 :002 > app.url_options
 => {:host=>""www.example.com"", :protocol=>""http""}
3.1.3 :003 > Rails.application.routes.url_helpers.url_options
 => {}
```

These get merged into what you pass to the route. So the fact you're passing in a https host is overridden by the http protocol.

If you do `app.https!` at the start of your console session, you get the expected behaviour, because of the HTTPS check [here](https://github.com/rails/rails/blob/9f141a423d551f7f421f54d1372e65ef6ed1f0be/actionpack/lib/action_dispatch/testing/integration.rb#L147).

Alternatively you could do `app.tests_url(host: host, protocol: ""https"")`.

Better yet, if you did `Rails.application.default_url_options = { host: host, protocol: ""https"" }` in an initializer, this issue should go away permanently.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1365357790/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46822
https://api.github.com/repos/rails/rails/issues/comments/1365401165,https://github.com/rails/rails/issues/46822#issuecomment-1365401165,https://api.github.com/repos/rails/rails/issues/46822,1365401165,IC_kwDNIULOUWJeTQ,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-12-26T19:34:59Z,2022-12-26T19:34:59Z,MEMBER,"Maybe we should log a warning [here](https://github.com/rails/rails/blob/9f141a423d551f7f421f54d1372e65ef6ed1f0be/actionpack/lib/action_dispatch/http/url.rb#L146) if the `host` starts with ""http://"" or ""https://"" ?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1365401165/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46822
https://api.github.com/repos/rails/rails/issues/comments/1365700721,https://github.com/rails/rails/issues/46822#issuecomment-1365700721,https://api.github.com/repos/rails/rails/issues/46822,1365700721,IC_kwDNIULOUWbwcQ,"{'login': 'woto', 'id': 146704, 'node_id': 'MDQ6VXNlcjE0NjcwNA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/146704?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/woto', 'html_url': 'https://github.com/woto', 'followers_url': 'https://api.github.com/users/woto/followers', 'following_url': 'https://api.github.com/users/woto/following{/other_user}', 'gists_url': 'https://api.github.com/users/woto/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/woto/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/woto/subscriptions', 'organizations_url': 'https://api.github.com/users/woto/orgs', 'repos_url': 'https://api.github.com/users/woto/repos', 'events_url': 'https://api.github.com/users/woto/events{/privacy}', 'received_events_url': 'https://api.github.com/users/woto/received_events', 'type': 'User', 'site_admin': False}",2022-12-27T08:14:01Z,2022-12-27T08:14:01Z,CONTRIBUTOR,Yeah. I know how to avoid the problem. The most annoying part of this that I thought that this methods must give identical results. Like if agree,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1365700721/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46822
https://api.github.com/repos/rails/rails/issues/comments/1484765085,https://github.com/rails/rails/issues/46822#issuecomment-1484765085,https://api.github.com/repos/rails/rails/issues/46822,1484765085,IC_kwDNIULOWH-3nQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-03-27T08:59:22Z,2023-03-27T08:59:22Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1484765085/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46822
https://api.github.com/repos/rails/rails/issues/comments/1499866894,https://github.com/rails/rails/issues/46822#issuecomment-1499866894,https://api.github.com/repos/rails/rails/issues/46822,1499866894,IC_kwDNIULOWWYnDg,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-04-07T02:34:42Z,2023-04-07T02:34:42Z,MEMBER,"I agree this is surprising, can reproduce it simply with a newly generated application like this:

```ruby
# bin/rails c
# Loading development environment (Rails 7.1.0.alpha)
>> app.url_options
=> {:host=>""www.example.com"", :protocol=>""http""}

>> app.rails_health_check_url
=> ""http://www.example.com/up""

>> app.rails_health_check_url host: ""https://github.com""
=> ""http://github.com/up""

>> app.rails_health_check_url host: ""github.com"", protocol: ""https""
=> ""https://github.com/up""
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1499866894/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46822
https://api.github.com/repos/rails/rails/issues/comments/1622872791,https://github.com/rails/rails/issues/46822#issuecomment-1622872791,https://api.github.com/repos/rails/rails/issues/46822,1622872791,IC_kwDNIULOYLsS1w,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-07-06T02:40:54Z,2023-07-06T02:40:54Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1622872791/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46822
https://api.github.com/repos/rails/rails/issues/comments/1731766861,https://github.com/rails/rails/pull/46807#issuecomment-1731766861,https://api.github.com/repos/rails/rails/issues/46807,1731766861,IC_kwDNIULOZziqTQ,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-09-22T17:11:49Z,2023-09-22T17:11:49Z,CONTRIBUTOR,"Both https://github.com/rails/rails/issues/46804 and https://github.com/rails/buildkite-config/pull/26 have been closed, but according to https://github.com/rails/buildkite-config/pull/26#issuecomment-1385978156, the underlying issue is still present.

What can be done to progress this PR while those details are being worked through?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1731766861/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46807
https://api.github.com/repos/rails/rails/issues/comments/1732597544,https://github.com/rails/rails/pull/46807#issuecomment-1732597544,https://api.github.com/repos/rails/rails/issues/46807,1732597544,IC_kwDNIULOZ0VXKA,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2023-09-24T15:30:02Z,2023-09-24T15:30:02Z,CONTRIBUTOR,"@jonathanhefner if you're available, this PR reverts [the revert PR](https://github.com/rails/rails/pull/46808) to re-introduce this behavior in the test helper.

While there's [been some movement](https://github.com/rails/rails/pull/46807#issuecomment-1731766861) on the related CI changes, I want to emphasize that the system test changes in this diff pass the test suite when executed locally.

Would it be possible to merge this test helper change ahead of 7.1?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1732597544/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46807
https://api.github.com/repos/rails/rails/issues/comments/1364455147,https://github.com/rails/rails/issues/46806#issuecomment-1364455147,https://api.github.com/repos/rails/rails/issues/46806,1364455147,IC_kwDNIULOUVPu6w,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-12-24T04:02:05Z,2022-12-24T04:02:05Z,MEMBER,Yep that looks like a bug. Please submit a PR! You could add a test to verify the fix [here](https://github.com/rails/rails/blob/40a1f3ae24b297cddcfca06332fe113faf2ab52f/activestorage/test/models/attachment_test.rb#L41).,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364455147/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46806
https://api.github.com/repos/rails/rails/issues/comments/1370434680,https://github.com/rails/rails/issues/46806#issuecomment-1370434680,https://api.github.com/repos/rails/rails/issues/46806,1370434680,IC_kwDNIULOUa8seA,"{'login': 'jnimety', 'id': 70484, 'node_id': 'MDQ6VXNlcjcwNDg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/70484?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jnimety', 'html_url': 'https://github.com/jnimety', 'followers_url': 'https://api.github.com/users/jnimety/followers', 'following_url': 'https://api.github.com/users/jnimety/following{/other_user}', 'gists_url': 'https://api.github.com/users/jnimety/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jnimety/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jnimety/subscriptions', 'organizations_url': 'https://api.github.com/users/jnimety/orgs', 'repos_url': 'https://api.github.com/users/jnimety/repos', 'events_url': 'https://api.github.com/users/jnimety/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jnimety/received_events', 'type': 'User', 'site_admin': False}",2023-01-04T03:00:25Z,2023-01-04T03:00:25Z,CONTRIBUTOR,I'm unfamiliar with the rails PR process... is there anything else I need to do to move this forward?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1370434680/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46806
https://api.github.com/repos/rails/rails/issues/comments/1370455136,https://github.com/rails/rails/issues/46806#issuecomment-1370455136,https://api.github.com/repos/rails/rails/issues/46806,1370455136,IC_kwDNIULOUa98YA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-01-04T03:42:53Z,2023-01-04T03:42:53Z,MEMBER,Your best bet is probably asking for a review in the [Contributor Discord](https://rubyonrails.org/2022/6/13/rails-discord-server-is-now-open-to-the-public),"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1370455136/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46806
https://api.github.com/repos/rails/rails/issues/comments/1364291529,https://github.com/rails/rails/pull/46805#issuecomment-1364291529,https://api.github.com/repos/rails/rails/issues/46805,1364291529,IC_kwDNIULOUVFvyQ,"{'login': 'amatsuda', 'id': 11493, 'node_id': 'MDQ6VXNlcjExNDkz', 'avatar_url': 'https://avatars.githubusercontent.com/u/11493?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/amatsuda', 'html_url': 'https://github.com/amatsuda', 'followers_url': 'https://api.github.com/users/amatsuda/followers', 'following_url': 'https://api.github.com/users/amatsuda/following{/other_user}', 'gists_url': 'https://api.github.com/users/amatsuda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/amatsuda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/amatsuda/subscriptions', 'organizations_url': 'https://api.github.com/users/amatsuda/orgs', 'repos_url': 'https://api.github.com/users/amatsuda/repos', 'events_url': 'https://api.github.com/users/amatsuda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/amatsuda/received_events', 'type': 'User', 'site_admin': False}",2022-12-23T20:03:34Z,2022-12-23T20:03:34Z,MEMBER,"> 40% is a large amount, but is the benchmark truly representative of a full real-world request / response?

Yeah, that's a totally reasonable question. OK, I did another benchmark that measures everything from the bottom of the whole middleware stack.

```ruby
Rails::Engine.prepend(
  Module.new {
    def call(*)
      re = nil
      Benchmark.ips do |x|
        x.report do
          re = super
        end
      end
      re
    end
  }
)
```

And here's the results on the same `HEAD OK` action.

```
before
6.134k (± 1.9%) i/s -     30.674k in   5.002781s

after
6.396k (± 2.2%) i/s -     32.450k in   5.075846s
```

The benchmark reports approximately ***5.8%*** improvement this time.

Also, I could confirm that allocations count written in the logfile has been drastically reduced by this patch (you may be noticing that I already pushed dozens of subtle perf improvements to the main branch in advance, in order to emphasize the difference of this count results here).
```
(Allocations: 54)
 =>
(Allocations: 36)
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364291529/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46805
https://api.github.com/repos/rails/rails/issues/comments/1364330147,https://github.com/rails/rails/pull/46805#issuecomment-1364330147,https://api.github.com/repos/rails/rails/issues/46805,1364330147,IC_kwDNIULOUVIGow,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-12-23T20:59:20Z,2022-12-23T20:59:20Z,MEMBER,"> And here's the results on the same `HEAD OK` action.
>
> ...
>
> The benchmark reports approximately _**5.8%**_ improvement this time.

5.8% is still a great improvement, but what I meant by ""full real-world request / response"" is a typical action that fetches a record from the database and renders a view.

My reasoning is:

* Right now, this change makes the code harder to read.
* In the future, if (optional) parameters are added to delegated methods, this change makes the code harder to maintain.
* In the future, if new delegate methods are added, the rule of choosing `delegate` or `def` will not be obvious or intuitive.
* Ruby 3.3 will mostly fix the performance problem.
* Therefore, we should apply this optimization sparingly, only where it will have a significant effect.

If there are a few call sites that will improve typical performance by >= 1%, that is probably worth the change.  And we could add comments to them so they are not accidentally changed back until we drop support for Ruby < 3.3.

But if we change so many call sites and the typical performance improvement is < 1%, then, in my opinion, it would not be worth it.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364330147/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46805
https://api.github.com/repos/rails/rails/issues/comments/1364453726,https://github.com/rails/rails/pull/46805#issuecomment-1364453726,https://api.github.com/repos/rails/rails/issues/46805,1364453726,IC_kwDNIULOUVPpXg,"{'login': 'amatsuda', 'id': 11493, 'node_id': 'MDQ6VXNlcjExNDkz', 'avatar_url': 'https://avatars.githubusercontent.com/u/11493?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/amatsuda', 'html_url': 'https://github.com/amatsuda', 'followers_url': 'https://api.github.com/users/amatsuda/followers', 'following_url': 'https://api.github.com/users/amatsuda/following{/other_user}', 'gists_url': 'https://api.github.com/users/amatsuda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/amatsuda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/amatsuda/subscriptions', 'organizations_url': 'https://api.github.com/users/amatsuda/orgs', 'repos_url': 'https://api.github.com/users/amatsuda/repos', 'events_url': 'https://api.github.com/users/amatsuda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/amatsuda/received_events', 'type': 'User', 'site_admin': False}",2022-12-24T03:51:10Z,2022-12-24T03:51:10Z,MEMBER,"> In the future, if new delegate methods are added, the rule of choosing delegate or def will not be obvious or intuitive. Ruby 3.3 will mostly fix the performance problem.

I wish this assumption is true (and that is why I asked the Ruby-core first if this performance problem could be solved in the Ruby side), but the fact is that ko1's patch could double the speed of the `...` delegation but still it's 3.25 times slower than normal delegation. https://github.com/ruby/ruby/pull/6920
And so after seeing this investigation, I had to conclude that delegation is essentially a slow thing which should better be avoided to be used inside frameworks / libraries.

> In my opinion, the code is more cumbersome without delegate. Even more so because it is conditional on the arity of the delegated method.

Yes, I chose this approach in order to craft a minimal patch, but I agree that it's indeed so confusing. Maybe it's rather simpler if we could replace all the existing delegations and simply prohibit the use  of it? I'll work on such patch later. Let's see how it looks like...

> 5.8% is still a great improvement, but what I meant by ""full real-world request / response"" is a typical action that fetches a record from the database and renders a view.

Here's a benchmark result on a real scaffolded set of actions using the same whole middleware benchmark that I wrote in [the comment above](https://github.com/rails/rails/pull/46805#issuecomment-1364291529).

$ rails g scaffold user name email birthday:date bio:text active:boolean
(fetching 8 columns including id and the timestamps from SQLite3 and rendering 6 of them)

/users/1 (show)
2.269k (± 1.7%) i/s -     11.500k in   5.069557s
 =>
2.333k (± 4.0%) i/s -     11.700k in   5.024122s
***2.8% improvement***

/users (index with 30 records)
925.435  (± 3.9%) i/s -      4.650k in   5.033188s
 =>
958.577  (± 7.4%) i/s -      4.802k in   5.051784s
***3.5% improvement***
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364453726/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46805
https://api.github.com/repos/rails/rails/issues/comments/1364458287,https://github.com/rails/rails/pull/46805#issuecomment-1364458287,https://api.github.com/repos/rails/rails/issues/46805,1364458287,IC_kwDNIULOUVP7Lw,"{'login': 'amatsuda', 'id': 11493, 'node_id': 'MDQ6VXNlcjExNDkz', 'avatar_url': 'https://avatars.githubusercontent.com/u/11493?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/amatsuda', 'html_url': 'https://github.com/amatsuda', 'followers_url': 'https://api.github.com/users/amatsuda/followers', 'following_url': 'https://api.github.com/users/amatsuda/following{/other_user}', 'gists_url': 'https://api.github.com/users/amatsuda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/amatsuda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/amatsuda/subscriptions', 'organizations_url': 'https://api.github.com/users/amatsuda/orgs', 'repos_url': 'https://api.github.com/users/amatsuda/repos', 'events_url': 'https://api.github.com/users/amatsuda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/amatsuda/received_events', 'type': 'User', 'site_admin': False}",2022-12-24T04:27:39Z,2022-12-24T04:27:39Z,MEMBER,"Or another possible approach might be to introduce something like this. https://github.com/amatsuda/rails/commit/1e6c0d3debcb89e432540caa0bbbf3105f362d46
The API obviously needs to be brushed up, but I could confirm the same level of performance improvement with this approach.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364458287/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46805
https://api.github.com/repos/rails/rails/issues/comments/1364478698,https://github.com/rails/rails/pull/46805#issuecomment-1364478698,https://api.github.com/repos/rails/rails/issues/46805,1364478698,IC_kwDNIULOUVRK6g,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-12-24T07:26:51Z,2022-12-24T07:26:51Z,MEMBER,"> another possible approach

Maybe the option is `arity`? Then it could be used any time you know the target method takes a fixed number of positional arguments (and no kwargs)

I do hope we can resolve the performance upstream in the long term -- intuitively `...` in a simple delegation should never need to allocate -- but an opt in less-flexible-but-faster mode seems worthwhile in the meantime.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364478698/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46805
https://api.github.com/repos/rails/rails/issues/comments/1364556654,https://github.com/rails/rails/pull/46805#issuecomment-1364556654,https://api.github.com/repos/rails/rails/issues/46805,1364556654,IC_kwDNIULOUVV7bg,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-12-24T17:04:50Z,2022-12-24T17:18:13Z,MEMBER,"> /users/1 (show)
>
> ***2.8% improvement***
>
> /users (index with 30 records)
>
> ***3.5% improvement***

Nice! :grinning:

> Maybe the option is `arity`? Then it could be used any time you know the target method takes a fixed number of positional arguments (and no kwargs)

That is my instinct too.  It has a reasonable implementation:

```ruby
method_arity = arity
method_arity ||= 1 if /[^\]]=\z/.match?(method)
args = method_arity ? method_arity.times.map { |i| ""arg#{i}"" }.join("", "") : ""...""
```

> I do hope we can resolve the performance upstream in the long term -- intuitively `...` in a simple delegation should never need to allocate -- but an opt in less-flexible-but-faster mode seems worthwhile in the meantime.

Should the option be internal-use-only until we have a better understanding of future Ruby performance?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364556654/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46805
https://api.github.com/repos/rails/rails/issues/comments/1374562202,https://github.com/rails/rails/pull/46805#issuecomment-1374562202,https://api.github.com/repos/rails/rails/issues/46805,1374562202,IC_kwDNIULOUe4nmg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-01-07T18:20:19Z,2023-01-07T18:20:19Z,MEMBER,"https://github.com/rails/rails/pulls/casperisfine is kind of a precedent to this idea. Hand-crafted delegation does result to significant wins in hotspots.

But like others I worry a bit about the maintenance overhead, and I think we shouldn't change the behavior of `Module#delegate`, at least not its default behavior.

We could add some extra options to it to allow for more performant delegators, or to have an alternative, internal, version of it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1374562202/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46805
https://api.github.com/repos/rails/rails/issues/comments/1364266893,https://github.com/rails/rails/pull/46802#issuecomment-1364266893,https://api.github.com/repos/rails/rails/issues/46802,1364266893,IC_kwDNIULOUVEPjQ,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2022-12-23T19:29:36Z,2022-12-23T19:29:36Z,CONTRIBUTOR,"@tenderlove since you reviewed https://github.com/rails/rails/pull/45606, could you also review this change?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364266893/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46802
https://api.github.com/repos/rails/rails/issues/comments/1364420108,https://github.com/rails/rails/pull/46802#issuecomment-1364420108,https://api.github.com/repos/rails/rails/issues/46802,1364420108,IC_kwDNIULOUVNmDA,"{'login': 'tenderlove', 'id': 3124, 'node_id': 'MDQ6VXNlcjMxMjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3124?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tenderlove', 'html_url': 'https://github.com/tenderlove', 'followers_url': 'https://api.github.com/users/tenderlove/followers', 'following_url': 'https://api.github.com/users/tenderlove/following{/other_user}', 'gists_url': 'https://api.github.com/users/tenderlove/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tenderlove/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tenderlove/subscriptions', 'organizations_url': 'https://api.github.com/users/tenderlove/orgs', 'repos_url': 'https://api.github.com/users/tenderlove/repos', 'events_url': 'https://api.github.com/users/tenderlove/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tenderlove/received_events', 'type': 'User', 'site_admin': False}",2022-12-24T00:21:28Z,2022-12-24T00:21:28Z,MEMBER,"This seems interesting, but could you talk about the security implications?  Allowing an app server to fetch data from user supplied URLs seems risky and not something I'm excited to support.  Is there a compelling reason the framework needs to handle this when the app could convert the URI to a file handle and pass that in?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364420108/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46802
https://api.github.com/repos/rails/rails/issues/comments/1364425852,https://github.com/rails/rails/pull/46802#issuecomment-1364425852,https://api.github.com/repos/rails/rails/issues/46802,1364425852,IC_kwDNIULOUVN8fA,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2022-12-24T00:49:01Z,2022-12-24T00:49:01Z,CONTRIBUTOR,"@tenderlove thank you for reviewing!

My thought was that since constructing a URI from user input is a deliberate, separate step from accepting a String, applications could sanitize or reject the values at that point in time. Does that help?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364425852/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46802
https://api.github.com/repos/rails/rails/issues/comments/1364448871,https://github.com/rails/rails/pull/46802#issuecomment-1364448871,https://api.github.com/repos/rails/rails/issues/46802,1364448871,IC_kwDNIULOUVPWZw,"{'login': 'tenderlove', 'id': 3124, 'node_id': 'MDQ6VXNlcjMxMjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3124?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tenderlove', 'html_url': 'https://github.com/tenderlove', 'followers_url': 'https://api.github.com/users/tenderlove/followers', 'following_url': 'https://api.github.com/users/tenderlove/following{/other_user}', 'gists_url': 'https://api.github.com/users/tenderlove/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tenderlove/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tenderlove/subscriptions', 'organizations_url': 'https://api.github.com/users/tenderlove/orgs', 'repos_url': 'https://api.github.com/users/tenderlove/repos', 'events_url': 'https://api.github.com/users/tenderlove/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tenderlove/received_events', 'type': 'User', 'site_admin': False}",2022-12-24T03:07:42Z,2022-12-24T03:07:42Z,MEMBER,"> My thought was that since constructing a URI from user input is a deliberate, separate step from accepting a String, applications could sanitize or reject the values at that point in time. Does that help?

Ya, that makes sense.  I feel much more comfortable if the user has to do something deliberate.

Do we need to do anything about:

* transfer limits (can the file be too big?)
* timeouts (can the server we're connecting to drop the connection?)
* very slow connections (basically like a slow-loris attack, but slow response versus slow request)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364448871/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46802
https://api.github.com/repos/rails/rails/issues/comments/1364459829,https://github.com/rails/rails/pull/46802#issuecomment-1364459829,https://api.github.com/repos/rails/rails/issues/46802,1364459829,IC_kwDNIULOUVQBNQ,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2022-12-24T04:38:55Z,2022-12-24T04:46:12Z,CONTRIBUTOR,"
> Ya, that makes sense. I feel much more comfortable if the user has to do something deliberate.
> 
> Do we need to do anything about:
> 
> * transfer limits (can the file be too big?)
> * timeouts (can the server we're connecting to drop the connection?)
> * very slow connections (basically like a slow-loris attack, but slow response versus slow request)

I was hoping to draw some inspiration from prior art like [paperclip](https://github.com/thoughtbot/paperclip), but other than passing [a `read_timeout:` option](https://github.com/thoughtbot/paperclip/blob/main/lib/paperclip/io_adapters/uri_adapter.rb#L54-L56) to `open`, it doesn't account for those types of attacks. The [shrine](https://github.com/shrinerb/shrine/blob/master/lib/shrine/plugins/remote_url.rb#L65-L73) gem seems to catch exceptions when the file is too large.

This PR (https://github.com/rails/rails/pull/46802) was actually the second I'd opened to extend Active Storage to support remote URLs. I had also opened https://github.com/rails/rails/pull/46801 to introduce synthetic `_url`-suffixed accessors for attachment relationships that would enqueue background jobs when saving the record. 

The idea was that if you wanted to download a remote URL then upload it to your storage service in-process (or in-request), you'd use this PR's changeset to pass a `URI` instance as the argument to `attach`. If you wanted to support URL uploads but had the luxury of downloading them out of band in a background job, you'd use https://github.com/rails/rails/pull/46801's changeset.

https://github.com/rails/rails/pull/46801 doesn't really account for any of the concerns raised, except for the fact that you'd be crashing a background worker or backing up the job queue, instead of a load balancer or server process.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364459829/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46802
https://api.github.com/repos/rails/rails/issues/comments/1363704877,https://github.com/rails/rails/issues/46797#issuecomment-1363704877,https://api.github.com/repos/rails/rails/issues/46797,1363704877,IC_kwDNIULOUUh8LQ,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-12-23T07:50:46Z,2022-12-23T07:50:46Z,MEMBER,"https://github.com/rails/rails/commit/1a2ca1920c62abdd08c809df1fa98fe0acf14bc3 removes the lock around uses of AR connections. This lock shouldn't be needed since connections are held by a pool that ensure connections only have a single owner.

So if you are seeing this kind of errors, it is very likely that your app is holding on connections after they've been checked back in the pool, or that it is sharing a single connection between multiple threads / fibers.

At this stage my assumption is that the issue is in your application, hence I'll close. If you have any evidence that Rails is doing something wrong, I'll happily reopen and investigate.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1363704877/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1364042481,https://github.com/rails/rails/issues/46797#issuecomment-1364042481,https://api.github.com/repos/rails/rails/issues/46797,1364042481,IC_kwDNIULOUU2i8Q,"{'login': 'georgeclaghorn', 'id': 94129, 'node_id': 'MDQ6VXNlcjk0MTI5', 'avatar_url': 'https://avatars.githubusercontent.com/u/94129?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/georgeclaghorn', 'html_url': 'https://github.com/georgeclaghorn', 'followers_url': 'https://api.github.com/users/georgeclaghorn/followers', 'following_url': 'https://api.github.com/users/georgeclaghorn/following{/other_user}', 'gists_url': 'https://api.github.com/users/georgeclaghorn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/georgeclaghorn/subscriptions', 'organizations_url': 'https://api.github.com/users/georgeclaghorn/orgs', 'repos_url': 'https://api.github.com/users/georgeclaghorn/repos', 'events_url': 'https://api.github.com/users/georgeclaghorn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/georgeclaghorn/received_events', 'type': 'User', 'site_admin': False}",2022-12-23T15:25:41Z,2022-12-23T15:33:12Z,CONTRIBUTOR,"> So if you are seeing this kind of errors, it is very likely that your app is holding on connections after they've been checked back in the pool, or that it is sharing a single connection between multiple threads / fibers.

Thanks, this was helpful. I added some logging into `ConnectionPool#connection/#release_connection` and `AbstractAdapter#with_raw_connection`:

```diff
diff --git a/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb b/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb
index ed37228b57..f9c9136b0b 100644
--- a/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb
+++ b/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb
@@ -185,7 +185,9 @@ def lock_thread=(lock_thread)
       # #connection can be called any number of times; the connection is
       # held in a cache keyed by a thread.
       def connection
-        @thread_cached_conns[connection_cache_key(current_thread)] ||= checkout
+        @thread_cached_conns[connection_cache_key(current_thread)] ||= checkout.tap do |conn|
+          puts ""Acquired connection #{conn.object_id} for thread #{current_thread.object_id}""
+        end
       end
 
       def connection_class # :nodoc:
@@ -212,6 +214,8 @@ def active_connection?
       # #checkout will not be automatically released.
       def release_connection(owner_thread = ActiveSupport::IsolatedExecutionState.context)
         if conn = @thread_cached_conns.delete(connection_cache_key(owner_thread))
+          puts ""Releasing connection #{conn.object_id} for thread #{owner_thread.object_id}""
+
           checkin conn
         end
       end
diff --git a/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb b/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb
index ac1c6b5b48..4bb4fa0348 100644
--- a/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb
+++ b/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb
@@ -959,6 +959,13 @@ def reconnect_can_restore_state?
         #
         def with_raw_connection(allow_retry: false, uses_transaction: true)
           @lock.synchronize do
+            puts ""Using connection #{object_id} in thread #{ActiveSupport::IsolatedExecutionState.context.object_id}""
+
+            if ActiveSupport::IsolatedExecutionState.context != @pool.instance_variable_get(:@lock_thread)
+              puts ""!!!""
+              puts caller.inspect
+            end
+
             connect! if @raw_connection.nil? && reconnect_can_restore_state?
 
             materialize_transactions if uses_transaction
```

This pointed to Active Job’s async queue adapter:

```
Releasing connection 22640 for thread 5860
.Using connection 22640 in thread 38160
!!!
Acquired connection 22640 for thread 5860
[""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'"",
 Using connection 22640 in thread 5860
!!!
""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:961:in `with_raw_connection'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `prepare_statement'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:848:in `exec_cache'"",
 [""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:961:in `with_raw_connection'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:60:in `internal_execute'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:120:in `begin_db_transaction'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:325:in `materialize!'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:396:in `block in begin_transaction'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:818:in `execute_and_clear'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:68:in `exec_query'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:595:in `select'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `select_all'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:107:in `block in select_all'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:137:in `block in cache_sql'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/concurrency/load_interlock_aware_monitor.rb:23:in `handle_interrupt'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/concurrency/load_interlock_aware_monitor.rb:23:in `block in synchronize'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/concurrency/load_interlock_aware_monitor.rb:19:in `handle_interrupt'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/concurrency/load_interlock_aware_monitor.rb:19:in `synchronize'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:128:in `cache_sql'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:107:in `select_all'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation.rb:956:in `block in exec_main_query'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation.rb:976:in `skip_query_cache_if_necessary'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation.rb:942:in `exec_main_query'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation.rb:928:in `block in exec_queries'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation.rb:976:in `skip_query_cache_if_necessary'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation.rb:922:in `exec_queries'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation.rb:704:in `load'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation.rb:255:in `records'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation/finder_methods.rb:524:in `find_take'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation/finder_methods.rb:98:in `take'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation/finder_methods.rb:473:in `find_one'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation/finder_methods.rb:457:in `find_with_ids'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation/finder_methods.rb:69:in `find'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/querying.rb:23:in `find'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/core.rb:258:in `find'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/globalid-1.0.0/lib/global_id/locator.rb:130:in `locate'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/globalid-1.0.0/lib/global_id/locator.rb:155:in `block in locate'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/globalid-1.0.0/lib/global_id/locator.rb:165:in `block in unscoped'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation.rb:895:in `_scoping'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/relation.rb:433:in `scoping'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/scoping/default.rb:51:in `unscoped'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/globalid-1.0.0/lib/global_id/locator.rb:165:in `unscoped'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/globalid-1.0.0/lib/global_id/locator.rb:155:in `locate'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/globalid-1.0.0/lib/global_id/locator.rb:17:in `locate'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:139:in `deserialize_global_id'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:123:in `deserialize_argument'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:153:in `block in deserialize_hash'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:153:in `transform_values'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:153:in `deserialize_hash'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:127:in `deserialize_argument'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:153:in `block in deserialize_hash'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:363:in `begin_transaction'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:153:in `transform_values'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:330:in `begin_transaction'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:153:in `deserialize_hash'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:127:in `deserialize_argument'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:43:in `block in deserialize'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:43:in `map'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/arguments.rb:43:in `deserialize'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/core.rb:190:in `deserialize_arguments'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/core.rb:180:in `deserialize_arguments_if_needed'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/execution.rb:44:in `perform_now'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/instrumentation.rb:14:in `block in perform_now'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/railties/job_runtime.rb:13:in `block in instrument'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/notifications.rb:206:in `instrument'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/instrumentation.rb:27:in `instrument'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activerecord/lib/active_record/railties/job_runtime.rb:11:in `instrument'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/instrumentation.rb:14:in `perform_now'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/logging.rb:18:in `block in perform_now'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/tagged_logging.rb:104:in `block in tagged'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/tagged_logging.rb:42:in `tagged'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/tagged_logging.rb:104:in `tagged'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/logging.rb:25:in `tag_logger'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/logging.rb:18:in `perform_now'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/sentry-rails-5.7.0/lib/sentry/rails/active_job.rb:9:in `block in perform_now'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/sentry-rails-5.7.0/lib/sentry/rails/active_job.rb:35:in `block in record'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/sentry-ruby-5.7.0/lib/sentry/hub.rb:59:in `with_scope'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/sentry-ruby-5.7.0/lib/sentry-ruby.rb:355:in `with_scope'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/sentry-rails-5.7.0/lib/sentry/rails/active_job.rb:23:in `record'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/sentry-rails-5.7.0/lib/sentry/rails/active_job.rb:8:in `perform_now'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/execution.rb:24:in `block in execute'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/callbacks.rb:119:in `block in run_callbacks'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/railtie.rb:67:in `block (4 levels) in <class:Railtie>'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/reloader.rb:76:in `block in wrap'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/execution_wrapper.rb:92:in `wrap'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/reloader.rb:73:in `wrap'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/railtie.rb:66:in `block (3 levels) in <class:Railtie>'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/callbacks.rb:128:in `instance_exec'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/callbacks.rb:128:in `block in run_callbacks'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/callbacks.rb:139:in `run_callbacks'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/execution.rb:22:in `execute'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activejob/lib/active_job/queue_adapters/async_adapter.rb:70:in `perform'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/concurrent-ruby-1.1.10/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:352:in `run_task'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/concurrent-ruby-1.1.10/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:343:in `block (3 levels) in create_worker'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/concurrent-ruby-1.1.10/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:334:in `loop'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/concurrent-ruby-1.1.10/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:334:in `block (2 levels) in create_worker'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/concurrent-ruby-1.1.10/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:333:in `catch'"",
 ""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/concurrent-ruby-1.1.10/lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:333:in `block in create_worker'""]
```

I was missing `config.active_job.queue_adapter = :test` in `config/environments/test.rb`, unintentionally relying on `include ActiveJob::TestHelper` to switch the queue adapter in select tests where I use `have_enqueued_job` expectations.

Adding that config fixes my tests, but it seems like there’s something to be addressed in the async adapter.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364042481/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1364043138,https://github.com/rails/rails/issues/46797#issuecomment-1364043138,https://api.github.com/repos/rails/rails/issues/46797,1364043138,IC_kwDNIULOUU2lgg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-12-23T15:26:53Z,2022-12-23T15:26:53Z,MEMBER,"> it seems like there’s something to be addressed in the async adapter.

Indeed. Thank you for investigating this.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364043138/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1364437123,https://github.com/rails/rails/issues/46797#issuecomment-1364437123,https://api.github.com/repos/rails/rails/issues/46797,1364437123,IC_kwDNIULOUVOogw,"{'login': 'bensheldon', 'id': 47554, 'node_id': 'MDQ6VXNlcjQ3NTU0', 'avatar_url': 'https://avatars.githubusercontent.com/u/47554?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bensheldon', 'html_url': 'https://github.com/bensheldon', 'followers_url': 'https://api.github.com/users/bensheldon/followers', 'following_url': 'https://api.github.com/users/bensheldon/following{/other_user}', 'gists_url': 'https://api.github.com/users/bensheldon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bensheldon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bensheldon/subscriptions', 'organizations_url': 'https://api.github.com/users/bensheldon/orgs', 'repos_url': 'https://api.github.com/users/bensheldon/repos', 'events_url': 'https://api.github.com/users/bensheldon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bensheldon/received_events', 'type': 'User', 'site_admin': True}",2022-12-24T01:55:48Z,2022-12-24T01:55:48Z,CONTRIBUTOR,"@georgeclaghorn That's really interesting! Would you be able dump which lock your database connection is using? Something like:

```ruby
ActiveRecord::Base.connection.instance_variable_get(:@lock)
```

I'm curious whether it's a `NullLock` (which I'll speculate could be an application-boot-order problem). If it is a `LoadInterlockAwareMonitor` then that's spicier 🌶️

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364437123/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1364438507,https://github.com/rails/rails/issues/46797#issuecomment-1364438507,https://api.github.com/repos/rails/rails/issues/46797,1364438507,IC_kwDNIULOUVOt6w,"{'login': 'georgeclaghorn', 'id': 94129, 'node_id': 'MDQ6VXNlcjk0MTI5', 'avatar_url': 'https://avatars.githubusercontent.com/u/94129?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/georgeclaghorn', 'html_url': 'https://github.com/georgeclaghorn', 'followers_url': 'https://api.github.com/users/georgeclaghorn/followers', 'following_url': 'https://api.github.com/users/georgeclaghorn/following{/other_user}', 'gists_url': 'https://api.github.com/users/georgeclaghorn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/georgeclaghorn/subscriptions', 'organizations_url': 'https://api.github.com/users/georgeclaghorn/orgs', 'repos_url': 'https://api.github.com/users/georgeclaghorn/repos', 'events_url': 'https://api.github.com/users/georgeclaghorn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/georgeclaghorn/received_events', 'type': 'User', 'site_admin': False}",2022-12-24T02:03:15Z,2022-12-24T02:03:24Z,CONTRIBUTOR,"@bensheldon `NullLock` is in backtraces from async adapter worker threads (see above):

```
""/Users/george/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/bundler/gems/rails-a7902034089e/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'"",
```

`@lock` is correctly a `LoadInterlockAwareMonitor` on the main test thread.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364438507/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1364442835,https://github.com/rails/rails/issues/46797#issuecomment-1364442835,https://api.github.com/repos/rails/rails/issues/46797,1364442835,IC_kwDNIULOUVO-0w,"{'login': 'georgeclaghorn', 'id': 94129, 'node_id': 'MDQ6VXNlcjk0MTI5', 'avatar_url': 'https://avatars.githubusercontent.com/u/94129?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/georgeclaghorn', 'html_url': 'https://github.com/georgeclaghorn', 'followers_url': 'https://api.github.com/users/georgeclaghorn/followers', 'following_url': 'https://api.github.com/users/georgeclaghorn/following{/other_user}', 'gists_url': 'https://api.github.com/users/georgeclaghorn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/georgeclaghorn/subscriptions', 'organizations_url': 'https://api.github.com/users/georgeclaghorn/orgs', 'repos_url': 'https://api.github.com/users/georgeclaghorn/repos', 'events_url': 'https://api.github.com/users/georgeclaghorn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/georgeclaghorn/received_events', 'type': 'User', 'site_admin': False}",2022-12-24T02:28:39Z,2022-12-24T02:28:39Z,CONTRIBUTOR,"I don’t know if it’s helpful at this point but [here](https://github.com/georgeclaghorn/rails-bug-46797) is a sample app that reproduces the issue. `bundle && bin/rails db:setup test` should do it. Expected behavior: the 100 tests complete successfully. Actual behavior: they hang midway through, sometimes with the warnings mentioned in the issue description.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364442835/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1364461538,https://github.com/rails/rails/issues/46797#issuecomment-1364461538,https://api.github.com/repos/rails/rails/issues/46797,1364461538,IC_kwDNIULOUVQH4g,"{'login': 'bensheldon', 'id': 47554, 'node_id': 'MDQ6VXNlcjQ3NTU0', 'avatar_url': 'https://avatars.githubusercontent.com/u/47554?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bensheldon', 'html_url': 'https://github.com/bensheldon', 'followers_url': 'https://api.github.com/users/bensheldon/followers', 'following_url': 'https://api.github.com/users/bensheldon/following{/other_user}', 'gists_url': 'https://api.github.com/users/bensheldon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bensheldon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bensheldon/subscriptions', 'organizations_url': 'https://api.github.com/users/bensheldon/orgs', 'repos_url': 'https://api.github.com/users/bensheldon/repos', 'events_url': 'https://api.github.com/users/bensheldon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bensheldon/received_events', 'type': 'User', 'site_admin': True}",2022-12-24T04:54:15Z,2022-12-24T04:54:15Z,CONTRIBUTOR,"> NullLock is in backtraces from async adapter worker thread

Oops, sorry I missed that. 

> @lock is correctly a LoadInterlockAwareMonitor on the main test thread.

That's interesting! I can also reproduce the warnings/hanging you're seeing; thanks for the repro app!

I think this is simply because the AsyncAdapter runs a job in a thread at an undefined point in time _later_, potentially after the test-case that enqueued the job finished and another test case started.  I hopped in this issue because I have a bunch of experience with AsyncAdapter (it was one of the inspirations for GoodJob tbh) and it doesn't really do much other than put an `executor.wrap` block inside of a thread.

I _am_ kind of surprised to see that the database connection switches back and forth between `synchronized=true` and `synchronized=false/nil` during the test suite run; I guess I expected that it would endure for the life of the connection (though reading the code I now see that I shouldn't have expected that). The background thread happens to interrupt and run at a time when its connection isn't synchronized and 💥 

I think I'd classify it as a failure of test isolation which I do think is application misconfiguration... though it would be nice to have a clearer error message. It seems to me that if the application has transactional fixtures enabled, and the current database connection _isn't_ synchronized, that seems like a big red flag that the connection is unusable.

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364461538/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1364464241,https://github.com/rails/rails/issues/46797#issuecomment-1364464241,https://api.github.com/repos/rails/rails/issues/46797,1364464241,IC_kwDNIULOUVQScQ,"{'login': 'georgeclaghorn', 'id': 94129, 'node_id': 'MDQ6VXNlcjk0MTI5', 'avatar_url': 'https://avatars.githubusercontent.com/u/94129?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/georgeclaghorn', 'html_url': 'https://github.com/georgeclaghorn', 'followers_url': 'https://api.github.com/users/georgeclaghorn/followers', 'following_url': 'https://api.github.com/users/georgeclaghorn/following{/other_user}', 'gists_url': 'https://api.github.com/users/georgeclaghorn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/georgeclaghorn/subscriptions', 'organizations_url': 'https://api.github.com/users/georgeclaghorn/orgs', 'repos_url': 'https://api.github.com/users/georgeclaghorn/repos', 'events_url': 'https://api.github.com/users/georgeclaghorn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/georgeclaghorn/received_events', 'type': 'User', 'site_admin': False}",2022-12-24T05:19:05Z,2022-12-24T14:28:46Z,CONTRIBUTOR,"Two sticking points to calling it a misconfiguration:
* The default generated `config/environments/test.rb` doesn’t include `config.active_job.queue_adapter = :test`, so this is probably a pretty common configuration in existing apps.
* While the test adapter is appropriate for most tests, you probably do want to use the async adapter in system tests (or at least I do).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364464241/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1364484282,https://github.com/rails/rails/issues/46797#issuecomment-1364484282,https://api.github.com/repos/rails/rails/issues/46797,1364484282,IC_kwDNIULOUVRgug,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-12-24T08:05:35Z,2022-12-24T08:05:35Z,MEMBER,"Yeah, the issue seem legit and should be investigated.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364484282/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1364554671,https://github.com/rails/rails/issues/46797#issuecomment-1364554671,https://api.github.com/repos/rails/rails/issues/46797,1364554671,IC_kwDNIULOUVVzrw,"{'login': 'bensheldon', 'id': 47554, 'node_id': 'MDQ6VXNlcjQ3NTU0', 'avatar_url': 'https://avatars.githubusercontent.com/u/47554?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bensheldon', 'html_url': 'https://github.com/bensheldon', 'followers_url': 'https://api.github.com/users/bensheldon/followers', 'following_url': 'https://api.github.com/users/bensheldon/following{/other_user}', 'gists_url': 'https://api.github.com/users/bensheldon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bensheldon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bensheldon/subscriptions', 'organizations_url': 'https://api.github.com/users/bensheldon/orgs', 'repos_url': 'https://api.github.com/users/bensheldon/repos', 'events_url': 'https://api.github.com/users/bensheldon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bensheldon/received_events', 'type': 'User', 'site_admin': True}",2022-12-24T16:48:02Z,2022-12-24T16:48:37Z,CONTRIBUTOR,"I strongly agree that the Rails testing story can be improved. The [Testing Rails Applications entry for Active Job](https://guides.rubyonrails.org/testing.html#testing-jobs) might benefit from more explanation and convention too. Particularly:

- That `include ActiveJob::TestHelper` _also_ sets the queue adapter to `:test` (which reminds me that #37270 is still open)
- Surface the `perform_enqueued_jobs` helper

> While the test adapter is appropriate for most tests, you probably do want to use the async adapter in system tests (or at least I do).
 
Could you explain why you want to use the async adapter in system tests? 

I think the AsyncAdapter would benefit from some kind of ""drain_jobs"" and some quick stats (enqueued jobs, executing jobs, future scheduled jobs)...I dunno what's too much. Also, AsyncAdapter currently has a `#shutdown` method but there isn't a way to restart the underlying `Concurrent::ThreadPoolExecutor`; it would be nice to have some conventional mechanism to ensure all jobs have drained at the end of a test case (currently you _could_ shutdown the AsyncAdapter, and then initialize a new adapter for every test case).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1364554671/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1483139342,https://github.com/rails/rails/issues/46797#issuecomment-1483139342,https://api.github.com/repos/rails/rails/issues/46797,1483139342,IC_kwDNIULOWGbpDg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-03-24T17:09:19Z,2023-03-24T17:09:19Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483139342/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1483142176,https://github.com/rails/rails/issues/46797#issuecomment-1483142176,https://api.github.com/repos/rails/rails/issues/46797,1483142176,IC_kwDNIULOWGb0IA,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-03-24T17:10:38Z,2023-03-24T17:10:38Z,MEMBER,I still need to dig into this.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1483142176/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1561802928,https://github.com/rails/rails/issues/46797#issuecomment-1561802928,https://api.github.com/repos/rails/rails/issues/46797,1561802928,IC_kwDNIULOXRc4sA,"{'login': 'rezonant', 'id': 409140, 'node_id': 'MDQ6VXNlcjQwOTE0MA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/409140?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rezonant', 'html_url': 'https://github.com/rezonant', 'followers_url': 'https://api.github.com/users/rezonant/followers', 'following_url': 'https://api.github.com/users/rezonant/following{/other_user}', 'gists_url': 'https://api.github.com/users/rezonant/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rezonant/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rezonant/subscriptions', 'organizations_url': 'https://api.github.com/users/rezonant/orgs', 'repos_url': 'https://api.github.com/users/rezonant/repos', 'events_url': 'https://api.github.com/users/rezonant/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rezonant/received_events', 'type': 'User', 'site_admin': False}",2023-05-24T19:18:55Z,2023-05-24T19:18:55Z,NONE,"After quite a bit of debugging, we think we're running into this issue. While using Searchkiq's `:async` callbacks mode (which uses ActiveJob), we're seeing that reindex jobs that are kicked off just before a direct SQL ""upsert""-style query is performed using `connection.execute`, the query seems not to be completed by the time `connection.execute` returns. The model Searchkiq is reindexing is not related to the model affected by the upsert query.

Specifically this happens in our test suite, and the upsert call is testing that `Model.count` changes by 1 (as an insert is expected). `Model.count` does not change by 1 causing the test to fail. Debugging shows `Model.count` is returning 1 (as there is one record in our fixture set for the model). But if we then perform another database operation (such as Model.create) while paused with byebug just after the upsert query, `Model.count` then returns `3`. So the upsert query does insert a record, but the query... hasn't completed before `Model.count` runs.

This is worrying as it feels like there's a mismatch between the query being performed by Searchkiq's reindex worker and the upsert query being performed in another thread. 

Applying `config.active_job.queue_adapter = :test` as George was saying does indeed fix the issue, so I think this is the same problem (but certainly could be wrong). However, it's not clear that this sort of issue couldn't occur when using thread-based ActiveJob in production- couldn't this happen and lead to serious query/response mismatch issues like what we appear to be seeing in our test suite?

For what it's worth, we see the same behavior in 6.1 and 7.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1561802928/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46797
https://api.github.com/repos/rails/rails/issues/comments/1362511174,https://github.com/rails/rails/pull/46783#issuecomment-1362511174,https://api.github.com/repos/rails/rails/issues/46783,1362511174,IC_kwDNIULOUTZFRg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-12-22T07:39:05Z,2022-12-22T07:39:05Z,MEMBER,I think I'd prefer to autoload the class rather than to define a new hook. The overhead would be extremely minimal for people who don't use it.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1362511174/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46783
https://api.github.com/repos/rails/rails/issues/comments/1363315416,https://github.com/rails/rails/pull/46783#issuecomment-1363315416,https://api.github.com/repos/rails/rails/issues/46783,1363315416,IC_kwDNIULOUUKK2A,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-12-22T20:30:13Z,2022-12-22T20:30:13Z,MEMBER,"For some extra context, I've been profiling the Rails app in r10k: https://github.com/jeremyevans/r10k/blob/364eeb4a80e2c241aee58e32a6eb0adc8678c691/builders/rails.rb

The extra executor hooks show up as about ~0.8% of a request. While that doesn't sound like much, it seems like most of the total request overhead is a lot of small things like this for many features whether or not they are used. If making these hooks opt-in was more complex than using a load hook I can see the argument for not wanting the complexity, but I'm not sure I understand the argument against a load hook.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1363315416/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46783
https://api.github.com/repos/rails/rails/issues/comments/1363330153,https://github.com/rails/rails/pull/46783#issuecomment-1363330153,https://api.github.com/repos/rails/rails/issues/46783,1363330153,IC_kwDNIULOUULEaQ,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-12-22T20:52:12Z,2022-12-22T20:52:12Z,MEMBER,"> If making these hooks opt-in was more complex than using a load hook I can see the argument for not wanting the complexity, but I'm not sure I understand the argument against a load hook.

It's really not about the complexity of the code you add, it's about the API complexity of one extra specific hook we need to document etc, and that has very little value outside of this PR.

If we had private load events why not, but that's not something we did yet.

Ultimately `Current` is just one file with a fairly small class in it, I see very little point bothering with this. Might as well just load it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1363330153/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46783
https://api.github.com/repos/rails/rails/issues/comments/1357908244,https://github.com/rails/rails/pull/46773#issuecomment-1357908244,https://api.github.com/repos/rails/rails/issues/46773,1357908244,IC_kwDNIULOUPAJFA,"{'login': 'akaspick', 'id': 24056, 'node_id': 'MDQ6VXNlcjI0MDU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/24056?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akaspick', 'html_url': 'https://github.com/akaspick', 'followers_url': 'https://api.github.com/users/akaspick/followers', 'following_url': 'https://api.github.com/users/akaspick/following{/other_user}', 'gists_url': 'https://api.github.com/users/akaspick/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akaspick/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akaspick/subscriptions', 'organizations_url': 'https://api.github.com/users/akaspick/orgs', 'repos_url': 'https://api.github.com/users/akaspick/repos', 'events_url': 'https://api.github.com/users/akaspick/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akaspick/received_events', 'type': 'User', 'site_admin': False}",2022-12-19T16:17:11Z,2022-12-19T16:17:11Z,CONTRIBUTOR,How can I use the hashrocket syntax in my tests while allowing rubocop to pass?  I've used the hasrocket syntax form on purpose to force a hash with string keys for the purpose of the test.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1357908244/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1357912605,https://github.com/rails/rails/pull/46773#issuecomment-1357912605,https://api.github.com/repos/rails/rails/issues/46773,1357912605,IC_kwDNIULOUPAaHQ,"{'login': 'hmcguire-shopify', 'id': 103438607, 'node_id': 'U_kgDOBipZDw', 'avatar_url': 'https://avatars.githubusercontent.com/u/103438607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hmcguire-shopify', 'html_url': 'https://github.com/hmcguire-shopify', 'followers_url': 'https://api.github.com/users/hmcguire-shopify/followers', 'following_url': 'https://api.github.com/users/hmcguire-shopify/following{/other_user}', 'gists_url': 'https://api.github.com/users/hmcguire-shopify/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hmcguire-shopify/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hmcguire-shopify/subscriptions', 'organizations_url': 'https://api.github.com/users/hmcguire-shopify/orgs', 'repos_url': 'https://api.github.com/users/hmcguire-shopify/repos', 'events_url': 'https://api.github.com/users/hmcguire-shopify/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hmcguire-shopify/received_events', 'type': 'User', 'site_admin': False}",2022-12-19T16:20:09Z,2022-12-19T16:20:09Z,CONTRIBUTOR,"> How can I use the hashrocket syntax in my tests while allowing rubocop to pass?

I don't see any errors about the hash rocket, only that the strings are single instead of double quoted","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1357912605/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1357918395,https://github.com/rails/rails/pull/46773#issuecomment-1357918395,https://api.github.com/repos/rails/rails/issues/46773,1357918395,IC_kwDNIULOUPAwuw,"{'login': 'akaspick', 'id': 24056, 'node_id': 'MDQ6VXNlcjI0MDU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/24056?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akaspick', 'html_url': 'https://github.com/akaspick', 'followers_url': 'https://api.github.com/users/akaspick/followers', 'following_url': 'https://api.github.com/users/akaspick/following{/other_user}', 'gists_url': 'https://api.github.com/users/akaspick/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akaspick/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akaspick/subscriptions', 'organizations_url': 'https://api.github.com/users/akaspick/orgs', 'repos_url': 'https://api.github.com/users/akaspick/repos', 'events_url': 'https://api.github.com/users/akaspick/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akaspick/received_events', 'type': 'User', 'site_admin': False}",2022-12-19T16:24:08Z,2022-12-19T16:24:08Z,CONTRIBUTOR,"@hmcguire-shopify Right you are, I'll fix. Thanks.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1357918395/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 1, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1357963324,https://github.com/rails/rails/pull/46773#issuecomment-1357963324,https://api.github.com/repos/rails/rails/issues/46773,1357963324,IC_kwDNIULOUPDgPA,"{'login': 'akaspick', 'id': 24056, 'node_id': 'MDQ6VXNlcjI0MDU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/24056?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akaspick', 'html_url': 'https://github.com/akaspick', 'followers_url': 'https://api.github.com/users/akaspick/followers', 'following_url': 'https://api.github.com/users/akaspick/following{/other_user}', 'gists_url': 'https://api.github.com/users/akaspick/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akaspick/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akaspick/subscriptions', 'organizations_url': 'https://api.github.com/users/akaspick/orgs', 'repos_url': 'https://api.github.com/users/akaspick/repos', 'events_url': 'https://api.github.com/users/akaspick/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akaspick/received_events', 'type': 'User', 'site_admin': False}",2022-12-19T17:02:31Z,2022-12-19T17:02:31Z,CONTRIBUTOR,@hmcguire-shopify Resolved. I really didn't read those errors closely enough.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1357963324/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1360079471,https://github.com/rails/rails/pull/46773#issuecomment-1360079471,https://api.github.com/repos/rails/rails/issues/46773,1360079471,IC_kwDNIULOUREqbw,"{'login': 'szymonlipka', 'id': 11679928, 'node_id': 'MDQ6VXNlcjExNjc5OTI4', 'avatar_url': 'https://avatars.githubusercontent.com/u/11679928?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/szymonlipka', 'html_url': 'https://github.com/szymonlipka', 'followers_url': 'https://api.github.com/users/szymonlipka/followers', 'following_url': 'https://api.github.com/users/szymonlipka/following{/other_user}', 'gists_url': 'https://api.github.com/users/szymonlipka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/szymonlipka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/szymonlipka/subscriptions', 'organizations_url': 'https://api.github.com/users/szymonlipka/orgs', 'repos_url': 'https://api.github.com/users/szymonlipka/repos', 'events_url': 'https://api.github.com/users/szymonlipka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/szymonlipka/received_events', 'type': 'User', 'site_admin': False}",2022-12-20T19:55:55Z,2022-12-20T19:55:55Z,CONTRIBUTOR,"The problem here is exacly this line: https://github.com/rails/rails/blob/606fdfb0c62c21bc28388591bfae6749a77670d4/activerecord/lib/active_record/nested_attributes.rb#L518, and starting this line `attributes.class` is `ActiveSupport::HashWithIndifferentAccess`.

Maybe would be better to change it to `attributes = attributes.stringify_keys`, or at least in the line https://github.com/rails/rails/blob/606fdfb0c62c21bc28388591bfae6749a77670d4/activerecord/lib/active_record/nested_attributes.rb#L522 where it's used do something like: `association.reader.build(attributes.to_h.stringify_keys.except(*UNASSIGNABLE_KEYS))`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1360079471/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1360089481,https://github.com/rails/rails/pull/46773#issuecomment-1360089481,https://api.github.com/repos/rails/rails/issues/46773,1360089481,IC_kwDNIULOURFRiQ,"{'login': 'akaspick', 'id': 24056, 'node_id': 'MDQ6VXNlcjI0MDU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/24056?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akaspick', 'html_url': 'https://github.com/akaspick', 'followers_url': 'https://api.github.com/users/akaspick/followers', 'following_url': 'https://api.github.com/users/akaspick/following{/other_user}', 'gists_url': 'https://api.github.com/users/akaspick/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akaspick/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akaspick/subscriptions', 'organizations_url': 'https://api.github.com/users/akaspick/orgs', 'repos_url': 'https://api.github.com/users/akaspick/repos', 'events_url': 'https://api.github.com/users/akaspick/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akaspick/received_events', 'type': 'User', 'site_admin': False}",2022-12-20T20:04:04Z,2022-12-20T20:04:04Z,CONTRIBUTOR,"@szymonlipka Yes, my linked issue points to the two locations in the code base that converts the hash... one for `has_many` and one for `has_one` relations.

https://github.com/rails/rails/blob/main/activerecord/lib/active_record/nested_attributes.rb#L430
https://github.com/rails/rails/blob/main/activerecord/lib/active_record/nested_attributes.rb#L518

My assumption is the hash is converted to a `ActiveSupport::HashWithIndifferentAccess` on purpose, hence the call to `with_indifferent_access`.  I didn't want to touch that.

When serializing an attribute as a Hash, the value should be a hash, which ActiveSupport::HashWithIndifferentAccess is, but isn't safe to dump/load via YAML.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1360089481/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1360118204,https://github.com/rails/rails/pull/46773#issuecomment-1360118204,https://api.github.com/repos/rails/rails/issues/46773,1360118204,IC_kwDNIULOURHBvA,"{'login': 'szymonlipka', 'id': 11679928, 'node_id': 'MDQ6VXNlcjExNjc5OTI4', 'avatar_url': 'https://avatars.githubusercontent.com/u/11679928?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/szymonlipka', 'html_url': 'https://github.com/szymonlipka', 'followers_url': 'https://api.github.com/users/szymonlipka/followers', 'following_url': 'https://api.github.com/users/szymonlipka/following{/other_user}', 'gists_url': 'https://api.github.com/users/szymonlipka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/szymonlipka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/szymonlipka/subscriptions', 'organizations_url': 'https://api.github.com/users/szymonlipka/orgs', 'repos_url': 'https://api.github.com/users/szymonlipka/repos', 'events_url': 'https://api.github.com/users/szymonlipka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/szymonlipka/received_events', 'type': 'User', 'site_admin': False}",2022-12-20T20:18:51Z,2022-12-20T20:18:51Z,CONTRIBUTOR,"@akaspick Sure, I can see the point that it's safer to change right before dump/load.

But when I see https://github.com/rails/rails/commit/0c27d0886e880f90240ad2004f1600c1b1c4bfed, and the test case related I assume the change was made just to make procs using those attributes so they would be indifferent access. I feel like this indifferent access hash is really comfortable but it punches back in situations like your issue.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1360118204/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1360136520,https://github.com/rails/rails/pull/46773#issuecomment-1360136520,https://api.github.com/repos/rails/rails/issues/46773,1360136520,IC_kwDNIULOURIJSA,"{'login': 'akaspick', 'id': 24056, 'node_id': 'MDQ6VXNlcjI0MDU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/24056?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akaspick', 'html_url': 'https://github.com/akaspick', 'followers_url': 'https://api.github.com/users/akaspick/followers', 'following_url': 'https://api.github.com/users/akaspick/following{/other_user}', 'gists_url': 'https://api.github.com/users/akaspick/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akaspick/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akaspick/subscriptions', 'organizations_url': 'https://api.github.com/users/akaspick/orgs', 'repos_url': 'https://api.github.com/users/akaspick/repos', 'events_url': 'https://api.github.com/users/akaspick/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akaspick/received_events', 'type': 'User', 'site_admin': False}",2022-12-20T20:23:13Z,2022-12-20T20:23:13Z,CONTRIBUTOR,"@szymonlipka Yes, I see your point.  Perhaps @lifo can provide details as to why this change was made and suggest feedback on the approach taken here.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1360136520/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1360141498,https://github.com/rails/rails/pull/46773#issuecomment-1360141498,https://api.github.com/repos/rails/rails/issues/46773,1360141498,IC_kwDNIULOURIcug,"{'login': 'lifo', 'id': 91, 'node_id': 'MDQ6VXNlcjkx', 'avatar_url': 'https://avatars.githubusercontent.com/u/91?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lifo', 'html_url': 'https://github.com/lifo', 'followers_url': 'https://api.github.com/users/lifo/followers', 'following_url': 'https://api.github.com/users/lifo/following{/other_user}', 'gists_url': 'https://api.github.com/users/lifo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lifo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lifo/subscriptions', 'organizations_url': 'https://api.github.com/users/lifo/orgs', 'repos_url': 'https://api.github.com/users/lifo/repos', 'events_url': 'https://api.github.com/users/lifo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lifo/received_events', 'type': 'User', 'site_admin': False}",2022-12-20T20:25:47Z,2022-12-20T20:25:47Z,MEMBER,@akaspick Don't think I remember the context the approach taken back then. Sorry!,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1360141498/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1360143996,https://github.com/rails/rails/pull/46773#issuecomment-1360143996,https://api.github.com/repos/rails/rails/issues/46773,1360143996,IC_kwDNIULOURImfA,"{'login': 'akaspick', 'id': 24056, 'node_id': 'MDQ6VXNlcjI0MDU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/24056?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akaspick', 'html_url': 'https://github.com/akaspick', 'followers_url': 'https://api.github.com/users/akaspick/followers', 'following_url': 'https://api.github.com/users/akaspick/following{/other_user}', 'gists_url': 'https://api.github.com/users/akaspick/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akaspick/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akaspick/subscriptions', 'organizations_url': 'https://api.github.com/users/akaspick/orgs', 'repos_url': 'https://api.github.com/users/akaspick/repos', 'events_url': 'https://api.github.com/users/akaspick/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akaspick/received_events', 'type': 'User', 'site_admin': False}",2022-12-20T20:27:45Z,2022-12-20T20:27:45Z,CONTRIBUTOR,"@lifo Oh yes, from 2009... that's an oldie.  Thanks for the comment though.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1360143996/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1360150175,https://github.com/rails/rails/pull/46773#issuecomment-1360150175,https://api.github.com/repos/rails/rails/issues/46773,1360150175,IC_kwDNIULOURI-nw,"{'login': 'akaspick', 'id': 24056, 'node_id': 'MDQ6VXNlcjI0MDU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/24056?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akaspick', 'html_url': 'https://github.com/akaspick', 'followers_url': 'https://api.github.com/users/akaspick/followers', 'following_url': 'https://api.github.com/users/akaspick/following{/other_user}', 'gists_url': 'https://api.github.com/users/akaspick/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akaspick/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akaspick/subscriptions', 'organizations_url': 'https://api.github.com/users/akaspick/orgs', 'repos_url': 'https://api.github.com/users/akaspick/repos', 'events_url': 'https://api.github.com/users/akaspick/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akaspick/received_events', 'type': 'User', 'site_admin': False}",2022-12-20T20:31:47Z,2022-12-20T20:32:40Z,CONTRIBUTOR,"@szymonlipka My guess is using `stringify_keys` again would break a lot of existing code that use procs and the ""safer"" approach I took would work fine.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1360150175/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1360164639,https://github.com/rails/rails/pull/46773#issuecomment-1360164639,https://api.github.com/repos/rails/rails/issues/46773,1360164639,IC_kwDNIULOURJ3Hw,"{'login': 'hmcguire-shopify', 'id': 103438607, 'node_id': 'U_kgDOBipZDw', 'avatar_url': 'https://avatars.githubusercontent.com/u/103438607?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hmcguire-shopify', 'html_url': 'https://github.com/hmcguire-shopify', 'followers_url': 'https://api.github.com/users/hmcguire-shopify/followers', 'following_url': 'https://api.github.com/users/hmcguire-shopify/following{/other_user}', 'gists_url': 'https://api.github.com/users/hmcguire-shopify/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hmcguire-shopify/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hmcguire-shopify/subscriptions', 'organizations_url': 'https://api.github.com/users/hmcguire-shopify/orgs', 'repos_url': 'https://api.github.com/users/hmcguire-shopify/repos', 'events_url': 'https://api.github.com/users/hmcguire-shopify/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hmcguire-shopify/received_events', 'type': 'User', 'site_admin': False}",2022-12-20T20:38:32Z,2022-12-20T20:38:32Z,CONTRIBUTOR,"I had a thought but haven't had time to investigate: similar to what y'all are discussing, what if we only pass `attributes.with_indifferent_access` to the user facing code but keep `attributes` or `attributes.stringify_keys` while inside Rails code? That would keep the backwards compatibility of the user facing code while hopefully simplifying the Rails code to not need to handle a `HashWithIndifferentAccess`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1360164639/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1360218073,https://github.com/rails/rails/pull/46773#issuecomment-1360218073,https://api.github.com/repos/rails/rails/issues/46773,1360218073,IC_kwDNIULOURNH2Q,"{'login': 'akaspick', 'id': 24056, 'node_id': 'MDQ6VXNlcjI0MDU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/24056?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akaspick', 'html_url': 'https://github.com/akaspick', 'followers_url': 'https://api.github.com/users/akaspick/followers', 'following_url': 'https://api.github.com/users/akaspick/following{/other_user}', 'gists_url': 'https://api.github.com/users/akaspick/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akaspick/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akaspick/subscriptions', 'organizations_url': 'https://api.github.com/users/akaspick/orgs', 'repos_url': 'https://api.github.com/users/akaspick/repos', 'events_url': 'https://api.github.com/users/akaspick/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akaspick/received_events', 'type': 'User', 'site_admin': False}",2022-12-20T20:51:42Z,2022-12-20T20:52:40Z,CONTRIBUTOR,"@hmcguire-shopify The main issue with `HashWithIndifferentAccess` in this case is that even if you want to just make the top level keys have ""indifferent access"", `HashWithIndifferentAccess` makes access to all levels of nesting a `HashWithIndifferentAccess`.

```ruby
irb(main):011:0> {'a' => {'b' => {'c' => 1}}}.with_indifferent_access['a']['b'].class
=> ActiveSupport::HashWithIndifferentAccess
```

To solve the issue with `HashWithIndifferentAccess` overall here, it may need an option to only affect top level keys and leave anything nested as-is.  Right now, this is not possible.

I think having attributes for ""internal"" code and other attributes for using face code would over complicate things.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1360218073/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1373875682,https://github.com/rails/rails/pull/46773#issuecomment-1373875682,https://api.github.com/repos/rails/rails/issues/46773,1373875682,IC_kwDNIULOUeOt4g,"{'login': 'akaspick', 'id': 24056, 'node_id': 'MDQ6VXNlcjI0MDU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/24056?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akaspick', 'html_url': 'https://github.com/akaspick', 'followers_url': 'https://api.github.com/users/akaspick/followers', 'following_url': 'https://api.github.com/users/akaspick/following{/other_user}', 'gists_url': 'https://api.github.com/users/akaspick/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akaspick/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akaspick/subscriptions', 'organizations_url': 'https://api.github.com/users/akaspick/orgs', 'repos_url': 'https://api.github.com/users/akaspick/repos', 'events_url': 'https://api.github.com/users/akaspick/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akaspick/received_events', 'type': 'User', 'site_admin': False}",2023-01-06T16:38:52Z,2023-01-07T15:02:40Z,CONTRIBUTOR,"So with Rails 7.1, new yaml options are available for serialize, so there's technically a working solution, but you'll see it's far from an ideal solution:

```ruby
Topic.serialize :content, Hash, yaml: {permitted_classes: [HashWithIndifferentAccess]}
```
or
```ruby
Topic.serialize :content, Hash, yaml: {unsafe_load: true}
```

So is an alternate solution for this issue to set these options by default to the above by default for `Hash`.

Thoughts?  It'd be nice to get this bug fixed for 7.1.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1373875682/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1443611121,https://github.com/rails/rails/pull/46773#issuecomment-1443611121,https://api.github.com/repos/rails/rails/issues/46773,1443611121,IC_kwDNIULOVgvB8Q,"{'login': 'akaspick', 'id': 24056, 'node_id': 'MDQ6VXNlcjI0MDU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/24056?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akaspick', 'html_url': 'https://github.com/akaspick', 'followers_url': 'https://api.github.com/users/akaspick/followers', 'following_url': 'https://api.github.com/users/akaspick/following{/other_user}', 'gists_url': 'https://api.github.com/users/akaspick/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akaspick/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akaspick/subscriptions', 'organizations_url': 'https://api.github.com/users/akaspick/orgs', 'repos_url': 'https://api.github.com/users/akaspick/repos', 'events_url': 'https://api.github.com/users/akaspick/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akaspick/received_events', 'type': 'User', 'site_admin': False}",2023-02-24T12:21:04Z,2023-02-24T12:21:04Z,CONTRIBUTOR,Another new PR that may help with this current issue is https://github.com/rails/rails/pull/47463 although the unexpected behavior that occurs here with `accepts_nested_attributes_for` and `serialize` just shouldn't be something a dev should have to deal with explicitly.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1443611121/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1607398260,https://github.com/rails/rails/pull/46773#issuecomment-1607398260,https://api.github.com/repos/rails/rails/issues/46773,1607398260,IC_kwDNIULOX87zdA,"{'login': 'szymonlipka', 'id': 11679928, 'node_id': 'MDQ6VXNlcjExNjc5OTI4', 'avatar_url': 'https://avatars.githubusercontent.com/u/11679928?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/szymonlipka', 'html_url': 'https://github.com/szymonlipka', 'followers_url': 'https://api.github.com/users/szymonlipka/followers', 'following_url': 'https://api.github.com/users/szymonlipka/following{/other_user}', 'gists_url': 'https://api.github.com/users/szymonlipka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/szymonlipka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/szymonlipka/subscriptions', 'organizations_url': 'https://api.github.com/users/szymonlipka/orgs', 'repos_url': 'https://api.github.com/users/szymonlipka/repos', 'events_url': 'https://api.github.com/users/szymonlipka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/szymonlipka/received_events', 'type': 'User', 'site_admin': False}",2023-06-26T12:48:42Z,2023-06-26T12:48:42Z,CONTRIBUTOR,I agree on going with this fix as it is 👍. ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1607398260/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46773
https://api.github.com/repos/rails/rails/issues/comments/1430933303,https://github.com/rails/rails/pull/46696#issuecomment-1430933303,https://api.github.com/repos/rails/rails/issues/46696,1430933303,IC_kwDNIULOVUpPNw,"{'login': 'AlfonsoUceda', 'id': 925961, 'node_id': 'MDQ6VXNlcjkyNTk2MQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/925961?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/AlfonsoUceda', 'html_url': 'https://github.com/AlfonsoUceda', 'followers_url': 'https://api.github.com/users/AlfonsoUceda/followers', 'following_url': 'https://api.github.com/users/AlfonsoUceda/following{/other_user}', 'gists_url': 'https://api.github.com/users/AlfonsoUceda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/AlfonsoUceda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/AlfonsoUceda/subscriptions', 'organizations_url': 'https://api.github.com/users/AlfonsoUceda/orgs', 'repos_url': 'https://api.github.com/users/AlfonsoUceda/repos', 'events_url': 'https://api.github.com/users/AlfonsoUceda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/AlfonsoUceda/received_events', 'type': 'User', 'site_admin': False}",2023-02-15T08:27:59Z,2023-02-15T08:27:59Z,NONE,"@nvasilevski @adrianna-chang-shopify I think the PR is ready now, so up to you ;)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1430933303/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46696
https://api.github.com/repos/rails/rails/issues/comments/1431623267,https://github.com/rails/rails/pull/46696#issuecomment-1431623267,https://api.github.com/repos/rails/rails/issues/46696,1431623267,IC_kwDNIULOVVTWYw,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-02-15T16:14:45Z,2023-02-15T16:14:45Z,CONTRIBUTOR,">had you already posted this in the Discourse channel to ask for feedback?

I assume you meant in *Discord :) I've already posted but I guess it wasn't a good time for folks to have a time for this PR 😞 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1431623267/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46696
https://api.github.com/repos/rails/rails/issues/comments/1434354188,https://github.com/rails/rails/pull/46696#issuecomment-1434354188,https://api.github.com/repos/rails/rails/issues/46696,1434354188,IC_kwDNIULOVX6CDA,"{'login': 'al', 'id': 10687, 'node_id': 'MDQ6VXNlcjEwNjg3', 'avatar_url': 'https://avatars.githubusercontent.com/u/10687?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/al', 'html_url': 'https://github.com/al', 'followers_url': 'https://api.github.com/users/al/followers', 'following_url': 'https://api.github.com/users/al/following{/other_user}', 'gists_url': 'https://api.github.com/users/al/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/al/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/al/subscriptions', 'organizations_url': 'https://api.github.com/users/al/orgs', 'repos_url': 'https://api.github.com/users/al/repos', 'events_url': 'https://api.github.com/users/al/events{/privacy}', 'received_events_url': 'https://api.github.com/users/al/received_events', 'type': 'User', 'site_admin': False}",2023-02-17T09:14:12Z,2023-02-17T09:14:12Z,CONTRIBUTOR,"I'm interested in this functionality, however I wonder if it should go a little further.

My concern is that the ActiveRecord::Batches methods are prone to use by third party libraries and indeed Rails itself.

Unless one can both identify all invocations of the batch finders within the application, and devise a way to monkey patch them to utilise the new `cursor_column` parameter, the problem being tackled here will silently persist.

What about adding a `class_attribute :cursor_column` (defaulting to `primary_key`) and using that as the default unless a `cursor_column` argument is explicitly supplied?

ActiveRecords already have an `implicit_order_column` that could be used, however there is no requirement for that column to be unique so it's not really ideal.

Failing that, maybe a warning should be logged if the batch finders detect that they are using a UUID column for sorting. That's a bit arbitrary, but UUIDs are probably the most likely cause of problems.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1434354188/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46696
https://api.github.com/repos/rails/rails/issues/comments/1437303202,https://github.com/rails/rails/pull/46696#issuecomment-1437303202,https://api.github.com/repos/rails/rails/issues/46696,1437303202,IC_kwDNIULOVauBog,"{'login': 'AlfonsoUceda', 'id': 925961, 'node_id': 'MDQ6VXNlcjkyNTk2MQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/925961?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/AlfonsoUceda', 'html_url': 'https://github.com/AlfonsoUceda', 'followers_url': 'https://api.github.com/users/AlfonsoUceda/followers', 'following_url': 'https://api.github.com/users/AlfonsoUceda/following{/other_user}', 'gists_url': 'https://api.github.com/users/AlfonsoUceda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/AlfonsoUceda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/AlfonsoUceda/subscriptions', 'organizations_url': 'https://api.github.com/users/AlfonsoUceda/orgs', 'repos_url': 'https://api.github.com/users/AlfonsoUceda/repos', 'events_url': 'https://api.github.com/users/AlfonsoUceda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/AlfonsoUceda/received_events', 'type': 'User', 'site_admin': False}",2023-02-20T16:47:33Z,2023-02-20T16:47:33Z,NONE,"@al I can give it a try with `batch_cursor_colum` as class attribute, just to be more explicit. Let see what other people say.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1437303202/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46696
https://api.github.com/repos/rails/rails/issues/comments/1439087816,https://github.com/rails/rails/pull/46696#issuecomment-1439087816,https://api.github.com/repos/rails/rails/issues/46696,1439087816,IC_kwDNIULOVca8yA,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-02-21T21:01:45Z,2023-02-21T21:01:45Z,CONTRIBUTOR,">I can give it a try with batch_cursor_colum as class attribute, just to be more explicit. Let see what other people say.

Having a class-level abstraction to define cursor column sounds reasonable to me. I like the gems that may use the enumeration internally as an example as I would love to see something like that in https://github.com/Shopify/job-iteration as currently it explicitly expects `primary_key` to serve as a cursor.

Though I don't see the class-level abstraction as a substitution for the current approach. I think they go well together. It is still very useful and foundational to have `cursor_column` argument to be injected into the enumerator and then it can default to a newly introduced  `batch_cursor_colum` abstraction. Though I would consider omitting the `batch_` part as cursor enumerator doesn't necessarily requires you to enumerate in batches. 

Also helps with keeping this PR small and only address one thing which helps with the discussions around it and reviews by the core team","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1439087816/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46696
https://api.github.com/repos/rails/rails/issues/comments/1503379662,https://github.com/rails/rails/pull/46696#issuecomment-1503379662,https://api.github.com/repos/rails/rails/issues/46696,1503379662,IC_kwDNIULOWZvAzg,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-04-11T13:42:50Z,2023-04-11T13:42:50Z,CONTRIBUTOR,"Since we have merged https://github.com/rails/rails/pull/47901 which adds support for batching over a composite primary key the new abstraction should be called `cursor_columns` and allow both single-value or an array of columns to be passed. 

Though I feel uncomfortable making more suggestions until core team can share their opinion whether they find this abstraction suitable for the framework ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1503379662/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46696
https://api.github.com/repos/rails/rails/issues/comments/1504001329,https://github.com/rails/rails/pull/46696#issuecomment-1504001329,https://api.github.com/repos/rails/rails/issues/46696,1504001329,IC_kwDNIULOWaU9MQ,"{'login': 'AlfonsoUceda', 'id': 925961, 'node_id': 'MDQ6VXNlcjkyNTk2MQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/925961?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/AlfonsoUceda', 'html_url': 'https://github.com/AlfonsoUceda', 'followers_url': 'https://api.github.com/users/AlfonsoUceda/followers', 'following_url': 'https://api.github.com/users/AlfonsoUceda/following{/other_user}', 'gists_url': 'https://api.github.com/users/AlfonsoUceda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/AlfonsoUceda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/AlfonsoUceda/subscriptions', 'organizations_url': 'https://api.github.com/users/AlfonsoUceda/orgs', 'repos_url': 'https://api.github.com/users/AlfonsoUceda/repos', 'events_url': 'https://api.github.com/users/AlfonsoUceda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/AlfonsoUceda/received_events', 'type': 'User', 'site_admin': False}",2023-04-11T19:49:23Z,2023-04-11T19:49:23Z,NONE,hey @nvasilevski thank you! Would like some feedback if core member would like this introduced to the framework or there is no need.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1504001329/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46696
https://api.github.com/repos/rails/rails/issues/comments/1735501568,https://github.com/rails/rails/pull/46696#issuecomment-1735501568,https://api.github.com/repos/rails/rails/issues/46696,1735501568,IC_kwDNIULOZ3GnAA,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2023-09-26T13:02:55Z,2023-09-26T13:02:55Z,CONTRIBUTOR,"Hey @AlfonsoUceda, sorry for a delay, I was wondering if you would be willing to rebase it once again and rename the argument to `cursor_columns` to accommodate composite primary keys. The enumeration logic should already be capable of enumerating using multiple columns derived from the composite primary key so I expect all we need to do is to give it a proper name and make sure we always turn it into an array using `Array(primary_key)` as a default value","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1735501568/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46696
https://api.github.com/repos/rails/rails/issues/comments/1737526941,https://github.com/rails/rails/pull/46696#issuecomment-1737526941,https://api.github.com/repos/rails/rails/issues/46696,1737526941,IC_kwDNIULOZ5COnQ,"{'login': 'AlfonsoUceda', 'id': 925961, 'node_id': 'MDQ6VXNlcjkyNTk2MQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/925961?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/AlfonsoUceda', 'html_url': 'https://github.com/AlfonsoUceda', 'followers_url': 'https://api.github.com/users/AlfonsoUceda/followers', 'following_url': 'https://api.github.com/users/AlfonsoUceda/following{/other_user}', 'gists_url': 'https://api.github.com/users/AlfonsoUceda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/AlfonsoUceda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/AlfonsoUceda/subscriptions', 'organizations_url': 'https://api.github.com/users/AlfonsoUceda/orgs', 'repos_url': 'https://api.github.com/users/AlfonsoUceda/repos', 'events_url': 'https://api.github.com/users/AlfonsoUceda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/AlfonsoUceda/received_events', 'type': 'User', 'site_admin': False}",2023-09-27T14:34:25Z,2023-09-27T14:34:25Z,NONE,@nvasilevski will have a look this weekend if I have some time ;),"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1737526941/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46696
https://api.github.com/repos/rails/rails/issues/comments/1344632876,https://github.com/rails/rails/issues/46684#issuecomment-1344632876,https://api.github.com/repos/rails/rails/issues/46684,1344632876,IC_kwDNIULOUCV4LA,"{'login': 'akaspick', 'id': 24056, 'node_id': 'MDQ6VXNlcjI0MDU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/24056?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akaspick', 'html_url': 'https://github.com/akaspick', 'followers_url': 'https://api.github.com/users/akaspick/followers', 'following_url': 'https://api.github.com/users/akaspick/following{/other_user}', 'gists_url': 'https://api.github.com/users/akaspick/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akaspick/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akaspick/subscriptions', 'organizations_url': 'https://api.github.com/users/akaspick/orgs', 'repos_url': 'https://api.github.com/users/akaspick/repos', 'events_url': 'https://api.github.com/users/akaspick/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akaspick/received_events', 'type': 'User', 'site_admin': False}",2022-12-09T18:35:48Z,2022-12-19T16:07:06Z,CONTRIBUTOR,"The issue also appears to exist for assignment via has_one relations: https://github.com/rails/rails/blob/main/activerecord/lib/active_record/nested_attributes.rb#L430

Currently the only way to allow the provided test case to pass is to set `config.active_record.use_yaml_unsafe_load = true` in the application config.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1344632876/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46684
https://api.github.com/repos/rails/rails/issues/comments/1380967757,https://github.com/rails/rails/pull/46655#issuecomment-1380967757,https://api.github.com/repos/rails/rails/issues/46655,1380967757,IC_kwDNIULOUk_lTQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T20:36:45Z,2023-01-12T20:36:45Z,MEMBER,"I'm not so sure this is a bug. Even if it was, this is now changing an existing behavior of Rails that will probably break some application that rely on this behavior.

This also happens with the `class_name` option.

In summary I'm more inclined to make this behavior documented and tested than changing it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380967757/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46655
https://api.github.com/repos/rails/rails/issues/comments/1381519077,https://github.com/rails/rails/pull/46655#issuecomment-1381519077,https://api.github.com/repos/rails/rails/issues/46655,1381519077,IC_kwDNIULOUlhO5Q,"{'login': 'monorkin', 'id': 1655218, 'node_id': 'MDQ6VXNlcjE2NTUyMTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1655218?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/monorkin', 'html_url': 'https://github.com/monorkin', 'followers_url': 'https://api.github.com/users/monorkin/followers', 'following_url': 'https://api.github.com/users/monorkin/following{/other_user}', 'gists_url': 'https://api.github.com/users/monorkin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/monorkin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/monorkin/subscriptions', 'organizations_url': 'https://api.github.com/users/monorkin/orgs', 'repos_url': 'https://api.github.com/users/monorkin/repos', 'events_url': 'https://api.github.com/users/monorkin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/monorkin/received_events', 'type': 'User', 'site_admin': False}",2023-01-13T09:14:58Z,2023-01-13T09:25:19Z,NONE,"Hi Rafael, 
thank you for the comment.

I see your point. Would you like me to update this PR to document this behavior and change the tests to check for it or should I open a separate PR?

>This also happens with the class_name option.

This isn't a problem with `class_name` since you can make the class name absolute (e.g. use `::Device` instead of `Device`) without changing what the association returns.

But with `source_type` you can't apply the same solution. It would change the `where` clause and therefore wouldn't return any records through the association (because `favorable_type` stores `Device` as a string and the query would look for `::Device`).

The only solution is to use `source_type` and `class_name` together like so `source_type: ""Device"", class_name: ""::Device""`. This is unexpected given that `source_type` is effectively the same `class_name` - the name of the class of object you want to get back.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1381519077/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46655
https://api.github.com/repos/rails/rails/issues/comments/1339556385,https://github.com/rails/rails/issues/46653#issuecomment-1339556385,https://api.github.com/repos/rails/rails/issues/46653,1339556385,IC_kwDNIULOT9gCIQ,"{'login': 'asif9qureshi', 'id': 119942837, 'node_id': 'U_kgDOByYutQ', 'avatar_url': 'https://avatars.githubusercontent.com/u/119942837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/asif9qureshi', 'html_url': 'https://github.com/asif9qureshi', 'followers_url': 'https://api.github.com/users/asif9qureshi/followers', 'following_url': 'https://api.github.com/users/asif9qureshi/following{/other_user}', 'gists_url': 'https://api.github.com/users/asif9qureshi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/asif9qureshi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/asif9qureshi/subscriptions', 'organizations_url': 'https://api.github.com/users/asif9qureshi/orgs', 'repos_url': 'https://api.github.com/users/asif9qureshi/repos', 'events_url': 'https://api.github.com/users/asif9qureshi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/asif9qureshi/received_events', 'type': 'User', 'site_admin': False}",2022-12-06T15:30:30Z,2022-12-06T15:30:30Z,NONE,"I can confirm.
But reading the documentation, it says ""This is mostly useful in relation to single table inheritance (STI) structures where you want a subclass to appear as the superclass"".
Whereas you are going from superclass to subclass.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1339556385/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46653
https://api.github.com/repos/rails/rails/issues/comments/1339698141,https://github.com/rails/rails/issues/46653#issuecomment-1339698141,https://api.github.com/repos/rails/rails/issues/46653,1339698141,IC_kwDNIULOT9or3Q,"{'login': 'asif9qureshi', 'id': 119942837, 'node_id': 'U_kgDOByYutQ', 'avatar_url': 'https://avatars.githubusercontent.com/u/119942837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/asif9qureshi', 'html_url': 'https://github.com/asif9qureshi', 'followers_url': 'https://api.github.com/users/asif9qureshi/followers', 'following_url': 'https://api.github.com/users/asif9qureshi/following{/other_user}', 'gists_url': 'https://api.github.com/users/asif9qureshi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/asif9qureshi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/asif9qureshi/subscriptions', 'organizations_url': 'https://api.github.com/users/asif9qureshi/orgs', 'repos_url': 'https://api.github.com/users/asif9qureshi/repos', 'events_url': 'https://api.github.com/users/asif9qureshi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/asif9qureshi/received_events', 'type': 'User', 'site_admin': False}",2022-12-06T17:10:55Z,2022-12-06T17:10:55Z,NONE,"I just tried the main branch of rails and found that it has an added line named reverse_merge which has fixed this issue.
Can you please retry on main branch?
![image](https://user-images.githubusercontent.com/119942837/205977344-4f1ac70e-e237-4194-98f5-db9c3ea290c0.png)

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1339698141/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46653
https://api.github.com/repos/rails/rails/issues/comments/1339699513,https://github.com/rails/rails/issues/46653#issuecomment-1339699513,https://api.github.com/repos/rails/rails/issues/46653,1339699513,IC_kwDNIULOT9oxOQ,"{'login': 'asif9qureshi', 'id': 119942837, 'node_id': 'U_kgDOByYutQ', 'avatar_url': 'https://avatars.githubusercontent.com/u/119942837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/asif9qureshi', 'html_url': 'https://github.com/asif9qureshi', 'followers_url': 'https://api.github.com/users/asif9qureshi/followers', 'following_url': 'https://api.github.com/users/asif9qureshi/following{/other_user}', 'gists_url': 'https://api.github.com/users/asif9qureshi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/asif9qureshi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/asif9qureshi/subscriptions', 'organizations_url': 'https://api.github.com/users/asif9qureshi/orgs', 'repos_url': 'https://api.github.com/users/asif9qureshi/repos', 'events_url': 'https://api.github.com/users/asif9qureshi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/asif9qureshi/received_events', 'type': 'User', 'site_admin': False}",2022-12-06T17:11:44Z,2022-12-06T17:11:44Z,NONE,https://github.com/rails/rails/issues/41195,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1339699513/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46653
https://api.github.com/repos/rails/rails/issues/comments/1344541134,https://github.com/rails/rails/issues/46653#issuecomment-1344541134,https://api.github.com/repos/rails/rails/issues/46653,1344541134,IC_kwDNIULOUCQRzg,"{'login': 'adrianna-chang-shopify', 'id': 22918438, 'node_id': 'MDQ6VXNlcjIyOTE4NDM4', 'avatar_url': 'https://avatars.githubusercontent.com/u/22918438?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/adrianna-chang-shopify', 'html_url': 'https://github.com/adrianna-chang-shopify', 'followers_url': 'https://api.github.com/users/adrianna-chang-shopify/followers', 'following_url': 'https://api.github.com/users/adrianna-chang-shopify/following{/other_user}', 'gists_url': 'https://api.github.com/users/adrianna-chang-shopify/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/adrianna-chang-shopify/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/adrianna-chang-shopify/subscriptions', 'organizations_url': 'https://api.github.com/users/adrianna-chang-shopify/orgs', 'repos_url': 'https://api.github.com/users/adrianna-chang-shopify/repos', 'events_url': 'https://api.github.com/users/adrianna-chang-shopify/events{/privacy}', 'received_events_url': 'https://api.github.com/users/adrianna-chang-shopify/received_events', 'type': 'User', 'site_admin': False}",2022-12-09T17:01:29Z,2022-12-09T17:01:29Z,CONTRIBUTOR,"I can still repro on main. The changes in the linked issue fix attribute initialization where a child model's attributes differs from its parent's, but the default still doesn't seem to be set.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1344541134/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46653
https://api.github.com/repos/rails/rails/issues/comments/1344628705,https://github.com/rails/rails/issues/46653#issuecomment-1344628705,https://api.github.com/repos/rails/rails/issues/46653,1344628705,IC_kwDNIULOUCVn4Q,"{'login': 'asif9qureshi', 'id': 119942837, 'node_id': 'U_kgDOByYutQ', 'avatar_url': 'https://avatars.githubusercontent.com/u/119942837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/asif9qureshi', 'html_url': 'https://github.com/asif9qureshi', 'followers_url': 'https://api.github.com/users/asif9qureshi/followers', 'following_url': 'https://api.github.com/users/asif9qureshi/following{/other_user}', 'gists_url': 'https://api.github.com/users/asif9qureshi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/asif9qureshi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/asif9qureshi/subscriptions', 'organizations_url': 'https://api.github.com/users/asif9qureshi/orgs', 'repos_url': 'https://api.github.com/users/asif9qureshi/repos', 'events_url': 'https://api.github.com/users/asif9qureshi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/asif9qureshi/received_events', 'type': 'User', 'site_admin': False}",2022-12-09T18:30:42Z,2022-12-09T18:34:37Z,NONE,"```
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""~> 7.0.0""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :animals, force: true do |t|

    t.string :name
    t.string :type

    t.integer :fly_speed

  end

end

class Animal < ActiveRecord::Base
  attribute :name, :string, default: ""DEFAULT NAME""
end

class Bird < Animal
  attribute :fly_speed, :string, default: 100

end

class BugTest < Minitest::Test
  def test_becomes_with_defaults
    animal = Animal.new

    animal.fly_speed = 200

    assert_equal ""DEFAULT NAME"", animal.name
    assert_equal 200, animal.fly_speed

    bird = animal.becomes(Bird)

    assert_equal 200, bird.fly_speed
  end
end


```

I am interested to know that is this the correct behavior?
Or should bird.fly_speed become 100","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1344628705/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46653
https://api.github.com/repos/rails/rails/issues/comments/1348681456,https://github.com/rails/rails/issues/46653#issuecomment-1348681456,https://api.github.com/repos/rails/rails/issues/46653,1348681456,IC_kwDNIULOUGM-8A,"{'login': 'oniram88', 'id': 173604, 'node_id': 'MDQ6VXNlcjE3MzYwNA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/173604?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/oniram88', 'html_url': 'https://github.com/oniram88', 'followers_url': 'https://api.github.com/users/oniram88/followers', 'following_url': 'https://api.github.com/users/oniram88/following{/other_user}', 'gists_url': 'https://api.github.com/users/oniram88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/oniram88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/oniram88/subscriptions', 'organizations_url': 'https://api.github.com/users/oniram88/orgs', 'repos_url': 'https://api.github.com/users/oniram88/repos', 'events_url': 'https://api.github.com/users/oniram88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/oniram88/received_events', 'type': 'User', 'site_admin': False}",2022-12-13T14:26:03Z,2022-12-13T14:26:03Z,NONE,"I think that with the meaning of ""default"", if an attribute is:
* nil
* not changed (active record dirtiness)
* have a default

the correct result value should be the default value.

In your example it's correct that the value of `bird.fly_speed` is 200 because there is a matching key in the `@attributes` of Animal e the destination Bird and there is no need to implement a default value.

I had no time to check the main branch to see what changes, I will give a try to see the change you reported, thanks





","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1348681456/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46653
https://api.github.com/repos/rails/rails/issues/comments/1466289795,https://github.com/rails/rails/issues/46653#issuecomment-1466289795,https://api.github.com/repos/rails/rails/issues/46653,1466289795,IC_kwDNIULOV2XOgw,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-03-13T14:49:41Z,2023-03-13T14:49:41Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1466289795/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46653
https://api.github.com/repos/rails/rails/issues/comments/1340156109,https://github.com/rails/rails/pull/46652#issuecomment-1340156109,https://api.github.com/repos/rails/rails/issues/46652,1340156109,IC_kwDNIULOT-EozQ,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-12-06T23:31:25Z,2022-12-06T23:31:25Z,MEMBER,This reminds me of a similar regression we saw when upgrading to 6.1. Just sharing in case that fix is helpful: https://github.com/rails/rails/pull/42524,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1340156109/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46652
https://api.github.com/repos/rails/rails/issues/comments/1342457447,https://github.com/rails/rails/pull/46652#issuecomment-1342457447,https://api.github.com/repos/rails/rails/issues/46652,1342457447,IC_kwDNIULOUARGZw,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-12-08T10:17:13Z,2022-12-08T10:17:13Z,MEMBER,Please squash your commits.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1342457447/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46652
https://api.github.com/repos/rails/rails/issues/comments/1342809226,https://github.com/rails/rails/pull/46652#issuecomment-1342809226,https://api.github.com/repos/rails/rails/issues/46652,1342809226,IC_kwDNIULOUAmkig,"{'login': 'jeffcarbs', 'id': 847027, 'node_id': 'MDQ6VXNlcjg0NzAyNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/847027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jeffcarbs', 'html_url': 'https://github.com/jeffcarbs', 'followers_url': 'https://api.github.com/users/jeffcarbs/followers', 'following_url': 'https://api.github.com/users/jeffcarbs/following{/other_user}', 'gists_url': 'https://api.github.com/users/jeffcarbs/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jeffcarbs/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jeffcarbs/subscriptions', 'organizations_url': 'https://api.github.com/users/jeffcarbs/orgs', 'repos_url': 'https://api.github.com/users/jeffcarbs/repos', 'events_url': 'https://api.github.com/users/jeffcarbs/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jeffcarbs/received_events', 'type': 'User', 'site_admin': False}",2022-12-08T14:19:36Z,2022-12-08T14:19:36Z,NONE,"I squashed the commits into one (including the suggested change) and just pushed it up. I did make one other change, which was for the usages of `index_in_target` inside the `include?` methods I used `!!` to ensure it returns a boolean.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1342809226/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46652
https://api.github.com/repos/rails/rails/issues/comments/1342993196,https://github.com/rails/rails/pull/46652#issuecomment-1342993196,https://api.github.com/repos/rails/rails/issues/46652,1342993196,IC_kwDNIULOUAxzLA,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-12-08T16:37:17Z,2022-12-08T16:37:45Z,MEMBER,"> * 100x for collections of size 10
> * 4300x for collections of size 100
> * 460000x for collections of size 1000

These numbers are inaccurate due to the `times` block parameter in your benchmark scripts, e.g.:

> ```ruby
>   x.report(""Assoc size 1000"") do |times|
>     order_1000.items.reload
>     order_1000.items = order_1000.items
>   end
> ```

When the benchmark block accepts an argument, `benchmark-ips` [expects the block to execute the code the given number of times](https://github.com/evanphx/benchmark-ips/blob/ea645f694667ff24956ddd14727b024bd4f507a0/README.md?plain=1#L39-L43).

Would you mind re-running the benchmarks without the block parameters?

Also, does your first benchmark represent a real world use case?  I had been trying to refactor some of this code in #46652.  I haven't merged that PR yet (because it caused a failure in Shopify's test suite that has yet to be investigated), but it has a benchmark script based on the performance concerns from #42524.  Would you mind trying that benchmark with your code?  (You may need to add a few `require` statements; I ran it using `bin/rails r` with a fresh app pointing at the appropriate Rails branch.)
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1342993196/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46652
https://api.github.com/repos/rails/rails/issues/comments/1343279387,https://github.com/rails/rails/pull/46652#issuecomment-1343279387,https://api.github.com/repos/rails/rails/issues/46652,1343279387,IC_kwDNIULOUBDRGw,"{'login': 'jeffcarbs', 'id': 847027, 'node_id': 'MDQ6VXNlcjg0NzAyNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/847027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jeffcarbs', 'html_url': 'https://github.com/jeffcarbs', 'followers_url': 'https://api.github.com/users/jeffcarbs/followers', 'following_url': 'https://api.github.com/users/jeffcarbs/following{/other_user}', 'gists_url': 'https://api.github.com/users/jeffcarbs/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jeffcarbs/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jeffcarbs/subscriptions', 'organizations_url': 'https://api.github.com/users/jeffcarbs/orgs', 'repos_url': 'https://api.github.com/users/jeffcarbs/repos', 'events_url': 'https://api.github.com/users/jeffcarbs/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jeffcarbs/received_events', 'type': 'User', 'site_admin': False}",2022-12-08T19:57:11Z,2022-12-08T19:57:53Z,NONE,"@jonathanhefner - Thanks for the reply and pointing out the issues with the benchmarks. I'll update my scripts and post the new benchmarks.

Also, in your comment I think you may have referenced the wrong PR? You said:
> I had been trying to refactor some of this code in #46652

which is this PR. Did you mean to link #45399 by chance or maybe a different one? Or maybe I misunderstood the comment.

> Also, does your first benchmark represent a real world use case

Do you mean does `order.items = items` on a huge collection represent a real-world use-case? If so, the answer is yes for us. We have a job that runs to ensure the correct ""bars"" are associated with the right ""foo"", so it gathers up the correct set of ""bars"" and does `foo.bars = bars` and in production this collection can be upwards of 10k things. In most cases, the result will just be a no-op or adding/removing a few records since the process runs frequently as the ""bars"" are modified.

Given this performance issue we uncovered, we've refactored that code to manually create/remove the join records since we can use bulk operations like `insert_all` and `delete_all` (would love if rails had a built-in way to bulk update join records 🙂)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1343279387/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46652
https://api.github.com/repos/rails/rails/issues/comments/1343330493,https://github.com/rails/rails/pull/46652#issuecomment-1343330493,https://api.github.com/repos/rails/rails/issues/46652,1343330493,IC_kwDNIULOUBGYvQ,"{'login': 'jeffcarbs', 'id': 847027, 'node_id': 'MDQ6VXNlcjg0NzAyNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/847027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jeffcarbs', 'html_url': 'https://github.com/jeffcarbs', 'followers_url': 'https://api.github.com/users/jeffcarbs/followers', 'following_url': 'https://api.github.com/users/jeffcarbs/following{/other_user}', 'gists_url': 'https://api.github.com/users/jeffcarbs/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jeffcarbs/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jeffcarbs/subscriptions', 'organizations_url': 'https://api.github.com/users/jeffcarbs/orgs', 'repos_url': 'https://api.github.com/users/jeffcarbs/repos', 'events_url': 'https://api.github.com/users/jeffcarbs/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jeffcarbs/received_events', 'type': 'User', 'site_admin': False}",2022-12-08T20:44:07Z,2022-12-08T20:44:07Z,NONE,"@jonathanhefner - I re-ran the benchmarks and updated the PR description with the correct scripts and results. Thanks again for pointing out the mistake with the block variable, billion-x improvements were definitely suspicious 😅.

Speed improvements for `replace_on_target`:
- Size 10: roughly same
- Size 100: ~5x improvement
- Size 1000: ~50x improvement

Speed improvements for replace_on_target:
- Size 10: ~7x
- Size 100: ~68x improvement
- Size 1000: ~690x improvement

I tried running the benchmarks from #45399, here are my results:

Results with `main` branch:
```
~ [main] $ ruby benchmark_from_45399.rb
-- create_table(:authors, {:force=>true})
   -> 0.0103s
-- create_table(:posts, {:force=>true})
   -> 0.0002s
has_many_inversing == false, posts.count == 1     => `posts.build` @ 0.043ms
has_many_inversing == false, posts.count == 10    => `posts.build` @ 0.043ms
has_many_inversing == false, posts.count == 100   => `posts.build` @ 0.046ms
has_many_inversing == false, posts.count == 1000  => `posts.build` @ 0.041ms
has_many_inversing == true, posts.count == 1      => `posts.build` @ 0.041ms
has_many_inversing == true, posts.count == 10     => `posts.build` @ 0.040ms
has_many_inversing == true, posts.count == 100    => `posts.build` @ 0.039ms
has_many_inversing == true, posts.count == 1000   => `posts.build` @ 0.041ms
has_many_inversing == false, posts.count == 1     => `posts << post` @ 0.063ms
has_many_inversing == false, posts.count == 10    => `posts << post` @ 0.066ms
has_many_inversing == false, posts.count == 100   => `posts << post` @ 0.066ms
has_many_inversing == false, posts.count == 1000  => `posts << post` @ 0.068ms
has_many_inversing == true, posts.count == 1      => `posts << post` @ 0.066ms
has_many_inversing == true, posts.count == 10     => `posts << post` @ 0.067ms
has_many_inversing == true, posts.count == 100    => `posts << post` @ 0.067ms
has_many_inversing == true, posts.count == 1000   => `posts << post` @ 0.068ms
```

Results with this branch:
```
~ [collection-association-performance %] $ ruby benchmark_from_45399.rb
-- create_table(:authors, {:force=>true})
   -> 0.0112s
-- create_table(:posts, {:force=>true})
   -> 0.0003s
has_many_inversing == false, posts.count == 1     => `posts.build` @ 0.043ms
has_many_inversing == false, posts.count == 10    => `posts.build` @ 0.044ms
has_many_inversing == false, posts.count == 100   => `posts.build` @ 0.045ms
has_many_inversing == false, posts.count == 1000  => `posts.build` @ 0.041ms
has_many_inversing == true, posts.count == 1      => `posts.build` @ 0.038ms
has_many_inversing == true, posts.count == 10     => `posts.build` @ 0.040ms
has_many_inversing == true, posts.count == 100    => `posts.build` @ 0.040ms
has_many_inversing == true, posts.count == 1000   => `posts.build` @ 0.042ms
has_many_inversing == false, posts.count == 1     => `posts << post` @ 0.065ms
has_many_inversing == false, posts.count == 10    => `posts << post` @ 0.067ms
has_many_inversing == false, posts.count == 100   => `posts << post` @ 0.064ms
has_many_inversing == false, posts.count == 1000  => `posts << post` @ 0.066ms
has_many_inversing == true, posts.count == 1      => `posts << post` @ 0.063ms
has_many_inversing == true, posts.count == 10     => `posts << post` @ 0.067ms
has_many_inversing == true, posts.count == 100    => `posts << post` @ 0.064ms
has_many_inversing == true, posts.count == 1000   => `posts << post` @ 0.070ms
```

Also, just to have more data and be able to more easily compare, I pulled down the `jonathanhefner:collection_association-refactor-inversing-logic` branch and ran all of the benchmarks (performance similar to `main`):
```
~[(77889e87c0...) *%] $ ruby benchmark_replace_on_target.rb
Warming up --------------------------------------
     Assoc size   10   465.000  i/100ms
     Assoc size  100    28.000  i/100ms
     Assoc size 1000     1.000  i/100ms
Calculating -------------------------------------
     Assoc size   10      4.702k (± 1.5%) i/s -     23.715k in   5.045185s
     Assoc size  100    287.962  (± 0.7%) i/s -      1.456k in   5.056606s
     Assoc size 1000      3.324  (± 0.0%) i/s -     17.000  in   5.116352s

~[(77889e87c0...) *%] $ uby benchmark_include.rb
Warming up --------------------------------------
     Assoc size   10    14.127k i/100ms
     Assoc size  100     1.531k i/100ms
     Assoc size 1000   152.000  i/100ms
Calculating -------------------------------------
     Assoc size   10    142.562k (± 1.0%) i/s -    720.477k in   5.054247s
     Assoc size  100     15.351k (± 0.8%) i/s -     78.081k in   5.086709s
     Assoc size 1000      1.529k (± 1.2%) i/s -      7.752k in   5.070870s

~[(77889e87c0...) *%] $ ruby benchmark_from_45399.rb
-- create_table(:authors, {:force=>true})
   -> 0.0106s
-- create_table(:posts, {:force=>true})
   -> 0.0002s
has_many_inversing == false, posts.count == 1     => `posts.build` @ 0.039ms
has_many_inversing == false, posts.count == 10    => `posts.build` @ 0.038ms
has_many_inversing == false, posts.count == 100   => `posts.build` @ 0.039ms
has_many_inversing == false, posts.count == 1000  => `posts.build` @ 0.042ms
has_many_inversing == true, posts.count == 1      => `posts.build` @ 0.038ms
has_many_inversing == true, posts.count == 10     => `posts.build` @ 0.035ms
has_many_inversing == true, posts.count == 100    => `posts.build` @ 0.036ms
has_many_inversing == true, posts.count == 1000   => `posts.build` @ 0.043ms
has_many_inversing == false, posts.count == 1     => `posts << post` @ 0.067ms
has_many_inversing == false, posts.count == 10    => `posts << post` @ 0.065ms
has_many_inversing == false, posts.count == 100   => `posts << post` @ 0.065ms
has_many_inversing == false, posts.count == 1000  => `posts << post` @ 0.070ms
has_many_inversing == true, posts.count == 1      => `posts << post` @ 0.065ms
has_many_inversing == true, posts.count == 10     => `posts << post` @ 0.068ms
has_many_inversing == true, posts.count == 100    => `posts << post` @ 0.066ms
has_many_inversing == true, posts.count == 1000   => `posts << post` @ 0.070ms
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1343330493/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46652
https://api.github.com/repos/rails/rails/issues/comments/1343396624,https://github.com/rails/rails/pull/46652#issuecomment-1343396624,https://api.github.com/repos/rails/rails/issues/46652,1343396624,IC_kwDNIULOUBKbEA,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-12-08T21:35:39Z,2022-12-08T21:35:39Z,MEMBER,"> which is this PR. Did you mean to link #45399 by chance or maybe a different one? Or maybe I misunderstood the comment.

Yes, that's the one!  Sorry, I was juggling tabs and copy-pasted the wrong link.

> We have a job that runs to ensure the correct ""bars"" are associated with the right ""foo"", so it gathers up the correct set of ""bars"" and does `foo.bars = bars` and in production this collection can be upwards of 10k things. In most cases, the result will just be a no-op or adding/removing a few records since the process runs frequently as the ""bars"" are modified.

In that case, maybe an optimization local to [`replace`](https://github.com/rails/rails/blob/a02c23578ebcf6a68d2da428e805e6dce6cbc56a/activerecord/lib/active_record/associations/collection_association.rb#L234-L248) or [`replace_common_records_in_memory`](https://github.com/rails/rails/blob/a02c23578ebcf6a68d2da428e805e6dce6cbc56a/activerecord/lib/active_record/associations/collection_association.rb#L416-L422) could help?  This is just a sketch:

```diff
index e1125ff8dc..f84d735afc 100644
--- a/activerecord/lib/active_record/associations/collection_association.rb
+++ b/activerecord/lib/active_record/associations/collection_association.rb
@@ -414,10 +414,13 @@ def replace_records(new_target, original_target)
         end
 
         def replace_common_records_in_memory(new_target, original_target)
-          common_records = intersection(new_target, original_target)
-          common_records.each do |record|
-            skip_callbacks = true
-            replace_on_target(record, skip_callbacks, replace: true)
+          original_target_indexes = original_target.each_with_index.to_h
+
+          new_target.each do |record|
+            next unless (index = original_target_indexes[record])
+
+            set_inverse_instance(record)
+            target[index] = record
           end
         end
```

That ignores `@replaced_or_added_targets`.  It might need a `@replaced_or_added_targets.merge(new_target)`, but I'm not 100% sure.  (With #45399, I think an additional `@implicit_target_records = nil` in `replace` would suffice.)

I'm just wary of introducing more complexity to this file.  In particular, maintaining the invariants of `@target_index_map`.  If, in the future, new code fails to set `@target_index_map = nil` as necessary, that might lead to subtle bugs.  I realize we kind of already have this problem with `@replaced_or_added_targets` (or `@implicit_target_records` in #45399), but less is better. :laughing:

Also, you might find that a local optimization improves performance even more.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1343396624/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46652
https://api.github.com/repos/rails/rails/issues/comments/1345376953,https://github.com/rails/rails/pull/46652#issuecomment-1345376953,https://api.github.com/repos/rails/rails/issues/46652,1345376953,IC_kwDNIULOUDDSuQ,"{'login': 'jeffcarbs', 'id': 847027, 'node_id': 'MDQ6VXNlcjg0NzAyNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/847027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jeffcarbs', 'html_url': 'https://github.com/jeffcarbs', 'followers_url': 'https://api.github.com/users/jeffcarbs/followers', 'following_url': 'https://api.github.com/users/jeffcarbs/following{/other_user}', 'gists_url': 'https://api.github.com/users/jeffcarbs/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jeffcarbs/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jeffcarbs/subscriptions', 'organizations_url': 'https://api.github.com/users/jeffcarbs/orgs', 'repos_url': 'https://api.github.com/users/jeffcarbs/repos', 'events_url': 'https://api.github.com/users/jeffcarbs/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jeffcarbs/received_events', 'type': 'User', 'site_admin': False}",2022-12-10T20:20:45Z,2022-12-10T20:20:45Z,NONE,"> I'm just wary of introducing more complexity to this file. In particular, maintaining the invariants of `@target_index_map`

Totally hear you on that. Another thought was to make `target` a more sophisticated array-like object that had more efficient `index` and `include?` methods, but otherwise looked like a typical array. That would be an even wider reaching change.

The more localized change you suggested is interesting. I'll play around with that approach and see what is looks like.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1345376953/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46652
https://api.github.com/repos/rails/rails/issues/comments/1340680637,https://github.com/rails/rails/pull/46638#issuecomment-1340680637,https://api.github.com/repos/rails/rails/issues/46638,1340680637,IC_kwDNIULOT-kpvQ,"{'login': 'psantos10', 'id': 374424, 'node_id': 'MDQ6VXNlcjM3NDQyNA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/374424?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/psantos10', 'html_url': 'https://github.com/psantos10', 'followers_url': 'https://api.github.com/users/psantos10/followers', 'following_url': 'https://api.github.com/users/psantos10/following{/other_user}', 'gists_url': 'https://api.github.com/users/psantos10/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/psantos10/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/psantos10/subscriptions', 'organizations_url': 'https://api.github.com/users/psantos10/orgs', 'repos_url': 'https://api.github.com/users/psantos10/repos', 'events_url': 'https://api.github.com/users/psantos10/events{/privacy}', 'received_events_url': 'https://api.github.com/users/psantos10/received_events', 'type': 'User', 'site_admin': False}",2022-12-07T09:55:50Z,2022-12-07T09:55:50Z,CONTRIBUTOR,CC: @skipkayhil ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1340680637/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46638
https://api.github.com/repos/rails/rails/issues/comments/1494080497,https://github.com/rails/rails/pull/46638#issuecomment-1494080497,https://api.github.com/repos/rails/rails/issues/46638,1494080497,IC_kwDNIULOWQ3b8Q,"{'login': 'viraptor', 'id': 188063, 'node_id': 'MDQ6VXNlcjE4ODA2Mw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/188063?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/viraptor', 'html_url': 'https://github.com/viraptor', 'followers_url': 'https://api.github.com/users/viraptor/followers', 'following_url': 'https://api.github.com/users/viraptor/following{/other_user}', 'gists_url': 'https://api.github.com/users/viraptor/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/viraptor/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/viraptor/subscriptions', 'organizations_url': 'https://api.github.com/users/viraptor/orgs', 'repos_url': 'https://api.github.com/users/viraptor/repos', 'events_url': 'https://api.github.com/users/viraptor/events{/privacy}', 'received_events_url': 'https://api.github.com/users/viraptor/received_events', 'type': 'User', 'site_admin': False}",2023-04-03T10:35:11Z,2023-04-03T10:35:11Z,NONE,"This has been waiting ready for quite a while. Could you resolve the conflicts so we can start poking people about merging it, please?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1494080497/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46638
https://api.github.com/repos/rails/rails/issues/comments/1703842957,https://github.com/rails/rails/pull/46638#issuecomment-1703842957,https://api.github.com/repos/rails/rails/issues/46638,1703842957,IC_kwDNIULOZY6UjQ,"{'login': 'akhilgkrishnan', 'id': 22231095, 'node_id': 'MDQ6VXNlcjIyMjMxMDk1', 'avatar_url': 'https://avatars.githubusercontent.com/u/22231095?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/akhilgkrishnan', 'html_url': 'https://github.com/akhilgkrishnan', 'followers_url': 'https://api.github.com/users/akhilgkrishnan/followers', 'following_url': 'https://api.github.com/users/akhilgkrishnan/following{/other_user}', 'gists_url': 'https://api.github.com/users/akhilgkrishnan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/akhilgkrishnan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/akhilgkrishnan/subscriptions', 'organizations_url': 'https://api.github.com/users/akhilgkrishnan/orgs', 'repos_url': 'https://api.github.com/users/akhilgkrishnan/repos', 'events_url': 'https://api.github.com/users/akhilgkrishnan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/akhilgkrishnan/received_events', 'type': 'User', 'site_admin': False}",2023-09-02T14:03:38Z,2023-09-02T14:03:38Z,CONTRIBUTOR,@psantos10 Can you add a proper PR description,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1703842957/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46638
https://api.github.com/repos/rails/rails/issues/comments/1328183486,https://github.com/rails/rails/issues/46587#issuecomment-1328183486,https://api.github.com/repos/rails/rails/issues/46587,1328183486,IC_kwDNIULOTyp4vg,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-11-27T06:52:26Z,2022-11-27T06:52:26Z,MEMBER,Could you provide a sample app that demonstrates the issue? That would make it easier to isolate exactly what's expected and what's going wrong. (Alternatively feel free to open a PR if you think you have a good idea of it already!),"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1328183486/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46587
https://api.github.com/repos/rails/rails/issues/comments/1445023695,https://github.com/rails/rails/issues/46587#issuecomment-1445023695,https://api.github.com/repos/rails/rails/issues/46587,1445023695,IC_kwDNIULOViFPzw,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-02-25T07:50:02Z,2023-02-25T07:50:02Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1445023695/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46587
https://api.github.com/repos/rails/rails/issues/comments/1325293504,https://github.com/rails/rails/pull/46555#issuecomment-1325293504,https://api.github.com/repos/rails/rails/issues/46555,1325293504,IC_kwDNIULOTv5fwA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2022-11-23T15:53:16Z,2022-11-23T15:53:16Z,MEMBER,Tests are now broken. Are you planning to fix?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1325293504/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46555
https://api.github.com/repos/rails/rails/issues/comments/1345529288,https://github.com/rails/rails/pull/46555#issuecomment-1345529288,https://api.github.com/repos/rails/rails/issues/46555,1345529288,IC_kwDNIULOUDMlyA,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2022-12-11T11:33:55Z,2022-12-11T11:33:55Z,MEMBER,"It would be nice if there were tests for this new behavior, maybe start [here](https://github.com/rails/rails/blob/main/activejob/test/cases/logging_test.rb).

Also, could you update the description of the PR with an example of the log noise with before/after? :bow:","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1345529288/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46555
https://api.github.com/repos/rails/rails/issues/comments/1325355038,https://github.com/rails/rails/issues/46521#issuecomment-1325355038,https://api.github.com/repos/rails/rails/issues/46521,1325355038,IC_kwDNIULOTv9QHg,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-11-23T16:38:12Z,2022-11-23T16:38:12Z,MEMBER,"> Perhaps we could change `AttributeSet` to `LazyAttributeSet`?

This seems worth investigating, are you open to making a PR?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1325355038/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46521
https://api.github.com/repos/rails/rails/issues/comments/1438845703,https://github.com/rails/rails/issues/46521#issuecomment-1438845703,https://api.github.com/repos/rails/rails/issues/46521,1438845703,IC_kwDNIULOVcMLBw,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-02-21T17:24:32Z,2023-02-21T17:24:32Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1438845703/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46521
https://api.github.com/repos/rails/rails/issues/comments/1439655287,https://github.com/rails/rails/issues/46521#issuecomment-1439655287,https://api.github.com/repos/rails/rails/issues/46521,1439655287,IC_kwDNIULOVc9ldw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-22T09:02:49Z,2023-02-22T09:02:49Z,MEMBER,"FWIW, I tried this patch but to no avail, the test does seem useful though for anyone willing to put together a fix:

```diff
diff --git a/activerecord/lib/active_record/model_schema.rb b/activerecord/lib/active_record/model_schema.rb
index 8e4022a08b..600af3d3a1 100644
--- a/activerecord/lib/active_record/model_schema.rb
+++ b/activerecord/lib/active_record/model_schema.rb
@@ -482,7 +482,7 @@ def column_defaults

       def _default_attributes # :nodoc:
         load_schema
-        @default_attributes ||= ActiveModel::AttributeSet.new({})
+        @default_attributes ||= ActiveModel::LazyAttributeSet.new({}, {}, {}, {})
       end

       # Returns an array of column names as strings.
diff --git a/activerecord/test/cases/attributes_test.rb b/activerecord/test/cases/attributes_test.rb
index ac12046823..b423d4c675 100644
--- a/activerecord/test/cases/attributes_test.rb
+++ b/activerecord/test/cases/attributes_test.rb
@@ -219,6 +219,17 @@ def deserialize(*)
       assert_equal 3, klass.new.counter
     end

+    test ""procs for default values are not memoized"" do
+      klass = Class.new(OverloadedType) do
+        attribute :uuid, :string, default: -> { SecureRandom.uuid }
+      end
+
+      first_default = klass.column_defaults['uuid']
+      second_default = klass.column_defaults['uuid']
+
+      refute_equal first_default, second_default
+    end
+
     test ""procs are memoized before type casting"" do
       klass = Class.new(OverloadedType) do
         @@counter = 0
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1439655287/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46521
https://api.github.com/repos/rails/rails/issues/comments/1558872283,https://github.com/rails/rails/issues/46521#issuecomment-1558872283,https://api.github.com/repos/rails/rails/issues/46521,1558872283,IC_kwDNIULOXOqA2w,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-05-23T09:11:01Z,2023-05-23T09:11:01Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1558872283/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46521
https://api.github.com/repos/rails/rails/issues/comments/1319583580,https://github.com/rails/rails/pull/46517#issuecomment-1319583580,https://api.github.com/repos/rails/rails/issues/46517,1319583580,IC_kwDNIULOTqc_XA,"{'login': 'bonobono555', 'id': 29417697, 'node_id': 'MDQ6VXNlcjI5NDE3Njk3', 'avatar_url': 'https://avatars.githubusercontent.com/u/29417697?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bonobono555', 'html_url': 'https://github.com/bonobono555', 'followers_url': 'https://api.github.com/users/bonobono555/followers', 'following_url': 'https://api.github.com/users/bonobono555/following{/other_user}', 'gists_url': 'https://api.github.com/users/bonobono555/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bonobono555/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bonobono555/subscriptions', 'organizations_url': 'https://api.github.com/users/bonobono555/orgs', 'repos_url': 'https://api.github.com/users/bonobono555/repos', 'events_url': 'https://api.github.com/users/bonobono555/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bonobono555/received_events', 'type': 'User', 'site_admin': False}",2022-11-18T05:58:18Z,2022-11-18T05:58:18Z,NONE,I'll fix it in lint later.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1319583580/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46517
https://api.github.com/repos/rails/rails/issues/comments/1379459687,https://github.com/rails/rails/issues/46514#issuecomment-1379459687,https://api.github.com/repos/rails/rails/issues/46514,1379459687,IC_kwDNIULOUjjiZw,"{'login': 'fgiannattasio', 'id': 11723149, 'node_id': 'MDQ6VXNlcjExNzIzMTQ5', 'avatar_url': 'https://avatars.githubusercontent.com/u/11723149?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fgiannattasio', 'html_url': 'https://github.com/fgiannattasio', 'followers_url': 'https://api.github.com/users/fgiannattasio/followers', 'following_url': 'https://api.github.com/users/fgiannattasio/following{/other_user}', 'gists_url': 'https://api.github.com/users/fgiannattasio/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fgiannattasio/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fgiannattasio/subscriptions', 'organizations_url': 'https://api.github.com/users/fgiannattasio/orgs', 'repos_url': 'https://api.github.com/users/fgiannattasio/repos', 'events_url': 'https://api.github.com/users/fgiannattasio/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fgiannattasio/received_events', 'type': 'User', 'site_admin': False}",2023-01-11T20:41:06Z,2023-01-11T21:09:24Z,NONE,"You can simply specify `:sanitize => false` in highlight call like so:
`highlight(""xxx yyy & zzz"", ""a"", sanitize: false)`

This will avoid escaping special characters, so highlight will not treat `&` character as string`&amp;` which will match with the phrase ""a"" to match and highlight it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1379459687/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46514
https://api.github.com/repos/rails/rails/issues/comments/1494074715,https://github.com/rails/rails/issues/46514#issuecomment-1494074715,https://api.github.com/repos/rails/rails/issues/46514,1494074715,IC_kwDNIULOWQ3FWw,"{'login': 'viraptor', 'id': 188063, 'node_id': 'MDQ6VXNlcjE4ODA2Mw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/188063?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/viraptor', 'html_url': 'https://github.com/viraptor', 'followers_url': 'https://api.github.com/users/viraptor/followers', 'following_url': 'https://api.github.com/users/viraptor/following{/other_user}', 'gists_url': 'https://api.github.com/users/viraptor/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/viraptor/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/viraptor/subscriptions', 'organizations_url': 'https://api.github.com/users/viraptor/orgs', 'repos_url': 'https://api.github.com/users/viraptor/repos', 'events_url': 'https://api.github.com/users/viraptor/events{/privacy}', 'received_events_url': 'https://api.github.com/users/viraptor/received_events', 'type': 'User', 'site_admin': False}",2023-04-03T10:30:00Z,2023-04-03T10:30:00Z,NONE,"@fgiannattasio It will also not sanitize any of the text, raising potential security issues. This is not a correct solution.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1494074715/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46514
https://api.github.com/repos/rails/rails/issues/comments/1317226813,https://github.com/rails/rails/pull/46510#issuecomment-1317226813,https://api.github.com/repos/rails/rails/issues/46510,1317226813,IC_kwDNIULOToNJPQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-11-16T15:45:48Z,2022-11-16T15:45:48Z,MEMBER,"Hi @jordan-brough, thanks for the PR.
I've created [similar](https://github.com/rails/rails/pull/40173) PR's before so I see the usefulness of this PR.
There is a PR by Rails Core member @matthewd that adds a more generic API for limiting the output of inspect and pretty_print: https://github.com/rails/rails/pull/45122 .","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1317226813/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46510
https://api.github.com/repos/rails/rails/issues/comments/1319109892,https://github.com/rails/rails/issues/46509#issuecomment-1319109892,https://api.github.com/repos/rails/rails/issues/46509,1319109892,IC_kwDNIULOTqAFBA,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-11-17T19:36:05Z,2022-11-17T19:36:05Z,CONTRIBUTOR,"I was not able to reproduce it and the video link is broken.
Can you create a small rails app that reproduces an issue and share with us?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1319109892/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46509
https://api.github.com/repos/rails/rails/issues/comments/1319111322,https://github.com/rails/rails/issues/46509#issuecomment-1319111322,https://api.github.com/repos/rails/rails/issues/46509,1319111322,IC_kwDNIULOTqAKmg,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-11-17T19:37:35Z,2022-11-17T19:37:35Z,CONTRIBUTOR,@fatkodima :thinking: video works for me.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1319111322/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46509
https://api.github.com/repos/rails/rails/issues/comments/1319115198,https://github.com/rails/rails/issues/46509#issuecomment-1319115198,https://api.github.com/repos/rails/rails/issues/46509,1319115198,IC_kwDNIULOTqAZvg,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-11-17T19:41:22Z,2022-11-17T20:13:38Z,CONTRIBUTOR,"Ah, ok, thanks. I have an old Safari, works in Chrome.

Upd: Also was able to reproduce.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1319115198/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46509
https://api.github.com/repos/rails/rails/issues/comments/1319356003,https://github.com/rails/rails/issues/46509#issuecomment-1319356003,https://api.github.com/repos/rails/rails/issues/46509,1319356003,IC_kwDNIULOTqPGYw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-11-17T23:44:04Z,2022-11-17T23:44:04Z,CONTRIBUTOR,"Ok, I identified a problem. The problem is really not in the `accepts_nested_attributes`, but in how Active Record identifies if the attribute changed or not.

To reproduce the issue (this is demonstrated in video also), create a Post with nested Comment with a valid `likes_count` value (for example, 5). Try to edit/update the record by changing its value's fractional part only (e.x., 5.2) and the record will be saved successfully, because the nested record was not changed (as per Active Record change detection) and thus validation was not run. If you change an integral part too (e.x, 6.2), you will get the expected validation error.

Simply speaking:
```ruby
comment.likes_count # => 4
comment.likes_count = ""4.2""
comment.changed? # => false
comment.likes_count = ""5.2""
comment.changed? # => true
```

This is also described in a test case: 
https://github.com/rails/rails/blob/994bce4e32306b957eb61b8d6edd1cbb3f3120b8/activemodel/test/cases/attributes_dirty_test.rb#L188-L200

You can trace the relevant logic for nested attributes implementation from here https://github.com/rails/rails/blob/994bce4e32306b957eb61b8d6edd1cbb3f3120b8/activerecord/lib/active_record/nested_attributes.rb#L362 and here https://github.com/rails/rails/blob/994bce4e32306b957eb61b8d6edd1cbb3f3120b8/activerecord/lib/active_record/autosave_association.rb#L319-L325  

So, seems like we could do nothing with this.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1319356003/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46509
https://api.github.com/repos/rails/rails/issues/comments/1322352009,https://github.com/rails/rails/issues/46509#issuecomment-1322352009,https://api.github.com/repos/rails/rails/issues/46509,1322352009,IC_kwDNIULOTtF9iQ,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-11-21T16:45:29Z,2022-11-21T16:45:55Z,MEMBER,"Hmm, I think the issue is that no validation warning shows if you save via nested attributes. But it *does* if you save the record directly. Executable test case to show what I mean (refer to my comments on lines 61 and 73):

```ruby
require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
  end

  create_table :comments, force: true do |t|
    t.integer :post_id
    t.integer :likes_count
  end
end

class Post < ActiveRecord::Base
  has_many :comments
  accepts_nested_attributes_for :comments
end

class Comment < ActiveRecord::Base
  belongs_to :post
  validates :likes_count, numericality: { only_integer: true }
end

class BugTest < Minitest::Test
  def test_bug_with_direct_access
    comment = Comment.new(likes_count: 4)
    assert comment.valid?
    assert comment.save

    comment.likes_count = 4.1
    assert !comment.valid?
    assert !comment.save
    assert_equal [""Likes count must be an integer""], comment.errors.to_a

    assert_equal 4, comment.reload.likes_count
  end

  def test_bug_with_nested_attributes_and_update
    post = Post.create
    comment = post.comments.create(likes_count: 4)

    post.update(comments_attributes: { id: comment.id, post_id: post.id, likes_count: 4.1 })
    assert_equal [], post.errors.to_a # I think the issue is expecting something here

    assert_equal 4, comment.reload.likes_count
  end

  def test_bug_with_nested_attributes_and_assign
    post = Post.create
    comment = post.comments.create(likes_count: 4)

    post.assign_attributes(comments_attributes: { id: comment.id, post_id: post.id, likes_count: 4.1 })
    assert post.valid?
    assert_equal [], post.errors.to_a
    assert_equal [], post.comments.first.errors.to_a # I think the issue is expecting something here
    assert post.save

    assert_equal 4, comment.reload.likes_count
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1322352009/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46509
https://api.github.com/repos/rails/rails/issues/comments/1322614283,https://github.com/rails/rails/issues/46509#issuecomment-1322614283,https://api.github.com/repos/rails/rails/issues/46509,1322614283,IC_kwDNIULOTtV-Cw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-11-21T20:39:53Z,2022-11-21T20:39:53Z,CONTRIBUTOR,"Child records changes are not detected (because of the reasons I mentioned in the previous comment) here - https://github.com/rails/rails/blob/38d79151022217c238a648e76b484fb1e6ee7261/activerecord/lib/active_record/autosave_association.rb#L319-L325
https://github.com/rails/rails/blob/38d79151022217c238a648e76b484fb1e6ee7261/activerecord/lib/active_record/autosave_association.rb#L282-L283
https://github.com/rails/rails/blob/38d79151022217c238a648e76b484fb1e6ee7261/activerecord/lib/active_record/autosave_association.rb#L271-L273

So that is why records are saved without validations. Not sure how `accepts_nested_attributes_for` logic should be changed to not rely on `changed?`.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1322614283/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46509
https://api.github.com/repos/rails/rails/issues/comments/1322641993,https://github.com/rails/rails/issues/46509#issuecomment-1322641993,https://api.github.com/repos/rails/rails/issues/46509,1322641993,IC_kwDNIULOTtXqSQ,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-11-21T21:07:06Z,2022-11-21T21:07:06Z,MEMBER,"I agree it's not yet clear the solution. But thinking out loud, `changed?` doesn't seem to matter when not using nested attributes. This passes, with an extra assertion added compared to last time:

```ruby
  def test_bug_with_direct_access
    comment = Comment.new(likes_count: 4)
    assert comment.valid?
    assert comment.save

    comment.likes_count = 4.1
    assert !comment.changed? # The comment is not considered changed, but validation still fails and adds an error.
    assert !comment.valid?
    assert !comment.save
    assert_equal [""Likes count must be an integer""], comment.errors.to_a

    assert_equal 4, comment.reload.likes_count
  end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1322641993/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46509
https://api.github.com/repos/rails/rails/issues/comments/1367589139,https://github.com/rails/rails/issues/46509#issuecomment-1367589139,https://api.github.com/repos/rails/rails/issues/46509,1367589139,IC_kwDNIULOUYPBEw,"{'login': 'dsusviela', 'id': 18326941, 'node_id': 'MDQ6VXNlcjE4MzI2OTQx', 'avatar_url': 'https://avatars.githubusercontent.com/u/18326941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dsusviela', 'html_url': 'https://github.com/dsusviela', 'followers_url': 'https://api.github.com/users/dsusviela/followers', 'following_url': 'https://api.github.com/users/dsusviela/following{/other_user}', 'gists_url': 'https://api.github.com/users/dsusviela/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dsusviela/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dsusviela/subscriptions', 'organizations_url': 'https://api.github.com/users/dsusviela/orgs', 'repos_url': 'https://api.github.com/users/dsusviela/repos', 'events_url': 'https://api.github.com/users/dsusviela/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dsusviela/received_events', 'type': 'User', 'site_admin': False}",2022-12-29T21:15:47Z,2022-12-29T21:15:47Z,CONTRIBUTOR,"Noob here trying to chime in with some questions

From what i saw, the validation is failing because its comparing the value against `record.likes_count_before_type_cast`, and not against `record.likes_count` itself. The check is being done over at `/activemodel/lib/active_model/validations/numericality.rb#129`.

I guess this is expected, however `likes_count` stays at 4 and that makes `changed?` not realize that there was an at

```ruby
comment.likes_count = 4.1
comment.valid? # false & this makes sense

puts comment.likes_count # this is still 4
puts comment.likes_count_before_type_cast # this is 4.1 which causes validation to fail
```

Would it make sense to have a method `raw_value_changed?` that gives true if the `raw_value` changed, and then compare against `changed` and `raw_value_changed?` when determining to run the validations?

Maybe i got all wrong 😅 
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1367589139/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46509
https://api.github.com/repos/rails/rails/issues/comments/1396218709,https://github.com/rails/rails/issues/46509#issuecomment-1396218709,https://api.github.com/repos/rails/rails/issues/46509,1396218709,IC_kwDNIULOUzibVQ,"{'login': 'JohnAnon9771', 'id': 42195321, 'node_id': 'MDQ6VXNlcjQyMTk1MzIx', 'avatar_url': 'https://avatars.githubusercontent.com/u/42195321?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/JohnAnon9771', 'html_url': 'https://github.com/JohnAnon9771', 'followers_url': 'https://api.github.com/users/JohnAnon9771/followers', 'following_url': 'https://api.github.com/users/JohnAnon9771/following{/other_user}', 'gists_url': 'https://api.github.com/users/JohnAnon9771/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/JohnAnon9771/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/JohnAnon9771/subscriptions', 'organizations_url': 'https://api.github.com/users/JohnAnon9771/orgs', 'repos_url': 'https://api.github.com/users/JohnAnon9771/repos', 'events_url': 'https://api.github.com/users/JohnAnon9771/events{/privacy}', 'received_events_url': 'https://api.github.com/users/JohnAnon9771/received_events', 'type': 'User', 'site_admin': False}",2023-01-18T23:15:03Z,2023-01-18T23:15:03Z,CONTRIBUTOR,"> I agree it's not yet clear the solution. But thinking out loud, `changed?` doesn't seem to matter when not using nested attributes. This passes, with an extra assertion added compared to last time:
> 
> ```ruby
>   def test_bug_with_direct_access
>     comment = Comment.new(likes_count: 4)
>     assert comment.valid?
>     assert comment.save
> 
>     comment.likes_count = 4.1
>     assert !comment.changed? # The comment is not considered changed, but validation still fails and adds an error.
>     assert !comment.valid?
>     assert !comment.save
>     assert_equal [""Likes count must be an integer""], comment.errors.to_a
> 
>     assert_equal 4, comment.reload.likes_count
>   end
> ```

I thought of a solution that checks if there were changes in relation to the value before the type_cast, something like `likes_count_raw_changed?` (I still don't know how it could be). Then from these changes in raw values could be pulled into `associated_records_to_validate_or_save` to run a validation. What do you think? I made a pseudo code and apparently it fixed it. But I still have uncertainties to be able to open the PR.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1396218709/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46509
https://api.github.com/repos/rails/rails/issues/comments/1513916887,https://github.com/rails/rails/issues/46509#issuecomment-1513916887,https://api.github.com/repos/rails/rails/issues/46509,1513916887,IC_kwDNIULOWjyJ1w,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-04-18T23:44:21Z,2023-04-18T23:44:21Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1513916887/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46509
https://api.github.com/repos/rails/rails/issues/comments/1652287586,https://github.com/rails/rails/issues/46509#issuecomment-1652287586,https://api.github.com/repos/rails/rails/issues/46509,1652287586,IC_kwDNIULOYnvoYg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-07-26T18:19:36Z,2023-07-26T18:19:36Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1652287586/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46509
https://api.github.com/repos/rails/rails/issues/comments/1314817719,https://github.com/rails/rails/pull/46483#issuecomment-1314817719,https://api.github.com/repos/rails/rails/issues/46483,1314817719,IC_kwDNIULOTl6Gtw,"{'login': 'kyanagi', 'id': 181194, 'node_id': 'MDQ6VXNlcjE4MTE5NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/181194?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kyanagi', 'html_url': 'https://github.com/kyanagi', 'followers_url': 'https://api.github.com/users/kyanagi/followers', 'following_url': 'https://api.github.com/users/kyanagi/following{/other_user}', 'gists_url': 'https://api.github.com/users/kyanagi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kyanagi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kyanagi/subscriptions', 'organizations_url': 'https://api.github.com/users/kyanagi/orgs', 'repos_url': 'https://api.github.com/users/kyanagi/repos', 'events_url': 'https://api.github.com/users/kyanagi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kyanagi/received_events', 'type': 'User', 'site_admin': False}",2022-11-15T06:05:39Z,2022-11-15T06:05:39Z,NONE,"## Workaround

If you want to add an action without patching ActionCable, `undef_method` the method in `ActionCable::Channel::Base`.

```ruby
class ActionCable::Channel::Base
  undef_method :display
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1314817719/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46483
https://api.github.com/repos/rails/rails/issues/comments/1306228791,https://github.com/rails/rails/pull/46438#issuecomment-1306228791,https://api.github.com/repos/rails/rails/issues/46438,1306228791,IC_kwDNIULOTdt4Nw,"{'login': 'malomalo', 'id': 716, 'node_id': 'MDQ6VXNlcjcxNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/716?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/malomalo', 'html_url': 'https://github.com/malomalo', 'followers_url': 'https://api.github.com/users/malomalo/followers', 'following_url': 'https://api.github.com/users/malomalo/following{/other_user}', 'gists_url': 'https://api.github.com/users/malomalo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/malomalo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/malomalo/subscriptions', 'organizations_url': 'https://api.github.com/users/malomalo/orgs', 'repos_url': 'https://api.github.com/users/malomalo/repos', 'events_url': 'https://api.github.com/users/malomalo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/malomalo/received_events', 'type': 'User', 'site_admin': False}",2022-11-07T21:36:13Z,2022-11-07T21:36:13Z,CONTRIBUTOR,"I've put `@autosave_tracker` on the `connection`. A lot of test are failing because I've set it, but locally I got all the postgresql test passing.

I'm not sure if `connection` is the the best place `@autosave_tacker` or not. If anyone has an ideas I'm open to changing it, or if it should be there I'll go a head and add it as instance variable on `AbstractAdapter` to fix the errors.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1306228791/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46438
https://api.github.com/repos/rails/rails/issues/comments/1305644836,https://github.com/rails/rails/pull/46434#issuecomment-1305644836,https://api.github.com/repos/rails/rails/issues/46434,1305644836,IC_kwDNIULOTdKPJA,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2022-11-07T13:50:13Z,2022-11-07T13:50:13Z,MEMBER,"Hi @gee-forr thanks for the PR and welcome to Rail!

> This Pull Request has been created because previously during deployments I would need to write a hairy grep on the output of rails db:migrate:status to determine if I needed to run a migration

I'd like to better understand why you need this. Why aren't you able to run `db:migrate` every time rather than checking the status? If a migration ran, it won't be re-run.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1305644836/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46434
https://api.github.com/repos/rails/rails/issues/comments/1305701152,https://github.com/rails/rails/pull/46434#issuecomment-1305701152,https://api.github.com/repos/rails/rails/issues/46434,1305701152,IC_kwDNIULOTdNrIA,"{'login': 'gee-forr', 'id': 345730, 'node_id': 'MDQ6VXNlcjM0NTczMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/345730?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gee-forr', 'html_url': 'https://github.com/gee-forr', 'followers_url': 'https://api.github.com/users/gee-forr/followers', 'following_url': 'https://api.github.com/users/gee-forr/following{/other_user}', 'gists_url': 'https://api.github.com/users/gee-forr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gee-forr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gee-forr/subscriptions', 'organizations_url': 'https://api.github.com/users/gee-forr/orgs', 'repos_url': 'https://api.github.com/users/gee-forr/repos', 'events_url': 'https://api.github.com/users/gee-forr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gee-forr/received_events', 'type': 'User', 'site_admin': False}",2022-11-07T14:30:45Z,2022-11-29T08:59:26Z,NONE,"Hey @eileencodes, long time listener, first time caller :)

> I'd like to better understand why you need this. Why aren't you able to run `db:migrate` every time rather than checking the status? If a migration ran, it won't be re-run.

This may be more specific to the way Ansible works, but I can see a use case for knowing whether or not to run a migrate, vs. blindly running it every deploy.

When an Ansible playbook runs, it provides a summary of changed elements upon completion. We currently do a regex on `migrate:status`'s output to determine if migrations are required, and if not, skip the migrate task. This ensures that the amount of ""changed"" things during the deploy is as accurate as possible.

If we blindly ran a migrate every time, we also wouldn't be able to detect if the migration ran anything because it also doesn't provide an exit status, putting us back at square 1.

We're also moving over to K8S, and having `db:migrate:status` provide an exit status means that we can programatically kick off a K8S Job pod or not based on said exit status to run a migration. This would mean quicker deploys when no migrations are needed, and less K8S Job pods kicked off.

This is pretty much the same energy as what [Dave Copeland is doing here with `bundle install`](https://gist.github.com/davetron5000/02c9ff175b8a67b016a1cd3ce4c46271#file-1_setup_main-rb-L5-L9) which can also be safely run over and over like migrate.

Also just ran some benchmarks... for a project with a fair number (200+) migrations, running a noop `db:migrate` on my machine (M1 Max 64GB) takes on average 7 secs. A `db:migrate:status` takes around 1s. This means we can save quite a bit of time by avoiding running noop migrations each deploy.

```
app@b5c9db693a8b:~$ time bundle exec rails db:migrate
Model files unchanged.

real	0m7.745s
user	0m0.284s
sys	0m0.065s
```

```
app@b5c9db693a8b:~$ time bundle exec rails db:migrate:status

database: xxxxxx_development

 Status   Migration ID    Migration Name
--------------------------------------------------
   up     20190926173858  Devise create users
8< snip around 200 migrations... >8
   up     20221014155516  Add quantity formula to rate card rule


real	0m0.844s
user	0m0.270s
sys	0m0.073s
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1305701152/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46434
https://api.github.com/repos/rails/rails/issues/comments/1326361535,https://github.com/rails/rails/pull/46434#issuecomment-1326361535,https://api.github.com/repos/rails/rails/issues/46434,1326361535,IC_kwDNIULOTw6rvw,"{'login': 'gee-forr', 'id': 345730, 'node_id': 'MDQ6VXNlcjM0NTczMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/345730?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gee-forr', 'html_url': 'https://github.com/gee-forr', 'followers_url': 'https://api.github.com/users/gee-forr/followers', 'following_url': 'https://api.github.com/users/gee-forr/following{/other_user}', 'gists_url': 'https://api.github.com/users/gee-forr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gee-forr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gee-forr/subscriptions', 'organizations_url': 'https://api.github.com/users/gee-forr/orgs', 'repos_url': 'https://api.github.com/users/gee-forr/repos', 'events_url': 'https://api.github.com/users/gee-forr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gee-forr/received_events', 'type': 'User', 'site_admin': False}",2022-11-24T12:06:48Z,2022-11-24T12:06:48Z,NONE,"Hey @eileencodes - I know you're hella busy, but I was wondering if you've had some time to go over my justification for having `db:migrate:status` emit a non-zero exit code when migrations are required?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1326361535/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46434
https://api.github.com/repos/rails/rails/issues/comments/1375280249,https://github.com/rails/rails/pull/46434#issuecomment-1375280249,https://api.github.com/repos/rails/rails/issues/46434,1375280249,IC_kwDNIULOUfkceQ,"{'login': 'gee-forr', 'id': 345730, 'node_id': 'MDQ6VXNlcjM0NTczMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/345730?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gee-forr', 'html_url': 'https://github.com/gee-forr', 'followers_url': 'https://api.github.com/users/gee-forr/followers', 'following_url': 'https://api.github.com/users/gee-forr/following{/other_user}', 'gists_url': 'https://api.github.com/users/gee-forr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gee-forr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gee-forr/subscriptions', 'organizations_url': 'https://api.github.com/users/gee-forr/orgs', 'repos_url': 'https://api.github.com/users/gee-forr/repos', 'events_url': 'https://api.github.com/users/gee-forr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gee-forr/received_events', 'type': 'User', 'site_admin': False}",2023-01-09T08:50:47Z,2023-01-09T08:50:47Z,NONE,"Hi @eileencodes - happy new year... I hope you had a relaxing festive season?

Please let me know if there's anything I can do to get this PR over the finish line?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1375280249/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46434
https://api.github.com/repos/rails/rails/issues/comments/1375705237,https://github.com/rails/rails/pull/46434#issuecomment-1375705237,https://api.github.com/repos/rails/rails/issues/46434,1375705237,IC_kwDNIULOUf-YlQ,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2023-01-09T14:27:27Z,2023-01-09T14:27:35Z,MEMBER,"To be honest, I don't like the implementation but I don't have another suggestion at the moment. So I'm not sure what to tell you to work on - it just _feels_ too complex for a simple status check. It also changes the behavior of applications and that might be surprising / undesirable.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1375705237/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46434
https://api.github.com/repos/rails/rails/issues/comments/1376816348,https://github.com/rails/rails/pull/46434#issuecomment-1376816348,https://api.github.com/repos/rails/rails/issues/46434,1376816348,IC_kwDNIULOUhCM3A,"{'login': 'gee-forr', 'id': 345730, 'node_id': 'MDQ6VXNlcjM0NTczMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/345730?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gee-forr', 'html_url': 'https://github.com/gee-forr', 'followers_url': 'https://api.github.com/users/gee-forr/followers', 'following_url': 'https://api.github.com/users/gee-forr/following{/other_user}', 'gists_url': 'https://api.github.com/users/gee-forr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gee-forr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gee-forr/subscriptions', 'organizations_url': 'https://api.github.com/users/gee-forr/orgs', 'repos_url': 'https://api.github.com/users/gee-forr/repos', 'events_url': 'https://api.github.com/users/gee-forr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gee-forr/received_events', 'type': 'User', 'site_admin': False}",2023-01-10T07:03:04Z,2023-01-10T07:03:04Z,NONE,"Hey @eileencodes - thanks for your feedback :)

I totally see your point... as an alternative, would you be amenable to the following:

* reverting `db:migrate:status` to its original functionality
* adding a new task of `db:migrate:check` with stripped down functionality?

This will enable the following workflow:

```shell
rails db:migrate:check || rails db:migrate
```

This ☝🏻 approach has utility outside of just my Ansible use case above. Container entrypoints that include a migrate prior to boot would save time starting up, and k8s migration Jobs would also execute faster, as migrations - in my experience at least - happen way less per deploy compared to vanilla code changes.

Let me know :) And once again - thanks for the feedback, I appreciate you taking time out to respond to me.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1376816348/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46434
https://api.github.com/repos/rails/rails/issues/comments/1418465685,https://github.com/rails/rails/issues/46423#issuecomment-1418465685,https://api.github.com/repos/rails/rails/issues/46423,1418465685,IC_kwDNIULOVIwRlQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-02-06T03:44:45Z,2023-02-06T03:44:45Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1418465685/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46423
https://api.github.com/repos/rails/rails/issues/comments/1418888917,https://github.com/rails/rails/issues/46423#issuecomment-1418888917,https://api.github.com/repos/rails/rails/issues/46423,1418888917,IC_kwDNIULOVJKG1Q,"{'login': 'agrobbin', 'id': 46724, 'node_id': 'MDQ6VXNlcjQ2NzI0', 'avatar_url': 'https://avatars.githubusercontent.com/u/46724?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/agrobbin', 'html_url': 'https://github.com/agrobbin', 'followers_url': 'https://api.github.com/users/agrobbin/followers', 'following_url': 'https://api.github.com/users/agrobbin/following{/other_user}', 'gists_url': 'https://api.github.com/users/agrobbin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/agrobbin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/agrobbin/subscriptions', 'organizations_url': 'https://api.github.com/users/agrobbin/orgs', 'repos_url': 'https://api.github.com/users/agrobbin/repos', 'events_url': 'https://api.github.com/users/agrobbin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/agrobbin/received_events', 'type': 'User', 'site_admin': False}",2023-02-06T10:56:21Z,2023-02-06T10:56:21Z,CONTRIBUTOR,This is still an issue.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1418888917/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46423
https://api.github.com/repos/rails/rails/issues/comments/1537421508,https://github.com/rails/rails/issues/46423#issuecomment-1537421508,https://api.github.com/repos/rails/rails/issues/46423,1537421508,IC_kwDNIULOW6MwxA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-05-07T11:55:08Z,2023-05-07T11:55:08Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1537421508/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46423
https://api.github.com/repos/rails/rails/issues/comments/1538783824,https://github.com/rails/rails/issues/46423#issuecomment-1538783824,https://api.github.com/repos/rails/rails/issues/46423,1538783824,IC_kwDNIULOW7f6UA,"{'login': 'agrobbin', 'id': 46724, 'node_id': 'MDQ6VXNlcjQ2NzI0', 'avatar_url': 'https://avatars.githubusercontent.com/u/46724?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/agrobbin', 'html_url': 'https://github.com/agrobbin', 'followers_url': 'https://api.github.com/users/agrobbin/followers', 'following_url': 'https://api.github.com/users/agrobbin/following{/other_user}', 'gists_url': 'https://api.github.com/users/agrobbin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/agrobbin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/agrobbin/subscriptions', 'organizations_url': 'https://api.github.com/users/agrobbin/orgs', 'repos_url': 'https://api.github.com/users/agrobbin/repos', 'events_url': 'https://api.github.com/users/agrobbin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/agrobbin/received_events', 'type': 'User', 'site_admin': False}",2023-05-08T17:47:53Z,2023-05-08T17:47:53Z,CONTRIBUTOR,This is still an issue.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1538783824/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46423
https://api.github.com/repos/rails/rails/issues/comments/1666936675,https://github.com/rails/rails/issues/46423#issuecomment-1666936675,https://api.github.com/repos/rails/rails/issues/46423,1666936675,IC_kwDNIULOY1tvYw,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-06T18:14:38Z,2023-08-06T18:14:38Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1666936675/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46423
https://api.github.com/repos/rails/rails/issues/comments/1666936817,https://github.com/rails/rails/issues/46423#issuecomment-1666936817,https://api.github.com/repos/rails/rails/issues/46423,1666936817,IC_kwDNIULOY1tv8Q,"{'login': 'agrobbin', 'id': 46724, 'node_id': 'MDQ6VXNlcjQ2NzI0', 'avatar_url': 'https://avatars.githubusercontent.com/u/46724?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/agrobbin', 'html_url': 'https://github.com/agrobbin', 'followers_url': 'https://api.github.com/users/agrobbin/followers', 'following_url': 'https://api.github.com/users/agrobbin/following{/other_user}', 'gists_url': 'https://api.github.com/users/agrobbin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/agrobbin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/agrobbin/subscriptions', 'organizations_url': 'https://api.github.com/users/agrobbin/orgs', 'repos_url': 'https://api.github.com/users/agrobbin/repos', 'events_url': 'https://api.github.com/users/agrobbin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/agrobbin/received_events', 'type': 'User', 'site_admin': False}",2023-08-06T18:15:26Z,2023-08-06T18:15:26Z,CONTRIBUTOR,This is still an issue.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1666936817/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46423
https://api.github.com/repos/rails/rails/issues/comments/1307004181,https://github.com/rails/rails/issues/46419#issuecomment-1307004181,https://api.github.com/repos/rails/rails/issues/46419,1307004181,IC_kwDNIULOTedNFQ,"{'login': 'OvidiuToma', 'id': 14974958, 'node_id': 'MDQ6VXNlcjE0OTc0OTU4', 'avatar_url': 'https://avatars.githubusercontent.com/u/14974958?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OvidiuToma', 'html_url': 'https://github.com/OvidiuToma', 'followers_url': 'https://api.github.com/users/OvidiuToma/followers', 'following_url': 'https://api.github.com/users/OvidiuToma/following{/other_user}', 'gists_url': 'https://api.github.com/users/OvidiuToma/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OvidiuToma/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OvidiuToma/subscriptions', 'organizations_url': 'https://api.github.com/users/OvidiuToma/orgs', 'repos_url': 'https://api.github.com/users/OvidiuToma/repos', 'events_url': 'https://api.github.com/users/OvidiuToma/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OvidiuToma/received_events', 'type': 'User', 'site_admin': False}",2022-11-08T10:45:21Z,2022-11-08T14:13:31Z,NONE,"I would like to add that the previous attempt to fix this inconsistency(https://github.com/rails/rails/pull/33826 PR mentioned in the https://github.com/rails/rails/issues/33816 issue that you've linked above) has been scrapped for some reason. As in, those changes in the documentation are missing from the latest one. 

In my opinion, the documentation is misleading because it hints to the idea that `:attempts` is the ""number of retries"" but in the end, the actual implementation is along the lines of ""max number of job execution attempts"".  The current documentation:
```
Catch the exception and reschedule job for re-execution after so many seconds, for a specific number of attempts...
...
:attempts - Re-enqueues the job the specified number of times (default: 5 attempts) or a symbol reference of :unlimited to retry the job until it succeeds
```
The most misleading line is actually ""Re-enqueues the job the specified number of times"". That is **false**, it re-enqueues the job 4 times(in case of the 5 attempts value).

Actually, `attempts: 0` also challenges my ""max number of job execution attempts"" definition because it's false. As in, it still runs once. 

In my opinion, `:attempts` should have been implemented to work like a retry counter but unfortunately it works as a max attempts field and the documentation fails to specify all the details on the expected behaviour. Personally, I would even like to see clear examples in the documentation. Something along the lines of: ""In order for a job to retry once, the number of :attempts should be set to 2""","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1307004181/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46419
https://api.github.com/repos/rails/rails/issues/comments/1419197772,https://github.com/rails/rails/issues/46419#issuecomment-1419197772,https://api.github.com/repos/rails/rails/issues/46419,1419197772,IC_kwDNIULOVJc9TA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-02-06T14:44:45Z,2023-02-06T14:44:45Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1419197772/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46419
https://api.github.com/repos/rails/rails/issues/comments/1537916605,https://github.com/rails/rails/issues/46419#issuecomment-1537916605,https://api.github.com/repos/rails/rails/issues/46419,1537916605,IC_kwDNIULOW6q-vQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-05-08T07:55:44Z,2023-05-08T07:55:44Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1537916605/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46419
https://api.github.com/repos/rails/rails/issues/comments/1538051749,https://github.com/rails/rails/issues/46419#issuecomment-1538051749,https://api.github.com/repos/rails/rails/issues/46419,1538051749,IC_kwDNIULOW6zOpQ,"{'login': 'shouichi', 'id': 99586, 'node_id': 'MDQ6VXNlcjk5NTg2', 'avatar_url': 'https://avatars.githubusercontent.com/u/99586?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/shouichi', 'html_url': 'https://github.com/shouichi', 'followers_url': 'https://api.github.com/users/shouichi/followers', 'following_url': 'https://api.github.com/users/shouichi/following{/other_user}', 'gists_url': 'https://api.github.com/users/shouichi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/shouichi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/shouichi/subscriptions', 'organizations_url': 'https://api.github.com/users/shouichi/orgs', 'repos_url': 'https://api.github.com/users/shouichi/repos', 'events_url': 'https://api.github.com/users/shouichi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/shouichi/received_events', 'type': 'User', 'site_admin': False}",2023-05-08T09:27:45Z,2023-05-08T09:27:45Z,CONTRIBUTOR,Thanks rails-bot. The problem described in the issue body still holds in the main branch.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1538051749/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46419
https://api.github.com/repos/rails/rails/issues/comments/1650670624,https://github.com/rails/rails/issues/46419#issuecomment-1650670624,https://api.github.com/repos/rails/rails/issues/46419,1650670624,IC_kwDNIULOYmM8IA,"{'login': 'contexterr', 'id': 140553058, 'node_id': 'U_kgDOCGCrYg', 'avatar_url': 'https://avatars.githubusercontent.com/u/140553058?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/contexterr', 'html_url': 'https://github.com/contexterr', 'followers_url': 'https://api.github.com/users/contexterr/followers', 'following_url': 'https://api.github.com/users/contexterr/following{/other_user}', 'gists_url': 'https://api.github.com/users/contexterr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/contexterr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/contexterr/subscriptions', 'organizations_url': 'https://api.github.com/users/contexterr/orgs', 'repos_url': 'https://api.github.com/users/contexterr/repos', 'events_url': 'https://api.github.com/users/contexterr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/contexterr/received_events', 'type': 'User', 'site_admin': False}",2023-07-25T22:51:14Z,2023-07-25T22:51:14Z,NONE,"Hi everyone, I noticed this once merged [change](https://github.com/rails/rails/pull/33826/files#diff-c017408d8f8e9b0a914da28fdcebc291c5fba624174fb9ca5bec3b4fc1c61d51R12) is not in **main** anymore. Am I missing something?

I think the problem relies on the ambiguity of the word `attempt`. Personally, I think would be a good ideia just adding another keyword: `max_retries`, so people can the express better the intent of how many times they want the re-execute a job in case of failure.

We could deprecate `attempt` in the current major, and get rid of it in the next one. Does this make any sense?

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1650670624/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46419
https://api.github.com/repos/rails/rails/issues/comments/1447597508,https://github.com/rails/rails/issues/46412#issuecomment-1447597508,https://api.github.com/repos/rails/rails/issues/46412,1447597508,IC_kwDNIULOVkiVxA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-02-28T05:21:09Z,2023-02-28T05:21:09Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1447597508/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46412
https://api.github.com/repos/rails/rails/issues/comments/1302259765,https://github.com/rails/rails/pull/46409#issuecomment-1302259765,https://api.github.com/repos/rails/rails/issues/46409,1302259765,IC_kwDNIULOTZ7oNQ,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2022-11-03T15:11:39Z,2022-11-03T15:11:39Z,MEMBER,"> It also makes every Rails upgrade as complicated on our side.

Just a note about your patch. It's using entirely private APIs which we can change or remove without deprecation or replacement. You should get the pool from the public connection handler retrieve_connection_pool rather than reaching into the pool manager and then store the type information there.

While ideally in the future the schema cache will be stored on the pool manager level rather than the pool level that's not how it works today so storing the type info on pool manager is guaranteed to keep breaking as I work on moving things around to work better.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1302259765/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46409
https://api.github.com/repos/rails/rails/issues/comments/1319762522,https://github.com/rails/rails/pull/46409#issuecomment-1319762522,https://api.github.com/repos/rails/rails/issues/46409,1319762522,IC_kwDNIULOTqn6Wg,"{'login': 'mochnatiy', 'id': 843601, 'node_id': 'MDQ6VXNlcjg0MzYwMQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/843601?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mochnatiy', 'html_url': 'https://github.com/mochnatiy', 'followers_url': 'https://api.github.com/users/mochnatiy/followers', 'following_url': 'https://api.github.com/users/mochnatiy/following{/other_user}', 'gists_url': 'https://api.github.com/users/mochnatiy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mochnatiy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mochnatiy/subscriptions', 'organizations_url': 'https://api.github.com/users/mochnatiy/orgs', 'repos_url': 'https://api.github.com/users/mochnatiy/repos', 'events_url': 'https://api.github.com/users/mochnatiy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mochnatiy/received_events', 'type': 'User', 'site_admin': False}",2022-11-18T09:40:34Z,2022-11-18T09:40:34Z,NONE,"Hello @eileencodes, thank you very much for the comments, we are on them.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1319762522/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46409
https://api.github.com/repos/rails/rails/issues/comments/1370115727,https://github.com/rails/rails/pull/46409#issuecomment-1370115727,https://api.github.com/repos/rails/rails/issues/46409,1370115727,IC_kwDNIULOUapOjw,"{'login': 'danielvdao', 'id': 6646409, 'node_id': 'MDQ6VXNlcjY2NDY0MDk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6646409?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/danielvdao', 'html_url': 'https://github.com/danielvdao', 'followers_url': 'https://api.github.com/users/danielvdao/followers', 'following_url': 'https://api.github.com/users/danielvdao/following{/other_user}', 'gists_url': 'https://api.github.com/users/danielvdao/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/danielvdao/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/danielvdao/subscriptions', 'organizations_url': 'https://api.github.com/users/danielvdao/orgs', 'repos_url': 'https://api.github.com/users/danielvdao/repos', 'events_url': 'https://api.github.com/users/danielvdao/events{/privacy}', 'received_events_url': 'https://api.github.com/users/danielvdao/received_events', 'type': 'User', 'site_admin': False}",2023-01-03T18:54:21Z,2023-01-03T18:54:21Z,NONE,@mochnatiy Curious about the status of this? Our team has flagged something similar and I would love for this PR to be merged!,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1370115727/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46409
https://api.github.com/repos/rails/rails/issues/comments/1420835735,https://github.com/rails/rails/pull/46409#issuecomment-1420835735,https://api.github.com/repos/rails/rails/issues/46409,1420835735,IC_kwDNIULOVLA7lw,"{'login': 'Thornolf', 'id': 15102389, 'node_id': 'MDQ6VXNlcjE1MTAyMzg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/15102389?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Thornolf', 'html_url': 'https://github.com/Thornolf', 'followers_url': 'https://api.github.com/users/Thornolf/followers', 'following_url': 'https://api.github.com/users/Thornolf/following{/other_user}', 'gists_url': 'https://api.github.com/users/Thornolf/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Thornolf/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Thornolf/subscriptions', 'organizations_url': 'https://api.github.com/users/Thornolf/orgs', 'repos_url': 'https://api.github.com/users/Thornolf/repos', 'events_url': 'https://api.github.com/users/Thornolf/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Thornolf/received_events', 'type': 'User', 'site_admin': False}",2023-02-07T14:08:58Z,2023-02-07T14:08:58Z,CONTRIBUTOR,"> @mochnatiy Curious about the status of this? Our team has flagged something similar and I would love for this PR to be merged!

We are still working on this, but we have technicals issues and some personnals things that were in the way ! Sorry about that 😅 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1420835735/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46409
https://api.github.com/repos/rails/rails/issues/comments/1426180340,https://github.com/rails/rails/pull/46409#issuecomment-1426180340,https://api.github.com/repos/rails/rails/issues/46409,1426180340,IC_kwDNIULOVQHI9A,"{'login': 'natemontgomery', 'id': 1066458, 'node_id': 'MDQ6VXNlcjEwNjY0NTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1066458?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/natemontgomery', 'html_url': 'https://github.com/natemontgomery', 'followers_url': 'https://api.github.com/users/natemontgomery/followers', 'following_url': 'https://api.github.com/users/natemontgomery/following{/other_user}', 'gists_url': 'https://api.github.com/users/natemontgomery/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/natemontgomery/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/natemontgomery/subscriptions', 'organizations_url': 'https://api.github.com/users/natemontgomery/orgs', 'repos_url': 'https://api.github.com/users/natemontgomery/repos', 'events_url': 'https://api.github.com/users/natemontgomery/events{/privacy}', 'received_events_url': 'https://api.github.com/users/natemontgomery/received_events', 'type': 'User', 'site_admin': False}",2023-02-10T18:25:13Z,2023-02-10T18:25:13Z,NONE,[Thornolf](https://github.com/Thornolf) I would be happy to hop in and help out if you would like.  Are the latest changes pushed up here?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1426180340/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46409
https://api.github.com/repos/rails/rails/issues/comments/1624542980,https://github.com/rails/rails/pull/46409#issuecomment-1624542980,https://api.github.com/repos/rails/rails/issues/46409,1624542980,IC_kwDNIULOYNSPBA,"{'login': 'berniechiu', 'id': 2749593, 'node_id': 'MDQ6VXNlcjI3NDk1OTM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2749593?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/berniechiu', 'html_url': 'https://github.com/berniechiu', 'followers_url': 'https://api.github.com/users/berniechiu/followers', 'following_url': 'https://api.github.com/users/berniechiu/following{/other_user}', 'gists_url': 'https://api.github.com/users/berniechiu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/berniechiu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/berniechiu/subscriptions', 'organizations_url': 'https://api.github.com/users/berniechiu/orgs', 'repos_url': 'https://api.github.com/users/berniechiu/repos', 'events_url': 'https://api.github.com/users/berniechiu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/berniechiu/received_events', 'type': 'User', 'site_admin': False}",2023-07-07T02:12:17Z,2023-07-07T02:12:17Z,CONTRIBUTOR,👀 ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1624542980/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46409
https://api.github.com/repos/rails/rails/issues/comments/1645350686,https://github.com/rails/rails/pull/46409#issuecomment-1645350686,https://api.github.com/repos/rails/rails/issues/46409,1645350686,IC_kwDNIULOYhIPHg,"{'login': 'beetlegius', 'id': 747950, 'node_id': 'MDQ6VXNlcjc0Nzk1MA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/747950?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/beetlegius', 'html_url': 'https://github.com/beetlegius', 'followers_url': 'https://api.github.com/users/beetlegius/followers', 'following_url': 'https://api.github.com/users/beetlegius/following{/other_user}', 'gists_url': 'https://api.github.com/users/beetlegius/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/beetlegius/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/beetlegius/subscriptions', 'organizations_url': 'https://api.github.com/users/beetlegius/orgs', 'repos_url': 'https://api.github.com/users/beetlegius/repos', 'events_url': 'https://api.github.com/users/beetlegius/events{/privacy}', 'received_events_url': 'https://api.github.com/users/beetlegius/received_events', 'type': 'User', 'site_admin': False}",2023-07-21T10:18:37Z,2023-07-21T10:18:37Z,NONE,We have the same issue in our services :( would be awesome to include this fix as part of rails,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1645350686/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46409
https://api.github.com/repos/rails/rails/issues/comments/1296029640,https://github.com/rails/rails/pull/46383#issuecomment-1296029640,https://api.github.com/repos/rails/rails/issues/46383,1296029640,IC_kwDNIULOTT_XyA,"{'login': 'dmytro-savochkin', 'id': 1823525, 'node_id': 'MDQ6VXNlcjE4MjM1MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1823525?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dmytro-savochkin', 'html_url': 'https://github.com/dmytro-savochkin', 'followers_url': 'https://api.github.com/users/dmytro-savochkin/followers', 'following_url': 'https://api.github.com/users/dmytro-savochkin/following{/other_user}', 'gists_url': 'https://api.github.com/users/dmytro-savochkin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dmytro-savochkin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dmytro-savochkin/subscriptions', 'organizations_url': 'https://api.github.com/users/dmytro-savochkin/orgs', 'repos_url': 'https://api.github.com/users/dmytro-savochkin/repos', 'events_url': 'https://api.github.com/users/dmytro-savochkin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dmytro-savochkin/received_events', 'type': 'User', 'site_admin': False}",2022-10-30T00:05:41Z,2022-10-30T00:05:41Z,NONE,"@eileencodes, may I ask you to review please (since you were adding association cache line before)? Thanks!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1296029640/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46383
https://api.github.com/repos/rails/rails/issues/comments/1363321566,https://github.com/rails/rails/pull/46383#issuecomment-1363321566,https://api.github.com/repos/rails/rails/issues/46383,1363321566,IC_kwDNIULOUUKi3g,"{'login': 'dmytro-savochkin', 'id': 1823525, 'node_id': 'MDQ6VXNlcjE4MjM1MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1823525?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dmytro-savochkin', 'html_url': 'https://github.com/dmytro-savochkin', 'followers_url': 'https://api.github.com/users/dmytro-savochkin/followers', 'following_url': 'https://api.github.com/users/dmytro-savochkin/following{/other_user}', 'gists_url': 'https://api.github.com/users/dmytro-savochkin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dmytro-savochkin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dmytro-savochkin/subscriptions', 'organizations_url': 'https://api.github.com/users/dmytro-savochkin/orgs', 'repos_url': 'https://api.github.com/users/dmytro-savochkin/repos', 'events_url': 'https://api.github.com/users/dmytro-savochkin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dmytro-savochkin/received_events', 'type': 'User', 'site_admin': False}",2022-12-22T20:38:24Z,2022-12-22T20:38:24Z,NONE,"Hey @nvasilevski!
Sorry for bothering but maybe you know who could be added to reviewers to this?
I understand sometimes it might take a few months here for a PR to be addressed but until I am completely sure it's the only option I'd like to try fasten things up a little :)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1363321566/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46383
https://api.github.com/repos/rails/rails/issues/comments/1363325718,https://github.com/rails/rails/pull/46383#issuecomment-1363325718,https://api.github.com/repos/rails/rails/issues/46383,1363325718,IC_kwDNIULOUUKzFg,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-12-22T20:44:45Z,2022-12-22T20:44:45Z,MEMBER,Please don't ping individuals for review unless they have asked you to. The best way to get feedback would be asking in the [Discord](https://rubyonrails.org/2022/6/13/rails-discord-server-is-now-open-to-the-public),"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1363325718/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46383
https://api.github.com/repos/rails/rails/issues/comments/1363347463,https://github.com/rails/rails/pull/46383#issuecomment-1363347463,https://api.github.com/repos/rails/rails/issues/46383,1363347463,IC_kwDNIULOUUMIBw,"{'login': 'dmytro-savochkin', 'id': 1823525, 'node_id': 'MDQ6VXNlcjE4MjM1MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1823525?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dmytro-savochkin', 'html_url': 'https://github.com/dmytro-savochkin', 'followers_url': 'https://api.github.com/users/dmytro-savochkin/followers', 'following_url': 'https://api.github.com/users/dmytro-savochkin/following{/other_user}', 'gists_url': 'https://api.github.com/users/dmytro-savochkin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dmytro-savochkin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dmytro-savochkin/subscriptions', 'organizations_url': 'https://api.github.com/users/dmytro-savochkin/orgs', 'repos_url': 'https://api.github.com/users/dmytro-savochkin/repos', 'events_url': 'https://api.github.com/users/dmytro-savochkin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dmytro-savochkin/received_events', 'type': 'User', 'site_admin': False}",2022-12-22T21:14:01Z,2022-12-22T21:14:01Z,NONE,"> Please don't ping individuals for review unless they have asked you to. The best way to get feedback would be asking in the [Discord](https://rubyonrails.org/2022/6/13/rails-discord-server-is-now-open-to-the-public)

Oh, wow, there is also a Discord! Thanks, I will try that.
So far however I've followed [this guide for feedback](https://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#get-some-feedback) and on the only thing mentioned there (ror-core mailing list) there was no reply.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1363347463/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46383
https://api.github.com/repos/rails/rails/issues/comments/1309194588,https://github.com/rails/rails/pull/46376#issuecomment-1309194588,https://api.github.com/repos/rails/rails/issues/46376,1309194588,IC_kwDNIULOTgi5XA,"{'login': 'taylor-kems', 'id': 99680010, 'node_id': 'U_kgDOBfD_Cg', 'avatar_url': 'https://avatars.githubusercontent.com/u/99680010?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/taylor-kems', 'html_url': 'https://github.com/taylor-kems', 'followers_url': 'https://api.github.com/users/taylor-kems/followers', 'following_url': 'https://api.github.com/users/taylor-kems/following{/other_user}', 'gists_url': 'https://api.github.com/users/taylor-kems/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/taylor-kems/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/taylor-kems/subscriptions', 'organizations_url': 'https://api.github.com/users/taylor-kems/orgs', 'repos_url': 'https://api.github.com/users/taylor-kems/repos', 'events_url': 'https://api.github.com/users/taylor-kems/events{/privacy}', 'received_events_url': 'https://api.github.com/users/taylor-kems/received_events', 'type': 'User', 'site_admin': False}",2022-11-09T18:31:23Z,2022-11-09T18:31:23Z,NONE,@cpjmcquillan Have you considered support all attribute types a la [ActiveRecord](https://github.com/rails/rails/blob/v7.0.4/activerecord/lib/active_record/attribute_methods/query.rb#L34)?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1309194588/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46376
https://api.github.com/repos/rails/rails/issues/comments/1326085596,https://github.com/rails/rails/pull/46376#issuecomment-1326085596,https://api.github.com/repos/rails/rails/issues/46376,1326085596,IC_kwDNIULOTwp13A,"{'login': 'cpjmcquillan', 'id': 25187547, 'node_id': 'MDQ6VXNlcjI1MTg3NTQ3', 'avatar_url': 'https://avatars.githubusercontent.com/u/25187547?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/cpjmcquillan', 'html_url': 'https://github.com/cpjmcquillan', 'followers_url': 'https://api.github.com/users/cpjmcquillan/followers', 'following_url': 'https://api.github.com/users/cpjmcquillan/following{/other_user}', 'gists_url': 'https://api.github.com/users/cpjmcquillan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/cpjmcquillan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/cpjmcquillan/subscriptions', 'organizations_url': 'https://api.github.com/users/cpjmcquillan/orgs', 'repos_url': 'https://api.github.com/users/cpjmcquillan/repos', 'events_url': 'https://api.github.com/users/cpjmcquillan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/cpjmcquillan/received_events', 'type': 'User', 'site_admin': False}",2022-11-24T08:04:59Z,2022-11-24T08:05:17Z,CONTRIBUTOR,"> @cpjmcquillan Have you considered support all attribute types a la [ActiveRecord](https://github.com/rails/rails/blob/v7.0.4/activerecord/lib/active_record/attribute_methods/query.rb#L34)?

@taylor-kems  Yeah, I did and I had taken a look at that implementation actually!

I opted to keep the scope of the change as small as possible initially, but if it's deemed suitable I'd be open to extracting that behaviour out to ActiveModel 👌 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1326085596/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46376
https://api.github.com/repos/rails/rails/issues/comments/1448418224,https://github.com/rails/rails/pull/46376#issuecomment-1448418224,https://api.github.com/repos/rails/rails/issues/46376,1448418224,IC_kwDNIULOVlUbsA,"{'login': 'cpjmcquillan', 'id': 25187547, 'node_id': 'MDQ6VXNlcjI1MTg3NTQ3', 'avatar_url': 'https://avatars.githubusercontent.com/u/25187547?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/cpjmcquillan', 'html_url': 'https://github.com/cpjmcquillan', 'followers_url': 'https://api.github.com/users/cpjmcquillan/followers', 'following_url': 'https://api.github.com/users/cpjmcquillan/following{/other_user}', 'gists_url': 'https://api.github.com/users/cpjmcquillan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/cpjmcquillan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/cpjmcquillan/subscriptions', 'organizations_url': 'https://api.github.com/users/cpjmcquillan/orgs', 'repos_url': 'https://api.github.com/users/cpjmcquillan/repos', 'events_url': 'https://api.github.com/users/cpjmcquillan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/cpjmcquillan/received_events', 'type': 'User', 'site_admin': False}",2023-02-28T15:49:37Z,2023-02-28T15:49:37Z,CONTRIBUTOR,"@rafaelfranca I saw you assigned yourself to this.

Is this change something you'd consider implementing (in its current guise or otherwise)?

If not I'm happy for this to be closed 👍 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1448418224/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46376
https://api.github.com/repos/rails/rails/issues/comments/1448980642,https://github.com/rails/rails/pull/46376#issuecomment-1448980642,https://api.github.com/repos/rails/rails/issues/46376,1448980642,IC_kwDNIULOVl2wog,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-02-28T21:59:36Z,2023-02-28T21:59:36Z,MEMBER,"I didn't decide yet. In the first glance it makes sense, but I want to review this together with other changes that are being made to active model attributes, so that is why I didn't decide yet.

So, maybe, I'll apply this change.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1448980642/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46376
https://api.github.com/repos/rails/rails/issues/comments/1295968392,https://github.com/rails/rails/issues/46363#issuecomment-1295968392,https://api.github.com/repos/rails/rails/issues/46363,1295968392,IC_kwDNIULOTT7oiA,"{'login': 'dmytro-savochkin', 'id': 1823525, 'node_id': 'MDQ6VXNlcjE4MjM1MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1823525?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dmytro-savochkin', 'html_url': 'https://github.com/dmytro-savochkin', 'followers_url': 'https://api.github.com/users/dmytro-savochkin/followers', 'following_url': 'https://api.github.com/users/dmytro-savochkin/following{/other_user}', 'gists_url': 'https://api.github.com/users/dmytro-savochkin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dmytro-savochkin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dmytro-savochkin/subscriptions', 'organizations_url': 'https://api.github.com/users/dmytro-savochkin/orgs', 'repos_url': 'https://api.github.com/users/dmytro-savochkin/repos', 'events_url': 'https://api.github.com/users/dmytro-savochkin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dmytro-savochkin/received_events', 'type': 'User', 'site_admin': False}",2022-10-29T20:41:43Z,2022-10-29T20:41:43Z,NONE,"I think I understand now what's going on...

This is all about this line of code from `ActiveRecord::Persistence` module: 
https://github.com/rails/rails/blob/3328cd1d69129c7e3a14661d8a0f4b76009ec9b0/activerecord/lib/active_record/persistence.rb#L838
When we call `#reload` this line of code assigns `@association_cache` from `fresh_object` (this is the same record but freshly from the database) to itself.
But unless `@association_cache` is empty the associations it contains will each have `owner`. This usually points to `self` but since that change in the commit above it actually now points to `fresh_object`, not `self`. In most of the cases it's fine (`self` and `fresh_object` are the same record after all) but in some rare cases like the one I posted in this issue it starts to become a difference. Maybe it's some internal implementation of after_save_commit callback, I haven't dug so deep yet. But I can see that under the circumstances described in this issue when the code from after_save_commit callback is called second time there is a confusion between the record it updates and the record from the main thread. One of them is updated, another one is not.

I think we just need to have the same instance of the record in the owners of associations from `@association_cache` and it would solve the problem. I am gonna try making a PR. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1295968392/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46363
https://api.github.com/repos/rails/rails/issues/comments/1447597531,https://github.com/rails/rails/issues/46363#issuecomment-1447597531,https://api.github.com/repos/rails/rails/issues/46363,1447597531,IC_kwDNIULOVkiV2w,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-02-28T05:21:10Z,2023-02-28T05:21:10Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1447597531/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46363
https://api.github.com/repos/rails/rails/issues/comments/1448055357,https://github.com/rails/rails/issues/46363#issuecomment-1448055357,https://api.github.com/repos/rails/rails/issues/46363,1448055357,IC_kwDNIULOVk-SPQ,"{'login': 'dmytro-savochkin', 'id': 1823525, 'node_id': 'MDQ6VXNlcjE4MjM1MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1823525?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dmytro-savochkin', 'html_url': 'https://github.com/dmytro-savochkin', 'followers_url': 'https://api.github.com/users/dmytro-savochkin/followers', 'following_url': 'https://api.github.com/users/dmytro-savochkin/following{/other_user}', 'gists_url': 'https://api.github.com/users/dmytro-savochkin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dmytro-savochkin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dmytro-savochkin/subscriptions', 'organizations_url': 'https://api.github.com/users/dmytro-savochkin/orgs', 'repos_url': 'https://api.github.com/users/dmytro-savochkin/repos', 'events_url': 'https://api.github.com/users/dmytro-savochkin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dmytro-savochkin/received_events', 'type': 'User', 'site_admin': False}",2023-02-28T11:56:36Z,2023-02-28T11:57:02Z,NONE,"This is not stale, it can be reproduced still. There is also an [open PR](https://github.com/rails/rails/pull/46383) to fix it but no reviews.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1448055357/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46363
https://api.github.com/repos/rails/rails/issues/comments/1294042996,https://github.com/rails/rails/issues/46361#issuecomment-1294042996,https://api.github.com/repos/rails/rails/issues/46361,1294042996,IC_kwDNIULOTSGHdA,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-10-27T20:44:39Z,2022-10-27T20:44:39Z,MEMBER,"Thanks for the report.

I had a very quick look into it... if you change the definition of `today?` to use `utc` instead of `time`, [this assertion fails](https://github.com/rails/rails/blob/f297e6afbd5ea878f5e7ef79d3b5c3fd06e776d9/activesupport/test/core_ext/time_with_zone_test.rb#L290).

That test seems correct to me, but it might give you a clue as to where the issue is or how you could fix it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1294042996/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46361
https://api.github.com/repos/rails/rails/issues/comments/1295013954,https://github.com/rails/rails/issues/46361#issuecomment-1295013954,https://api.github.com/repos/rails/rails/issues/46361,1295013954,IC_kwDNIULOTTBYQg,"{'login': 'jatindhankhar', 'id': 2412081, 'node_id': 'MDQ6VXNlcjI0MTIwODE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2412081?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jatindhankhar', 'html_url': 'https://github.com/jatindhankhar', 'followers_url': 'https://api.github.com/users/jatindhankhar/followers', 'following_url': 'https://api.github.com/users/jatindhankhar/following{/other_user}', 'gists_url': 'https://api.github.com/users/jatindhankhar/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jatindhankhar/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jatindhankhar/subscriptions', 'organizations_url': 'https://api.github.com/users/jatindhankhar/orgs', 'repos_url': 'https://api.github.com/users/jatindhankhar/repos', 'events_url': 'https://api.github.com/users/jatindhankhar/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jatindhankhar/received_events', 'type': 'User', 'site_admin': False}",2022-10-28T13:39:57Z,2022-10-28T13:56:49Z,CONTRIBUTOR,"Hi @ghiculescu, 

Thanks for the response. I believe this is due to the fact implementation difference for `past?` and `today?` in the file 

https://github.com/rails/rails/blob/main/activesupport/lib/active_support/core_ext/date_and_time/calculations.rb#L30-L32

```ruby
def today?
     to_date == ::Date.current
end
```

The `::Date.current` is implemented it doesn't relies on the configured time zone of the application rather than the time zone of the object passed. 

https://github.com/rails/rails/blob/main/activesupport/lib/active_support/core_ext/date/calculations.rb#L48-L50

```ruby
def current
    ::Time.zone ? ::Time.zone.today : ::Date.today
end
```

To fix, we need probably need to change the implementation of `today?` in https://github.com/rails/rails/blob/main/activesupport/lib/active_support/core_ext/date_and_time/calculations.rb#L30-L32
and force it to use the object specific  `current` method rather than directly calling the `::Date.today`

## Proposed patch 

```diff
diff --git a/activesupport/lib/active_support/core_ext/date_and_time/calculations.rb b/activesupport/lib/active_support/core_ext/date_and_time/calculations.rb
index e713cee1fe..41e77c184f 100644
--- a/activesupport/lib/active_support/core_ext/date_and_time/calculations.rb
+++ b/activesupport/lib/active_support/core_ext/date_and_time/calculations.rb
@@ -28,7 +28,7 @@ def tomorrow
 
     # Returns true if the date/time is today.
     def today?
-      to_date == ::Date.current
+      to_date == self.class.current.to_date
     end
 
     # Returns true if the date/time is tomorrow.

```

However this fails with [one of the test cases](https://github.com/rails/rails/blob/f297e6afbd5ea878f5e7ef79d3b5c3fd06e776d9/activesupport/test/core_ext/time_with_zone_test.rb#L291), checking into that.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1295013954/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46361
https://api.github.com/repos/rails/rails/issues/comments/1405098205,https://github.com/rails/rails/issues/46361#issuecomment-1405098205,https://api.github.com/repos/rails/rails/issues/46361,1405098205,IC_kwDNIULOU8AY3Q,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-01-26T14:36:12Z,2023-01-26T14:36:12Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1405098205/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46361
https://api.github.com/repos/rails/rails/issues/comments/1423775676,https://github.com/rails/rails/issues/46361#issuecomment-1423775676,https://api.github.com/repos/rails/rails/issues/46361,1423775676,IC_kwDNIULOVN0XvA,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-09T07:56:25Z,2023-02-09T07:56:25Z,MEMBER,@jatindhankhar What is class in this case? Because that test is only stubbing `Date.current` 🤔 ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1423775676/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,46361
https://api.github.com/repos/rails/rails/issues/comments/1431455210,https://github.com/rails/rails/issues/46361#issuecomment-1431455210,https://api.github.com/repos/rails/rails/issues/46361,1431455210,IC_kwDNIULOVVJF6g,"{'login': 'jatindhankhar', 'id': 2412081, 'node_id': 'MDQ6VXNlcjI0MTIwODE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2412081?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jatindhankhar', 'html_url': 'https://github.com/jatindhankhar', 'followers_url': 'https://api.github.com/users/jatindhankhar/followers', 'following_url': 'https://api.github.com/users/jatindhankhar/following{/other_user}', 'gists_url': 'https://api.github.com/users/jatindhankhar/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jatindhankhar/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jatindhankhar/subscriptions', 'organizations_url': 'https://api.github.com/users/jatindhankhar/orgs', 'repos_url': 'https://api.github.com/users/jatindhankhar/repos', 'events_url': 'https://api.github.com/users/jatindhankhar/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jatindhankhar/received_events', 'type': 'User', 'site_admin': False}",2023-02-15T14:26:27Z,2023-02-15T14:26:27Z,CONTRIBUTOR,"@zzak, The `self.class` is of `Time` class, while the old `::Date.current` is of `date` class. 

![Screenshot 2023-02-15 at 7 53 05 PM](https://user-images.githubusercontent.com/2412081/219053987-2cfceda7-faf7-4d59-bbf9-2d950f5e2f3e.png)

Are you suggesting to stub both for tests to pass?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1431455210/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,46361
https://api.github.com/repos/rails/rails/issues/comments/1449681595,https://github.com/rails/rails/issues/46361#issuecomment-1449681595,https://api.github.com/repos/rails/rails/issues/46361,1449681595,IC_kwDNIULOVmhiuw,"{'login': 'jatindhankhar', 'id': 2412081, 'node_id': 'MDQ6VXNlcjI0MTIwODE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2412081?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jatindhankhar', 'html_url': 'https://github.com/jatindhankhar', 'followers_url': 'https://api.github.com/users/jatindhankhar/followers', 'following_url': 'https://api.github.com/users/jatindhankhar/following{/other_user}', 'gists_url': 'https://api.github.com/users/jatindhankhar/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jatindhankhar/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jatindhankhar/subscriptions', 'organizations_url': 'https://api.github.com/users/jatindhankhar/orgs', 'repos_url': 'https://api.github.com/users/jatindhankhar/repos', 'events_url': 'https://api.github.com/users/jatindhankhar/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jatindhankhar/received_events', 'type': 'User', 'site_admin': False}",2023-03-01T09:27:56Z,2023-03-01T09:27:56Z,CONTRIBUTOR,"@zzak, more class methods can be stubbed but wanted to confirm if this is the right direction?  

I do feel that something is off, either with the tests or perhaps with way this is being approached.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1449681595/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46361
https://api.github.com/repos/rails/rails/issues/comments/1480630992,https://github.com/rails/rails/issues/46361#issuecomment-1480630992,https://api.github.com/repos/rails/rails/issues/46361,1480630992,IC_kwDNIULOWECi0A,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-03-23T05:39:22Z,2023-03-28T02:14:28Z,MEMBER,"@jatindhankhar Sorry for the delay, I've tried to put together this patch in #47745. My hope is that we will get clearer feedback from a PR than comments in this thread.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1480630992/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46361
https://api.github.com/repos/rails/rails/issues/comments/1481168570,https://github.com/rails/rails/issues/46361#issuecomment-1481168570,https://api.github.com/repos/rails/rails/issues/46361,1481168570,IC_kwDNIULOWEjWug,"{'login': 'jatindhankhar', 'id': 2412081, 'node_id': 'MDQ6VXNlcjI0MTIwODE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2412081?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jatindhankhar', 'html_url': 'https://github.com/jatindhankhar', 'followers_url': 'https://api.github.com/users/jatindhankhar/followers', 'following_url': 'https://api.github.com/users/jatindhankhar/following{/other_user}', 'gists_url': 'https://api.github.com/users/jatindhankhar/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jatindhankhar/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jatindhankhar/subscriptions', 'organizations_url': 'https://api.github.com/users/jatindhankhar/orgs', 'repos_url': 'https://api.github.com/users/jatindhankhar/repos', 'events_url': 'https://api.github.com/users/jatindhankhar/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jatindhankhar/received_events', 'type': 'User', 'site_admin': False}",2023-03-23T13:10:06Z,2023-03-23T13:10:06Z,CONTRIBUTOR,"Makes sense, thanks @zzak.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1481168570/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46361
https://api.github.com/repos/rails/rails/issues/comments/1489566418,https://github.com/rails/rails/issues/46361#issuecomment-1489566418,https://api.github.com/repos/rails/rails/issues/46361,1489566418,IC_kwDNIULOWMj60g,"{'login': 'softwaregravy', 'id': 426690, 'node_id': 'MDQ6VXNlcjQyNjY5MA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/426690?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/softwaregravy', 'html_url': 'https://github.com/softwaregravy', 'followers_url': 'https://api.github.com/users/softwaregravy/followers', 'following_url': 'https://api.github.com/users/softwaregravy/following{/other_user}', 'gists_url': 'https://api.github.com/users/softwaregravy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/softwaregravy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/softwaregravy/subscriptions', 'organizations_url': 'https://api.github.com/users/softwaregravy/orgs', 'repos_url': 'https://api.github.com/users/softwaregravy/repos', 'events_url': 'https://api.github.com/users/softwaregravy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/softwaregravy/received_events', 'type': 'User', 'site_admin': False}",2023-03-30T01:44:41Z,2023-03-30T01:44:41Z,CONTRIBUTOR,"I think I am hitting the same issue from a different angle. Just sharing an example in case it is helpful.

The `Date.today.today?` returning false seems wrong to me as does `Date.today` and `Date.yesterday` returning the same value at the same time

```
>> Time.zone
=> #<ActiveSupport::TimeZone:0x000000010c7f5690 @name=""UTC"", @tzinfo=#<TZInfo::DataTimezone: Etc/UTC>, @utc_offset=nil>
>> Date.today
=> Wed, 29 Mar 2023
>> Date.yesterday
=> Wed, 29 Mar 2023
>> Date.tomorrow
=> Fri, 31 Mar 2023
>> Date.today.today?
=> false
>> Date.today.yesterday?
=> true
>>
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1489566418/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46361
https://api.github.com/repos/rails/rails/issues/comments/1610500453,https://github.com/rails/rails/issues/46361#issuecomment-1610500453,https://api.github.com/repos/rails/rails/issues/46361,1610500453,IC_kwDNIULOX_5JZQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-06-28T01:55:25Z,2023-06-28T01:55:25Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1610500453/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46361
https://api.github.com/repos/rails/rails/issues/comments/1293640123,https://github.com/rails/rails/pull/46353#issuecomment-1293640123,https://api.github.com/repos/rails/rails/issues/46353,1293640123,IC_kwDNIULOTRthuw,"{'login': 'bdewater', 'id': 496367, 'node_id': 'MDQ6VXNlcjQ5NjM2Nw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/496367?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bdewater', 'html_url': 'https://github.com/bdewater', 'followers_url': 'https://api.github.com/users/bdewater/followers', 'following_url': 'https://api.github.com/users/bdewater/following{/other_user}', 'gists_url': 'https://api.github.com/users/bdewater/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bdewater/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bdewater/subscriptions', 'organizations_url': 'https://api.github.com/users/bdewater/orgs', 'repos_url': 'https://api.github.com/users/bdewater/repos', 'events_url': 'https://api.github.com/users/bdewater/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bdewater/received_events', 'type': 'User', 'site_admin': False}",2022-10-27T14:48:38Z,2022-10-27T14:48:38Z,CONTRIBUTOR,This could use an update to https://github.com/rails/rails/blob/main/guides/source/active_record_postgresql.md as well.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1293640123/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46353
https://api.github.com/repos/rails/rails/issues/comments/1293839179,https://github.com/rails/rails/pull/46353#issuecomment-1293839179,https://api.github.com/repos/rails/rails/issues/46353,1293839179,IC_kwDNIULOTR5rSw,"{'login': 'paulyoder', 'id': 224111, 'node_id': 'MDQ6VXNlcjIyNDExMQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/224111?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulyoder', 'html_url': 'https://github.com/paulyoder', 'followers_url': 'https://api.github.com/users/paulyoder/followers', 'following_url': 'https://api.github.com/users/paulyoder/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulyoder/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulyoder/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulyoder/subscriptions', 'organizations_url': 'https://api.github.com/users/paulyoder/orgs', 'repos_url': 'https://api.github.com/users/paulyoder/repos', 'events_url': 'https://api.github.com/users/paulyoder/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulyoder/received_events', 'type': 'User', 'site_admin': False}",2022-10-27T17:20:58Z,2022-10-27T17:20:58Z,CONTRIBUTOR,Thanks @bdewater I'll work on updating that documentation as well,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1293839179/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,46353
https://api.github.com/repos/rails/rails/issues/comments/1295154960,https://github.com/rails/rails/pull/46353#issuecomment-1295154960,https://api.github.com/repos/rails/rails/issues/46353,1295154960,IC_kwDNIULOTTJ_EA,"{'login': 'paulyoder', 'id': 224111, 'node_id': 'MDQ6VXNlcjIyNDExMQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/224111?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/paulyoder', 'html_url': 'https://github.com/paulyoder', 'followers_url': 'https://api.github.com/users/paulyoder/followers', 'following_url': 'https://api.github.com/users/paulyoder/following{/other_user}', 'gists_url': 'https://api.github.com/users/paulyoder/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/paulyoder/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/paulyoder/subscriptions', 'organizations_url': 'https://api.github.com/users/paulyoder/orgs', 'repos_url': 'https://api.github.com/users/paulyoder/repos', 'events_url': 'https://api.github.com/users/paulyoder/events{/privacy}', 'received_events_url': 'https://api.github.com/users/paulyoder/received_events', 'type': 'User', 'site_admin': False}",2022-10-28T15:44:14Z,2022-10-28T15:44:14Z,CONTRIBUTOR,@bdewater I updated the active record postgres documentation.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1295154960/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46353
https://api.github.com/repos/rails/rails/issues/comments/1420707624,https://github.com/rails/rails/pull/46353#issuecomment-1420707624,https://api.github.com/repos/rails/rails/issues/46353,1420707624,IC_kwDNIULOVK5HKA,"{'login': 'saiqulhaq', 'id': 1275215, 'node_id': 'MDQ6VXNlcjEyNzUyMTU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1275215?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/saiqulhaq', 'html_url': 'https://github.com/saiqulhaq', 'followers_url': 'https://api.github.com/users/saiqulhaq/followers', 'following_url': 'https://api.github.com/users/saiqulhaq/following{/other_user}', 'gists_url': 'https://api.github.com/users/saiqulhaq/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/saiqulhaq/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/saiqulhaq/subscriptions', 'organizations_url': 'https://api.github.com/users/saiqulhaq/orgs', 'repos_url': 'https://api.github.com/users/saiqulhaq/repos', 'events_url': 'https://api.github.com/users/saiqulhaq/events{/privacy}', 'received_events_url': 'https://api.github.com/users/saiqulhaq/received_events', 'type': 'User', 'site_admin': False}",2023-02-07T12:39:59Z,2023-02-07T12:39:59Z,CONTRIBUTOR,please fix the conflict 😅,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1420707624/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46353
https://api.github.com/repos/rails/rails/issues/comments/1425237443,https://github.com/rails/rails/pull/46353#issuecomment-1425237443,https://api.github.com/repos/rails/rails/issues/46353,1425237443,IC_kwDNIULOVPNlww,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-10T06:07:33Z,2023-02-10T06:07:33Z,MEMBER,"This makes sense to me, if we have `--primary-key-type` to also have `--primary-key-default` 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1425237443/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46353
https://api.github.com/repos/rails/rails/issues/comments/1292782277,https://github.com/rails/rails/issues/46351#issuecomment-1292782277,https://api.github.com/repos/rails/rails/issues/46351,1292782277,IC_kwDNIULOTQ5KxQ,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-10-26T23:47:16Z,2022-10-27T22:25:05Z,CONTRIBUTOR,"The problem is here: https://github.com/rails/rails/blob/9da0d1a24f73bf15e881ba5b70b78c1a7043063d/activerecord/lib/active_record/type/serialized.rb#L28-L30

The database default `""{}""` is converted to `{}`, but it is considered the default for `Hash` coder, so set to `nil`.

I came up with a solution (similar to https://github.com/rails/rails/pull/45962), but it fails the test at https://github.com/rails/rails/blob/9da0d1a24f73bf15e881ba5b70b78c1a7043063d/activerecord/test/cases/yaml_serialization_test.rb#L26-L29 because procs are not deserializable from yaml.

So, suggestions how to overcome this are welcomed.

```diff
diff --git a/activerecord/lib/active_record/attribute_methods/serialization.rb b/activerecord/lib/active_record/attribute_methods/serialization.rb
index 8361f3ac3f..34c22d2098 100644
--- a/activerecord/lib/active_record/attribute_methods/serialization.rb
+++ b/activerecord/lib/active_record/attribute_methods/serialization.rb
@@ -118,7 +118,7 @@ def serialize(attr_name, class_name_or_coder = Object, **options)
             end

             cast_type = cast_type.subtype if Type::Serialized === cast_type
-            Type::Serialized.new(cast_type, coder)
+            Type::Serialized.new(cast_type, coder, default: -> { columns_hash[attr_name.to_s]&.default })
           end
         end

diff --git a/activerecord/lib/active_record/type/serialized.rb b/activerecord/lib/active_record/type/serialized.rb
index f2d463e0e5..bd86d6f990 100644
--- a/activerecord/lib/active_record/type/serialized.rb
+++ b/activerecord/lib/active_record/type/serialized.rb
@@ -9,9 +9,10 @@ class Serialized < DelegateClass(ActiveModel::Type::Value) # :nodoc:

       attr_reader :subtype, :coder

-      def initialize(subtype, coder)
+      def initialize(subtype, coder, default: nil)
         @subtype = subtype
         @coder = coder
+        @default = default
         super(subtype)
       end

@@ -25,7 +26,7 @@ def deserialize(value)

       def serialize(value)
         return if value.nil?
-        unless default_value?(value)
+        unless default_value?(value) && @default&.call.nil?
           super coder.dump(value)
         end
       end
diff --git a/activerecord/test/cases/serialized_attribute_test.rb b/activerecord/test/cases/serialized_attribute_test.rb
index 3356412308..4e271a5961 100644
--- a/activerecord/test/cases/serialized_attribute_test.rb
+++ b/activerecord/test/cases/serialized_attribute_test.rb
@@ -23,6 +23,10 @@ class ImportantTopic < Topic
     serialize :important, Hash
   end

+  class Book < ActiveRecord::Base
+    serialize :content
+  end
+
   teardown do
     Topic.serialize(""content"")
   end
@@ -570,6 +574,12 @@ def test_nil_is_always_persisted_as_null
     assert_equal [topic], Topic.where(content: nil)
   end

+  def test_serialized_attribute_with_database_default
+    book = Book.create!(content: { ""foo"" => ""bar"" })
+    book.update_attribute :content, {}
+    assert_equal [book], Book.where(content: {})
+  end
+
   def test_serialized_attribute_with_default
     klass = Class.new(ActiveRecord::Base) do
       self.table_name = Topic.table_name
diff --git a/activerecord/test/schema/schema.rb b/activerecord/test/schema/schema.rb
index 3f402e9003..3e33fd372f 100644
--- a/activerecord/test/schema/schema.rb
+++ b/activerecord/test/schema/schema.rb
@@ -124,6 +124,7 @@
     t.references :author
     t.string :format
     t.column :name, :string
+    t.column :content, :string, null: false, default: ""{}""
     t.column :status, :integer, **default_zero
     t.column :last_read, :integer, **default_zero
     t.column :nullable_status, :integer
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1292782277/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46351
https://api.github.com/repos/rails/rails/issues/comments/1292785212,https://github.com/rails/rails/issues/46351#issuecomment-1292785212,https://api.github.com/repos/rails/rails/issues/46351,1292785212,IC_kwDNIULOTQ5WPA,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-10-26T23:53:15Z,2022-10-26T23:53:15Z,CONTRIBUTOR,"Reproducible test script:
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", path: ""~/Desktop/oss/rails""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.text     :content, null: false, default: ""{}""
  end
end

class Post < ActiveRecord::Base
  serialize(:content, Hash)
end

class BugTest < Minitest::Test
  def test_serialized_attribute_with_default_can_update_to_default
    t = Post.create!(content: { ""other_key"" => ""new_value"" })
    assert_equal({ ""other_key"" => ""new_value"" }, t.content)

    t.update!(content: {})
    assert_equal({}, t.content)
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1292785212/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46351
https://api.github.com/repos/rails/rails/issues/comments/1295296011,https://github.com/rails/rails/issues/46351#issuecomment-1295296011,https://api.github.com/repos/rails/rails/issues/46351,1295296011,IC_kwDNIULOTTSmCw,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-10-28T17:56:42Z,2022-10-28T17:56:42Z,MEMBER,"Yeah, serialize always assume the column is nullable. It's always been the case, but never explicitly documented.

I suppose we theoretically could check in the column metadata whether it's nullable? (just a quick thought, I haven't dug in the code to refresh my memory)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1295296011/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46351
https://api.github.com/repos/rails/rails/issues/comments/1439694526,https://github.com/rails/rails/issues/46351#issuecomment-1439694526,https://api.github.com/repos/rails/rails/issues/46351,1439694526,IC_kwDNIULOVc_-vg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-02-22T09:30:22Z,2023-02-22T09:30:22Z,MEMBER,Fixed in https://github.com/rails/rails/pull/47191,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1439694526/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46351
https://api.github.com/repos/rails/rails/issues/comments/1442041304,https://github.com/rails/rails/issues/46351#issuecomment-1442041304,https://api.github.com/repos/rails/rails/issues/46351,1442041304,IC_kwDNIULOVfPN2A,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2023-02-23T16:07:26Z,2023-02-23T16:07:26Z,MEMBER,Reopening as we had to revert https://github.com/rails/rails/pull/47191 in https://github.com/rails/rails/pull/47482,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1442041304/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46351
https://api.github.com/repos/rails/rails/issues/comments/1292008628,https://github.com/rails/rails/pull/46344#issuecomment-1292008628,https://api.github.com/repos/rails/rails/issues/46344,1292008628,IC_kwDNIULOTQJ8tA,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2022-10-26T13:07:58Z,2022-10-26T13:07:58Z,MEMBER,Hi @omegahm thanks for the PR. What's the behavior you expect when setting `dependent: nil`? How is this different from the `dependent: :nullify` option that already exists on some association types?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1292008628/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46344
https://api.github.com/repos/rails/rails/issues/comments/1292040171,https://github.com/rails/rails/pull/46344#issuecomment-1292040171,https://api.github.com/repos/rails/rails/issues/46344,1292040171,IC_kwDNIULOTQL36w,"{'login': 'omegahm', 'id': 178448, 'node_id': 'MDQ6VXNlcjE3ODQ0OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/178448?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/omegahm', 'html_url': 'https://github.com/omegahm', 'followers_url': 'https://api.github.com/users/omegahm/followers', 'following_url': 'https://api.github.com/users/omegahm/following{/other_user}', 'gists_url': 'https://api.github.com/users/omegahm/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/omegahm/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/omegahm/subscriptions', 'organizations_url': 'https://api.github.com/users/omegahm/orgs', 'repos_url': 'https://api.github.com/users/omegahm/repos', 'events_url': 'https://api.github.com/users/omegahm/events{/privacy}', 'received_events_url': 'https://api.github.com/users/omegahm/received_events', 'type': 'User', 'site_admin': False}",2022-10-26T13:30:51Z,2022-10-26T13:30:51Z,CONTRIBUTOR,"I'm not looking to change behaviour, I was just noticing, that the error message you get if you set `dependent` to something not from the valid list didn't include `nil`, which, per the [documentation](https://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_many) (scroll down to `dependent`), is a valid value for doing nothing.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1292040171/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46344
https://api.github.com/repos/rails/rails/issues/comments/1302724521,https://github.com/rails/rails/pull/46306#issuecomment-1302724521,https://api.github.com/repos/rails/rails/issues/46306,1302724521,IC_kwDNIULOTaX_qQ,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-11-03T22:01:53Z,2022-11-03T22:01:53Z,MEMBER,"We might actually want to do the opposite. If we have the content length, we should send it, it's much better for transport.

The reason `AC::Live` removes it is that it assumes ""app streaming"" as in unknown length. We probably need a mechanism to allow to stream a known size response.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1302724521/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46306
https://api.github.com/repos/rails/rails/issues/comments/1306322330,https://github.com/rails/rails/pull/46306#issuecomment-1306322330,https://api.github.com/repos/rails/rails/issues/46306,1306322330,IC_kwDNIULOTdzlmg,"{'login': 'codergeek121', 'id': 4910785, 'node_id': 'MDQ6VXNlcjQ5MTA3ODU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4910785?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/codergeek121', 'html_url': 'https://github.com/codergeek121', 'followers_url': 'https://api.github.com/users/codergeek121/followers', 'following_url': 'https://api.github.com/users/codergeek121/following{/other_user}', 'gists_url': 'https://api.github.com/users/codergeek121/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/codergeek121/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/codergeek121/subscriptions', 'organizations_url': 'https://api.github.com/users/codergeek121/orgs', 'repos_url': 'https://api.github.com/users/codergeek121/repos', 'events_url': 'https://api.github.com/users/codergeek121/events{/privacy}', 'received_events_url': 'https://api.github.com/users/codergeek121/received_events', 'type': 'User', 'site_admin': False}",2022-11-07T22:38:10Z,2022-11-07T22:38:10Z,CONTRIBUTOR,"Hi byroot,

thank you for looking at the PR :)
I'm not sure if I fully understood your suggestion.
I think the original reason for removing the header is https://www.rfc-editor.org/rfc/rfc9110.html#section-8.6-9 which I interpreted as : ""If `Transfer-Encoding` is `chunked` do not send a `Content-Length` header"". This is the current behavior of `ActionController::Streaming#_process_options`. You are suggesting to add an option to send `Transfer-Encoding chunked` and still keeping the `Content-Length` header?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1306322330/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46306
https://api.github.com/repos/rails/rails/issues/comments/1307503542,https://github.com/rails/rails/pull/46306#issuecomment-1307503542,https://api.github.com/repos/rails/rails/issues/46306,1307503542,IC_kwDNIULOTe7rtg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-11-08T16:37:40Z,2022-11-08T16:37:40Z,MEMBER,"No I'm suggesting that when the length is known we sent it and don't stream the file with transfer-encoding chunked.

AC::Live enforce chunked responses, we should allow to send regular ones when the size is known in advance.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1307503542/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46306
https://api.github.com/repos/rails/rails/issues/comments/1307602331,https://github.com/rails/rails/pull/46306#issuecomment-1307602331,https://api.github.com/repos/rails/rails/issues/46306,1307602331,IC_kwDNIULOTfBtmw,"{'login': 'codergeek121', 'id': 4910785, 'node_id': 'MDQ6VXNlcjQ5MTA3ODU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4910785?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/codergeek121', 'html_url': 'https://github.com/codergeek121', 'followers_url': 'https://api.github.com/users/codergeek121/followers', 'following_url': 'https://api.github.com/users/codergeek121/following{/other_user}', 'gists_url': 'https://api.github.com/users/codergeek121/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/codergeek121/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/codergeek121/subscriptions', 'organizations_url': 'https://api.github.com/users/codergeek121/orgs', 'repos_url': 'https://api.github.com/users/codergeek121/repos', 'events_url': 'https://api.github.com/users/codergeek121/events{/privacy}', 'received_events_url': 'https://api.github.com/users/codergeek121/received_events', 'type': 'User', 'site_admin': False}",2022-11-08T17:45:31Z,2022-11-08T17:45:48Z,CONTRIBUTOR,"Thanks, got it. I'll try to take a look this weekend and create a draft.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1307602331/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46306
https://api.github.com/repos/rails/rails/issues/comments/1290877363,https://github.com/rails/rails/issues/46292#issuecomment-1290877363,https://api.github.com/repos/rails/rails/issues/46292,1290877363,IC_kwDNIULOTPE5sw,"{'login': 'sambostock', 'id': 8219340, 'node_id': 'MDQ6VXNlcjgyMTkzNDA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8219340?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sambostock', 'html_url': 'https://github.com/sambostock', 'followers_url': 'https://api.github.com/users/sambostock/followers', 'following_url': 'https://api.github.com/users/sambostock/following{/other_user}', 'gists_url': 'https://api.github.com/users/sambostock/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sambostock/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sambostock/subscriptions', 'organizations_url': 'https://api.github.com/users/sambostock/orgs', 'repos_url': 'https://api.github.com/users/sambostock/repos', 'events_url': 'https://api.github.com/users/sambostock/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sambostock/received_events', 'type': 'User', 'site_admin': False}",2022-10-25T17:07:07Z,2022-10-25T17:07:07Z,CONTRIBUTOR,"@rafaelfranca @skipkayhil, any ideas on how we could address this?
- Would it make sense to backport #45546 to branches like `7-0-stable`?
- Could we commit transpiled versions of the CoffeeScript files, so the `coffee-script` gem isn't required?
- Is this something we want to leave as is, and just require consumers to include a dependency on `coffee-script`?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1290877363/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46292
https://api.github.com/repos/rails/rails/issues/comments/1332810481,https://github.com/rails/rails/issues/46292#issuecomment-1332810481,https://api.github.com/repos/rails/rails/issues/46292,1332810481,IC_kwDNIULOT3ES8Q,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-11-30T22:24:24Z,2022-11-30T22:24:24Z,MEMBER,"@sambostock sorry this didn't get any attention until now,  and thanks for the detailed writeup. A few thoughts, please let me know if they make sense or are on the wrong track.

> * Would it make sense to backport [Convert rails-ujs to ES2015 modules #45546](https://github.com/rails/rails/pull/45546) to branches like `7-0-stable`?

It sounds to me like this is going to be an issue on *any* existing stable branch or tag, not just `7-0-stable`. Is that right? To be fair no other stable is still maintained so maybe that doesn't matter, but I just want to ensure I understood.

> * Could we commit transpiled versions of the CoffeeScript files, so the `coffee-script` gem isn't required?
> * Is this something we want to leave as is, and just require consumers to include a dependency on `coffee-script`?

Is this also going to be an issue in `7-1-stable`? Is it an issue on the `main` branch? [There's still a build script](https://github.com/rails/rails/blob/120abd1a65b7ac441608c8a7508f7f21eef1009e/actionview/package.json#L14) but presumably it doesn't depend on coffeescript anymore.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1332810481/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46292
https://api.github.com/repos/rails/rails/issues/comments/1332864678,https://github.com/rails/rails/issues/46292#issuecomment-1332864678,https://api.github.com/repos/rails/rails/issues/46292,1332864678,IC_kwDNIULOT3Hmpg,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-11-30T23:20:33Z,2022-11-30T23:20:33Z,MEMBER,"Thanks for following up @ghiculescu!

> It sounds to me like this is going to be an issue on _any_ existing stable branch or tag, not just `7-0-stable`. Is that right? To be fair no other stable is still maintained so maybe that doesn't matter, but I just want to ensure I understood.

Yep, this will apply to all of the previous stable branches as well.

> Is this also going to be an issue in `7-1-stable`? Is it an issue on the `main` branch? [There's still a build script](https://github.com/rails/rails/blob/120abd1a65b7ac441608c8a7508f7f21eef1009e/actionview/package.json#L14) but presumably it doesn't depend on coffeescript anymore.

This will not be an issue going forward as the compiled files are actually present in the repo now [here](https://github.com/rails/rails/tree/main/actionview/app/assets/javascripts).

> 1. Would it make sense to backport #45546 to branches like `7-0-stable`?
> 2. Could we commit transpiled versions of the CoffeeScript files, so the `coffee-script` gem isn't required?
> 3. Is this something we want to leave as is, and just require consumers to include a dependency on `coffee-script`?

Out of the three options:
1. I don't think backporting is feasible because of the scope of changes made to rails-ujs
2. Definitely possible, would need to investigate how much effort this would require (might be as simple as removing the folder from `.gitignore`?)
3. Definitely the easiest, although I agree its a bit unfortunate (and the issue seems to be rare since this is the first report?)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1332864678/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46292
https://api.github.com/repos/rails/rails/issues/comments/1332882941,https://github.com/rails/rails/issues/46292#issuecomment-1332882941,https://api.github.com/repos/rails/rails/issues/46292,1332882941,IC_kwDNIULOT3It_Q,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-11-30T23:32:22Z,2022-11-30T23:32:22Z,MEMBER,"> (and the issue seems to be rare since this is the first report?)

I was thinking the same, + the workaround is just to add the `coffee_script` gem until Rails 7.1, right?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1332882941/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46292
https://api.github.com/repos/rails/rails/issues/comments/1278336253,https://github.com/rails/rails/pull/46238#issuecomment-1278336253,https://api.github.com/repos/rails/rails/issues/46238,1278336253,IC_kwDNIULOTDHc_Q,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-10-14T00:52:09Z,2022-10-14T00:52:09Z,MEMBER,"Hey @austenmadden, thanks for opening a PR! I was thinking about some different scenarios and I can't decide whether I think this is expected behavior or not:

```
def test_validates_associated_with_create_context
    Reply.validates_associated :topic, on: :create
    Topic.validates_presence_of :content, on: :create
    t = Topic.create!(title: ""uhoh"", content: ""stuff"")
    t.update!(content: nil)
    t.replies.create!(""title"" => ""A reply"", ""content"" => ""with content!"") # => what should happen here?
end
```

Should creating an associated record trigger validations for the `:update` context on Topic or the `:create` context? My gut instinct says `:create` would be unexpected
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1278336253/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,46238
https://api.github.com/repos/rails/rails/issues/comments/1278498268,https://github.com/rails/rails/pull/46238#issuecomment-1278498268,https://api.github.com/repos/rails/rails/issues/46238,1278498268,IC_kwDNIULOTDRV3A,"{'login': 'austenmadden', 'id': 7366727, 'node_id': 'MDQ6VXNlcjczNjY3Mjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7366727?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/austenmadden', 'html_url': 'https://github.com/austenmadden', 'followers_url': 'https://api.github.com/users/austenmadden/followers', 'following_url': 'https://api.github.com/users/austenmadden/following{/other_user}', 'gists_url': 'https://api.github.com/users/austenmadden/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/austenmadden/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/austenmadden/subscriptions', 'organizations_url': 'https://api.github.com/users/austenmadden/orgs', 'repos_url': 'https://api.github.com/users/austenmadden/repos', 'events_url': 'https://api.github.com/users/austenmadden/events{/privacy}', 'received_events_url': 'https://api.github.com/users/austenmadden/received_events', 'type': 'User', 'site_admin': False}",2022-10-14T05:21:24Z,2022-10-17T15:45:01Z,CONTRIBUTOR,"@skipkayhil Hey thanks for following up! I see your point. However, I feel like we should do something about the status quo as it definitely makes `validates_associated` tricky with custom contexts IMO. 

Here's an example where the current behavior can be kinda wacky without custom contexts too.

```ruby
  def test_validates_associated_with_different_context
    Reply.validates_associated :topic, on: :update
    Topic.validates_presence_of :content, on: :create

    t = Topic.create!(title: ""uhoh"", content: ""stuff"")
    t.update_column(:content, nil)
    r = Reply.create!(title: ""A reply"", topic: t) # Explodes
  end

```

What's interesting however is this snippet doesn't even hit the code being touched here according to the  backtrace/breakpoints 🤔 Might be more of a bug with the way the validation callbacks get inserted?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1278498268/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46238
https://api.github.com/repos/rails/rails/issues/comments/1278501057,https://github.com/rails/rails/pull/46238#issuecomment-1278501057,https://api.github.com/repos/rails/rails/issues/46238,1278501057,IC_kwDNIULOTDRgwQ,"{'login': 'austenmadden', 'id': 7366727, 'node_id': 'MDQ6VXNlcjczNjY3Mjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7366727?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/austenmadden', 'html_url': 'https://github.com/austenmadden', 'followers_url': 'https://api.github.com/users/austenmadden/followers', 'following_url': 'https://api.github.com/users/austenmadden/following{/other_user}', 'gists_url': 'https://api.github.com/users/austenmadden/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/austenmadden/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/austenmadden/subscriptions', 'organizations_url': 'https://api.github.com/users/austenmadden/orgs', 'repos_url': 'https://api.github.com/users/austenmadden/repos', 'events_url': 'https://api.github.com/users/austenmadden/events{/privacy}', 'received_events_url': 'https://api.github.com/users/austenmadden/received_events', 'type': 'User', 'site_admin': False}",2022-10-14T05:25:55Z,2022-10-14T05:25:55Z,CONTRIBUTOR,@skipkayhil could a compromise be to treat `:create` and `:update` as special cases where we avoid passing the context from the parent?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1278501057/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46238
https://api.github.com/repos/rails/rails/issues/comments/1278802765,https://github.com/rails/rails/pull/46238#issuecomment-1278802765,https://api.github.com/repos/rails/rails/issues/46238,1278802765,IC_kwDNIULOTDj7TQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-10-14T10:17:42Z,2022-10-14T11:18:08Z,MEMBER,"We do treat `:create` and `:update` as a special case in autosave as well:
https://github.com/rails/rails/blob/69cd9c2e8f5e24a9a863f8875e7a247cf013ad2a/activerecord/lib/active_record/autosave_association.rb#L513-L515
Maybe that method belongs on https://github.com/rails/rails/blob/main/activerecord/lib/active_record/validations.rb

That also defines `default_validation_context`, so we might eventually do something like:
```ruby
 def custom_validation_context? 
   !default_validation_context? 
 end 
 ```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1278802765/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46238
https://api.github.com/repos/rails/rails/issues/comments/1279183742,https://github.com/rails/rails/pull/46238#issuecomment-1279183742,https://api.github.com/repos/rails/rails/issues/46238,1279183742,IC_kwDNIULOTD7Lfg,"{'login': 'austenmadden', 'id': 7366727, 'node_id': 'MDQ6VXNlcjczNjY3Mjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7366727?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/austenmadden', 'html_url': 'https://github.com/austenmadden', 'followers_url': 'https://api.github.com/users/austenmadden/followers', 'following_url': 'https://api.github.com/users/austenmadden/following{/other_user}', 'gists_url': 'https://api.github.com/users/austenmadden/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/austenmadden/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/austenmadden/subscriptions', 'organizations_url': 'https://api.github.com/users/austenmadden/orgs', 'repos_url': 'https://api.github.com/users/austenmadden/repos', 'events_url': 'https://api.github.com/users/austenmadden/events{/privacy}', 'received_events_url': 'https://api.github.com/users/austenmadden/received_events', 'type': 'User', 'site_admin': False}",2022-10-14T15:55:16Z,2022-10-14T15:55:34Z,CONTRIBUTOR,@skipkayhil @p8 If we update this PR to treat the `create` and `update` as a special case (and potentially move `custom_validation_context?` to `validations.rb`) do we feel like that's a big enough improvement on the status quo and sidesteps the caveats to this implementation enough to move forward?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1279183742/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46238
https://api.github.com/repos/rails/rails/issues/comments/1279369156,https://github.com/rails/rails/pull/46238#issuecomment-1279369156,https://api.github.com/repos/rails/rails/issues/46238,1279369156,IC_kwDNIULOTEGfxA,"{'login': 'austenmadden', 'id': 7366727, 'node_id': 'MDQ6VXNlcjczNjY3Mjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7366727?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/austenmadden', 'html_url': 'https://github.com/austenmadden', 'followers_url': 'https://api.github.com/users/austenmadden/followers', 'following_url': 'https://api.github.com/users/austenmadden/following{/other_user}', 'gists_url': 'https://api.github.com/users/austenmadden/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/austenmadden/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/austenmadden/subscriptions', 'organizations_url': 'https://api.github.com/users/austenmadden/orgs', 'repos_url': 'https://api.github.com/users/austenmadden/repos', 'events_url': 'https://api.github.com/users/austenmadden/events{/privacy}', 'received_events_url': 'https://api.github.com/users/austenmadden/received_events', 'type': 'User', 'site_admin': False}",2022-10-14T19:16:05Z,2022-10-14T19:16:05Z,CONTRIBUTOR,Let me know what you think of the latest commit.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1279369156/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46238
https://api.github.com/repos/rails/rails/issues/comments/1430772783,https://github.com/rails/rails/pull/46238#issuecomment-1430772783,https://api.github.com/repos/rails/rails/issues/46238,1430772783,IC_kwDNIULOVUfcLw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2023-02-15T05:20:19Z,2023-02-15T05:20:19Z,MEMBER,@zzak I think this is related to #24135,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1430772783/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46238
https://api.github.com/repos/rails/rails/issues/comments/1498801434,https://github.com/rails/rails/pull/46238#issuecomment-1498801434,https://api.github.com/repos/rails/rails/issues/46238,1498801434,IC_kwDNIULOWVXlGg,"{'login': 'gstokkink', 'id': 14915325, 'node_id': 'MDQ6VXNlcjE0OTE1MzI1', 'avatar_url': 'https://avatars.githubusercontent.com/u/14915325?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gstokkink', 'html_url': 'https://github.com/gstokkink', 'followers_url': 'https://api.github.com/users/gstokkink/followers', 'following_url': 'https://api.github.com/users/gstokkink/following{/other_user}', 'gists_url': 'https://api.github.com/users/gstokkink/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gstokkink/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gstokkink/subscriptions', 'organizations_url': 'https://api.github.com/users/gstokkink/orgs', 'repos_url': 'https://api.github.com/users/gstokkink/repos', 'events_url': 'https://api.github.com/users/gstokkink/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gstokkink/received_events', 'type': 'User', 'site_admin': False}",2023-04-06T10:01:10Z,2023-04-06T10:01:10Z,NONE,@ghiculescu can this move forward? Fixes #24135 as well I think.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1498801434/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46238
https://api.github.com/repos/rails/rails/issues/comments/1499306560,https://github.com/rails/rails/pull/46238#issuecomment-1499306560,https://api.github.com/repos/rails/rails/issues/46238,1499306560,IC_kwDNIULOWV2aQA,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-04-06T16:09:54Z,2023-04-06T16:09:54Z,MEMBER,"It'll need review from someone in the core team, sorry. They'll get to it!

In the meantime could you fix the merge conflicts?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1499306560/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46238
https://api.github.com/repos/rails/rails/issues/comments/1500460481,https://github.com/rails/rails/pull/46238#issuecomment-1500460481,https://api.github.com/repos/rails/rails/issues/46238,1500460481,IC_kwDNIULOWW81wQ,"{'login': 'austenmadden', 'id': 7366727, 'node_id': 'MDQ6VXNlcjczNjY3Mjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7366727?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/austenmadden', 'html_url': 'https://github.com/austenmadden', 'followers_url': 'https://api.github.com/users/austenmadden/followers', 'following_url': 'https://api.github.com/users/austenmadden/following{/other_user}', 'gists_url': 'https://api.github.com/users/austenmadden/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/austenmadden/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/austenmadden/subscriptions', 'organizations_url': 'https://api.github.com/users/austenmadden/orgs', 'repos_url': 'https://api.github.com/users/austenmadden/repos', 'events_url': 'https://api.github.com/users/austenmadden/events{/privacy}', 'received_events_url': 'https://api.github.com/users/austenmadden/received_events', 'type': 'User', 'site_admin': False}",2023-04-07T16:55:33Z,2023-04-07T16:55:33Z,CONTRIBUTOR,I'd be happy to!,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1500460481/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 1, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46238
https://api.github.com/repos/rails/rails/issues/comments/1301838501,https://github.com/rails/rails/pull/46210#issuecomment-1301838501,https://api.github.com/repos/rails/rails/issues/46210,1301838501,IC_kwDNIULOTZh6pQ,"{'login': 'ritikesh', 'id': 1778360, 'node_id': 'MDQ6VXNlcjE3NzgzNjA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1778360?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ritikesh', 'html_url': 'https://github.com/ritikesh', 'followers_url': 'https://api.github.com/users/ritikesh/followers', 'following_url': 'https://api.github.com/users/ritikesh/following{/other_user}', 'gists_url': 'https://api.github.com/users/ritikesh/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ritikesh/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ritikesh/subscriptions', 'organizations_url': 'https://api.github.com/users/ritikesh/orgs', 'repos_url': 'https://api.github.com/users/ritikesh/repos', 'events_url': 'https://api.github.com/users/ritikesh/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ritikesh/received_events', 'type': 'User', 'site_admin': False}",2022-11-03T09:31:16Z,2022-11-03T09:31:16Z,CONTRIBUTOR,"> If someone has variant tracking enabled then turns it off, should deleting a blob also delete the preexisting variants?

@jeremy wouldn't it be odd to make extra 3rd party requests just to support the small subset of users who would be opting out after having opted-in? Also, ideally, they could(should) have cleaned up the variant files immediately after.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1301838501/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46210
https://api.github.com/repos/rails/rails/issues/comments/1304962734,https://github.com/rails/rails/pull/46210#issuecomment-1304962734,https://api.github.com/repos/rails/rails/issues/46210,1304962734,IC_kwDNIULOTcgmrg,"{'login': 'georgeclaghorn', 'id': 94129, 'node_id': 'MDQ6VXNlcjk0MTI5', 'avatar_url': 'https://avatars.githubusercontent.com/u/94129?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/georgeclaghorn', 'html_url': 'https://github.com/georgeclaghorn', 'followers_url': 'https://api.github.com/users/georgeclaghorn/followers', 'following_url': 'https://api.github.com/users/georgeclaghorn/following{/other_user}', 'gists_url': 'https://api.github.com/users/georgeclaghorn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/georgeclaghorn/subscriptions', 'organizations_url': 'https://api.github.com/users/georgeclaghorn/orgs', 'repos_url': 'https://api.github.com/users/georgeclaghorn/repos', 'events_url': 'https://api.github.com/users/georgeclaghorn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/georgeclaghorn/received_events', 'type': 'User', 'site_admin': False}",2022-11-07T01:08:03Z,2022-11-07T01:08:03Z,CONTRIBUTOR,"> ActiveStorage makes tracking variants optional, and when not opted, the second delete call to the file service is redundant and can be avoided.

It’s the other way around. The `track_variants` config enables the database tracking that would make `delete_prefixed` redundant. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1304962734/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46210
https://api.github.com/repos/rails/rails/issues/comments/1305394799,https://github.com/rails/rails/pull/46210#issuecomment-1305394799,https://api.github.com/repos/rails/rails/issues/46210,1305394799,IC_kwDNIULOTc6-bw,"{'login': 'ritikesh', 'id': 1778360, 'node_id': 'MDQ6VXNlcjE3NzgzNjA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1778360?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ritikesh', 'html_url': 'https://github.com/ritikesh', 'followers_url': 'https://api.github.com/users/ritikesh/followers', 'following_url': 'https://api.github.com/users/ritikesh/following{/other_user}', 'gists_url': 'https://api.github.com/users/ritikesh/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ritikesh/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ritikesh/subscriptions', 'organizations_url': 'https://api.github.com/users/ritikesh/orgs', 'repos_url': 'https://api.github.com/users/ritikesh/repos', 'events_url': 'https://api.github.com/users/ritikesh/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ritikesh/received_events', 'type': 'User', 'site_admin': False}",2022-11-07T10:22:44Z,2022-11-07T10:22:44Z,CONTRIBUTOR,"> > ActiveStorage makes tracking variants optional, and when not opted, the second delete call to the file service is redundant and can be avoided.
> 
> It’s the other way around. The `track_variants` config enables the database tracking that would make `delete_prefixed` redundant.

@georgeclaghorn - if I understood correctly, you mean, that when variant records are tracked in the database and when the actual blob is destroyed, the resulting DB destroys for variant records should automatically make service delete calls? - but based on my initial analysis, I didn't find variant record destroys to be triggering a service delete call.

Also, as a side affect, does that mean variant images are created in the service by default irrespective of whether I enable `ActiveStorage.track_variants` or not?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1305394799/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46210
https://api.github.com/repos/rails/rails/issues/comments/1493035702,https://github.com/rails/rails/pull/46210#issuecomment-1493035702,https://api.github.com/repos/rails/rails/issues/46210,1493035702,IC_kwDNIULOWP3qtg,"{'login': 'ritikesh', 'id': 1778360, 'node_id': 'MDQ6VXNlcjE3NzgzNjA=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1778360?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ritikesh', 'html_url': 'https://github.com/ritikesh', 'followers_url': 'https://api.github.com/users/ritikesh/followers', 'following_url': 'https://api.github.com/users/ritikesh/following{/other_user}', 'gists_url': 'https://api.github.com/users/ritikesh/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ritikesh/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ritikesh/subscriptions', 'organizations_url': 'https://api.github.com/users/ritikesh/orgs', 'repos_url': 'https://api.github.com/users/ritikesh/repos', 'events_url': 'https://api.github.com/users/ritikesh/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ritikesh/received_events', 'type': 'User', 'site_admin': False}",2023-04-01T16:14:00Z,2023-04-01T16:14:00Z,CONTRIBUTOR,"If the comments sound reasonable enough, can this be merged?
cc @jeremy @tenderlove ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1493035702/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46210
https://api.github.com/repos/rails/rails/issues/comments/1283135279,https://github.com/rails/rails/pull/46205#issuecomment-1283135279,https://api.github.com/repos/rails/rails/issues/46205,1283135279,IC_kwDNIULOTHsXLw,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-10-18T23:32:04Z,2022-10-18T23:32:04Z,MEMBER,"Sorry, I'm confused.

I think `define_model_callbacks` is the right thing to use here.

... but you seemed to be expecting it to automatically result in the callback getting invoked somehow, and therefore needed the method name to match. As far as I'm aware, neither of those things are true: we can choose whatever callback name seems the most appropriate, and then [regardless of name] we must arrange to run the callbacks at the appropriate point.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1283135279/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46205
https://api.github.com/repos/rails/rails/issues/comments/1293816107,https://github.com/rails/rails/pull/46205#issuecomment-1293816107,https://api.github.com/repos/rails/rails/issues/46205,1293816107,IC_kwDNIULOTR4RKw,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-10-27T16:59:34Z,2022-10-27T16:59:34Z,MEMBER,cc @casperisfine ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1293816107/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46205
https://api.github.com/repos/rails/rails/issues/comments/1266939332,https://github.com/rails/rails/pull/46191#issuecomment-1266939332,https://api.github.com/repos/rails/rails/issues/46191,1266939332,IC_kwDNIULOS4P1xA,"{'login': 'koic', 'id': 13203, 'node_id': 'MDQ6VXNlcjEzMjAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/13203?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/koic', 'html_url': 'https://github.com/koic', 'followers_url': 'https://api.github.com/users/koic/followers', 'following_url': 'https://api.github.com/users/koic/following{/other_user}', 'gists_url': 'https://api.github.com/users/koic/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/koic/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/koic/subscriptions', 'organizations_url': 'https://api.github.com/users/koic/orgs', 'repos_url': 'https://api.github.com/users/koic/repos', 'events_url': 'https://api.github.com/users/koic/events{/privacy}', 'received_events_url': 'https://api.github.com/users/koic/received_events', 'type': 'User', 'site_admin': False}",2022-10-04T12:45:04Z,2022-10-04T12:45:04Z,CONTRIBUTOR,"That's just my two cents. The cop name in the PR title (and the commit title) is `Layout/CommentIndentation` cop, but it seems that `Layout/DefEndAlignment` cop is actually enabled.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1266939332/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46191
https://api.github.com/repos/rails/rails/issues/comments/1499835986,https://github.com/rails/rails/pull/46116#issuecomment-1499835986,https://api.github.com/repos/rails/rails/issues/46116,1499835986,IC_kwDNIULOWWWuUg,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-04-07T01:50:32Z,2023-04-07T01:50:32Z,MEMBER,"I think there is value in this being the simpler approach, as long as it is well supported.

That said, I'm curious how to test this change and what impact it has on performance.

Any additional information you can provide may help reviewing this PR easier, but I don't want to convince you to do extra work. Thoughts, @skipkayhil?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1499835986/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46116
https://api.github.com/repos/rails/rails/issues/comments/1259942024,https://github.com/rails/rails/pull/46098#issuecomment-1259942024,https://api.github.com/repos/rails/rails/issues/46098,1259942024,IC_kwDNIULOSxkwiA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-09-27T19:15:35Z,2022-09-27T19:15:35Z,MEMBER,"Hey, it seems the build failures are related.
Could you check?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1259942024/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46098
https://api.github.com/repos/rails/rails/issues/comments/1259947490,https://github.com/rails/rails/pull/46098#issuecomment-1259947490,https://api.github.com/repos/rails/rails/issues/46098,1259947490,IC_kwDNIULOSxlF4g,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-09-27T19:21:13Z,2022-09-27T19:21:13Z,MEMBER,"It seems related to js-bundling rails:
https://github.com/rails/jsbundling-rails/blob/main/lib/tasks/jsbundling/build.rake#L14-L18","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1259947490/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46098
https://api.github.com/repos/rails/rails/issues/comments/1260003242,https://github.com/rails/rails/pull/46098#issuecomment-1260003242,https://api.github.com/repos/rails/rails/issues/46098,1260003242,IC_kwDNIULOSxofqg,"{'login': 'simmerz', 'id': 24327, 'node_id': 'MDQ6VXNlcjI0MzI3', 'avatar_url': 'https://avatars.githubusercontent.com/u/24327?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simmerz', 'html_url': 'https://github.com/simmerz', 'followers_url': 'https://api.github.com/users/simmerz/followers', 'following_url': 'https://api.github.com/users/simmerz/following{/other_user}', 'gists_url': 'https://api.github.com/users/simmerz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simmerz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simmerz/subscriptions', 'organizations_url': 'https://api.github.com/users/simmerz/orgs', 'repos_url': 'https://api.github.com/users/simmerz/repos', 'events_url': 'https://api.github.com/users/simmerz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simmerz/received_events', 'type': 'User', 'site_admin': False}",2022-09-27T20:19:52Z,2022-09-27T20:19:52Z,NONE,@p8 so have I put the task in the wrong place to be loaded and therefore exist when jsbundling-rails tasks are loaded?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1260003242/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46098
https://api.github.com/repos/rails/rails/issues/comments/1260016314,https://github.com/rails/rails/pull/46098#issuecomment-1260016314,https://api.github.com/repos/rails/rails/issues/46098,1260016314,IC_kwDNIULOSxpSug,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-09-27T20:33:10Z,2022-09-27T20:34:31Z,MEMBER,"@simmerz I'm not sure.
Maybe it should be added to a Railtie instead, similar to the ActiveRecord Railtie:
https://github.com/rails/rails/blob/cebd9ab11bb899021908f0a416daa7fb8cf5231b/activerecord/lib/active_record/railtie.rb#L43-L52

...or:
https://github.com/rails/rails/blob/cb5765a12751ca03866a89cf19fefcbc2d93a8ea/actionview/lib/action_view/railtie.rb#L110-L114","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1260016314/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46098
https://api.github.com/repos/rails/rails/issues/comments/1260105250,https://github.com/rails/rails/pull/46098#issuecomment-1260105250,https://api.github.com/repos/rails/rails/issues/46098,1260105250,IC_kwDNIULOSxuuIg,"{'login': 'simmerz', 'id': 24327, 'node_id': 'MDQ6VXNlcjI0MzI3', 'avatar_url': 'https://avatars.githubusercontent.com/u/24327?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simmerz', 'html_url': 'https://github.com/simmerz', 'followers_url': 'https://api.github.com/users/simmerz/followers', 'following_url': 'https://api.github.com/users/simmerz/following{/other_user}', 'gists_url': 'https://api.github.com/users/simmerz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simmerz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simmerz/subscriptions', 'organizations_url': 'https://api.github.com/users/simmerz/orgs', 'repos_url': 'https://api.github.com/users/simmerz/repos', 'events_url': 'https://api.github.com/users/simmerz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simmerz/received_events', 'type': 'User', 'site_admin': False}",2022-09-27T22:10:00Z,2022-09-27T22:10:00Z,NONE,"Looking at this, which railtie makes the most sense to put this in?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1260105250/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46098
https://api.github.com/repos/rails/rails/issues/comments/1260158656,https://github.com/rails/rails/pull/46098#issuecomment-1260158656,https://api.github.com/repos/rails/rails/issues/46098,1260158656,IC_kwDNIULOSxx-wA,"{'login': 'simmerz', 'id': 24327, 'node_id': 'MDQ6VXNlcjI0MzI3', 'avatar_url': 'https://avatars.githubusercontent.com/u/24327?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simmerz', 'html_url': 'https://github.com/simmerz', 'followers_url': 'https://api.github.com/users/simmerz/followers', 'following_url': 'https://api.github.com/users/simmerz/following{/other_user}', 'gists_url': 'https://api.github.com/users/simmerz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simmerz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simmerz/subscriptions', 'organizations_url': 'https://api.github.com/users/simmerz/orgs', 'repos_url': 'https://api.github.com/users/simmerz/repos', 'events_url': 'https://api.github.com/users/simmerz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simmerz/received_events', 'type': 'User', 'site_admin': False}",2022-09-27T22:59:44Z,2022-09-27T22:59:44Z,NONE,"Having moved it into actionpack, the single failure appears to be a network error of some kind. I'm not sure how to retry it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1260158656/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46098
https://api.github.com/repos/rails/rails/issues/comments/1261212235,https://github.com/rails/rails/pull/46098#issuecomment-1261212235,https://api.github.com/repos/rails/rails/issues/46098,1261212235,IC_kwDNIULOSyySSw,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-09-28T17:10:37Z,2022-09-28T17:10:37Z,MEMBER,"@simmerz I think it should be added to the railties Railtie, as that is the only one that certainly gets loaded.
If someone has an app without Active Record or Action Pack it should still be loaded.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1261212235/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46098
https://api.github.com/repos/rails/rails/issues/comments/1267105572,https://github.com/rails/rails/pull/46098#issuecomment-1267105572,https://api.github.com/repos/rails/rails/issues/46098,1267105572,IC_kwDNIULOS4Z_JA,"{'login': 'simmerz', 'id': 24327, 'node_id': 'MDQ6VXNlcjI0MzI3', 'avatar_url': 'https://avatars.githubusercontent.com/u/24327?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simmerz', 'html_url': 'https://github.com/simmerz', 'followers_url': 'https://api.github.com/users/simmerz/followers', 'following_url': 'https://api.github.com/users/simmerz/following{/other_user}', 'gists_url': 'https://api.github.com/users/simmerz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simmerz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simmerz/subscriptions', 'organizations_url': 'https://api.github.com/users/simmerz/orgs', 'repos_url': 'https://api.github.com/users/simmerz/repos', 'events_url': 'https://api.github.com/users/simmerz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simmerz/received_events', 'type': 'User', 'site_admin': False}",2022-10-04T14:35:38Z,2022-10-04T14:35:38Z,NONE,@p8 this should be in the right place now :),"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1267105572/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46098
https://api.github.com/repos/rails/rails/issues/comments/1327434633,https://github.com/rails/rails/pull/46098#issuecomment-1327434633,https://api.github.com/repos/rails/rails/issues/46098,1327434633,IC_kwDNIULOTx8LiQ,"{'login': 'simmerz', 'id': 24327, 'node_id': 'MDQ6VXNlcjI0MzI3', 'avatar_url': 'https://avatars.githubusercontent.com/u/24327?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simmerz', 'html_url': 'https://github.com/simmerz', 'followers_url': 'https://api.github.com/users/simmerz/followers', 'following_url': 'https://api.github.com/users/simmerz/following{/other_user}', 'gists_url': 'https://api.github.com/users/simmerz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simmerz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simmerz/subscriptions', 'organizations_url': 'https://api.github.com/users/simmerz/orgs', 'repos_url': 'https://api.github.com/users/simmerz/repos', 'events_url': 'https://api.github.com/users/simmerz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simmerz/received_events', 'type': 'User', 'site_admin': False}",2022-11-25T12:49:16Z,2022-11-25T12:49:16Z,NONE,@p8 any chance of progressing this?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1327434633/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46098
https://api.github.com/repos/rails/rails/issues/comments/1260192175,https://github.com/rails/rails/issues/46084#issuecomment-1260192175,https://api.github.com/repos/rails/rails/issues/46084,1260192175,IC_kwDNIULOSx0Brw,"{'login': 'tiegz', 'id': 5054, 'node_id': 'MDQ6VXNlcjUwNTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5054?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tiegz', 'html_url': 'https://github.com/tiegz', 'followers_url': 'https://api.github.com/users/tiegz/followers', 'following_url': 'https://api.github.com/users/tiegz/following{/other_user}', 'gists_url': 'https://api.github.com/users/tiegz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tiegz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tiegz/subscriptions', 'organizations_url': 'https://api.github.com/users/tiegz/orgs', 'repos_url': 'https://api.github.com/users/tiegz/repos', 'events_url': 'https://api.github.com/users/tiegz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tiegz/received_events', 'type': 'User', 'site_admin': False}",2022-09-27T23:54:58Z,2022-09-27T23:54:58Z,CONTRIBUTOR,"> I'm trying to create a tagged logger (final_logger) from another tagged logger (tagged_logger2) that is receiving broadcasts from yet another tagged logger (tagged_logger1).

@thomasgt correct me if I'm wrong, but in this example aren't you doing the opposite and sending broadcasts from tagged_logger2 to tagged_logger1?

`tagged_logger2.extend(ActiveSupport::Logger.broadcast(tagged_logger1))`

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1260192175/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46084
https://api.github.com/repos/rails/rails/issues/comments/1278276357,https://github.com/rails/rails/issues/46084#issuecomment-1278276357,https://api.github.com/repos/rails/rails/issues/46084,1278276357,IC_kwDNIULOTDDzBQ,"{'login': 'khall', 'id': 82598, 'node_id': 'MDQ6VXNlcjgyNTk4', 'avatar_url': 'https://avatars.githubusercontent.com/u/82598?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/khall', 'html_url': 'https://github.com/khall', 'followers_url': 'https://api.github.com/users/khall/followers', 'following_url': 'https://api.github.com/users/khall/following{/other_user}', 'gists_url': 'https://api.github.com/users/khall/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/khall/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/khall/subscriptions', 'organizations_url': 'https://api.github.com/users/khall/orgs', 'repos_url': 'https://api.github.com/users/khall/repos', 'events_url': 'https://api.github.com/users/khall/events{/privacy}', 'received_events_url': 'https://api.github.com/users/khall/received_events', 'type': 'User', 'site_admin': False}",2022-10-13T23:20:18Z,2022-10-13T23:20:18Z,CONTRIBUTOR,"You are creating two tagged loggers, `tagged_logger1` and `tagged_logger2`. When you call `broadcast` and pass in `tagged_logger1` the `formatter=` method is overwritten via

```
define_method(:formatter=) do |formatter|
  logger.formatter = formatter
  super(formatter)
end
```

Now when you call `final_logger = ActiveSupport::TaggedLogging.new(tagged_logger2).tagged(""test"")` you are creating a new tagged logger using `tagged_logger2` as the logger to clone from. In the `self.new` method of `TaggedLogging` the formatter is copied from `tagged_logger2`. But since `formatter=` has been overwritten, it copies the same formatter to `tagged_logger1` as well. Then you call `.tagged(""test"")`, but the tags exist on the formatter, so both `tagged_logger1` and `tagged_logger2` are changed.

Is this intentional? I'm not sure. There is a test ensuring `formatter=` assigns formats to all loggers being broadcast to (see broadcast_logger_test's `#formatter= assigns to all the loggers`), so I suspect it is intentional. Maybe somebody more familiar can weigh in.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1278276357/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46084
https://api.github.com/repos/rails/rails/issues/comments/1379640881,https://github.com/rails/rails/issues/46084#issuecomment-1379640881,https://api.github.com/repos/rails/rails/issues/46084,1379640881,IC_kwDNIULOUjumMQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-01-12T00:08:26Z,2023-01-12T00:08:26Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1379640881/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46084
https://api.github.com/repos/rails/rails/issues/comments/1478982328,https://github.com/rails/rails/issues/46084#issuecomment-1478982328,https://api.github.com/repos/rails/rails/issues/46084,1478982328,IC_kwDNIULOWCd6uA,"{'login': 'oggy', 'id': 11112, 'node_id': 'MDQ6VXNlcjExMTEy', 'avatar_url': 'https://avatars.githubusercontent.com/u/11112?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/oggy', 'html_url': 'https://github.com/oggy', 'followers_url': 'https://api.github.com/users/oggy/followers', 'following_url': 'https://api.github.com/users/oggy/following{/other_user}', 'gists_url': 'https://api.github.com/users/oggy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/oggy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/oggy/subscriptions', 'organizations_url': 'https://api.github.com/users/oggy/orgs', 'repos_url': 'https://api.github.com/users/oggy/repos', 'events_url': 'https://api.github.com/users/oggy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/oggy/received_events', 'type': 'User', 'site_admin': False}",2023-03-22T06:25:20Z,2023-03-22T06:25:20Z,CONTRIBUTOR,"This is still a bug. I think it happens because of the way broadcasting extends the logger with a module that closes over the secondary logger, and then tagging later clones the logger, which can't clone the local variable trapped in the closure. So adding tags to the formatter ends up modifying the base logger's formatter.

The idea in #44695 about ""using composition"" sounded right, but it's not without its own complexities. It means we need to carefully delegate a lot of methods in different ways. Methods that just get sent to the child loggers vs methods that take a block vs methods that return something (e.g., #formatter). It's probably doable, but seems a bit messy.

I'm thinking a more fundamental problem is that broadcasting is implemented at the wrong level. It shouldn't wrap the logger, just the log device inside the logger. This isn't currently exposed by ruby's Logger, but maybe that can change (ruby/logger#88). That thing only has 3 methods: write, close, reopen, which could be much more easily reimplemented to delegate to the wrapped loggers' logdevs.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1478982328/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46084
https://api.github.com/repos/rails/rails/issues/comments/1598235131,https://github.com/rails/rails/issues/46084#issuecomment-1598235131,https://api.github.com/repos/rails/rails/issues/46084,1598235131,IC_kwDNIULOX0Mh-w,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-06-20T07:12:01Z,2023-06-20T07:12:01Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1598235131/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46084
https://api.github.com/repos/rails/rails/issues/comments/1614649770,https://github.com/rails/rails/issues/46084#issuecomment-1614649770,https://api.github.com/repos/rails/rails/issues/46084,1614649770,IC_kwDNIULOYD2Zqg,"{'login': 'Edouard-chin', 'id': 8122246, 'node_id': 'MDQ6VXNlcjgxMjIyNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8122246?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Edouard-chin', 'html_url': 'https://github.com/Edouard-chin', 'followers_url': 'https://api.github.com/users/Edouard-chin/followers', 'following_url': 'https://api.github.com/users/Edouard-chin/following{/other_user}', 'gists_url': 'https://api.github.com/users/Edouard-chin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Edouard-chin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Edouard-chin/subscriptions', 'organizations_url': 'https://api.github.com/users/Edouard-chin/orgs', 'repos_url': 'https://api.github.com/users/Edouard-chin/repos', 'events_url': 'https://api.github.com/users/Edouard-chin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Edouard-chin/received_events', 'type': 'User', 'site_admin': False}",2023-06-30T13:25:21Z,2023-06-30T13:30:48Z,MEMBER,"I'm working on refactoring TaggedLogging and implement a public API for broadcasting logs in #48615 and as I was adding a regression test to make sure this use case is taken in consideration.
But after second thoughts, I felt like what you are describing is what I would expect, but I could be misunderstanding.

To summarise your use case in your test, this is a small schema.

```mermaid
flowchart TD;
    subgraph B2[""Broadcasting loggers""]
        direction LR
        tagged_logger2[""tagger_logger_2 (Has no tags applied)""]-- clone ---
        final_logger[""final_logger (Has the ['test'] tag applied)""]
    end
tagged_logger2-->tagged_logger1
final_logger-->tagged_logger1
```

When you call `final_logger = ActiveSupport::TaggedLogging.new(tagged_logger2).tagged(""test"")`, you are creating a clone of tagged_logger2 which itself broadcasts to tagged_logger1.

This is what I would expect:

1) Any logs from tagged_logger2 and final_logger (since it's a clone) would show up in the sink from tagged_logger1. Your test case covers this, so I think we aligned here.
2) Any tags applied to **tagged_logger2** would show up in **tagged_logger1**.
3) Any tags applied to **final_logger** would show up in **tagged_logger1**.
4) Any tags applied to **tagged_logger2** would *not* show up in **final logger** (and vice versa).

-----

Your test case doesn't cover 2), but would that be what would expect in your logs?
If yes, why do you think final_logger tags should not show up in tagger_logger1's sink?
If no, does that mean you expects any tags applied to a broadcasting loger to never propagate to the sink it broadcasts to?

Thanks ❤️ !","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1614649770/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46084
https://api.github.com/repos/rails/rails/issues/comments/1249797843,https://github.com/rails/rails/pull/46047#issuecomment-1249797843,https://api.github.com/repos/rails/rails/issues/46047,1249797843,IC_kwDNIULOSn5m0w,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2022-09-16T20:48:15Z,2022-09-16T20:48:15Z,MEMBER,"Does this work in production? Because `after_initialize` runs after eager load is run, and eager loading would load all those frameworks, so we would see the warning. Would not we?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1249797843/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1250110544,https://github.com/rails/rails/pull/46047#issuecomment-1250110544,https://api.github.com/repos/rails/rails/issues/46047,1250110544,IC_kwDNIULOSoMsUA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-09-17T17:29:51Z,2022-09-17T17:29:51Z,MEMBER,Thanks for the review @rafaelfranca. I'll try to fix the issues you mentioned.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1250110544/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1259265403,https://github.com/rails/rails/pull/46047#issuecomment-1259265403,https://api.github.com/repos/rails/rails/issues/46047,1259265403,IC_kwDNIULOSw7dew,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-09-27T09:54:21Z,2023-01-12T13:14:15Z,MEMBER,"> Does this work in production? Because `after_initialize` runs after eager load is run, and eager loading would load all those frameworks, so we would see the warning. Would not we?

I've add `ActiveSupport.silence_prematurely_loading_warnings` to ignore all load hook order warnings. 
This gets called in a `before_configuration` hook if `eager_load` is enabled.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1259265403/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1259343808,https://github.com/rails/rails/pull/46047#issuecomment-1259343808,https://api.github.com/repos/rails/rails/issues/46047,1259343808,IC_kwDNIULOSxAPwA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-09-27T11:08:43Z,2022-09-27T11:55:42Z,MEMBER,"~~Ok, with eager_load the warning is still shown. I'll need to fix that.~~
Edit: a nevermind. It's working as expected.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1259343808/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380349329,https://github.com/rails/rails/pull/46047#issuecomment-1380349329,https://api.github.com/repos/rails/rails/issues/46047,1380349329,IC_kwDNIULOUkZ1kQ,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T13:22:56Z,2023-01-12T13:22:56Z,CONTRIBUTOR,"To clarify, I don't think that's ideal, I'd prefer if we addressed the root cause more rather than to warn that something is wrong, but I can't think of anything better yet and at least it should help people fix their app.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380349329/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380579509,https://github.com/rails/rails/pull/46047#issuecomment-1380579509,https://api.github.com/repos/rails/rails/issues/46047,1380579509,IC_kwDNIULOUkn4tQ,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T15:38:46Z,2023-01-12T15:38:46Z,MEMBER,"This feature seems odd to me.

If users need Active Record before the application has fully booted, how are they supposed to run the code and get no warnings?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380579509/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380601207,https://github.com/rails/rails/pull/46047#issuecomment-1380601207,https://api.github.com/repos/rails/rails/issues/46047,1380601207,IC_kwDNIULOUkpNdw,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T15:52:26Z,2023-01-12T15:52:42Z,MEMBER,"For example, let's consider this widely used pattern:

```ruby
config.to_prepare do
  # Setup an AR model on boot and reload here.
end
```

Which would be the alternative?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380601207/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380619177,https://github.com/rails/rails/pull/46047#issuecomment-1380619177,https://api.github.com/repos/rails/rails/issues/46047,1380619177,IC_kwDNIULOUkqTqQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T16:03:31Z,2023-01-12T16:05:12Z,MEMBER,"@fxn I think the following works for me (but I don't have much experience in using `to_prepare`):
```ruby
ActiveSupport::Reloader.to_prepare do
   ActiveSupport.on_load(:active_record) do
      # Setup an AR model on boot and reload here.
   end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380619177/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380623254,https://github.com/rails/rails/pull/46047#issuecomment-1380623254,https://api.github.com/repos/rails/rails/issues/46047,1380623254,IC_kwDNIULOUkqjlg,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T16:05:02Z,2023-01-12T16:05:02Z,MEMBER,"@p8 But, if you execute `bin/rails r 1`, you'll see the block gets executed.

My point is, if I need to do something during boot, I need to. I cannot not do it because not doing it would be faster.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380623254/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380630636,https://github.com/rails/rails/pull/46047#issuecomment-1380630636,https://api.github.com/repos/rails/rails/issues/46047,1380630636,IC_kwDNIULOUkrAbA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T16:07:51Z,2023-01-12T16:07:51Z,MEMBER,"@fxn We could allow the silencing to accept a block:
```ruby
ActiveSupport::Reloader.to_prepare do
   ActiveSupport.silence_prematurely_loading_warnings do
      # Setup an AR model on boot and reload here.
   end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380630636/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380638486,https://github.com/rails/rails/pull/46047#issuecomment-1380638486,https://api.github.com/repos/rails/rails/issues/46047,1380638486,IC_kwDNIULOUkrfFg,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T16:10:43Z,2023-01-12T16:10:43Z,MEMBER,"Smells like a XY solution to me, guess @casperisfine has a similar feeling from his comment.

Legit use cases cannot get warnings. Is like saying, don't use a database, it will slow you down! OK, but I need a database! Cool, here's a warning silencer!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380638486/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380669761,https://github.com/rails/rails/pull/46047#issuecomment-1380669761,https://api.github.com/repos/rails/rails/issues/46047,1380669761,IC_kwDNIULOUktZQQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T16:22:49Z,2023-01-12T16:22:49Z,MEMBER,"What I'm reading from @casperisfine's comment is that permaturely loading ActiveRecord shouldn't cause a problem.
I agree, but solving that seems like a big undertaking.
There is a [whole section](https://guides.rubyonrails.org/engines.html#load-and-configuration-hooks) in the guides dedicated to explaining why we should use load hooks to avoid premature loading.
I've seen multiple cases (2 listed above) where prematurely loading a framework causes hard to debug errors.
This PR would at least help clarify the problem.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380669761/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380675896,https://github.com/rails/rails/pull/46047#issuecomment-1380675896,https://api.github.com/repos/rails/rails/issues/46047,1380675896,IC_kwDNIULOUktxOA,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T16:25:14Z,2023-01-12T16:27:37Z,MEMBER,"Note that while the `server` command does not load Active Record when the application boots, at least `runner`, `console`, and `test` do. So even if you configure all that, you save nothing in those cases.

I buy the ""contract"" argument, but not so much the performance argument.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380675896/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380676655,https://github.com/rails/rails/pull/46047#issuecomment-1380676655,https://api.github.com/repos/rails/rails/issues/46047,1380676655,IC_kwDNIULOUkt0Lw,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T16:25:31Z,2023-01-12T16:25:31Z,CONTRIBUTOR,"> that permaturely loading ActiveRecord shouldn't cause a problem.

Yes, either that, or that it would be build in such a way that people could hardly make that mistake. But neither seem achievable to me, at least not easily.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380676655/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380684413,https://github.com/rails/rails/pull/46047#issuecomment-1380684413,https://api.github.com/repos/rails/rails/issues/46047,1380684413,IC_kwDNIULOUkuSfQ,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T16:29:08Z,2023-01-12T16:29:08Z,MEMBER,"To me, `on_load` is: Rails controls when things are ready, you need to play by the rules and use this.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380684413/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380712992,https://github.com/rails/rails/pull/46047#issuecomment-1380712992,https://api.github.com/repos/rails/rails/issues/46047,1380712992,IC_kwDNIULOUkwCIA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T16:51:28Z,2023-01-12T16:53:52Z,MEMBER,"There was an similar PR to solve this: #38024
[This comment ](https://github.com/rails/rails/issues/39855#issuecomment-659670294) mentions previous reports of the same problem:
- https://github.com/rails/rails/issues/23589
- https://github.com/rails/rails/issues/27844
- https://github.com/rails/rails/issues/33283
- https://github.com/rails/rails/issues/36322
- https://github.com/rails/rails/issues/37030","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380712992/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380768524,https://github.com/rails/rails/pull/46047#issuecomment-1380768524,https://api.github.com/repos/rails/rails/issues/46047,1380768524,IC_kwDNIULOUkzbDA,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T17:36:20Z,2023-01-12T17:36:46Z,MEMBER,"@p8 Yes! But they are not about performance, they are about load order, right? Some people comment on passing about booting, but that is just a _potential_ consequence of delaying loading (potential only, as I showed in the Rails commands above).

What I believe would make sense is to be able to say: ""Hey, you are trying to load AR before Rails!"" (that is, a missing `on_load`). But that is not quite the same as avoid running during boot, and definitely don't see the warning about boot time. See what I mean?

I don't think the code is ready to be able to say that easily.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380768524/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380783838,https://github.com/rails/rails/pull/46047#issuecomment-1380783838,https://api.github.com/repos/rails/rails/issues/46047,1380783838,IC_kwDNIULOUk0W3g,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T17:51:10Z,2023-01-12T17:51:10Z,MEMBER,"In other words, Rails is the one who decides when frameworks are loaded. And Rails may decide some have to be loaded at boot time (as it does for AR itself in some commands). Whether things are loaded during boot time or not is out of the control of the user regardless of whether they use `on_load`.

What the user has to respect is load order, wait until Rails decides to load.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380783838/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380787266,https://github.com/rails/rails/pull/46047#issuecomment-1380787266,https://api.github.com/repos/rails/rails/issues/46047,1380787266,IC_kwDNIULOUk0kQg,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T17:54:36Z,2023-01-12T17:54:36Z,MEMBER,"And if you think about it, that is aligned with the eager loading case. The same warning works, you don't need special logic, because the point is to wait until frameworks are loaded, sooner or later.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380787266/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380884524,https://github.com/rails/rails/pull/46047#issuecomment-1380884524,https://api.github.com/repos/rails/rails/issues/46047,1380884524,IC_kwDNIULOUk6gLA,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T19:13:12Z,2023-01-12T19:15:50Z,MEMBER,"I'll go even further. Let's imagine all the Rails code in the world uses `on_load` and 100% of users depend on it.

When should Rails load its components? Now, that question is extremely important because nobody will be able to run anything related before.

I'd argue that probably during boot, at some point in time that would belong to the public interface.

In the case of AR there are use cases like aborting an application from booting if the roles table lacks an admin. Say.

So, in order to support those use cases, AR should be available (ergo loaded) during initialization. Thus, defeating the performance goal.

The way I see it, in dev mode Rails has to be lean, but there's a low boundary to that. Being lean means being lazy loading the rest of AR, as it is done with all the autoloads.

And users have to play by the rules, which today are not enforced, but would be good to be able to.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380884524/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380943892,https://github.com/rails/rails/pull/46047#issuecomment-1380943892,https://api.github.com/repos/rails/rails/issues/46047,1380943892,IC_kwDNIULOUk-IFA,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T20:11:22Z,2023-01-12T20:11:22Z,MEMBER,"> And users have to play by the rules, which today are not enforced, but would be good to be able to.

Isn't what this warning is trying to do? If users code, or libraries are trying to load Rails owned frameworks before Rails thinks it should loaded, users will see a warning.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380943892/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1380959451,https://github.com/rails/rails/pull/46047#issuecomment-1380959451,https://api.github.com/repos/rails/rails/issues/46047,1380959451,IC_kwDNIULOUk_E2w,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-01-12T20:27:54Z,2023-01-12T20:29:13Z,MEMBER,"> Isn't what this warning is trying to do? If users code, or libraries are trying to load Rails owned frameworks before Rails thinks it should loaded, users will see a warning.

Not really.

This patch is saying: If Active Record was loaded before `:after_initialize`, issue a warning. This is different. Rails considers AR to be loaded when the AS hook is triggered, which is a condition unrelated to `:after_initialize`. We have to recall that `:after_initialize` runs when the whole application and engines are initialized.

To accomplish what we are saying we should have something like: Now, I (Rails) am going to load framework _F_. If at this point _F_ is already loaded, I am going to warn, and the warning won't mention performance. This logic does not depend on _F_.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1380959451/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1381799025,https://github.com/rails/rails/pull/46047#issuecomment-1381799025,https://api.github.com/repos/rails/rails/issues/46047,1381799025,IC_kwDNIULOUlyUcQ,"{'login': 'fxn', 'id': 3387, 'node_id': 'MDQ6VXNlcjMzODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3387?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fxn', 'html_url': 'https://github.com/fxn', 'followers_url': 'https://api.github.com/users/fxn/followers', 'following_url': 'https://api.github.com/users/fxn/following{/other_user}', 'gists_url': 'https://api.github.com/users/fxn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fxn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fxn/subscriptions', 'organizations_url': 'https://api.github.com/users/fxn/orgs', 'repos_url': 'https://api.github.com/users/fxn/repos', 'events_url': 'https://api.github.com/users/fxn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fxn/received_events', 'type': 'User', 'site_admin': False}",2023-01-13T12:41:31Z,2023-01-13T12:41:31Z,MEMBER,"Let me draft one possible way to do this.

1. In my view, it does not make sense that an application is booted and Rails is not ready to be used. The way I see it, conceptually, when initialization has finished, Rails, the application, and the engines, are ready.
1. Rails has to decide when it is going to load the frameworks. ""Loading the frameworks"" might sound heavy, but we are talking here mostly about evaluating some `base.rb` file with some `require` and `autoload` calls.
1. This has to belong to the public interface. For example, users need to know that if they want to perform a pre-flight check, that is going to happen at pre-flight time, not at some indeterminate time you don't control and could be already hitting controllers on paper. There has to be a contract.
2. I believe that point should happen at least before `to_prepare` runs, since autoloading models during `to_prepare` has been a blessed idiom for a long time.

Now, who has the responsibility to glue the frameworks? In Rails, the orchestrator is `railties`. In that sense, `railties` could install some initializer that has this logic:

```
for every framework F
  if the application is using F
    if F is not loaded
      load F
    else
      warn that F was loaded, bonus if you are able to say by who
    end
  end
end
```

Ideally, things should be done in a way that the warning is not needed because you simply cannot use the frameworks ealier by design. However, at this point in the game, that seems difficult. Also, there is a balance, because AR and others are independent gems, so other gems extending them do not even have a notion of `on_load`.

So, sharing this only for the sake of the discussion, it is not exactly a proposal because I am not sure about its practicality.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1381799025/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1384592902,https://github.com/rails/rails/pull/46047#issuecomment-1384592902,https://api.github.com/repos/rails/rails/issues/46047,1384592902,IC_kwDNIULOUoc2Bg,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2023-01-16T21:43:45Z,2023-01-16T21:43:45Z,MEMBER,Thanks @fxn for the extensive feedback. I hope to dive into this again later this week. ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1384592902/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46047
https://api.github.com/repos/rails/rails/issues/comments/1245332202,https://github.com/rails/rails/issues/46003#issuecomment-1245332202,https://api.github.com/repos/rails/rails/issues/46003,1245332202,IC_kwDNIULOSjpC6g,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2022-09-13T12:18:56Z,2022-09-13T12:18:56Z,CONTRIBUTOR,"> Since the ActionDispatch::RemoteIp middleware is located before ActionDispatch::ShowExceptions, We cannot define the behavior when the exception raises with config.action_dispatch.rescue_responses.

I feel like this is an indication that `ShowException` should likely be moved much higher.

I think we should insert it right after `ActionDispatch::Executor`.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1245332202/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1245340450,https://github.com/rails/rails/issues/46003#issuecomment-1245340450,https://api.github.com/repos/rails/rails/issues/46003,1245340450,IC_kwDNIULOSjpjIg,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2022-09-13T12:26:18Z,2022-09-13T12:26:18Z,CONTRIBUTOR,"Hum, it's always hard to know why an order was picked, but I wonder if here it's not because of the logger:

```ruby
          middleware.use ::ActionDispatch::RequestId, header: config.action_dispatch.request_id_header
          middleware.use ::ActionDispatch::RemoteIp, config.action_dispatch.ip_spoofing_check, config.action_dispatch.trusted_proxies

          middleware.use ::Rails::Rack::Logger, config.log_tags
          middleware.use ::ActionDispatch::ShowExceptions, show_exceptions_app
```

e.g. on the way in `RemoteIP` is before the logger, so you log the right IP, then on the way back, if an uncaught exception was turned into an error page, you log the correct status code.

So it's not possible to change that order without breaking the above :/, but then yes it's totally incorrect for `ActionDispatch::RemoteIp` to raise.

These middleware ordering issues are always headache inducing -_-.

@rafaelfranca any idea on this one?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1245340450/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1245477485,https://github.com/rails/rails/issues/46003#issuecomment-1245477485,https://api.github.com/repos/rails/rails/issues/46003,1245477485,IC_kwDNIULOSjx6bQ,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-09-13T14:15:19Z,2022-09-13T14:15:19Z,MEMBER,"[The corresponding test](https://github.com/rails/rails/blob/b1c5ae394782e3a766c99012d9ad87476d095544/railties/test/application/middleware_test.rb#L119) is a bit more communicative about the ordering, though from a glance, not this particular pair.

I don't think the logger technically ever sees the response status. I'd be somewhat concerned if there were a risk that a different ordering could result in [even failed] requests being logged, but in practice that doesn't seem like a concern either.

In practice I suspect it would be safe to swap Logger and ShowExceptions... but that doesn't actually help us: just like Logger, it's important that ShowExceptions sees the post-RequestId and post-RemoteIp request state.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1245477485/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1246341987,https://github.com/rails/rails/issues/46003#issuecomment-1246341987,https://api.github.com/repos/rails/rails/issues/46003,1246341987,IC_kwDNIULOSkmrYw,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2022-09-14T07:12:04Z,2022-09-14T07:12:04Z,CONTRIBUTOR,"Agreed.

So I think the only solution is not to raise but to return a 4xx. 

Looking at the spec I think `400 Bad Request` is the one for this kind of scenarios:

> The server cannot or will not process the request due to an apparent client error (e.g., malformed request syntax, size too large, invalid request message framing, or **deceptive request routing**).

https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1246341987/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1247493055,https://github.com/rails/rails/issues/46003#issuecomment-1247493055,https://api.github.com/repos/rails/rails/issues/46003,1247493055,IC_kwDNIULOSls7vw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2022-09-15T02:23:20Z,2022-09-15T02:23:20Z,MEMBER,Yeah. I think we should not be raising. There is no reason for users to have to configure how this middleware will respond. 400 makes sense to me.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1247493055/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1247850880,https://github.com/rails/rails/issues/46003#issuecomment-1247850880,https://api.github.com/repos/rails/rails/issues/46003,1247850880,IC_kwDNIULOSmCxgA,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2022-09-15T09:40:39Z,2022-09-15T09:40:39Z,CONTRIBUTOR,"Hum, I just realized that even returning a 400 isn't that simple when you are before `ShowException`.

I mean it's easy to `return [400, ...]`, but wouldn't use expect this to go through the exception_app so it's customizable?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1247850880/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1248023914,https://github.com/rails/rails/issues/46003#issuecomment-1248023914,https://api.github.com/repos/rails/rails/issues/46003,1248023914,IC_kwDNIULOSmNVag,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-09-15T12:17:47Z,2022-09-15T12:17:47Z,MEMBER,"It also seems not-ideal to me for this middleware to be responsible for composing and returning a full HTTP response... an exception intuitively feels like a better fit for the level of abstraction it's interested in (despite the obvious realities of it being a Rack middleware).

Perhaps we could double up ShowExceptions, injecting another copy super early specifically to handle exceptions that occur in the space above the main one? I'm nervous about exposing a user's exception_app to requests in that state (e.g. in this case, having potentially misleading client IP info[^1]), but maybe that's just the least bad option.

[^1]: I'm specifically wary that this is a reasonable thing to actually _use_ in an exception app: for example, one might return a more detailed [and potentially revealing] error response to an apparently-internal client.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1248023914/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1248394510,https://github.com/rails/rails/issues/46003#issuecomment-1248394510,https://api.github.com/repos/rails/rails/issues/46003,1248394510,IC_kwDNIULOSmj9Dg,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2022-09-15T17:23:46Z,2022-09-15T17:23:46Z,MEMBER,Do this response really needs to be customizable? I don't see a case that people want to show an attacker a custom response.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1248394510/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1248396049,https://github.com/rails/rails/issues/46003#issuecomment-1248396049,https://api.github.com/repos/rails/rails/issues/46003,1248396049,IC_kwDNIULOSmkDEQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2022-09-15T17:25:26Z,2022-09-15T17:25:26Z,MEMBER,"What if we push this middleware down them? Is there any reason why it is before `ShowException`?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1248396049/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1249048531,https://github.com/rails/rails/issues/46003#issuecomment-1249048531,https://api.github.com/repos/rails/rails/issues/46003,1249048531,IC_kwDNIULOSnL30w,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2022-09-16T08:03:00Z,2022-09-16T08:03:00Z,CONTRIBUTOR,"> What if we push this middleware down them? Is there any reason why it is before `ShowException`?

I think it's because of the logger: https://github.com/rails/rails/issues/46003#issuecomment-1245340450
It's a big chicken and egg problem.

>  don't see a case that people want to show an attacker a custom response.

Well, we assume it's an attacker, it could be a misconfigured proxy or something like that. But yes, that probably wouldn't be the end of the world.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1249048531/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1265110165,https://github.com/rails/rails/issues/46003#issuecomment-1265110165,https://api.github.com/repos/rails/rails/issues/46003,1265110165,IC_kwDNIULOS2gMlQ,"{'login': 'willnet', 'id': 82371, 'node_id': 'MDQ6VXNlcjgyMzcx', 'avatar_url': 'https://avatars.githubusercontent.com/u/82371?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/willnet', 'html_url': 'https://github.com/willnet', 'followers_url': 'https://api.github.com/users/willnet/followers', 'following_url': 'https://api.github.com/users/willnet/following{/other_user}', 'gists_url': 'https://api.github.com/users/willnet/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/willnet/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/willnet/subscriptions', 'organizations_url': 'https://api.github.com/users/willnet/orgs', 'repos_url': 'https://api.github.com/users/willnet/repos', 'events_url': 'https://api.github.com/users/willnet/events{/privacy}', 'received_events_url': 'https://api.github.com/users/willnet/received_events', 'type': 'User', 'site_admin': False}",2022-10-03T08:32:15Z,2022-10-03T08:32:15Z,CONTRIBUTOR,"What caused me to create this Issue was an error in our customer's environment. No attackers.

Therefore, it would be nice to be able to customize the response, but just returning 400 is enough.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1265110165/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1387434631,https://github.com/rails/rails/issues/46003#issuecomment-1387434631,https://api.github.com/repos/rails/rails/issues/46003,1387434631,IC_kwDNIULOUrKShw,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-01-18T17:14:37Z,2023-01-18T17:14:37Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1387434631/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1585776502,https://github.com/rails/rails/issues/46003#issuecomment-1585776502,https://api.github.com/repos/rails/rails/issues/46003,1585776502,IC_kwDNIULOXoUHdg,"{'login': 'Auralcat', 'id': 20464770, 'node_id': 'MDQ6VXNlcjIwNDY0Nzcw', 'avatar_url': 'https://avatars.githubusercontent.com/u/20464770?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Auralcat', 'html_url': 'https://github.com/Auralcat', 'followers_url': 'https://api.github.com/users/Auralcat/followers', 'following_url': 'https://api.github.com/users/Auralcat/following{/other_user}', 'gists_url': 'https://api.github.com/users/Auralcat/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Auralcat/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Auralcat/subscriptions', 'organizations_url': 'https://api.github.com/users/Auralcat/orgs', 'repos_url': 'https://api.github.com/users/Auralcat/repos', 'events_url': 'https://api.github.com/users/Auralcat/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Auralcat/received_events', 'type': 'User', 'site_admin': False}",2023-06-10T19:17:22Z,2023-06-10T19:18:11Z,NONE,"I could reproduce the 500 response error in both the current `7-0-stable` branch and the `main` branch at 18acbe8948e04088a3116ed3eb5df05ce72f0b20

For reference, this is the middleware chain I got through `rails middleware` when reproducing the issue for both branches:


# 7-0-stable
```
use ActionDispatch::HostAuthorization
use Rack::Sendfile
use ActionDispatch::Static
use ActionDispatch::Executor
use ActionDispatch::ServerTiming
use ActiveSupport::Cache::Strategy::LocalCache::Middleware
use Rack::Runtime
use Rack::MethodOverride
use ActionDispatch::RequestId
use ActionDispatch::RemoteIp
use Sprockets::Rails::QuietAssets
use Rails::Rack::Logger
use ActionDispatch::ShowExceptions
use WebConsole::Middleware
use ActionDispatch::DebugExceptions
use ActionDispatch::ActionableExceptions
use ActionDispatch::Reloader
use ActionDispatch::Callbacks
use ActiveRecord::Migration::CheckPending
use ActionDispatch::Cookies
use ActionDispatch::Session::CookieStore
use ActionDispatch::Flash
use ActionDispatch::ContentSecurityPolicy::Middleware
use ActionDispatch::PermissionsPolicy::Middleware
use Rack::Head
use Rack::ConditionalGet
use Rack::ETag
use Rack::TempfileReaper
run DebugApp::Application.routes
```

# `main` branch

```
use ActionDispatch::HostAuthorization
use Rack::Sendfile
use ActionDispatch::Static
use ActionDispatch::Executor
use ActionDispatch::ServerTiming
use ActiveSupport::Cache::Strategy::LocalCache::Middleware
use Rack::Runtime
use Rack::MethodOverride
use ActionDispatch::RequestId
use ActionDispatch::RemoteIp
use Sprockets::Rails::QuietAssets
use Rails::Rack::Logger
use ActionDispatch::ShowExceptions
use WebConsole::Middleware
use ActionDispatch::DebugExceptions
use ActionDispatch::ActionableExceptions
use ActionDispatch::Reloader
use ActionDispatch::Callbacks
use ActiveRecord::Migration::CheckPending
use ActionDispatch::Cookies
use ActionDispatch::Session::CookieStore
use ActionDispatch::Flash
use ActionDispatch::ContentSecurityPolicy::Middleware
use ActionDispatch::PermissionsPolicy::Middleware
use Rack::Head
use Rack::ConditionalGet
use Rack::ETag
use Rack::TempfileReaper
run DebugApp::Application.routes
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1585776502/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,46003
https://api.github.com/repos/rails/rails/issues/comments/1242748009,https://github.com/rails/rails/pull/45993#issuecomment-1242748009,https://api.github.com/repos/rails/rails/issues/45993,1242748009,IC_kwDNIULOShLUaQ,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-09-10T15:04:14Z,2022-09-10T15:04:14Z,CONTRIBUTOR,"Should we incorporate this feature into the Rails itself? 🤔 Because this is already available in browsers, like Chrome Dev Tools.
<img width=""849"" alt=""Screen Shot 2022-09-10 at 18 01 26"" src=""https://user-images.githubusercontent.com/5657035/189489294-75a6293f-c80f-4a7e-9c29-1d179b06e7f8.png"">
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1242748009/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45993
https://api.github.com/repos/rails/rails/issues/comments/1260248528,https://github.com/rails/rails/issues/45967#issuecomment-1260248528,https://api.github.com/repos/rails/rails/issues/45967,1260248528,IC_kwDNIULOSx3d0A,"{'login': 'tiegz', 'id': 5054, 'node_id': 'MDQ6VXNlcjUwNTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5054?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tiegz', 'html_url': 'https://github.com/tiegz', 'followers_url': 'https://api.github.com/users/tiegz/followers', 'following_url': 'https://api.github.com/users/tiegz/following{/other_user}', 'gists_url': 'https://api.github.com/users/tiegz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tiegz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tiegz/subscriptions', 'organizations_url': 'https://api.github.com/users/tiegz/orgs', 'repos_url': 'https://api.github.com/users/tiegz/repos', 'events_url': 'https://api.github.com/users/tiegz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tiegz/received_events', 'type': 'User', 'site_admin': False}",2022-09-28T00:46:34Z,2022-09-28T00:46:34Z,CONTRIBUTOR,"I think this might be confusing-yet-intentional behavior:

* ActiveRecord::Timestamp says it `automatically timestamps create and update operations`
* it also relies on ActiveModel::Dirty, which tracks changes to attributes
* `tag_ids` is a writer method defined in ActiveRecord::Associations::Builder::CollectionAssociation and not a first-class attribute, so you're not actually writing to the `posts` table in your example

By contrast, if you add a similar test for `belongs_to` in your example, you'll see that it does update `updated_at` because it's writing to the `x_id` column on the table.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1260248528/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45967
https://api.github.com/repos/rails/rails/issues/comments/1360386342,https://github.com/rails/rails/issues/45967#issuecomment-1360386342,https://api.github.com/repos/rails/rails/issues/45967,1360386342,IC_kwDNIULOURXZJg,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-12-20T22:10:53Z,2022-12-20T22:10:53Z,MEMBER,"It is using `touch: true`, so that should force an `update_at` update. I think the behaviours should be consistent.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1360386342/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45967
https://api.github.com/repos/rails/rails/issues/comments/1360590511,https://github.com/rails/rails/issues/45967#issuecomment-1360590511,https://api.github.com/repos/rails/rails/issues/45967,1360590511,IC_kwDNIULOURj2rw,"{'login': 'tiegz', 'id': 5054, 'node_id': 'MDQ6VXNlcjUwNTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5054?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tiegz', 'html_url': 'https://github.com/tiegz', 'followers_url': 'https://api.github.com/users/tiegz/followers', 'following_url': 'https://api.github.com/users/tiegz/following{/other_user}', 'gists_url': 'https://api.github.com/users/tiegz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tiegz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tiegz/subscriptions', 'organizations_url': 'https://api.github.com/users/tiegz/orgs', 'repos_url': 'https://api.github.com/users/tiegz/repos', 'events_url': 'https://api.github.com/users/tiegz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tiegz/received_events', 'type': 'User', 'site_admin': False}",2022-12-21T00:42:17Z,2022-12-21T00:42:17Z,CONTRIBUTOR,"The `touch: true` should work on a normal `has_many`, but tags here are a `has_many :through` association. This means the join table records will get deleted by default, instead of destroyed:

```
The default strategy is to do nothing (leave the foreign keys with the parent ids set), 
except for has_many :through, where the default strategy is delete_all 
(delete the join records, without running their callbacks).
```

So even though the docs for `touch` say `If true, the associated object will be touched (the updated_at/on attributes set to current time) when this record is either saved or destroyed.`, the records that are being removed (Tagging) are just deleted, not destroyed.

You should be able to fix this by declaring `dependent: :destroy` on the association tho:

`has_many :tags, through: :taggings, dependent: :destroy`


","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1360590511/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45967
https://api.github.com/repos/rails/rails/issues/comments/1477143606,https://github.com/rails/rails/issues/45967#issuecomment-1477143606,https://api.github.com/repos/rails/rails/issues/45967,1477143606,IC_kwDNIULOWAtsNg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-03-21T01:00:27Z,2023-03-21T01:00:27Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1477143606/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45967
https://api.github.com/repos/rails/rails/issues/comments/1560201228,https://github.com/rails/rails/issues/45967#issuecomment-1560201228,https://api.github.com/repos/rails/rails/issues/45967,1560201228,IC_kwDNIULOXP7IDA,"{'login': 'jayithiel', 'id': 46687940, 'node_id': 'MDQ6VXNlcjQ2Njg3OTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/46687940?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jayithiel', 'html_url': 'https://github.com/jayithiel', 'followers_url': 'https://api.github.com/users/jayithiel/followers', 'following_url': 'https://api.github.com/users/jayithiel/following{/other_user}', 'gists_url': 'https://api.github.com/users/jayithiel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jayithiel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jayithiel/subscriptions', 'organizations_url': 'https://api.github.com/users/jayithiel/orgs', 'repos_url': 'https://api.github.com/users/jayithiel/repos', 'events_url': 'https://api.github.com/users/jayithiel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jayithiel/received_events', 'type': 'User', 'site_admin': False}",2023-05-23T22:18:24Z,2023-05-23T22:18:24Z,NONE,"The `updated_at` timestamp is not updating as expected for me neither.

This is a rough overview of the 2 problem models:

```
# rails 7.0.4.3
# ruby 3.2.1

TABLE questions (
    id: uuid
    sort_order: integer
    form_id: uuid
)

TABLE forms (
    id: uuid
)

class Form < ApplicationRecord
    has_many :questions,
              class_name: Question.name,
              dependent: :destroy
end

class Question < ApplicationRecord
    belongs_to :form,
                class_name: Form.name,
                touch: true
end

############################################################

# When using `update` the form's `updated_at` timestamp is updated

Form
    .find_by_id(1)
    .questions
    .first
    .update({ sort_order: 123 })


# When using `update_all` the form's `updated_at` timestamp is not updated

Question
    .where(form_id: 1)
    .update_all([""sort_order = COALESCE(ARRAY_POSITION(STRING_TO_ARRAY(?, ',')::UUID[], id), 100) - 1"", new_sort_order_ids.join(',')])
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1560201228/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45967
https://api.github.com/repos/rails/rails/issues/comments/1560213112,https://github.com/rails/rails/issues/45967#issuecomment-1560213112,https://api.github.com/repos/rails/rails/issues/45967,1560213112,IC_kwDNIULOXP72eA,"{'login': 'tiegz', 'id': 5054, 'node_id': 'MDQ6VXNlcjUwNTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5054?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tiegz', 'html_url': 'https://github.com/tiegz', 'followers_url': 'https://api.github.com/users/tiegz/followers', 'following_url': 'https://api.github.com/users/tiegz/following{/other_user}', 'gists_url': 'https://api.github.com/users/tiegz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tiegz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tiegz/subscriptions', 'organizations_url': 'https://api.github.com/users/tiegz/orgs', 'repos_url': 'https://api.github.com/users/tiegz/repos', 'events_url': 'https://api.github.com/users/tiegz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tiegz/received_events', 'type': 'User', 'site_admin': False}",2023-05-23T22:34:11Z,2023-05-23T22:34:11Z,CONTRIBUTOR,"@jayithiel `update_all` is similar to `update_column(s)` in that it goes straight to the database, so it won't touch timestamps: `This method constructs a single SQL UPDATE statement and sends it straight to the database. It does not instantiate the involved models and it does not trigger Active Record callbacks or validations.`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1560213112/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45967
https://api.github.com/repos/rails/rails/issues/comments/1687168321,https://github.com/rails/rails/issues/45967#issuecomment-1687168321,https://api.github.com/repos/rails/rails/issues/45967,1687168321,IC_kwDNIULOZJAlQQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-21T22:54:04Z,2023-08-21T22:54:04Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1687168321/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45967
https://api.github.com/repos/rails/rails/issues/comments/1259969266,https://github.com/rails/rails/pull/45954#issuecomment-1259969266,https://api.github.com/repos/rails/rails/issues/45954,1259969266,IC_kwDNIULOSxma8g,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-09-27T19:43:11Z,2022-09-27T19:43:11Z,MEMBER,"Hey @equivalent, I'm not sure if the use case is common enough to add it Rails?
Why only return h1 headings and not h2, h3, etc...
Are there other tags we want to extract?

Maybe it would make sense to expose `find_all` instead?
```ruby
class Post < ApplicationRecord
  has_rich_text :content

  def title
    content.body.find_all(""h1"").map(&:text).first
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1259969266/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45954
https://api.github.com/repos/rails/rails/issues/comments/1261418290,https://github.com/rails/rails/pull/45954#issuecomment-1261418290,https://api.github.com/repos/rails/rails/issues/45954,1261418290,IC_kwDNIULOSy-3Mg,"{'login': 'equivalent', 'id': 721990, 'node_id': 'MDQ6VXNlcjcyMTk5MA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/721990?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/equivalent', 'html_url': 'https://github.com/equivalent', 'followers_url': 'https://api.github.com/users/equivalent/followers', 'following_url': 'https://api.github.com/users/equivalent/following{/other_user}', 'gists_url': 'https://api.github.com/users/equivalent/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/equivalent/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/equivalent/subscriptions', 'organizations_url': 'https://api.github.com/users/equivalent/orgs', 'repos_url': 'https://api.github.com/users/equivalent/repos', 'events_url': 'https://api.github.com/users/equivalent/events{/privacy}', 'received_events_url': 'https://api.github.com/users/equivalent/received_events', 'type': 'User', 'site_admin': False}",2022-09-28T20:14:52Z,2022-09-28T20:20:12Z,CONTRIBUTOR,"hi @p8 

> Why only return h1 headings and not h2, h3, etc...

here is a screenshot of a fresh Rails project with default  ActionText+Trix

![Screenshot 2022-09-28 at 22 11 53](https://user-images.githubusercontent.com/721990/192879312-6b9bcc76-cc7e-4224-ae97-74be5a09ab88.png)



As you can see by default only `h1` is covered. And that's a goal of this PR = provide something helpful for a Rails developer for default ActionText/Trix setup 

**note**: I can provide less confusing name than `#headings`, e.g: `#h1_headings` or `h1s` or whatever suggested

> Maybe it would make sense to expose find_all instead?


sure, but same can be argued for `content.body.links` already merged in [source code](https://github.com/rails/rails/blob/main/actiontext/lib/action_text/content.rb#L29)

It's included in the source = there must have been an use-case where `#links` provided benefit to a Rails developer 

>  I'm not sure if the use case is common enough to add it Rails?

up to you guys to decide 😉 
Will this bring value or not?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1261418290/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45954
https://api.github.com/repos/rails/rails/issues/comments/1231634572,https://github.com/rails/rails/issues/45906#issuecomment-1231634572,https://api.github.com/repos/rails/rails/issues/45906,1231634572,IC_kwDNIULOSWlAjA,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2022-08-30T13:00:16Z,2022-08-30T13:00:16Z,MEMBER,Thank you @amarchenkoshopify I'll take a look at this soon.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1231634572/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45906
https://api.github.com/repos/rails/rails/issues/comments/1232882620,https://github.com/rails/rails/issues/45906#issuecomment-1232882620,https://api.github.com/repos/rails/rails/issues/45906,1232882620,IC_kwDNIULOSXxLvA,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2022-08-31T12:37:42Z,2022-08-31T12:37:42Z,MEMBER,"I opened https://github.com/rails/rails/pull/45916 which will reduce calls to `pool_configs` since we're no longer calling them in `complete` in the query cache. We can't simply memoize `all_connection_pools` or `pool_configs` without test errors, although I didn't yet dig into why yet (it might be a test only thing due to how transactions work but that would still break a lot of apps).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1232882620/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 1, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45906
https://api.github.com/repos/rails/rails/issues/comments/1234260063,https://github.com/rails/rails/pull/45902#issuecomment-1234260063,https://api.github.com/repos/rails/rails/issues/45902,1234260063,IC_kwDNIULOSZFQXw,"{'login': 'adrianna-chang-shopify', 'id': 22918438, 'node_id': 'MDQ6VXNlcjIyOTE4NDM4', 'avatar_url': 'https://avatars.githubusercontent.com/u/22918438?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/adrianna-chang-shopify', 'html_url': 'https://github.com/adrianna-chang-shopify', 'followers_url': 'https://api.github.com/users/adrianna-chang-shopify/followers', 'following_url': 'https://api.github.com/users/adrianna-chang-shopify/following{/other_user}', 'gists_url': 'https://api.github.com/users/adrianna-chang-shopify/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/adrianna-chang-shopify/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/adrianna-chang-shopify/subscriptions', 'organizations_url': 'https://api.github.com/users/adrianna-chang-shopify/orgs', 'repos_url': 'https://api.github.com/users/adrianna-chang-shopify/repos', 'events_url': 'https://api.github.com/users/adrianna-chang-shopify/events{/privacy}', 'received_events_url': 'https://api.github.com/users/adrianna-chang-shopify/received_events', 'type': 'User', 'site_admin': False}",2022-09-01T13:10:29Z,2022-09-01T13:10:29Z,CONTRIBUTOR,"👋 Hey @vlad-pisanov, would you mind rebasing your branch again please to address conflicts?
Thanks!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1234260063/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45902
https://api.github.com/repos/rails/rails/issues/comments/1234410046,https://github.com/rails/rails/pull/45902#issuecomment-1234410046,https://api.github.com/repos/rails/rails/issues/45902,1234410046,IC_kwDNIULOSZOaPg,"{'login': 'adrianna-chang-shopify', 'id': 22918438, 'node_id': 'MDQ6VXNlcjIyOTE4NDM4', 'avatar_url': 'https://avatars.githubusercontent.com/u/22918438?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/adrianna-chang-shopify', 'html_url': 'https://github.com/adrianna-chang-shopify', 'followers_url': 'https://api.github.com/users/adrianna-chang-shopify/followers', 'following_url': 'https://api.github.com/users/adrianna-chang-shopify/following{/other_user}', 'gists_url': 'https://api.github.com/users/adrianna-chang-shopify/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/adrianna-chang-shopify/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/adrianna-chang-shopify/subscriptions', 'organizations_url': 'https://api.github.com/users/adrianna-chang-shopify/orgs', 'repos_url': 'https://api.github.com/users/adrianna-chang-shopify/repos', 'events_url': 'https://api.github.com/users/adrianna-chang-shopify/events{/privacy}', 'received_events_url': 'https://api.github.com/users/adrianna-chang-shopify/received_events', 'type': 'User', 'site_admin': False}",2022-09-01T15:05:40Z,2022-09-01T15:05:40Z,CONTRIBUTOR,"I think we also need to `require ""active_support/core_ext/hash/keys.rb""` in both of the `calculations.rb` files to make use of `#assert_valid_keys`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1234410046/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45902
https://api.github.com/repos/rails/rails/issues/comments/1236280889,https://github.com/rails/rails/pull/45902#issuecomment-1236280889,https://api.github.com/repos/rails/rails/issues/45902,1236280889,IC_kwDNIULOSbAmOQ,"{'login': 'vlad-pisanov', 'id': 55465196, 'node_id': 'MDQ6VXNlcjU1NDY1MTk2', 'avatar_url': 'https://avatars.githubusercontent.com/u/55465196?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/vlad-pisanov', 'html_url': 'https://github.com/vlad-pisanov', 'followers_url': 'https://api.github.com/users/vlad-pisanov/followers', 'following_url': 'https://api.github.com/users/vlad-pisanov/following{/other_user}', 'gists_url': 'https://api.github.com/users/vlad-pisanov/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/vlad-pisanov/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/vlad-pisanov/subscriptions', 'organizations_url': 'https://api.github.com/users/vlad-pisanov/orgs', 'repos_url': 'https://api.github.com/users/vlad-pisanov/repos', 'events_url': 'https://api.github.com/users/vlad-pisanov/events{/privacy}', 'received_events_url': 'https://api.github.com/users/vlad-pisanov/received_events', 'type': 'User', 'site_admin': False}",2022-09-04T07:44:19Z,2022-09-04T07:44:19Z,NONE,@adrianna-chang-shopify done! And thanks for the `require` reminder 🙏 ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1236280889/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45902
https://api.github.com/repos/rails/rails/issues/comments/1226470227,https://github.com/rails/rails/pull/45864#issuecomment-1226470227,https://api.github.com/repos/rails/rails/issues/45864,1226470227,IC_kwDNIULOSRpzUw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-08-24T22:04:49Z,2022-08-24T22:04:49Z,MEMBER,It looks like [Sequel](https://sequel.jeremyevans.net/rdoc/classes/Sequel/Dataset.html#method-i-select_append) uses `select_append` or `select_more` and [ROM](https://rom-rb.org/4.0/learn/sql/queries/#appending-more-columns) also uses `select_append`. It may be worth using `select_append` just for consistency,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1226470227/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45864
https://api.github.com/repos/rails/rails/issues/comments/1227501125,https://github.com/rails/rails/pull/45864#issuecomment-1227501125,https://api.github.com/repos/rails/rails/issues/45864,1227501125,IC_kwDNIULOSSouRQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-08-25T16:29:29Z,2022-08-25T16:58:03Z,MEMBER,"We also put the verb first for `reverse_order`, `invert_where`, etc.
So maybe `append_select`, similar to `append_around_action`?

If we look at existing methods that start with `select_`,
We have methods like [select_all](https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_all) and [select_rows](https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_rows).
In all these cases `select` is the verb instead of the subject.

So the naming convention seems to be`verb_subject`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1227501125/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45864
https://api.github.com/repos/rails/rails/issues/comments/1227545781,https://github.com/rails/rails/pull/45864#issuecomment-1227545781,https://api.github.com/repos/rails/rails/issues/45864,1227545781,IC_kwDNIULOSSrctQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-08-25T17:12:28Z,2022-08-25T17:13:02Z,MEMBER,"I'm also wondering if it would be more inline with `where/rewhere` and `order/reorder` if `select`
would append by default (just like `where` and `order` append) and if you want to override
the existing `select` you should use `reselect`.
But I guess that ship has sailed 🙂 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1227545781/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45864
https://api.github.com/repos/rails/rails/issues/comments/1227555860,https://github.com/rails/rails/pull/45864#issuecomment-1227555860,https://api.github.com/repos/rails/rails/issues/45864,1227555860,IC_kwDNIULOSSsEFA,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-08-25T17:23:33Z,2022-08-25T17:23:33Z,CONTRIBUTOR,"> I'm also wondering if it would be more inline with `where/rewhere` and `order/reorder` if `select` would append by default (just like `where` and `order` append) and if you want to override the existing `select` you should use `reselect`. But I guess that ship has sailed 🙂

Yup, I would expect this, but IMHO `select` is impossible to get changed now even with proper deprecation cycle.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1227555860/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45864
https://api.github.com/repos/rails/rails/issues/comments/1227565792,https://github.com/rails/rails/pull/45864#issuecomment-1227565792,https://api.github.com/repos/rails/rails/issues/45864,1227565792,IC_kwDNIULOSSsq4A,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-08-25T17:28:50Z,2022-08-25T17:28:50Z,MEMBER,"> IMHO `select` is impossible to get changed now even with proper deprecation cycle.

Not exactly impossible, but yeah it would be a mess.

I'd very much be in favor of renaming it to `reselect` for consistency, and make `select` a soft-deprecated alias, as for newcommers it's really not evident that select replaces everything.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1227565792/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45864
https://api.github.com/repos/rails/rails/issues/comments/1227671089,https://github.com/rails/rails/pull/45864#issuecomment-1227671089,https://api.github.com/repos/rails/rails/issues/45864,1227671089,IC_kwDNIULOSSzGMQ,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-08-25T19:26:14Z,2022-08-25T19:26:14Z,CONTRIBUTOR,"> > IMHO `select` is impossible to get changed now even with proper deprecation cycle.
> 
> Not exactly impossible, but yeah it would be a mess.
> 
> I'd very much be in favor of renaming it to `reselect` for consistency, and make `select` a soft-deprecated alias, as for newcommers it's really not evident that select replaces everything.

`select` actually works as expected

https://github.com/rails/rails/blob/d1a9a9928d62e550c16df6c9b7e91e0bae7f8887/activerecord/lib/active_record/relation/query_methods.rb#L322-L325

It appends to the `select_values` array.

The problem is that `[table[Arel.star]]` is not default value and thus `select` doesn't append to that. Instead there is check for empty `select_values` falling back to `table[Arel.star]` in `build_select`.

https://github.com/rails/rails/blob/d1a9a9928d62e550c16df6c9b7e91e0bae7f8887/activerecord/lib/active_record/relation/query_methods.rb#L1575-L1583

If it will be possible to make `[table[Arel.star]]` default value for `select_values` both `select` and `reselect` will work as expected. But I have no idea how to do that in backwards compatible (or somehow friendly deprecated) manner.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1227671089/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45864
https://api.github.com/repos/rails/rails/issues/comments/1227685741,https://github.com/rails/rails/pull/45864#issuecomment-1227685741,https://api.github.com/repos/rails/rails/issues/45864,1227685741,IC_kwDNIULOSSz_bQ,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-08-25T19:40:28Z,2022-08-25T19:40:28Z,MEMBER,"Nice write up, I wasn't aware of that subtelity.

But then that `select_append` only ""works"" if called first, e.g. `Post.select('something').select_append('something_else')`, won't include `*`.

So maybe another possible API would be something like `select(:*)`

So that:

```ruby
User.joins(:account).select_append('accounts.name AS account_name')
```

Becomes:

```ruby
User.joins(:account).select(:*, 'accounts.name AS account_name')
```

Just a quick thought though.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1227685741/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45864
https://api.github.com/repos/rails/rails/issues/comments/1227694336,https://github.com/rails/rails/pull/45864#issuecomment-1227694336,https://api.github.com/repos/rails/rails/issues/45864,1227694336,IC_kwDNIULOSS0hAA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-08-25T19:51:28Z,2022-08-25T19:51:28Z,MEMBER,"There also the somewhat related PR for implicit `default_order`: https://github.com/rails/rails/pull/39525
This `order` will be used unless someone overrides it by calling `order`.

`select` also has this ""implicit default"" but it's hardcoded by Rails to `table[Arel.star]`.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1227694336/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45864
https://api.github.com/repos/rails/rails/issues/comments/1227702069,https://github.com/rails/rails/pull/45864#issuecomment-1227702069,https://api.github.com/repos/rails/rails/issues/45864,1227702069,IC_kwDNIULOSS0_NQ,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-08-25T20:01:12Z,2022-08-25T20:01:12Z,CONTRIBUTOR,"> 

`select(:*)` doesn't work since the star is getting qoted.

Anyway my usecase is simple. Somehow deep in the codebase I get relation and I have no idea what's selected and I just want to append to that selection. Using `select` is dangerous, since if not called before on relation, I'll get rid of `*` selection by mistake.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1227702069/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45864
https://api.github.com/repos/rails/rails/issues/comments/1227706187,https://github.com/rails/rails/pull/45864#issuecomment-1227706187,https://api.github.com/repos/rails/rails/issues/45864,1227706187,IC_kwDNIULOSS1PSw,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-08-25T20:05:27Z,2022-08-25T20:05:27Z,MEMBER,"> `select(:*)` doesn't work since the star is getting qoted.

I'm suggesting to handle it differently in the future. AFAIK `*` is not a valid column name, or at least not a reasonable one, so it shouldn't have backward compatibility implications to change its behavior.

> Anyway my usecase is simple

I'm not debating the merits of your use case. I even started my intervention by stating I'd like to have this feature and I wanted it many times.

I'm just not personally convinced `select_append` is the proper API for the various reasons I stated before (inconsistent naming, order dependent, etc).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1227706187/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,45864
https://api.github.com/repos/rails/rails/issues/comments/1215790806,https://github.com/rails/rails/issues/45832#issuecomment-1215790806,https://api.github.com/repos/rails/rails/issues/45832,1215790806,IC_kwDNIULOSHd-1g,"{'login': 'latentflip', 'id': 78225, 'node_id': 'MDQ6VXNlcjc4MjI1', 'avatar_url': 'https://avatars.githubusercontent.com/u/78225?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/latentflip', 'html_url': 'https://github.com/latentflip', 'followers_url': 'https://api.github.com/users/latentflip/followers', 'following_url': 'https://api.github.com/users/latentflip/following{/other_user}', 'gists_url': 'https://api.github.com/users/latentflip/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/latentflip/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/latentflip/subscriptions', 'organizations_url': 'https://api.github.com/users/latentflip/orgs', 'repos_url': 'https://api.github.com/users/latentflip/repos', 'events_url': 'https://api.github.com/users/latentflip/events{/privacy}', 'received_events_url': 'https://api.github.com/users/latentflip/received_events', 'type': 'User', 'site_admin': False}",2022-08-15T20:58:24Z,2022-08-15T20:58:24Z,CONTRIBUTOR,"Using the following table I traced the change to between `8.0.2-dmr` and `8.0.3-dmr`, at least based on what running the mysql official docker images gives me:

```
 CREATE TABLE `posts` (
    ->   `id` bigint NOT NULL AUTO_INCREMENT,
    ->   `foo` varbinary(1024) NOT NULL DEFAULT 'livebeef',
    ->   PRIMARY KEY (`id`)
    -> ) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
```

```
mysql> SELECT VERSION();
+-----------+
| VERSION() |
+-----------+
| 8.0.2-dmr |
+-----------+
1 row in set (0.00 sec)

mysql> DESCRIBE posts;
+-------+-----------------+------+-----+----------+----------------+
| Field | Type            | Null | Key | Default  | Extra          |
+-------+-----------------+------+-----+----------+----------------+
| id    | bigint(20)      | NO   | PRI | NULL     | auto_increment |
| foo   | varbinary(1024) | NO   |     | livebeef |                |
+-------+-----------------+------+-----+----------+----------------+
2 rows in set (0.01 sec)
```

```
mysql> SELECT VERSION();
+--------------+
| VERSION()    |
+--------------+
| 8.0.3-rc-log |
+--------------+
1 row in set (0.00 sec)

mysql>
Query OK, 0 rows affected (0.14 sec)

mysql> DESCRIBE posts;
+-------+-----------------+------+-----+--------------------+----------------+
| Field | Type            | Null | Key | Default            | Extra          |
+-------+-----------------+------+-----+--------------------+----------------+
| id    | bigint(20)      | NO   | PRI | NULL               | auto_increment |
| foo   | varbinary(1024) | NO   |     | 0x6C69766562656566 |                |
+-------+-----------------+------+-----+--------------------+----------------+
2 rows in set (0.00 sec)
```

I didn't find anything relating to this change in the [8.0.3 release notes](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-3.html).

The [8.0.2 release notes](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-2.html) point to https://github.com/mysql/mysql-server/pull/118/files with the description:

> The mysql client now supports a [--binary-as-hex](https://dev.mysql.com/doc/refman/8.0/en/mysql-command-options.html#option_mysql_binary-as-hex) option that causes display of binary data using hexadecimal notation (0xvalue). Thanks to Daniël van Eeden for the patch. (Bug #25340722, Bug #84391)

but given that the output isn't hex in 8.0.2 I'm unsure if this is the cause of the change.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1215790806/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45832
https://api.github.com/repos/rails/rails/issues/comments/1216076677,https://github.com/rails/rails/issues/45832#issuecomment-1216076677,https://api.github.com/repos/rails/rails/issues/45832,1216076677,IC_kwDNIULOSHvbhQ,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2022-08-16T02:36:07Z,2022-08-16T02:36:07Z,MEMBER,"Also, starting from MySQL 8.0.19 ""client"", --binary-as-hex option now is enabled by default. 

https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-19.html

> When the mysql client operates in interactive mode, the --binary-as-hex option now is enabled by default. In addition, output from the status (or \s) command includes this line when the option is enabled implicitly or explicitly:
Binary data as: Hexadecimal
To disable hexadecimal notation, use --skip-binary-as-hex (Bug #24432545)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1216076677/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45832
https://api.github.com/repos/rails/rails/issues/comments/1216443079,https://github.com/rails/rails/issues/45832#issuecomment-1216443079,https://api.github.com/repos/rails/rails/issues/45832,1216443079,IC_kwDNIULOSIFyxw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-08-16T10:17:19Z,2022-08-16T10:23:16Z,CONTRIBUTOR,"```
# mysql --disable-binary-as-hex
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 26
Server version: 8.0.29 MySQL Community Server - GPL

Copyright (c) 2000, 2022, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> connect adam_test
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Connection id:    27
Current database: adam_test

mysql> select * from posts;
+----+-------------+
| id | some_binary |
+----+-------------+
|  1 | hello-world |
+----+-------------+
1 row in set (0.00 sec)

mysql> describe posts;
+-------------+-----------------+------+-----+--------------------------+----------------+
| Field       | Type            | Null | Key | Default                  | Extra          |
+-------------+-----------------+------+-----+--------------------------+----------------+
| id          | bigint          | NO   | PRI | NULL                     | auto_increment |
| some_binary | varbinary(1024) | NO   |     | 0x68656C6C6F2D776F726C64 |                |
+-------------+-----------------+------+-----+--------------------------+----------------+
2 rows in set (0.00 sec)
```

So it disables in one case, but not the other 🙄 
Similar question from mysql forum - https://forums.mysql.com/read.php?24,685577,685577, with no answer.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1216443079/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45832
https://api.github.com/repos/rails/rails/issues/comments/1313440927,https://github.com/rails/rails/issues/45832#issuecomment-1313440927,https://api.github.com/repos/rails/rails/issues/45832,1313440927,IC_kwDNIULOTkmEnw,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-11-14T10:25:58Z,2022-11-14T10:25:58Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1313440927/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45832
https://api.github.com/repos/rails/rails/issues/comments/1341900654,https://github.com/rails/rails/issues/45832#issuecomment-1341900654,https://api.github.com/repos/rails/rails/issues/45832,1341900654,IC_kwDNIULOT_vHbg,"{'login': 'HParker', 'id': 4482399, 'node_id': 'MDQ6VXNlcjQ0ODIzOTk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4482399?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/HParker', 'html_url': 'https://github.com/HParker', 'followers_url': 'https://api.github.com/users/HParker/followers', 'following_url': 'https://api.github.com/users/HParker/following{/other_user}', 'gists_url': 'https://api.github.com/users/HParker/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/HParker/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/HParker/subscriptions', 'organizations_url': 'https://api.github.com/users/HParker/orgs', 'repos_url': 'https://api.github.com/users/HParker/repos', 'events_url': 'https://api.github.com/users/HParker/events{/privacy}', 'received_events_url': 'https://api.github.com/users/HParker/received_events', 'type': 'User', 'site_admin': True}",2022-12-08T02:40:00Z,2022-12-08T02:40:00Z,CONTRIBUTOR,"Here is an alternative failed attempt which handles more cases, but still fails to correctly set all possible binary default values.
https://github.com/rails/rails/pull/46668

I don't think there is any way to get a correct default value for all possible binary column values from Mysql.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1341900654/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45832
https://api.github.com/repos/rails/rails/issues/comments/1214962078,https://github.com/rails/rails/issues/45830#issuecomment-1214962078,https://api.github.com/repos/rails/rails/issues/45830,1214962078,IC_kwDNIULOSGrZng,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-08-15T12:35:18Z,2022-08-15T12:35:18Z,MEMBER,"Hey @Baxxx, thanks for the issue. Can this be reproduced on 7.0.x or `main`? Rails 6.1 is only receiving security fixes at this point","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1214962078/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45830
https://api.github.com/repos/rails/rails/issues/comments/1214990352,https://github.com/rails/rails/issues/45830#issuecomment-1214990352,https://api.github.com/repos/rails/rails/issues/45830,1214990352,IC_kwDNIULOSGtIEA,"{'login': 'Baxxx', 'id': 17880055, 'node_id': 'MDQ6VXNlcjE3ODgwMDU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/17880055?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Baxxx', 'html_url': 'https://github.com/Baxxx', 'followers_url': 'https://api.github.com/users/Baxxx/followers', 'following_url': 'https://api.github.com/users/Baxxx/following{/other_user}', 'gists_url': 'https://api.github.com/users/Baxxx/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Baxxx/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Baxxx/subscriptions', 'organizations_url': 'https://api.github.com/users/Baxxx/orgs', 'repos_url': 'https://api.github.com/users/Baxxx/repos', 'events_url': 'https://api.github.com/users/Baxxx/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Baxxx/received_events', 'type': 'User', 'site_admin': False}",2022-08-15T13:06:04Z,2022-08-15T13:06:04Z,NONE,"@skipkayhil Yes, this is still reproducable. I have updated the original post with reproduction script for rails 7.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1214990352/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45830
https://api.github.com/repos/rails/rails/issues/comments/1215144864,https://github.com/rails/rails/issues/45830#issuecomment-1215144864,https://api.github.com/repos/rails/rails/issues/45830,1215144864,IC_kwDNIULOSG2joA,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2022-08-15T15:19:34Z,2022-08-15T16:15:43Z,CONTRIBUTOR,"Update: Never mind, I'm afraid the fix I had in mind is not applicable, I forgot that my case is related to savepoint transactions

I think I may have a proposal to solve this. I've been keeping it in my head for a while but wasn't eager to propose a refactoring as my real-life ""use-case"" wasn't good enough. This might be better
Let me confirm it and come up with a quick prototype, but the idea is to invalidate the transaction earlier to the `Rollback` can be swallowed.
Here are the assumptions I will be checking:
1. Currently `ROLLBACK` is not going to be issued for an `invalidated` transaction 
https://github.com/rails/rails/blob/008b85e3d7a511f9d6bc58ed4e29e323576f6ac3/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb#L434
3. Most likely transaction in your example gets invalidated, but invalidation is being done too late, so we need to invalidate it earlier to not enter this branch:
https://github.com/rails/rails/blob/008b85e3d7a511f9d6bc58ed4e29e323576f6ac3/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb#L243-L244

So it's either transaction is not being invalidated at all, or it's being done too late to ""swallow"" the rollback statement
But let me double-check, I may be talking about a different issue even though they look very similar semantically

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1215144864/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45830
https://api.github.com/repos/rails/rails/issues/comments/1215323901,https://github.com/rails/rails/issues/45830#issuecomment-1215323901,https://api.github.com/repos/rails/rails/issues/45830,1215323901,IC_kwDNIULOSHBe_Q,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2022-08-15T16:36:41Z,2022-08-15T16:36:41Z,CONTRIBUTOR,"Sorry for the noise above, unfortunately the issue I was working on is not particularly related even though semantics are very similar

In this particular case, this line executes the rollback:
https://github.com/rails/rails/blob/008b85e3d7a511f9d6bc58ed4e29e323576f6ac3/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb#L475
because the transaction state is not considered to be `completed?` 

So the question is, whether Rails should treat such transaction as `completed?` or we could add an additional check to skip the rollback. Currently the transaction is neither `invalidated` nor `completed`

Looking at the `completed?` definition, perhaps the transaction should be considered to be `rolledback_by_db?` (not an existing state) as the row wasn't inserted in the db so the `completed?` check could look like `committed? || rolledback?  || rolledback_by_db?` :
https://github.com/rails/rails/blob/5f190bd3fb6a87331ccee7cfa8c2340f413b9054/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb#L44-L45","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1215323901/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45830
https://api.github.com/repos/rails/rails/issues/comments/1222628526,https://github.com/rails/rails/issues/45830#issuecomment-1222628526,https://api.github.com/repos/rails/rails/issues/45830,1222628526,IC_kwDNIULOSN_Urg,"{'login': 'dsusviela', 'id': 18326941, 'node_id': 'MDQ6VXNlcjE4MzI2OTQx', 'avatar_url': 'https://avatars.githubusercontent.com/u/18326941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dsusviela', 'html_url': 'https://github.com/dsusviela', 'followers_url': 'https://api.github.com/users/dsusviela/followers', 'following_url': 'https://api.github.com/users/dsusviela/following{/other_user}', 'gists_url': 'https://api.github.com/users/dsusviela/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dsusviela/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dsusviela/subscriptions', 'organizations_url': 'https://api.github.com/users/dsusviela/orgs', 'repos_url': 'https://api.github.com/users/dsusviela/repos', 'events_url': 'https://api.github.com/users/dsusviela/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dsusviela/received_events', 'type': 'User', 'site_admin': False}",2022-08-22T16:49:41Z,2022-08-22T16:49:41Z,CONTRIBUTOR,"@nvasilevski Hey, would it make sense to update the `commit` method https://github.com/rails/rails/blob/008b85e3d7a511f9d6bc58ed4e29e323576f6ac3/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb#L284-L287

to:

```ruby
def commit
  connection.commit_db_transaction if materialized?
  @state.full_commit!
rescue ActiveRecord::StatementInvalid
  @state.rolledback_by_db!
end
```

and then update what you were saying?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1222628526/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45830
https://api.github.com/repos/rails/rails/issues/comments/1222880106,https://github.com/rails/rails/issues/45830#issuecomment-1222880106,https://api.github.com/repos/rails/rails/issues/45830,1222880106,IC_kwDNIULOSOOrag,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2022-08-22T19:58:46Z,2022-08-22T19:58:46Z,CONTRIBUTOR,">would it make sense to update the commit method

Hey! It looks like a plausible solution, but I have to admit I have too little experience and context on this area to be confident so I was hoping someone more experienced and with a better context could share an opinion. 
Looking at the proposed solution, I'd be trying to answer the following questions:
- Is introducing a new `rolledback_by_db` state is a good idea or it basically a re-implementation of the `invalidated` state
- Is there any statement that results in `ActiveRecord::StatementInvalid` exception without actually rolling back / invalidating the transaction? 
- Should we scope this behavior to postgresql adapter only or it is safe to assume that all databases behave this way
- Are we lacking more specific exception class for this situation? Someone may say that `StatementInvalid` is too general and argue that `insert into ""things"" ... ` statement is perfectly valid from sql standpoint but it wasn't valid from the db-level validation point of view. 

I may be overcomplicating here but either way this happens because I lack a bit of context 🙃 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1222880106/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45830
https://api.github.com/repos/rails/rails/issues/comments/1223226528,https://github.com/rails/rails/issues/45830#issuecomment-1223226528,https://api.github.com/repos/rails/rails/issues/45830,1223226528,IC_kwDNIULOSOj0oA,"{'login': 'dsusviela', 'id': 18326941, 'node_id': 'MDQ6VXNlcjE4MzI2OTQx', 'avatar_url': 'https://avatars.githubusercontent.com/u/18326941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dsusviela', 'html_url': 'https://github.com/dsusviela', 'followers_url': 'https://api.github.com/users/dsusviela/followers', 'following_url': 'https://api.github.com/users/dsusviela/following{/other_user}', 'gists_url': 'https://api.github.com/users/dsusviela/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dsusviela/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dsusviela/subscriptions', 'organizations_url': 'https://api.github.com/users/dsusviela/orgs', 'repos_url': 'https://api.github.com/users/dsusviela/repos', 'events_url': 'https://api.github.com/users/dsusviela/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dsusviela/received_events', 'type': 'User', 'site_admin': False}",2022-08-22T22:20:58Z,2022-08-22T22:20:58Z,CONTRIBUTOR,"I'm honestly quite new in the rails repo, and I'm trying to get my feet wet :). You raise some very valid points, I believe the last point could address the second one. But the new exception would be so niche that it may not be worth the hassle. I can try with different adapters later and see what happens, but in my super uninformed opinion it would make sense this is not postres specific.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1223226528/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45830
https://api.github.com/repos/rails/rails/issues/comments/1225271701,https://github.com/rails/rails/issues/45830#issuecomment-1225271701,https://api.github.com/repos/rails/rails/issues/45830,1225271701,IC_kwDNIULOSQgplQ,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-08-24T06:47:24Z,2022-08-24T06:47:24Z,MEMBER,"> * Is introducing a new `rolledback_by_db` state is a good idea or it basically a re-implementation of the `invalidated` state

Yeah, that's what invalidated is for.

> * Is there any statement that results in `ActiveRecord::StatementInvalid` exception without actually rolling back / invalidating the transaction?

Yes, most Postgres errors are recoverable (via a partial/savepoint rollback) -- the transaction enters an unusable state, but it's still there. We use ""invalidated"" for the specific case where a transaction fails so hard that the DB has already rolled it back unasked... which MySQL seems to do more often.

> * Should we scope this behavior to postgresql adapter only or it is safe to assume that all databases behave this way

It seems plausible that all databases have similar behaviour (some/most errors during a COMMIT still terminating the transaction, depending on what failed and when), but I think we'll need adapter-specific checks to distinguish those errors from others that might not. (Also worth noting, a 'false positive' ROLLBACK is a much less scary failure condition than a 'false negative' where we unknowingly leave a transaction active on a connection before returning it to the pool.)

> * Are we lacking more specific exception class for this situation? Someone may say that `StatementInvalid` is too general and argue that `insert into ""things"" ... ` statement is perfectly valid from sql standpoint but it wasn't valid from the db-level validation point of view.

Things get complicated because our exception hierarchy is DB agnostic, but auto-rollback behaviour may be DB-specific, but I think in principle that's what `TransactionRollbackError` should be.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1225271701/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45830
https://api.github.com/repos/rails/rails/issues/comments/1226502811,https://github.com/rails/rails/issues/45830#issuecomment-1226502811,https://api.github.com/repos/rails/rails/issues/45830,1226502811,IC_kwDNIULOSRrymw,"{'login': 'dsusviela', 'id': 18326941, 'node_id': 'MDQ6VXNlcjE4MzI2OTQx', 'avatar_url': 'https://avatars.githubusercontent.com/u/18326941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dsusviela', 'html_url': 'https://github.com/dsusviela', 'followers_url': 'https://api.github.com/users/dsusviela/followers', 'following_url': 'https://api.github.com/users/dsusviela/following{/other_user}', 'gists_url': 'https://api.github.com/users/dsusviela/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dsusviela/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dsusviela/subscriptions', 'organizations_url': 'https://api.github.com/users/dsusviela/orgs', 'repos_url': 'https://api.github.com/users/dsusviela/repos', 'events_url': 'https://api.github.com/users/dsusviela/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dsusviela/received_events', 'type': 'User', 'site_admin': False}",2022-08-24T22:20:53Z,2022-08-24T22:22:19Z,CONTRIBUTOR,"I have tested for `sqlite3`, and `mysql2`. Neither pops a warning. (in the code you'll see the byebug gem, i was using it to explore the rails repo)

`mysql2` triggers a rollback; but no warning:
```ruby
begin
  require ""bundler/inline""
rescue LoadError => e
  $stderr.puts ""Bundler version 1.10 or later is required. Please update your Bundler""
  raise e
end

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", ""~> 7""
  gem ""mysql2""
  gem ""byebug""
end

require ""active_record""
require ""logger""

logger = Logger.new(STDOUT)

# This connection will do for database-independent bug reports.
db_obts = {adapter: ""mysql2"", database: ""ar_rollback_after_failed_commit_issue""}

ActiveRecord::Base.establish_connection(db_obts.except(:database))
ActiveRecord::Base.connection.drop_database(db_obts[:database])
ActiveRecord::Base.connection.create_database(db_obts[:database])
logger.info ""Database #{db_obts[:database]} was (re)created.""

ActiveRecord::Base.establish_connection(db_obts)
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Migration.class_eval do
  create_table :things do |t|
      t.text :name
   end
end

ActiveRecord::Schema.define do
  execute <<~SQL
    CREATE TRIGGER validation
    BEFORE INSERT ON things FOR EACH ROW
    IF NEW.name = 'bad' THEN
      SIGNAL SQLSTATE VALUE '99999'
      SET MESSAGE_TEXT = 'An error occurred';
    END IF;
  SQL
end

class Thing < ActiveRecord::Base
  validates :name, presence: true
end

# All good
# logger.info ""First transaction""
# Thing.create!(name: ""good"")

# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning
begin
  # logger.info ""Second transaction""
  Thing.create!(name: ""bad"")
rescue StandardError
  # Doesn't matter
end
```
<img width=""1116"" alt=""image"" src=""https://user-images.githubusercontent.com/18326941/186532918-fbdb91ed-109d-4e33-a6cc-ef2f42907e1b.png"">


sqlite3 triggers rollback; no warning
```ruby
begin
  require ""bundler/inline""
rescue LoadError => e
  $stderr.puts ""Bundler version 1.10 or later is required. Please update your Bundler""
  raise e
end

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", path: ""/Users/daniel/Documents/develop/rails""
  gem ""sqlite3""
  gem ""byebug""
end

require ""active_record""
require ""logger""

logger = Logger.new(STDOUT)

# This connection will do for database-independent bug reports.
db_obts = {adapter: ""sqlite3"", database: ""ar_rollback_after_failed_commit_issue""}

ActiveRecord::Base.establish_connection(db_obts)
# ActiveRecord::Base.connection.drop_database(db_obts[:database])
# ActiveRecord::Base.connection.create_database(db_obts[:database])
logger.info ""Database #{db_obts[:database]} was (re)created.""

ActiveRecord::Base.establish_connection(db_obts)
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Migration.class_eval do
  create_table :things do |t|
      t.text :name
   end
end

ActiveRecord::Schema.define do
  execute <<~SQL
    CREATE TRIGGER validation
    BEFORE INSERT ON things
    WHEN NEW.name = 'bad'
    BEGIN
      SELECT RAISE (FAIL, 'bad things!');
    END
  SQL
end

class Thing < ActiveRecord::Base
  validates :name, presence: true
end

# All good
# logger.info ""First transaction""
# Thing.create!(name: ""good"")

# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning
begin
  # logger.info ""Second transaction""
  Thing.create!(name: ""bad"")
rescue StandardError
  # Doesn't matter
end
```
<img width=""1107"" alt=""image"" src=""https://user-images.githubusercontent.com/18326941/186533663-b029492e-db6f-49cb-877b-26dc57dbf980.png"">
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1226502811/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45830
https://api.github.com/repos/rails/rails/issues/comments/1226725208,https://github.com/rails/rails/issues/45830#issuecomment-1226725208,https://api.github.com/repos/rails/rails/issues/45830,1226725208,IC_kwDNIULOSR5XWA,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-08-25T03:22:39Z,2022-08-25T03:22:39Z,MEMBER,"Neither of those attempted the COMMIT at all -- the trigger causes the INSERT to raise, so we rollback as expected. Perhaps the challenge in a cross-database test will be in finding a way to make COMMIT fail [in a controlled way] at all. 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1226725208/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45830
https://api.github.com/repos/rails/rails/issues/comments/1227265859,https://github.com/rails/rails/issues/45830#issuecomment-1227265859,https://api.github.com/repos/rails/rails/issues/45830,1227265859,IC_kwDNIULOSSaXQw,"{'login': 'dsusviela', 'id': 18326941, 'node_id': 'MDQ6VXNlcjE4MzI2OTQx', 'avatar_url': 'https://avatars.githubusercontent.com/u/18326941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dsusviela', 'html_url': 'https://github.com/dsusviela', 'followers_url': 'https://api.github.com/users/dsusviela/followers', 'following_url': 'https://api.github.com/users/dsusviela/following{/other_user}', 'gists_url': 'https://api.github.com/users/dsusviela/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dsusviela/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dsusviela/subscriptions', 'organizations_url': 'https://api.github.com/users/dsusviela/orgs', 'repos_url': 'https://api.github.com/users/dsusviela/repos', 'events_url': 'https://api.github.com/users/dsusviela/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dsusviela/received_events', 'type': 'User', 'site_admin': False}",2022-08-25T13:32:26Z,2022-08-25T13:32:26Z,CONTRIBUTOR,"Hey @matthewd apologies for the ping, but i messed up my tests. If you look at the triggers from my snippets they are `BEFORE INSERT` and they should be `AFTER INSERT`.

sqlite3 and mysql `AFTER INSERT` behave the same way tho, so no damage done 😅.

I think it makes sense that they didn't trigger the commit since the `db validation trigger` should run in the transaction right? ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1227265859/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45830
https://api.github.com/repos/rails/rails/issues/comments/1215149635,https://github.com/rails/rails/pull/45828#issuecomment-1215149635,https://api.github.com/repos/rails/rails/issues/45828,1215149635,IC_kwDNIULOSG22Qw,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2022-08-15T15:24:14Z,2022-08-15T15:24:14Z,MEMBER,Hey @janko can you use https://github.com/evanphx/benchmark-ips to measure performance instead and post the numbers after running it?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1215149635/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45828
https://api.github.com/repos/rails/rails/issues/comments/1215354259,https://github.com/rails/rails/pull/45828#issuecomment-1215354259,https://api.github.com/repos/rails/rails/issues/45828,1215354259,IC_kwDNIULOSHDVkw,"{'login': 'janko', 'id': 795488, 'node_id': 'MDQ6VXNlcjc5NTQ4OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/795488?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/janko', 'html_url': 'https://github.com/janko', 'followers_url': 'https://api.github.com/users/janko/followers', 'following_url': 'https://api.github.com/users/janko/following{/other_user}', 'gists_url': 'https://api.github.com/users/janko/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/janko/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/janko/subscriptions', 'organizations_url': 'https://api.github.com/users/janko/orgs', 'repos_url': 'https://api.github.com/users/janko/repos', 'events_url': 'https://api.github.com/users/janko/events{/privacy}', 'received_events_url': 'https://api.github.com/users/janko/received_events', 'type': 'User', 'site_admin': False}",2022-08-15T16:49:25Z,2022-08-15T16:49:41Z,CONTRIBUTOR,"Don't know how to run two different implementations in the same benchmark-ips call, so I ran them separately.

```
Warming up --------------------------------------
       without patch     1.000  i/100ms
Calculating -------------------------------------
       without patch      0.559  (± 0.0%) i/s -      6.000  in  10.739446s
```

```
Warming up --------------------------------------
          with patch     1.000  i/100ms
Calculating -------------------------------------
          with patch      1.097  (± 0.0%) i/s -     11.000  in  10.035669s
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1215354259/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45828
https://api.github.com/repos/rails/rails/issues/comments/1215373169,https://github.com/rails/rails/pull/45828#issuecomment-1215373169,https://api.github.com/repos/rails/rails/issues/45828,1215373169,IC_kwDNIULOSHEfcQ,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2022-08-15T16:57:36Z,2022-08-15T16:57:36Z,MEMBER,"That output doesn't look right, the iterations are too low (it only ran one). Can you paste your script here so I can look at it?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1215373169/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45828
https://api.github.com/repos/rails/rails/issues/comments/1215499626,https://github.com/rails/rails/pull/45828#issuecomment-1215499626,https://api.github.com/repos/rails/rails/issues/45828,1215499626,IC_kwDNIULOSHMNag,"{'login': 'janko', 'id': 795488, 'node_id': 'MDQ6VXNlcjc5NTQ4OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/795488?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/janko', 'html_url': 'https://github.com/janko', 'followers_url': 'https://api.github.com/users/janko/followers', 'following_url': 'https://api.github.com/users/janko/following{/other_user}', 'gists_url': 'https://api.github.com/users/janko/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/janko/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/janko/subscriptions', 'organizations_url': 'https://api.github.com/users/janko/orgs', 'repos_url': 'https://api.github.com/users/janko/repos', 'events_url': 'https://api.github.com/users/janko/events{/privacy}', 'received_events_url': 'https://api.github.com/users/janko/received_events', 'type': 'User', 'site_admin': False}",2022-08-15T17:50:39Z,2022-08-15T17:51:48Z,CONTRIBUTOR,"On my computer the above script runs for ~1.8s without the patch and ~0.9s with the patch, so the numbers in benchmark-ips output check out for me (6 times vs 11 times in 10 seconds). I just replaced the `Benchmark.realtime` part with:

```rb
Benchmark.ips do |x|
  x.config(time: 10)
  x.report(""with/without patch"") do
    order.update(items_attributes: items_attributes)
  end
end
```

I wanted to use a realistic number of records, because the carthesian product grows exponentially with number of records, so a lower number of records might not show a 2x improvement.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1215499626/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45828
https://api.github.com/repos/rails/rails/issues/comments/1215688163,https://github.com/rails/rails/pull/45828#issuecomment-1215688163,https://api.github.com/repos/rails/rails/issues/45828,1215688163,IC_kwDNIULOSHXt4w,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-08-15T19:42:20Z,2022-08-15T19:43:30Z,MEMBER,"> When we have two large collections, traversing one for each item in the other has a complexity of O(n^2). This makes Active Record do a lot of work in case when no record data has changed.

Interesting! I noticed this as well and was working on a PR to only save nested attributes if they are present.
This would also disable setting `autosave` automatically to true for associations passed through `accepts_nested_attributes_for`:
https://github.com/p8/rails/commit/1d100abbd39a59ecead126146bca884ad168538f



","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1215688163/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45828
https://api.github.com/repos/rails/rails/issues/comments/1215743286,https://github.com/rails/rails/pull/45828#issuecomment-1215743286,https://api.github.com/repos/rails/rails/issues/45828,1215743286,IC_kwDNIULOSHbFNg,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-08-15T20:14:28Z,2022-08-16T08:17:57Z,MEMBER,"I've tried to fix @janko's performance script:

https://gist.github.com/p8/8ed895c2de3cff57bcb5ae9f256f5268

```
Warming up --------------------------------------
               Order     1.000  i/100ms
              Order2     1.000  i/100ms
Calculating -------------------------------------
               Order      0.233  (± 0.0%) i/s -      2.000  in   8.589529s
              Order2      0.456  (± 0.0%) i/s -      3.000  in   6.581443s
```

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1215743286/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45828
https://api.github.com/repos/rails/rails/issues/comments/1207006066,https://github.com/rails/rails/issues/45778#issuecomment-1207006066,https://api.github.com/repos/rails/rails/issues/45778,1207006066,IC_kwDNIULOR_Fzcg,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-08-05T22:14:52Z,2022-08-05T22:14:52Z,CONTRIBUTOR,"> assert_equal file, moderated_comment.image # Fail

This is expected, because `file` is of type `ActiveStorage::Blob`, but `moderated_comment.image` is of type `ActiveStorage::Attached::One`. 

> moderated_comment = comment.becomes(ModeratedComment)

Are you casting *non-saved* records to other classes? If so, what is the use case? Because for persisted records, your test cases are passing.

For non persisted records, we need to copy `@attachment_changes` and to modify it slightly (to reference the new record). So the solution can be 
```diff
--- a/activestorage/lib/active_storage/attached/model.rb
+++ b/activestorage/lib/active_storage/attached/model.rb
@@ -245,5 +245,14 @@ def initialize_dup(*) # :nodoc:
     def reload(*) # :nodoc:
       super.tap { @attachment_changes = nil }
     end
+
+    def becomes(klass) # :nodoc:
+      super.tap do |became|
+        attachment_changes = @attachment_changes.each_value do |change|
+          change.instance_variable_set(:@record, became)
+        end
+        became.instance_variable_set(:@attachment_changes, attachment_changes)
+      end
+    end
   end
 end
```

but I am not sure if it is correct. If agreed on this, I can open a PR.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1207006066/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45778
https://api.github.com/repos/rails/rails/issues/comments/1209705956,https://github.com/rails/rails/issues/45778#issuecomment-1209705956,https://api.github.com/repos/rails/rails/issues/45778,1209705956,IC_kwDNIULOSBql5A,"{'login': 'markedmondson', 'id': 1653699, 'node_id': 'MDQ6VXNlcjE2NTM2OTk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1653699?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/markedmondson', 'html_url': 'https://github.com/markedmondson', 'followers_url': 'https://api.github.com/users/markedmondson/followers', 'following_url': 'https://api.github.com/users/markedmondson/following{/other_user}', 'gists_url': 'https://api.github.com/users/markedmondson/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/markedmondson/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/markedmondson/subscriptions', 'organizations_url': 'https://api.github.com/users/markedmondson/orgs', 'repos_url': 'https://api.github.com/users/markedmondson/repos', 'events_url': 'https://api.github.com/users/markedmondson/events{/privacy}', 'received_events_url': 'https://api.github.com/users/markedmondson/received_events', 'type': 'User', 'site_admin': False}",2022-08-09T18:05:23Z,2022-08-09T18:05:23Z,CONTRIBUTOR,"> This is expected, because file is of type ActiveStorage::Blob, but moderated_comment.image is of type ActiveStorage::Attached::One

Thanks - removed that test from the code.

> Are you casting non-saved records to other classes? If so, what is the use case? Because for persisted records, your test cases are passing.

Yes, the use case is we're migrating from a single base class to two separate classes based on an association.

An example case is a chat application, we have a `Message` class that was for a chat `Room`. Now we're introduced an STI `PrivateRoom` which has it's own controller and we want to migrate out the messages into their own type `PrivateMessage` so we can perform different actions and keep the room context out of `Message`. (it's not quite as cut and dry as this but that's the idea).

I think that the fact that a persisted model acts differently to a non-persisted kind of validates the issue a little more?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1209705956/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45778
https://api.github.com/repos/rails/rails/issues/comments/1306022442,https://github.com/rails/rails/issues/45778#issuecomment-1306022442,https://api.github.com/repos/rails/rails/issues/45778,1306022442,IC_kwDNIULOTdhSKg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-11-07T18:31:39Z,2022-11-07T18:31:39Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1306022442/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45778
https://api.github.com/repos/rails/rails/issues/comments/1374242490,https://github.com/rails/rails/pull/45755#issuecomment-1374242490,https://api.github.com/repos/rails/rails/issues/45755,1374242490,IC_kwDNIULOUelGug,"{'login': 'liljack', 'id': 1465762, 'node_id': 'MDQ6VXNlcjE0NjU3NjI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1465762?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/liljack', 'html_url': 'https://github.com/liljack', 'followers_url': 'https://api.github.com/users/liljack/followers', 'following_url': 'https://api.github.com/users/liljack/following{/other_user}', 'gists_url': 'https://api.github.com/users/liljack/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/liljack/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/liljack/subscriptions', 'organizations_url': 'https://api.github.com/users/liljack/orgs', 'repos_url': 'https://api.github.com/users/liljack/repos', 'events_url': 'https://api.github.com/users/liljack/events{/privacy}', 'received_events_url': 'https://api.github.com/users/liljack/received_events', 'type': 'User', 'site_admin': False}",2023-01-06T23:11:13Z,2023-01-06T23:11:13Z,CONTRIBUTOR,"Hey @jonathanhefner I know you must have other priorities, but are you still planning on looking at this ? 

Thanks 🙏 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1374242490/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45755
https://api.github.com/repos/rails/rails/issues/comments/1201590690,https://github.com/rails/rails/pull/45724#issuecomment-1201590690,https://api.github.com/repos/rails/rails/issues/45724,1201590690,IC_kwDNIULOR57Rog,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-08-01T19:00:25Z,2022-08-01T19:00:36Z,MEMBER,"Very cool idea. I think the final SQL output is similar to what you'd get if using [goldiloader](https://github.com/salsify/goldiloader), without any `includes` needed. I know goldiloader isn't part of Rails (and it's great to see this *in* Rails!) but it would be good to confirm if these changes are compatible with it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1201590690/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45724
https://api.github.com/repos/rails/rails/issues/comments/1201625333,https://github.com/rails/rails/pull/45724#issuecomment-1201625333,https://api.github.com/repos/rails/rails/issues/45724,1201625333,IC_kwDNIULOR59Y9Q,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-08-01T19:31:31Z,2022-08-01T19:31:31Z,MEMBER,"@ghiculescu  Thanks! :smiley:  If my understanding is correct, I think #45413 is closer to `goldiloader`.  

In this PR, I wanted to take a more conservative approach, to try to avoid situations where deeply nested code must defensively disable the feature for fear of loading too much data.  Granted, that can still happen with this PR, but my hope is that restricting the feature to explicit (distributed) chains of `includes` / `preload` calls will greatly reduce the risk.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1201625333/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45724
https://api.github.com/repos/rails/rails/issues/comments/1221620926,https://github.com/rails/rails/pull/45724#issuecomment-1221620926,https://api.github.com/repos/rails/rails/issues/45724,1221620926,IC_kwDNIULOSNB0vg,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2022-08-21T21:06:27Z,2022-08-21T21:06:27Z,CONTRIBUTOR,"Yeah, glad to see another approach around this. I took a shot at this style of api before I submitted my proposed approach. The feedback I received I would like to share. 

Many people thought it was not a great ergonomic to have to opt in to the include since that is more frequently the preferred mode and they preferred an opt out.

The tricky thing I think is balancing the shortest code to write that minimizes mistakes we care about most. Large data loads could be a problem but which is our api optimized to fix? Should it more eagerly load to prevent the n+1 or should it eagerly optimize for large data flows and make fixing n+1 queries an opt in?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1221620926/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45724
https://api.github.com/repos/rails/rails/issues/comments/1222397234,https://github.com/rails/rails/pull/45724#issuecomment-1222397234,https://api.github.com/repos/rails/rails/issues/45724,1222397234,IC_kwDNIULOSNxNMg,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2022-08-22T13:54:42Z,2022-08-22T13:54:42Z,CONTRIBUTOR,"I do wonder if perhaps a new api is needed that does not exist. The concern we are working with here is fairly well understood when you maybe loading a lot of records directly from the database, we use the batch api for this. What if the associations allowed for a batch like method to be called?

Something like

`post.comments_in_batches.each`

This would allow the user to limit the number of things brought back from the database in a familiar way and also allow dynamic includes to be the default. It also provides a familiar api for working with large data sets.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1222397234/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45724
https://api.github.com/repos/rails/rails/issues/comments/1200418906,https://github.com/rails/rails/pull/45705#issuecomment-1200418906,https://api.github.com/repos/rails/rails/issues/45705,1200418906,IC_kwDNIULOR4zwWg,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-07-31T12:50:07Z,2022-07-31T12:50:07Z,CONTRIBUTOR,"Hello @nfedyashev, I have isolated the problem. Other test is not cleaning properly `ActiveRecord::Migration.verbose`. I'll open PR to fix this.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1200418906/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45705
https://api.github.com/repos/rails/rails/issues/comments/1200437862,https://github.com/rails/rails/pull/45705#issuecomment-1200437862,https://api.github.com/repos/rails/rails/issues/45705,1200437862,IC_kwDNIULOR406Zg,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-07-31T14:36:27Z,2022-07-31T14:36:27Z,CONTRIBUTOR,@nfedyashev Problem fixed at https://github.com/rails/rails/pull/45714.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1200437862/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45705
https://api.github.com/repos/rails/rails/issues/comments/1420685439,https://github.com/rails/rails/pull/45705#issuecomment-1420685439,https://api.github.com/repos/rails/rails/issues/45705,1420685439,IC_kwDNIULOVK3wfw,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2023-02-07T12:21:16Z,2023-02-07T12:21:16Z,MEMBER,"I think the current implementation is fine and the error message ""no block given (yield)
"" is straighforward. This error is generated by Ruby and users are easy to find why this error occurs.

- Migration file
```ruby
$ cat db/migrate/20230131141426_foo.rb
class Foo < ActiveRecord::Migration[7.1]
  def change
    say_with_time 'Without block'
  end
end
$
```

- With this pull request
```ruby
$ bin/rails db:migrate
== 20230131141426 Foo: migrating ==============================================
rails aborted!
StandardError: An error has occurred, this and all later migrations canceled:

Missing block
/home/yahonda/src/github.com/yahonda/sample45705/db/migrate/20230131141426_foo.rb:3:in `change'

Caused by:
ArgumentError: Missing block
/home/yahonda/src/github.com/yahonda/sample45705/db/migrate/20230131141426_foo.rb:3:in `change'
Tasks: TOP => db:migrate
(See full trace by running task with --trace)
$
```

- With the current main branch
```ruby
$ bin/rails db:migrate
== 20230131141426 Foo: migrating ==============================================
-- Without block
rails aborted!
StandardError: An error has occurred, this and all later migrations canceled:

no block given (yield)
/home/yahonda/src/github.com/yahonda/sample45705/db/migrate/20230131141426_foo.rb:3:in `change'

Caused by:
LocalJumpError: no block given (yield)
/home/yahonda/src/github.com/yahonda/sample45705/db/migrate/20230131141426_foo.rb:3:in `change'
Tasks: TOP => db:migrate
(See full trace by running task with --trace)
$
```
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1420685439/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45705
https://api.github.com/repos/rails/rails/issues/comments/1203144850,https://github.com/rails/rails/issues/45691#issuecomment-1203144850,https://api.github.com/repos/rails/rails/issues/45691,1203144850,IC_kwDNIULOR7aIkg,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-08-02T19:46:17Z,2022-08-02T19:46:17Z,MEMBER,"For reference: it seems like https://github.com/mikel/mail/pull/1389 will resolve this. I guess the other issue went stale as it's not clear if there's any way to fix the issue in the Rails codebase.

@jeremy sorry to tag you out of the blue but you're a `mail` committer too... is there any chance you'd be able to look at that PR or tag in someone who could?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1203144850/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45691
https://api.github.com/repos/rails/rails/issues/comments/1297630995,https://github.com/rails/rails/issues/45691#issuecomment-1297630995,https://api.github.com/repos/rails/rails/issues/45691,1297630995,IC_kwDNIULOTVhHEw,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-10-31T20:16:38Z,2022-10-31T20:16:38Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1297630995/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45691
https://api.github.com/repos/rails/rails/issues/comments/1303172114,https://github.com/rails/rails/issues/45691#issuecomment-1303172114,https://api.github.com/repos/rails/rails/issues/45691,1303172114,IC_kwDNIULOTazUEg,"{'login': 'der-flo', 'id': 35431, 'node_id': 'MDQ6VXNlcjM1NDMx', 'avatar_url': 'https://avatars.githubusercontent.com/u/35431?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/der-flo', 'html_url': 'https://github.com/der-flo', 'followers_url': 'https://api.github.com/users/der-flo/followers', 'following_url': 'https://api.github.com/users/der-flo/following{/other_user}', 'gists_url': 'https://api.github.com/users/der-flo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/der-flo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/der-flo/subscriptions', 'organizations_url': 'https://api.github.com/users/der-flo/orgs', 'repos_url': 'https://api.github.com/users/der-flo/repos', 'events_url': 'https://api.github.com/users/der-flo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/der-flo/received_events', 'type': 'User', 'site_admin': False}",2022-11-04T09:32:42Z,2022-11-04T09:32:42Z,NONE,"Thanks again @rails-bot! I can confirm this problem still exists in `7-0-stable` and `main`.
I also checked `mail` version `2.8.0.rc1` - the situation is the same.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1303172114/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45691
https://api.github.com/repos/rails/rails/issues/comments/1413505978,https://github.com/rails/rails/issues/45691#issuecomment-1413505978,https://api.github.com/repos/rails/rails/issues/45691,1413505978,IC_kwDNIULOVEBjug,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-02-02T10:25:51Z,2023-02-02T10:25:51Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1413505978/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45691
https://api.github.com/repos/rails/rails/issues/comments/1425128007,https://github.com/rails/rails/issues/45691#issuecomment-1425128007,https://api.github.com/repos/rails/rails/issues/45691,1425128007,IC_kwDNIULOVPG6Rw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-02-10T03:34:15Z,2023-02-10T03:34:15Z,MEMBER,Is there anything to do on Rails end here? Or just wait for that PR to be merged and released?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1425128007/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45691
https://api.github.com/repos/rails/rails/issues/comments/1543316268,https://github.com/rails/rails/issues/45691#issuecomment-1543316268,https://api.github.com/repos/rails/rails/issues/45691,1543316268,IC_kwDNIULOW_0jLA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-05-11T04:28:58Z,2023-05-11T04:28:58Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1543316268/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45691
https://api.github.com/repos/rails/rails/issues/comments/1303775830,https://github.com/rails/rails/pull/45680#issuecomment-1303775830,https://api.github.com/repos/rails/rails/issues/45680,1303775830,IC_kwDNIULOTbYKVg,"{'login': 'Kevinrob', 'id': 4509277, 'node_id': 'MDQ6VXNlcjQ1MDkyNzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4509277?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Kevinrob', 'html_url': 'https://github.com/Kevinrob', 'followers_url': 'https://api.github.com/users/Kevinrob/followers', 'following_url': 'https://api.github.com/users/Kevinrob/following{/other_user}', 'gists_url': 'https://api.github.com/users/Kevinrob/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Kevinrob/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Kevinrob/subscriptions', 'organizations_url': 'https://api.github.com/users/Kevinrob/orgs', 'repos_url': 'https://api.github.com/users/Kevinrob/repos', 'events_url': 'https://api.github.com/users/Kevinrob/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Kevinrob/received_events', 'type': 'User', 'site_admin': False}",2022-11-04T15:38:10Z,2022-11-04T15:38:10Z,CONTRIBUTOR,@p8 Is there anything else I can do about this PR?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1303775830/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45680
https://api.github.com/repos/rails/rails/issues/comments/1409254947,https://github.com/rails/rails/pull/45680#issuecomment-1409254947,https://api.github.com/repos/rails/rails/issues/45680,1409254947,IC_kwDNIULOU_-GIw,"{'login': 'fiestacasey', 'id': 1323524, 'node_id': 'MDQ6VXNlcjEzMjM1MjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1323524?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fiestacasey', 'html_url': 'https://github.com/fiestacasey', 'followers_url': 'https://api.github.com/users/fiestacasey/followers', 'following_url': 'https://api.github.com/users/fiestacasey/following{/other_user}', 'gists_url': 'https://api.github.com/users/fiestacasey/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fiestacasey/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fiestacasey/subscriptions', 'organizations_url': 'https://api.github.com/users/fiestacasey/orgs', 'repos_url': 'https://api.github.com/users/fiestacasey/repos', 'events_url': 'https://api.github.com/users/fiestacasey/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fiestacasey/received_events', 'type': 'User', 'site_admin': False}",2023-01-30T20:03:05Z,2023-01-30T20:03:05Z,NONE,I have a similar setup and in particular one domain is in charge of authentication and redirecting to the other domain after auth. This is further complicated because the redirect is within Devise and `allow_other_host` isn't controllable without monkey patching either Rails or Devise methods. I'm sure this is the case within a lot of different gems that call `redirect_to` internally so it would be great to be able to define `allowed_redirect_hosts` in this way. ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1409254947/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45680
https://api.github.com/repos/rails/rails/issues/comments/1690072723,https://github.com/rails/rails/pull/45680#issuecomment-1690072723,https://api.github.com/repos/rails/rails/issues/45680,1690072723,IC_kwDNIULOZLx2kw,"{'login': 'tom-lord', 'id': 7573396, 'node_id': 'MDQ6VXNlcjc1NzMzOTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7573396?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tom-lord', 'html_url': 'https://github.com/tom-lord', 'followers_url': 'https://api.github.com/users/tom-lord/followers', 'following_url': 'https://api.github.com/users/tom-lord/following{/other_user}', 'gists_url': 'https://api.github.com/users/tom-lord/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tom-lord/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tom-lord/subscriptions', 'organizations_url': 'https://api.github.com/users/tom-lord/orgs', 'repos_url': 'https://api.github.com/users/tom-lord/repos', 'events_url': 'https://api.github.com/users/tom-lord/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tom-lord/received_events', 'type': 'User', 'site_admin': False}",2023-08-23T14:30:15Z,2023-08-23T14:30:15Z,CONTRIBUTOR,"Any update on this feature?

We've run into the same issue, where we frequently want to redirect between two subdomains. Currently the only option is to disable this security feature and verify manually that the URL is safe.

Additionally, what's odd is that [the `url_from` helper automatically considers other subdomains ""safe""](https://api.rubyonrails.org/v7.0.7/classes/ActionController/Redirecting.html#method-i-url_from) meanwhile `UnsafeRedirectError` will still be raised when redirecting to another subdomain.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1690072723/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45680
https://api.github.com/repos/rails/rails/issues/comments/1193375234,https://github.com/rails/rails/pull/45651#issuecomment-1193375234,https://api.github.com/repos/rails/rails/issues/45651,1193375234,IC_kwDNIULORyF2Ag,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-07-24T19:01:46Z,2022-07-24T19:02:29Z,CONTRIBUTOR,":thinking: To keep it in pair with LOWER it will probably need `upper` method in `Arel::Attributes::Attribute` class as well to be able to use it similar to `User.arel_table[:id].lower`.

https://github.com/rails/rails/blob/76b0ef8d00e3d824c42f3b71319edc15e7aa7a3e/activerecord/lib/arel/attributes/attribute.rb#L18-L20

Anyway since `arel` is considered (sadly) private API and `lower` was implemented most likely only because of case insensitive validations (https://github.com/rails/rails/commit/070c9984a50a5d715a8d2cd3847ae4b603a10d19 + https://github.com/rails/arel/commit/30c7f0e4b365c85b7a910a0553ed936be56b9c4b) I'm not sure this change would be welcomed. :thinking: ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1193375234/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45651
https://api.github.com/repos/rails/rails/issues/comments/1193379296,https://github.com/rails/rails/pull/45651#issuecomment-1193379296,https://api.github.com/repos/rails/rails/issues/45651,1193379296,IC_kwDNIULORyGF4A,"{'login': 'jdufresne', 'id': 347634, 'node_id': 'MDQ6VXNlcjM0NzYzNA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/347634?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jdufresne', 'html_url': 'https://github.com/jdufresne', 'followers_url': 'https://api.github.com/users/jdufresne/followers', 'following_url': 'https://api.github.com/users/jdufresne/following{/other_user}', 'gists_url': 'https://api.github.com/users/jdufresne/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jdufresne/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jdufresne/subscriptions', 'organizations_url': 'https://api.github.com/users/jdufresne/orgs', 'repos_url': 'https://api.github.com/users/jdufresne/repos', 'events_url': 'https://api.github.com/users/jdufresne/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jdufresne/received_events', 'type': 'User', 'site_admin': False}",2022-07-24T19:25:37Z,2022-07-24T19:25:37Z,CONTRIBUTOR,"> To keep it in pair with LOWER it will probably need upper method in Arel::Attributes::Attribute class as well to be able to use it similar to User.arel_table[:id].lower.

Thanks! I added the `upper` method to `Arel::Attributes::Attribute` as well.

> Anyway since arel is considered (sadly) private API

If arel is private, what is the expected approach a Rails project should take to safely write SQL? Using string building may result in unquoted columns that collide with keywords or sometimes present cross-database incompatibilities. The safety of arel is why I use it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1193379296/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45651
https://api.github.com/repos/rails/rails/issues/comments/1193386366,https://github.com/rails/rails/pull/45651#issuecomment-1193386366,https://api.github.com/repos/rails/rails/issues/45651,1193386366,IC_kwDNIULORyGhfg,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-07-24T20:11:14Z,2022-07-24T20:11:14Z,CONTRIBUTOR,"> If arel is private, what is the expected approach a Rails project should take to safely write SQL? Using string building may result in unquoted columns that collide with keywords or sometimes present cross-database incompatibilities. The safety of arel is why I use it.

Feel free to check https://discuss.rubyonrails.org/t/what-has-happened-to-arel/74383/6 for more info. I'm not sure what is currently recommended approach for this, maybe there is none currently.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1193386366/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45651
https://api.github.com/repos/rails/rails/issues/comments/1315719167,https://github.com/rails/rails/issues/45636#issuecomment-1315719167,https://api.github.com/repos/rails/rails/issues/45636,1315719167,IC_kwDNIULOTmxH_w,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-11-15T18:40:16Z,2022-11-15T18:40:16Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1315719167/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45636
https://api.github.com/repos/rails/rails/issues/comments/1315819367,https://github.com/rails/rails/issues/45636#issuecomment-1315819367,https://api.github.com/repos/rails/rails/issues/45636,1315819367,IC_kwDNIULOTm3PZw,"{'login': 'axos88', 'id': 1281218, 'node_id': 'MDQ6VXNlcjEyODEyMTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1281218?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/axos88', 'html_url': 'https://github.com/axos88', 'followers_url': 'https://api.github.com/users/axos88/followers', 'following_url': 'https://api.github.com/users/axos88/following{/other_user}', 'gists_url': 'https://api.github.com/users/axos88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/axos88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/axos88/subscriptions', 'organizations_url': 'https://api.github.com/users/axos88/orgs', 'repos_url': 'https://api.github.com/users/axos88/repos', 'events_url': 'https://api.github.com/users/axos88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/axos88/received_events', 'type': 'User', 'site_admin': False}",2022-11-15T20:19:35Z,2022-11-15T20:19:35Z,NONE,Still a problem.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1315819367/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45636
https://api.github.com/repos/rails/rails/issues/comments/1428629055,https://github.com/rails/rails/issues/45636#issuecomment-1428629055,https://api.github.com/repos/rails/rails/issues/45636,1428629055,IC_kwDNIULOVScmPw,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-02-13T20:23:19Z,2023-02-13T20:23:19Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1428629055/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45636
https://api.github.com/repos/rails/rails/issues/comments/1547513905,https://github.com/rails/rails/issues/45636#issuecomment-1547513905,https://api.github.com/repos/rails/rails/issues/45636,1547513905,IC_kwDNIULOXD0wMQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-05-15T09:34:46Z,2023-05-15T09:34:46Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1547513905/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45636
https://api.github.com/repos/rails/rails/issues/comments/1550421280,https://github.com/rails/rails/issues/45636#issuecomment-1550421280,https://api.github.com/repos/rails/rails/issues/45636,1550421280,IC_kwDNIULOXGmNIA,"{'login': 'axos88', 'id': 1281218, 'node_id': 'MDQ6VXNlcjEyODEyMTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1281218?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/axos88', 'html_url': 'https://github.com/axos88', 'followers_url': 'https://api.github.com/users/axos88/followers', 'following_url': 'https://api.github.com/users/axos88/following{/other_user}', 'gists_url': 'https://api.github.com/users/axos88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/axos88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/axos88/subscriptions', 'organizations_url': 'https://api.github.com/users/axos88/orgs', 'repos_url': 'https://api.github.com/users/axos88/repos', 'events_url': 'https://api.github.com/users/axos88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/axos88/received_events', 'type': 'User', 'site_admin': False}",2023-05-16T22:11:07Z,2023-05-16T22:11:07Z,NONE,Still a problem,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1550421280/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45636
https://api.github.com/repos/rails/rails/issues/comments/1678206470,https://github.com/rails/rails/issues/45636#issuecomment-1678206470,https://api.github.com/repos/rails/rails/issues/45636,1678206470,IC_kwDNIULOZAdmBg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2023-08-14T23:10:50Z,2023-08-14T23:10:50Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1678206470/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45636
https://api.github.com/repos/rails/rails/issues/comments/1678742908,https://github.com/rails/rails/issues/45636#issuecomment-1678742908,https://api.github.com/repos/rails/rails/issues/45636,1678742908,IC_kwDNIULOZA-VfA,"{'login': 'axos88', 'id': 1281218, 'node_id': 'MDQ6VXNlcjEyODEyMTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1281218?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/axos88', 'html_url': 'https://github.com/axos88', 'followers_url': 'https://api.github.com/users/axos88/followers', 'following_url': 'https://api.github.com/users/axos88/following{/other_user}', 'gists_url': 'https://api.github.com/users/axos88/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/axos88/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/axos88/subscriptions', 'organizations_url': 'https://api.github.com/users/axos88/orgs', 'repos_url': 'https://api.github.com/users/axos88/repos', 'events_url': 'https://api.github.com/users/axos88/events{/privacy}', 'received_events_url': 'https://api.github.com/users/axos88/received_events', 'type': 'User', 'site_admin': False}",2023-08-15T10:47:55Z,2023-08-15T10:47:55Z,NONE,Still outstanding,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1678742908/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45636
https://api.github.com/repos/rails/rails/issues/comments/1191942310,https://github.com/rails/rails/pull/45633#issuecomment-1191942310,https://api.github.com/repos/rails/rails/issues/45633,1191942310,IC_kwDNIULORwuYpg,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-07-21T21:14:52Z,2022-07-21T21:24:13Z,MEMBER,"This looks like it would be losing the speed gained in 7834363, definitely want a benchmark to see for sure.

Edit: maybe removing `name = attr_name.to_s` would be sufficient?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1191942310/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45633
https://api.github.com/repos/rails/rails/issues/comments/1192231673,https://github.com/rails/rails/pull/45633#issuecomment-1192231673,https://api.github.com/repos/rails/rails/issues/45633,1192231673,IC_kwDNIULORxAC-Q,"{'login': 'tracyloisel-buyco', 'id': 107251922, 'node_id': 'U_kgDOBmSI0g', 'avatar_url': 'https://avatars.githubusercontent.com/u/107251922?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tracyloisel-buyco', 'html_url': 'https://github.com/tracyloisel-buyco', 'followers_url': 'https://api.github.com/users/tracyloisel-buyco/followers', 'following_url': 'https://api.github.com/users/tracyloisel-buyco/following{/other_user}', 'gists_url': 'https://api.github.com/users/tracyloisel-buyco/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tracyloisel-buyco/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tracyloisel-buyco/subscriptions', 'organizations_url': 'https://api.github.com/users/tracyloisel-buyco/orgs', 'repos_url': 'https://api.github.com/users/tracyloisel-buyco/repos', 'events_url': 'https://api.github.com/users/tracyloisel-buyco/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tracyloisel-buyco/received_events', 'type': 'User', 'site_admin': False}",2022-07-22T06:30:01Z,2022-07-22T06:30:01Z,NONE,"@skipkayhil thank you, we did not need to convert attr_name to string. I have updated accordingly to your feedback, please have a look","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1192231673/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45633
https://api.github.com/repos/rails/rails/issues/comments/1198464204,https://github.com/rails/rails/pull/45633#issuecomment-1198464204,https://api.github.com/repos/rails/rails/issues/45633,1198464204,IC_kwDNIULOR28czA,"{'login': 'kamipo', 'id': 12642, 'node_id': 'MDQ6VXNlcjEyNjQy', 'avatar_url': 'https://avatars.githubusercontent.com/u/12642?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kamipo', 'html_url': 'https://github.com/kamipo', 'followers_url': 'https://api.github.com/users/kamipo/followers', 'following_url': 'https://api.github.com/users/kamipo/following{/other_user}', 'gists_url': 'https://api.github.com/users/kamipo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kamipo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kamipo/subscriptions', 'organizations_url': 'https://api.github.com/users/kamipo/orgs', 'repos_url': 'https://api.github.com/users/kamipo/repos', 'events_url': 'https://api.github.com/users/kamipo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kamipo/received_events', 'type': 'User', 'site_admin': False}",2022-07-28T18:01:29Z,2022-07-28T18:02:30Z,MEMBER,"`_read_attribute` and `_write_attribute` are a private API which had introduced at 08576b94ad4f19dfc368619d7751e211d23dcad8 (be2b98b4ae3397149b713b774e415143c88c4fb7) and #29495 to bypass the slower parts that checks for attribute aliases and custom primary keys.

You can fix the association's attribute checks to aware of attribute aliases without sacrificing performance of the private API.

See also #39495, #39501.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1198464204/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45633
https://api.github.com/repos/rails/rails/issues/comments/1198552406,https://github.com/rails/rails/pull/45633#issuecomment-1198552406,https://api.github.com/repos/rails/rails/issues/45633,1198552406,IC_kwDNIULOR3B1Vg,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-07-28T19:34:21Z,2022-07-28T19:34:21Z,MEMBER,"I think we should benchmark to see what the impact is. I'm not too worried about the hash lookup, a bit more about the `self.class.attribute_aliases` part.

If the impact is negligible, doing alias resolution here would allow to simplify a lot of callers. Because that's far from the first time I see a PR adding alias_attributes support in some part of Active Record, which suggest we're not doing it at the right abstraction level.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1198552406/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45633
https://api.github.com/repos/rails/rails/issues/comments/1198590691,https://github.com/rails/rails/pull/45633#issuecomment-1198590691,https://api.github.com/repos/rails/rails/issues/45633,1198590691,IC_kwDNIULOR3EK4w,"{'login': 'kamipo', 'id': 12642, 'node_id': 'MDQ6VXNlcjEyNjQy', 'avatar_url': 'https://avatars.githubusercontent.com/u/12642?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kamipo', 'html_url': 'https://github.com/kamipo', 'followers_url': 'https://api.github.com/users/kamipo/followers', 'following_url': 'https://api.github.com/users/kamipo/following{/other_user}', 'gists_url': 'https://api.github.com/users/kamipo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kamipo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kamipo/subscriptions', 'organizations_url': 'https://api.github.com/users/kamipo/orgs', 'repos_url': 'https://api.github.com/users/kamipo/repos', 'events_url': 'https://api.github.com/users/kamipo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kamipo/received_events', 'type': 'User', 'site_admin': False}",2022-07-28T20:17:34Z,2022-07-28T20:17:34Z,MEMBER,"If we don't intend to bypass attribute alias resolution, we can just use the `read_attribute` public API.

Now, `read_attribute` has also been improved as much as possible.
See 5575bd7b22e8e11ba8e2fdac4a92aab931d4f9f9, #36052, 27a1ca2bfeda4298bbf44da17d07fac4147a4b1c.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1198590691/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45633
https://api.github.com/repos/rails/rails/issues/comments/1198597655,https://github.com/rails/rails/pull/45633#issuecomment-1198597655,https://api.github.com/repos/rails/rails/issues/45633,1198597655,IC_kwDNIULOR3EmFw,"{'login': 'kamipo', 'id': 12642, 'node_id': 'MDQ6VXNlcjEyNjQy', 'avatar_url': 'https://avatars.githubusercontent.com/u/12642?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kamipo', 'html_url': 'https://github.com/kamipo', 'followers_url': 'https://api.github.com/users/kamipo/followers', 'following_url': 'https://api.github.com/users/kamipo/following{/other_user}', 'gists_url': 'https://api.github.com/users/kamipo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kamipo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kamipo/subscriptions', 'organizations_url': 'https://api.github.com/users/kamipo/orgs', 'repos_url': 'https://api.github.com/users/kamipo/repos', 'events_url': 'https://api.github.com/users/kamipo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kamipo/received_events', 'type': 'User', 'site_admin': False}",2022-07-28T20:26:08Z,2022-07-28T20:26:08Z,MEMBER,"In other words ""You can fix the association's attribute checks to aware of attribute aliases"" in https://github.com/rails/rails/pull/45633#issuecomment-1198464204, if we revert be2b98b4ae3397149b713b774e415143c88c4fb7, the script in #45632 will pass I think.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1198597655/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45633
https://api.github.com/repos/rails/rails/issues/comments/1191289761,https://github.com/rails/rails/issues/45632#issuecomment-1191289761,https://api.github.com/repos/rails/rails/issues/45632,1191289761,IC_kwDNIULORwGjoQ,"{'login': 'tracyloisel', 'id': 48430, 'node_id': 'MDQ6VXNlcjQ4NDMw', 'avatar_url': 'https://avatars.githubusercontent.com/u/48430?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tracyloisel', 'html_url': 'https://github.com/tracyloisel', 'followers_url': 'https://api.github.com/users/tracyloisel/followers', 'following_url': 'https://api.github.com/users/tracyloisel/following{/other_user}', 'gists_url': 'https://api.github.com/users/tracyloisel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tracyloisel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tracyloisel/subscriptions', 'organizations_url': 'https://api.github.com/users/tracyloisel/orgs', 'repos_url': 'https://api.github.com/users/tracyloisel/repos', 'events_url': 'https://api.github.com/users/tracyloisel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tracyloisel/received_events', 'type': 'User', 'site_admin': False}",2022-07-21T09:59:22Z,2022-07-21T09:59:22Z,NONE,Excellent issue documentation @khiav223577 ! thank you,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1191289761/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45632
https://api.github.com/repos/rails/rails/issues/comments/1191500548,https://github.com/rails/rails/issues/45632#issuecomment-1191500548,https://api.github.com/repos/rails/rails/issues/45632,1191500548,IC_kwDNIULORwTbBA,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-07-21T13:41:04Z,2022-07-21T13:41:04Z,CONTRIBUTOR,"@khiav223577 This is a valid suggestion, I think. Feel free to open a PR.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1191500548/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45632
https://api.github.com/repos/rails/rails/issues/comments/1191467712,https://github.com/rails/rails/pull/45629#issuecomment-1191467712,https://api.github.com/repos/rails/rails/issues/45629,1191467712,IC_kwDNIULORwRawA,"{'login': 'aditya-vector', 'id': 4403594, 'node_id': 'MDQ6VXNlcjQ0MDM1OTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4403594?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/aditya-vector', 'html_url': 'https://github.com/aditya-vector', 'followers_url': 'https://api.github.com/users/aditya-vector/followers', 'following_url': 'https://api.github.com/users/aditya-vector/following{/other_user}', 'gists_url': 'https://api.github.com/users/aditya-vector/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/aditya-vector/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/aditya-vector/subscriptions', 'organizations_url': 'https://api.github.com/users/aditya-vector/orgs', 'repos_url': 'https://api.github.com/users/aditya-vector/repos', 'events_url': 'https://api.github.com/users/aditya-vector/events{/privacy}', 'received_events_url': 'https://api.github.com/users/aditya-vector/received_events', 'type': 'User', 'site_admin': False}",2022-07-21T13:11:29Z,2022-07-21T13:11:29Z,CONTRIBUTOR,Thanks for your reviews @fatkodima and @skipkayhil - really appreciate it ❤️ ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1191467712/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45629
https://api.github.com/repos/rails/rails/issues/comments/1197738295,https://github.com/rails/rails/pull/45622#issuecomment-1197738295,https://api.github.com/repos/rails/rails/issues/45622,1197738295,IC_kwDNIULOR2QJNw,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-07-28T06:53:09Z,2022-07-28T06:53:09Z,MEMBER,"This is a nice find, and I agree it should be fixed. However I don't think adding this extra feature to `class_attributes` is the way to go. Its semantic is already quite complex and I'd rather avoid to complexify it.

Could we instead to this as an `eager_load` callback? We could walk down the inheritance tree and resolve the classes as needed.

What do you think?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1197738295/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45622
https://api.github.com/repos/rails/rails/issues/comments/1186631257,https://github.com/rails/rails/pull/45613#issuecomment-1186631257,https://api.github.com/repos/rails/rails/issues/45613,1186631257,IC_kwDNIULORrqOWQ,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2022-07-17T23:35:37Z,2022-07-17T23:35:37Z,MEMBER,"These method definitions provides the enogh information. IMO, So I do not thik we need to provide the version information as comments.

https://github.com/rails/rails/blob/9994d38bc6c1a8662e510d26c0e9ca8c24ab1189/activerecord/lib/active_record/connection_adapters/abstract_mysql_adapter.rb#L125-L131

https://github.com/rails/rails/blob/9994d38bc6c1a8662e510d26c0e9ca8c24ab1189/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L418-L420

https://github.com/rails/rails/blob/9994d38bc6c1a8662e510d26c0e9ca8c24ab1189/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb#L158-L160
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1186631257/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45613
https://api.github.com/repos/rails/rails/issues/comments/1189804074,https://github.com/rails/rails/pull/45613#issuecomment-1189804074,https://api.github.com/repos/rails/rails/issues/45613,1189804074,IC_kwDNIULORur4Kg,"{'login': 'foca', 'id': 437, 'node_id': 'MDQ6VXNlcjQzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/437?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/foca', 'html_url': 'https://github.com/foca', 'followers_url': 'https://api.github.com/users/foca/followers', 'following_url': 'https://api.github.com/users/foca/following{/other_user}', 'gists_url': 'https://api.github.com/users/foca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/foca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/foca/subscriptions', 'organizations_url': 'https://api.github.com/users/foca/orgs', 'repos_url': 'https://api.github.com/users/foca/repos', 'events_url': 'https://api.github.com/users/foca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/foca/received_events', 'type': 'User', 'site_admin': False}",2022-07-20T04:07:41Z,2022-07-20T04:07:41Z,CONTRIBUTOR,"> I do not thik we need to provide the version information as comments.

The comment gets rendered in `api.rubyonrails.com` (and other sites that lift the API docs), right on the method you'll be reading about to understand how to use CTEs.

The implementation in each connection adapter is located pretty deep into ActiveRecord's implementation, and likely not as accessible to newcomers to the framework as the API docs.

Since there is no risk of this comment falling out of date (i.e. the minimum version that supports CTEs on a given engine is not going to change), what is the harm in keeping the comments? 🤔 ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1189804074/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45613
https://api.github.com/repos/rails/rails/issues/comments/1189829008,https://github.com/rails/rails/pull/45613#issuecomment-1189829008,https://api.github.com/repos/rails/rails/issues/45613,1189829008,IC_kwDNIULORutZkA,"{'login': 'fig', 'id': 121632, 'node_id': 'MDQ6VXNlcjEyMTYzMg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/121632?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fig', 'html_url': 'https://github.com/fig', 'followers_url': 'https://api.github.com/users/fig/followers', 'following_url': 'https://api.github.com/users/fig/following{/other_user}', 'gists_url': 'https://api.github.com/users/fig/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fig/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fig/subscriptions', 'organizations_url': 'https://api.github.com/users/fig/orgs', 'repos_url': 'https://api.github.com/users/fig/repos', 'events_url': 'https://api.github.com/users/fig/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fig/received_events', 'type': 'User', 'site_admin': False}",2022-07-20T04:56:06Z,2022-07-20T04:56:06Z,CONTRIBUTOR,"Thank you, @foca .
Additionally, my contribution merely enhances the documentation that is already there. The current documentation deals only with MySQL. My proposal expands that documentation to list all supported databases and their respective minimum versions.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1189829008/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45613
https://api.github.com/repos/rails/rails/issues/comments/1193983224,https://github.com/rails/rails/pull/45613#issuecomment-1193983224,https://api.github.com/repos/rails/rails/issues/45613,1193983224,IC_kwDNIULORyq8-A,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2022-07-25T12:25:21Z,2022-07-27T02:27:04Z,MEMBER,"Thanks for the comment.

As far as I understand, the comment previously added via https://github.com/rails/rails/commit/3c7e190ee8e3474e4ddf00ae0ac3a7c21d6f3d41 to clarify because Rails CI used to run MySQL 8.0 which supports CTE and did not cover the MySQL 5.7. This document does enough job why this commit is needed. 

By clicking `Source: show` or `on GitHub` link, readers can see which versions of databases support common table expressions easily.

https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_common_table_expressions-3F

I prefer not to add comments supported database versions for every `supports_foobar?` methods in different locations, method definitions and documents becaue the current https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_common_table_expressions-3F is clear.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1193983224/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45613
https://api.github.com/repos/rails/rails/issues/comments/1186225633,https://github.com/rails/rails/issues/45609#issuecomment-1186225633,https://api.github.com/repos/rails/rails/issues/45609,1186225633,IC_kwDNIULORrRd4Q,"{'login': 'stanhu', 'id': 963826, 'node_id': 'MDQ6VXNlcjk2MzgyNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/963826?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/stanhu', 'html_url': 'https://github.com/stanhu', 'followers_url': 'https://api.github.com/users/stanhu/followers', 'following_url': 'https://api.github.com/users/stanhu/following{/other_user}', 'gists_url': 'https://api.github.com/users/stanhu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/stanhu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/stanhu/subscriptions', 'organizations_url': 'https://api.github.com/users/stanhu/orgs', 'repos_url': 'https://api.github.com/users/stanhu/repos', 'events_url': 'https://api.github.com/users/stanhu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/stanhu/received_events', 'type': 'User', 'site_admin': False}",2022-07-16T15:58:05Z,2022-07-16T16:34:34Z,CONTRIBUTOR,"Workaround is to do this:

```ruby
ActiveModel::Attribute.const_get(:FromDatabase)
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1186225633/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45609
https://api.github.com/repos/rails/rails/issues/comments/1187715650,https://github.com/rails/rails/issues/45609#issuecomment-1187715650,https://api.github.com/repos/rails/rails/issues/45609,1187715650,IC_kwDNIULORssaQg,"{'login': 'julienchabanon', 'id': 5224704, 'node_id': 'MDQ6VXNlcjUyMjQ3MDQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5224704?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/julienchabanon', 'html_url': 'https://github.com/julienchabanon', 'followers_url': 'https://api.github.com/users/julienchabanon/followers', 'following_url': 'https://api.github.com/users/julienchabanon/following{/other_user}', 'gists_url': 'https://api.github.com/users/julienchabanon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/julienchabanon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/julienchabanon/subscriptions', 'organizations_url': 'https://api.github.com/users/julienchabanon/orgs', 'repos_url': 'https://api.github.com/users/julienchabanon/repos', 'events_url': 'https://api.github.com/users/julienchabanon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/julienchabanon/received_events', 'type': 'User', 'site_admin': False}",2022-07-18T16:33:11Z,2022-07-18T16:45:51Z,NONE,"Indeed, using `:serialize` in a model with an ActiveRecord type does not work anymore:

`serialize :current_user, User`

and adding **User** to `config.active_record.yaml_column_permitted_classes` in `config/application.rb` does not work. Adding `ActiveModel::Attribute::FromDatabase` or `ActiveModel::Attribute.const_get(:User)` or `ActiveModel::Attribute.const_get(:FromDatabase)` does not work either.

Error:
`Tried to load unspecified class: User (Psych::DisallowedClass)`","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1187715650/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45609
https://api.github.com/repos/rails/rails/issues/comments/1187732352,https://github.com/rails/rails/issues/45609#issuecomment-1187732352,https://api.github.com/repos/rails/rails/issues/45609,1187732352,IC_kwDNIULORstbgA,"{'login': 'stanhu', 'id': 963826, 'node_id': 'MDQ6VXNlcjk2MzgyNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/963826?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/stanhu', 'html_url': 'https://github.com/stanhu', 'followers_url': 'https://api.github.com/users/stanhu/followers', 'following_url': 'https://api.github.com/users/stanhu/following{/other_user}', 'gists_url': 'https://api.github.com/users/stanhu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/stanhu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/stanhu/subscriptions', 'organizations_url': 'https://api.github.com/users/stanhu/orgs', 'repos_url': 'https://api.github.com/users/stanhu/repos', 'events_url': 'https://api.github.com/users/stanhu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/stanhu/received_events', 'type': 'User', 'site_admin': False}",2022-07-18T16:46:01Z,2022-07-18T16:46:01Z,CONTRIBUTOR,I had to move the setting of `yaml_column_permitted_classes` into an `after_initialize` block inside `config/application.rb`.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1187732352/reactions', 'total_count': 5, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 5, 'rocket': 0, 'eyes': 0}",,45609
https://api.github.com/repos/rails/rails/issues/comments/1187753265,https://github.com/rails/rails/issues/45609#issuecomment-1187753265,https://api.github.com/repos/rails/rails/issues/45609,1187753265,IC_kwDNIULORsutMQ,"{'login': 'julienchabanon', 'id': 5224704, 'node_id': 'MDQ6VXNlcjUyMjQ3MDQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5224704?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/julienchabanon', 'html_url': 'https://github.com/julienchabanon', 'followers_url': 'https://api.github.com/users/julienchabanon/followers', 'following_url': 'https://api.github.com/users/julienchabanon/following{/other_user}', 'gists_url': 'https://api.github.com/users/julienchabanon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/julienchabanon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/julienchabanon/subscriptions', 'organizations_url': 'https://api.github.com/users/julienchabanon/orgs', 'repos_url': 'https://api.github.com/users/julienchabanon/repos', 'events_url': 'https://api.github.com/users/julienchabanon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/julienchabanon/received_events', 'type': 'User', 'site_admin': False}",2022-07-18T16:54:58Z,2022-07-18T16:54:58Z,NONE,"@stanhu thank you!!! It fixes the issue.

Here is the working config for me in `config/application.rb`:
```
    config.after_initialize do
      # Psych Allow YAML Classes
      config.active_record.yaml_column_permitted_classes = [Symbol, Hash, Array, ActiveSupport::HashWithIndifferentAccess, ActiveModel::Attribute.const_get(:FromDatabase), User, Time]
    end","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1187753265/reactions', 'total_count': 7, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 7, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45609
https://api.github.com/repos/rails/rails/issues/comments/1189633388,https://github.com/rails/rails/issues/45609#issuecomment-1189633388,https://api.github.com/repos/rails/rails/issues/45609,1189633388,IC_kwDNIULORuhdbA,"{'login': 'jywarren', 'id': 24359, 'node_id': 'MDQ6VXNlcjI0MzU5', 'avatar_url': 'https://avatars.githubusercontent.com/u/24359?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jywarren', 'html_url': 'https://github.com/jywarren', 'followers_url': 'https://api.github.com/users/jywarren/followers', 'following_url': 'https://api.github.com/users/jywarren/following{/other_user}', 'gists_url': 'https://api.github.com/users/jywarren/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jywarren/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jywarren/subscriptions', 'organizations_url': 'https://api.github.com/users/jywarren/orgs', 'repos_url': 'https://api.github.com/users/jywarren/repos', 'events_url': 'https://api.github.com/users/jywarren/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jywarren/received_events', 'type': 'User', 'site_admin': False}",2022-07-19T23:03:48Z,2022-07-20T00:46:57Z,NONE,"Thanks! This seemed to be an unexpected breaking change in Rails 5.2.8.1, I understand it's intentional, but I think there could be more notification of the breaking changes in the release notes or elsewhere. I tracked this for a while before finding this here. 

When I try to [address this with permitted classes](https://github.com/publiclab/plots2/pull/11274), the list gets longer and longer as I re-run tests and find new ones each time. 

```ruby
config.active_record.yaml_column_permitted_classes = [OAuth::AccessToken, OAuth::Consumer, Symbol, Net::HTTP, OpenSSL::SSL::SSLContext, OpenSSL::SSL::Session, URI::HTTPS, URI::RFC3986_Parser]
```

Is this really the best way to do it? Honest question, i imagine it balances the risk of allowing some but not all? The vulnerability is great enough to avoid the old default in any production apps?

Thank you very much!!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1189633388/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45609
https://api.github.com/repos/rails/rails/issues/comments/1219291265,https://github.com/rails/rails/issues/45609#issuecomment-1219291265,https://api.github.com/repos/rails/rails/issues/45609,1219291265,IC_kwDNIULOSKzogQ,"{'login': 'masterkain', 'id': 12844, 'node_id': 'MDQ6VXNlcjEyODQ0', 'avatar_url': 'https://avatars.githubusercontent.com/u/12844?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/masterkain', 'html_url': 'https://github.com/masterkain', 'followers_url': 'https://api.github.com/users/masterkain/followers', 'following_url': 'https://api.github.com/users/masterkain/following{/other_user}', 'gists_url': 'https://api.github.com/users/masterkain/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/masterkain/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/masterkain/subscriptions', 'organizations_url': 'https://api.github.com/users/masterkain/orgs', 'repos_url': 'https://api.github.com/users/masterkain/repos', 'events_url': 'https://api.github.com/users/masterkain/events{/privacy}', 'received_events_url': 'https://api.github.com/users/masterkain/received_events', 'type': 'User', 'site_admin': False}",2022-08-18T09:56:37Z,2022-08-18T11:39:07Z,CONTRIBUTOR,"(slightly offtopic since I'm loading yaml manually)
I'm migrating a big table with yaml serialized columns to jsonb, the serialized columns have seen multiple rails versions so the classes inside are quite a bit.

```ruby
::YAML.load_tags['!ruby/object:ActiveRecord::Attribute::FromDatabase'] = ActiveModel::Attribute.const_get(:FromDatabase)
```

this resolves the issue for which `YAML.unsafe_load(record.my_serialized_column)` raises but I get another error:

```
/usr/local/lib/ruby/3.0.0/psych/class_loader.rb:26:in `load': undefined method `empty?' for ActiveModel::Attribute::FromDatabase:Class (NoMethodError)
```
https://github.com/ruby/psych/blob/4-0-stable/lib/psych/class_loader.rb#L26

this running on a Rails 6 codebase + Ruby 3.0.0, in preparation for Rails 7 + Ruby 3.1

anyone knows how to solve this?

also I'm not sure why this apparently has no effect https://github.com/rails/rails/blob/6-0-stable/activerecord/lib/active_record.rb#L195","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1219291265/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45609
https://api.github.com/repos/rails/rails/issues/comments/1268994550,https://github.com/rails/rails/issues/45609#issuecomment-1268994550,https://api.github.com/repos/rails/rails/issues/45609,1268994550,IC_kwDNIULOS6NR9g,"{'login': 'gnumarcelo', 'id': 6064, 'node_id': 'MDQ6VXNlcjYwNjQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6064?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gnumarcelo', 'html_url': 'https://github.com/gnumarcelo', 'followers_url': 'https://api.github.com/users/gnumarcelo/followers', 'following_url': 'https://api.github.com/users/gnumarcelo/following{/other_user}', 'gists_url': 'https://api.github.com/users/gnumarcelo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gnumarcelo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gnumarcelo/subscriptions', 'organizations_url': 'https://api.github.com/users/gnumarcelo/orgs', 'repos_url': 'https://api.github.com/users/gnumarcelo/repos', 'events_url': 'https://api.github.com/users/gnumarcelo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gnumarcelo/received_events', 'type': 'User', 'site_admin': False}",2022-10-05T21:25:46Z,2022-10-06T17:35:18Z,NONE,"> @stanhu thank you!!! It fixes the issue.
> 
> Here is the working config for me in `config/application.rb`:
> 
> ```
>     config.after_initialize do
>       # Psych Allow YAML Classes
>       config.active_record.yaml_column_permitted_classes = [Symbol, Hash, Array, ActiveSupport::HashWithIndifferentAccess, ActiveModel::Attribute.const_get(:FromDatabase), User, Time]
>     end
> ```

After upgrading from 6.0.5.1 to 6.0.6 the fix above stopped working. Placing `config.active_record.yaml_column_permitted_classes` out of the `config.after_initialize` block fixes it.

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1268994550/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45609
https://api.github.com/repos/rails/rails/issues/comments/1269006773,https://github.com/rails/rails/issues/45609#issuecomment-1269006773,https://api.github.com/repos/rails/rails/issues/45609,1269006773,IC_kwDNIULOS6OBtQ,"{'login': 'stanhu', 'id': 963826, 'node_id': 'MDQ6VXNlcjk2MzgyNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/963826?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/stanhu', 'html_url': 'https://github.com/stanhu', 'followers_url': 'https://api.github.com/users/stanhu/followers', 'following_url': 'https://api.github.com/users/stanhu/following{/other_user}', 'gists_url': 'https://api.github.com/users/stanhu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/stanhu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/stanhu/subscriptions', 'organizations_url': 'https://api.github.com/users/stanhu/orgs', 'repos_url': 'https://api.github.com/users/stanhu/repos', 'events_url': 'https://api.github.com/users/stanhu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/stanhu/received_events', 'type': 'User', 'site_admin': False}",2022-10-05T21:37:56Z,2022-10-05T21:47:25Z,CONTRIBUTOR,Does v6.0.6 even have a security update? https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released suggests you need to go to v6.1.6.1.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1269006773/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45609
https://api.github.com/repos/rails/rails/issues/comments/1385267979,https://github.com/rails/rails/issues/45609#issuecomment-1385267979,https://api.github.com/repos/rails/rails/issues/45609,1385267979,IC_kwDNIULOUpGDCw,"{'login': 'etiennebarrie', 'id': 3535, 'node_id': 'MDQ6VXNlcjM1MzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3535?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/etiennebarrie', 'html_url': 'https://github.com/etiennebarrie', 'followers_url': 'https://api.github.com/users/etiennebarrie/followers', 'following_url': 'https://api.github.com/users/etiennebarrie/following{/other_user}', 'gists_url': 'https://api.github.com/users/etiennebarrie/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/etiennebarrie/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/etiennebarrie/subscriptions', 'organizations_url': 'https://api.github.com/users/etiennebarrie/orgs', 'repos_url': 'https://api.github.com/users/etiennebarrie/repos', 'events_url': 'https://api.github.com/users/etiennebarrie/events{/privacy}', 'received_events_url': 'https://api.github.com/users/etiennebarrie/received_events', 'type': 'User', 'site_admin': False}",2023-01-17T11:14:43Z,2023-01-17T11:14:43Z,CONTRIBUTOR,"To go back to the original question, I don't think `ActiveModel::Attribute::FromDatabase` should be made public for this, especially since `ActiveModel::Attribute` is a private API. `ActiveModel::Attribute.const_get(:FromDatabase)` is fine to work around the issue of your database having those already serialized, but you should try to clean that up.

If you have autoloadable classes to be deserialized, you can put that in the `after_initialize`, but since the configs are already copied by that point, you'll need to set it directly to `ActiveRecord` (`ActiveRecord::Base` for Rails < 7.0):
```ruby
    config.after_initialize do
      ActiveRecord.yaml_column_permitted_classes = [Symbol, Hash, Array, ActiveModel::Attribute.const_get(:FromDatabase), ActiveSupport::TimeWithZone, Time, ActiveSupport::TimeZone, User]
    end
```

I put together a sample repo at https://github.com/etiennebarrie/rails-app/tree/45609, here's the commit for Rails 7.0: https://github.com/etiennebarrie/rails-app/commit/7a0de750b3eb78c51da0d968b0f3764b2c4f51a4","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1385267979/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45609
https://api.github.com/repos/rails/rails/issues/comments/1185079647,https://github.com/rails/rails/pull/45603#issuecomment-1185079647,https://api.github.com/repos/rails/rails/issues/45603,1185079647,IC_kwDNIULORqLhXw,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-07-15T01:30:23Z,2022-07-15T01:30:23Z,MEMBER,"> And yet another alternative I considered was a [`ConstantizingProxy`](https://github.com/jonathanhefner/rails/commit/06b2db17ce59a371a1944843476b286323b5259d) class. It is the least invasive / most orthogonal implementation, but it requires wrapping values in a proxy object, which is even less convenient than a proc.

One way to improve the ergonomics of this alternative would be to add a `lazy: true` option to `String#constantize`.  So we would write something like:

```ruby
class_attribute :delivery_job, default: ""ActionMailer::MailDeliveryJob"".constantize(lazy: true)
```

Or in a railtie we would write something like:

```ruby
if delivery_job = options.delete(:delivery_job)
  self.delivery_job = delivery_job.constantize(lazy: true)
end
```
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1185079647/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45603
https://api.github.com/repos/rails/rails/issues/comments/1188215093,https://github.com/rails/rails/pull/45603#issuecomment-1188215093,https://api.github.com/repos/rails/rails/issues/45603,1188215093,IC_kwDNIULORtK5NQ,"{'login': 'jhawthorn', 'id': 131752, 'node_id': 'MDQ6VXNlcjEzMTc1Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/131752?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhawthorn', 'html_url': 'https://github.com/jhawthorn', 'followers_url': 'https://api.github.com/users/jhawthorn/followers', 'following_url': 'https://api.github.com/users/jhawthorn/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhawthorn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhawthorn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhawthorn/subscriptions', 'organizations_url': 'https://api.github.com/users/jhawthorn/orgs', 'repos_url': 'https://api.github.com/users/jhawthorn/repos', 'events_url': 'https://api.github.com/users/jhawthorn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhawthorn/received_events', 'type': 'User', 'site_admin': True}",2022-07-18T19:31:54Z,2022-07-18T19:31:54Z,MEMBER,"I don't feel like this is appropriate on `class_attribute`, as there's nothing class-attribute specific about the problem. We can run into the same issue on a `cattr_accessor` (though we seem to be avoiding these) or a `attr_accessor` on a class.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1188215093/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45603
https://api.github.com/repos/rails/rails/issues/comments/1188303734,https://github.com/rails/rails/pull/45603#issuecomment-1188303734,https://api.github.com/repos/rails/rails/issues/45603,1188303734,IC_kwDNIULORtQTdg,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-07-18T20:58:57Z,2022-07-19T16:36:30Z,MEMBER,"@jhawthorn Thank you for giving this a look!  The reason this concern is so particular to `class_attribute` is due to the way `class_attribute` writes values (namely, by redefining reader methods).

With `attr_accessor` you can write:

```ruby
def delivery_job
  @delivery_job = @delivery_job.constantize if @delivery_job.is_a?(String)
  @delivery_job
end
```

And everything just works.

But with `class_attribute` you have to dance around the actual attribute name because otherwise your reader method will be overwritten each time the attribute is set, and you have instance accessors and predicates that are also impacted by the attribute name.  Hence the [the dozen lines of code in #45476](https://github.com/rails/rails/pull/45476/files#diff-4411c7993e3f8ccfd8e09f44a81f10dfac3ea7dbd44cabd60b369040a00be324R23-R36) to implement this behavior.  And that's with only `instance_reader: true`.  And it still has the problem of allocating a singleton method for every subclass that accesses `destroy_association_async_job` (regardless of whether they've set a custom value).

Though I agree that a `:constantize` option for `class_attribute` doesn't feel quite right.

I'm trying a (new) alternative approach in #45622 by adding support for passing a block to `class_attribute`.  I feel like it's a more general and appropriate solution.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1188303734/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45603
https://api.github.com/repos/rails/rails/issues/comments/1184032885,https://github.com/rails/rails/pull/45597#issuecomment-1184032885,https://api.github.com/repos/rails/rails/issues/45597,1184032885,IC_kwDNIULORpLodQ,"{'login': 'leboshi', 'id': 16550140, 'node_id': 'MDQ6VXNlcjE2NTUwMTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/16550140?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/leboshi', 'html_url': 'https://github.com/leboshi', 'followers_url': 'https://api.github.com/users/leboshi/followers', 'following_url': 'https://api.github.com/users/leboshi/following{/other_user}', 'gists_url': 'https://api.github.com/users/leboshi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/leboshi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/leboshi/subscriptions', 'organizations_url': 'https://api.github.com/users/leboshi/orgs', 'repos_url': 'https://api.github.com/users/leboshi/repos', 'events_url': 'https://api.github.com/users/leboshi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/leboshi/received_events', 'type': 'User', 'site_admin': False}",2022-07-14T06:05:08Z,2022-07-14T06:05:08Z,CONTRIBUTOR,"Hmmmm, looking into the Railties test failures.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1184032885/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45597
https://api.github.com/repos/rails/rails/issues/comments/1194980501,https://github.com/rails/rails/pull/45597#issuecomment-1194980501,https://api.github.com/repos/rails/rails/issues/45597,1194980501,IC_kwDNIULORzn0lQ,"{'login': 'leboshi', 'id': 16550140, 'node_id': 'MDQ6VXNlcjE2NTUwMTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/16550140?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/leboshi', 'html_url': 'https://github.com/leboshi', 'followers_url': 'https://api.github.com/users/leboshi/followers', 'following_url': 'https://api.github.com/users/leboshi/following{/other_user}', 'gists_url': 'https://api.github.com/users/leboshi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/leboshi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/leboshi/subscriptions', 'organizations_url': 'https://api.github.com/users/leboshi/orgs', 'repos_url': 'https://api.github.com/users/leboshi/repos', 'events_url': 'https://api.github.com/users/leboshi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/leboshi/received_events', 'type': 'User', 'site_admin': False}",2022-07-26T04:18:15Z,2022-07-26T04:18:15Z,CONTRIBUTOR,"Wow, ok, @eileencodes, you're awesome.  Thank you for all the feedback!  Here we are again 😅 

@matthewd, I completely agree. The flip side is, yeah, it also feels very 🤔 not to explicitly deprecate it but to _effectively_ deprecate it, still using it only internally to facilitate the ENV var but not objecting when used manually...  I really wasn't sure what was less 🤯 

Before I go diving back in to resolve all this...  This may be a larger conversation, but zooming out and backing up, **what do you think the ideal solution looks like?** Thoughts from someone who loves Rails but isn't a Rails maintainer (😅):
1. In terms of the Principle of Least Surprise, I think I'd expect the simplest solution to work, which is exactly what you suggested, @eileencodes: parsing out the format from the schema dump filename.  (I think I was trying to avoid the complexity of string parsing, but...alas.)
2. I also agree it can be just as surprising if you can independently specify the dump filename and format, as it is now when the filename isn't consulted at all regarding the format: in both cases, you can end up with `schema.rb` in SQL format or vice-versa.  However...
3. In terms of convention-over-configuration, it also seems un-Rails-y to require someone to specify an entire filename just to specify the dump format.  You lose the elegance of the automatic filenames.  If I pin my schema dump filename for my `secondary` database to `secondary_schema.rb` the way Rails would name it for me, and months later I decide to rename the database to `follower` or something, I'd definitely be wondering why in the world I seem to be migrating fine but there's no `follower_schema.rb` appearing!
4. There's already a lot of complexity here: you have the actual AR default set in your config, you have an ENV var overriding it globally but only for a single invocation of whatever you're running, and we're discussing one or more options you can set in the database config YAML to override it for each database.  _And,_ if `ENV[""SCHEMA""]` is also consulted to try to determine the format, we end up having to define orders of precedence and which cases we disallow two things to be set at once.  Is there an opportunity to unify any of this?
5. Specifically, using the ENV var to specify schema format was a surprising update for me, in between submitting the original PR and this one.  It feels like a hotfix-y solution to this problem: it lets you `rake db:schema:dump:primary` and then `SCHEMA_FORMAT=sql rake db:schema:dump:secondary`, etc., but the ability to just `rake db:migrate` is lost to you.  However,
6. The point of @ghiculescu's PR (#44834) was actually that sometimes you need to be able to export _both_ SQL and Ruby formats for the same database.

--------- 

So with all that in mind, what if we change `schema_dump` to accept a hash, as:
```yaml
ghiculescu:
  schema_dump: # no filename specified, so generates ghiculescu_schema.rb and ghiculescu_structure.sql
    format:
      - ruby
      - sql
secret:
  schema_dump: false # no dump
leboshi:
  schema_dump: # generates my_db.rb
    basename: my_db
    format: ruby
someone_else:
  schema_dump: # generates main.rb or main.sql, according to ActiveRecord.schema_format
    basename: main
```
And `format` can be either a single value or an array.  That way
- people who don't want to set a filename but only the format can do so (and still use Rails's default filenames),
- people who need to pin their schema dump filenames down for sharding or other purposes can do so, AND
- people who need none, one, or both schema formats can dump them easily!

I feel like that'd be the most generally applicable system for all use cases, right?

And then I'd love to deprecate both the single string value for `schema_dump`, _and_ both `ENV[""SCHEMA""]` and `ENV[""SCHEMA_FORMAT""]`.  That way, there's no nasty string parsing necessary, and there's no need for any hierarchal conflict detection or resolution.



🥵  Sorry, that was long.  Sorry for turning the PR into an RFC.  Let me know what you think!  Happy to proceed making the changes you recommended above, but I do feel like it's at the point where it might be making a bigger mess to clean up later.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1194980501/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45597
https://api.github.com/repos/rails/rails/issues/comments/1195494909,https://github.com/rails/rails/pull/45597#issuecomment-1195494909,https://api.github.com/repos/rails/rails/issues/45597,1195494909,IC_kwDNIULOR0HN_Q,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-07-26T13:36:29Z,2022-07-26T13:36:29Z,MEMBER,"How would you get the default setup (a single `schema.rb` file)? Would it be this?

```yml
  schema_dump:
    format: ruby
```

And how would all this interact with `ActiveRecord.schema_format`?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1195494909/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45597
https://api.github.com/repos/rails/rails/issues/comments/1195640296,https://github.com/rails/rails/pull/45597#issuecomment-1195640296,https://api.github.com/repos/rails/rails/issues/45597,1195640296,IC_kwDNIULOR0QF6A,"{'login': 'leboshi', 'id': 16550140, 'node_id': 'MDQ6VXNlcjE2NTUwMTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/16550140?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/leboshi', 'html_url': 'https://github.com/leboshi', 'followers_url': 'https://api.github.com/users/leboshi/followers', 'following_url': 'https://api.github.com/users/leboshi/following{/other_user}', 'gists_url': 'https://api.github.com/users/leboshi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/leboshi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/leboshi/subscriptions', 'organizations_url': 'https://api.github.com/users/leboshi/orgs', 'repos_url': 'https://api.github.com/users/leboshi/repos', 'events_url': 'https://api.github.com/users/leboshi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/leboshi/received_events', 'type': 'User', 'site_admin': False}",2022-07-26T15:35:00Z,2022-07-26T15:35:00Z,CONTRIBUTOR,"The default would just be omitted from `database.yml`.  In true Rails fashion, I think the majority of cases wouldn't need to change anything about the schema dump.  It's only if you need to lock down your filename or format that you'd include this at all.

That's a good question about `ActiveRecord.schema_format`.  Back in single db days, that was _the_ setting, right?.  Then when multiple db support was added, it stayed the only setting, which wasn't flexible enough.  With the ENV and `schema_dump` PRs, though, it sort of silently shifted semantics to be a global default.  My inclination is not to touch that.  If you don't specify anything in `database.yml`, it uses the default filename and uses `ActiveRecord.schema_format`.

But maybe at that point it's worth aliasing it as `ActiveRecord.default_schema_format` and deprecating `schema_format`?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1195640296/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45597
https://api.github.com/repos/rails/rails/issues/comments/1183982934,https://github.com/rails/rails/issues/45596#issuecomment-1183982934,https://api.github.com/repos/rails/rails/issues/45596,1183982934,IC_kwDNIULORpIlVg,"{'login': 'leboshi', 'id': 16550140, 'node_id': 'MDQ6VXNlcjE2NTUwMTQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/16550140?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/leboshi', 'html_url': 'https://github.com/leboshi', 'followers_url': 'https://api.github.com/users/leboshi/followers', 'following_url': 'https://api.github.com/users/leboshi/following{/other_user}', 'gists_url': 'https://api.github.com/users/leboshi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/leboshi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/leboshi/subscriptions', 'organizations_url': 'https://api.github.com/users/leboshi/orgs', 'repos_url': 'https://api.github.com/users/leboshi/repos', 'events_url': 'https://api.github.com/users/leboshi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/leboshi/received_events', 'type': 'User', 'site_admin': False}",2022-07-14T04:47:05Z,2022-07-14T04:47:05Z,CONTRIBUTOR,"To clarify: incoming PR does _not_ read the `schema_dump` filename and try to guess what format it should use; rather, it lets you set `schema_format` per-database and assumes that if you're also setting `schema_dump`, you're setting it intelligently.  That seems like the least-surprising behavior to me, without getting into complexities of ""What happens if you pass both?  Which overrides the other?""  Let me know if you disagree!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1183982934/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45596
https://api.github.com/repos/rails/rails/issues/comments/1183666317,https://github.com/rails/rails/pull/45589#issuecomment-1183666317,https://api.github.com/repos/rails/rails/issues/45589,1183666317,IC_kwDNIULORo1QjQ,"{'login': 'radar', 'id': 2687, 'node_id': 'MDQ6VXNlcjI2ODc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2687?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/radar', 'html_url': 'https://github.com/radar', 'followers_url': 'https://api.github.com/users/radar/followers', 'following_url': 'https://api.github.com/users/radar/following{/other_user}', 'gists_url': 'https://api.github.com/users/radar/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/radar/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/radar/subscriptions', 'organizations_url': 'https://api.github.com/users/radar/orgs', 'repos_url': 'https://api.github.com/users/radar/repos', 'events_url': 'https://api.github.com/users/radar/events{/privacy}', 'received_events_url': 'https://api.github.com/users/radar/received_events', 'type': 'User', 'site_admin': False}",2022-07-13T20:51:43Z,2022-07-13T20:53:08Z,CONTRIBUTOR,PSA: ruby-i18n/i18n#633 reverts this change. Standby while we figure out a way to make it work for everyone.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1183666317/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45589
https://api.github.com/repos/rails/rails/issues/comments/1323763250,https://github.com/rails/rails/pull/45589#issuecomment-1323763250,https://api.github.com/repos/rails/rails/issues/45589,1323763250,IC_kwDNIULOTucGMg,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2022-11-22T14:28:11Z,2022-11-22T14:28:11Z,MEMBER,Closing this pull request because https://github.com/ruby-i18n/i18n/pull/633 has been merged. ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1323763250/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45589
https://api.github.com/repos/rails/rails/issues/comments/1416336087,https://github.com/rails/rails/pull/45589#issuecomment-1416336087,https://api.github.com/repos/rails/rails/issues/45589,1416336087,IC_kwDNIULOVGuS1w,"{'login': 'movermeyer', 'id': 1459385, 'node_id': 'MDQ6VXNlcjE0NTkzODU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1459385?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/movermeyer', 'html_url': 'https://github.com/movermeyer', 'followers_url': 'https://api.github.com/users/movermeyer/followers', 'following_url': 'https://api.github.com/users/movermeyer/following{/other_user}', 'gists_url': 'https://api.github.com/users/movermeyer/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/movermeyer/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/movermeyer/subscriptions', 'organizations_url': 'https://api.github.com/users/movermeyer/orgs', 'repos_url': 'https://api.github.com/users/movermeyer/repos', 'events_url': 'https://api.github.com/users/movermeyer/events{/privacy}', 'received_events_url': 'https://api.github.com/users/movermeyer/received_events', 'type': 'User', 'site_admin': False}",2023-02-03T19:54:39Z,2023-02-03T19:54:39Z,CONTRIBUTOR,"@yahonda This should be re-opened. 

https://github.com/ruby-i18n/i18n/pull/634 has been merged, which re-adds ""explicit `0`/`1` key support. With the next release of `ruby-i18n`, we will want this.

It's the same PR as before, but stops short of removing the incorrect `zero` key because of backwards compatibility. That said, it should still not be shown in examples, so it still makes sense to remove it from the docs.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1416336087/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45589
https://api.github.com/repos/rails/rails/issues/comments/1418200938,https://github.com/rails/rails/pull/45589#issuecomment-1418200938,https://api.github.com/repos/rails/rails/issues/45589,1418200938,IC_kwDNIULOVIgHag,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-02-05T17:53:06Z,2023-02-05T17:53:06Z,MEMBER,"What is the downside to keeping `:zero` support as it currently is? I know it goes ""against the spec"", but Rails does that in other places too. I think at the moment this PR is going to make the docs more confusing to beginners for the sake of correctness.

`0` / `1` support are great. If you want to do things exactly by the spec, now you can. But changing how `:zero` works sounds like a very big deprecation job with small upside.

It's also going to get messy for third party libraries. For example, Kaminari could ship both `0` and `:zero` keys. But it sounds like to be most correct, those keys would need to have different values based on what version of `i18n` is being used. I'm not sure how they can do that.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1418200938/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45589
https://api.github.com/repos/rails/rails/issues/comments/1418241070,https://github.com/rails/rails/pull/45589#issuecomment-1418241070,https://api.github.com/repos/rails/rails/issues/45589,1418241070,IC_kwDNIULOVIikLg,"{'login': 'movermeyer', 'id': 1459385, 'node_id': 'MDQ6VXNlcjE0NTkzODU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1459385?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/movermeyer', 'html_url': 'https://github.com/movermeyer', 'followers_url': 'https://api.github.com/users/movermeyer/followers', 'following_url': 'https://api.github.com/users/movermeyer/following{/other_user}', 'gists_url': 'https://api.github.com/users/movermeyer/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/movermeyer/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/movermeyer/subscriptions', 'organizations_url': 'https://api.github.com/users/movermeyer/orgs', 'repos_url': 'https://api.github.com/users/movermeyer/repos', 'events_url': 'https://api.github.com/users/movermeyer/events{/privacy}', 'received_events_url': 'https://api.github.com/users/movermeyer/received_events', 'type': 'User', 'site_admin': False}",2023-02-05T19:08:54Z,2023-02-05T19:13:26Z,CONTRIBUTOR,"@ghiculescu, this is just the documentation change to fix the examples to use the correct pattern. It doesn't remove the incorrect `zero` behaviour.

> What is the downside to keeping :zero support as it currently is?

* As mentioned in the PR description, the use of `zero` prevents you from being able to translate into languages that use `zero`. So when your organization wants to expand its offering to be more languages, you have to find and correct all the places you've being doing it wrong. This can be non-trivial; best to do it right from the beginning.
* Even once the usage is corrected, then you currently need to fork `ruby-i18n`/develop your own `I18n::Backend` that does it correctly. You have no other choice since the behaviour simply doesn't work in those languages. `ruby-i18n` claims to be CLDR compliant so it should work for all languages, but because of this bug, it isn't and doesn't.
* Incorrect understandings of the `zero`/`one`/`two` keys are the most common source of pluralization mistakes among English speaking developers. The Rails docs shouldn't encourage this misunderstanding.

> I think at the moment this PR is going to make the docs more confusing to beginners for the sake of correctness.

Beginners, by their very nature don't know any patterns and will copy what they see.
If we show the correct patterns, they will copy and learn them.
If you still think it's confusing for beginners, then we can simply not mention the `0` key in these examples.

The only people I think that might be confused are people that are using the incorrect `zero` key, and they need to see the correct behaviour in order to learn, just like everyone else.

> I know it goes ""against the spec"", but Rails does that in other places too.

In this case, it costs nothing to follow the spec. Use `0` instead of `zero`.

> But changing how :zero works sounds like a very big deprecation job with small upside.

FWIW, the incorrect `zero` behaviour is still supported by `ruby-i18n`'s `Backend::Pluralization` exactly because removing it is a breaking change.

That doesn't mean that these docs should continue to show the incorrect version.

> For example, Kaminari could ship both 0 and :zero keys.

Sure. Just like everyone today, they will have a bad time when they try to use follow these examples and use `zero` key today for languages that need it.

> But it sounds like to be most correct, those keys would need to have different values based on what version of i18n is being used.

If/when `ruby-i18n` removes the incorrect `zero` behaviour, it will be a breaking change, and a major version bump. We're not there yet. 

This PR just aims to ""stop the bleeding"".

Note that ruby-i18n aims to be CLDR-compliant pluralization, so the incorrect `zero` behaviour is a bug. Of course, some care is needed, precisely because so many English developers have gotten the wrong understanding of it.

----

If you still think it's confusing for beginners, we can:

* simply not mention the `0` key in these examples
* Possibly remove the ""The algorithm for pluralizations"" section","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1418241070/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45589
https://api.github.com/repos/rails/rails/issues/comments/1419453051,https://github.com/rails/rails/pull/45589#issuecomment-1419453051,https://api.github.com/repos/rails/rails/issues/45589,1419453051,IC_kwDNIULOVJsiew,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2023-02-06T17:24:41Z,2023-02-06T17:24:41Z,MEMBER,"> this is just the documentation change to fix the examples to use the correct pattern. It doesn't remove the incorrect `zero` behaviour.

Yeah I'm aware. I wasn't sure the best place to have this discussion - happy to move it elsewhere if you prefer.

> the use of `zero` prevents you from being able to translate into languages that use `zero`.
> ...
> Incorrect understandings of the `zero`/`one`/`two` keys are the most common source of pluralization mistakes among English speaking developers.

It's possible that I'm falling into this trap too! I found find it super helpful if you could share an example of the mistake, that might make the distinction more clear for everyone.

To me what is confusing is that the first key is a number and the rest are words. Hopefully by understanding the issue better we can think of some better ways to explain it.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1419453051/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45589
https://api.github.com/repos/rails/rails/issues/comments/1180577418,https://github.com/rails/rails/issues/45552#issuecomment-1180577418,https://api.github.com/repos/rails/rails/issues/45552,1180577418,IC_kwDNIULORl4uig,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2022-07-11T15:48:31Z,2022-07-11T15:48:31Z,MEMBER,"Hey @net1957 this is an interesting use case. If there's only one database (in a single db app) we never show the individual tasks for primary because that would not be useful. While I think I could fix this I'm not sure that it's correct to.

If you have only one database with tasks turned on and the others have tasks turned off there is no functional difference between `db:migrate` and `db:migrate:primary`. By showing both tasks we're indicating there is a functional difference which could be confusing for users. 

If I fix this I guarantee we're going to get bug reports with "":primary tasks showing when there's only one database with tasks turned on"".  I get that this breaks your script, but I'm also not sure of a use case for wanting to run migrate on one db and not another. These were designed mostly for running tasks in development. It's not often useful for an application to run pending migrations on only one db and not on another (because the app will error when queries on those tables with pending migrations are run).

Can you help me understand the use case for needing the named tasks in a script?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1180577418/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45552
https://api.github.com/repos/rails/rails/issues/comments/1180742879,https://github.com/rails/rails/issues/45552#issuecomment-1180742879,https://api.github.com/repos/rails/rails/issues/45552,1180742879,IC_kwDNIULORmC03w,"{'login': 'net1957', 'id': 17736, 'node_id': 'MDQ6VXNlcjE3NzM2', 'avatar_url': 'https://avatars.githubusercontent.com/u/17736?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/net1957', 'html_url': 'https://github.com/net1957', 'followers_url': 'https://api.github.com/users/net1957/followers', 'following_url': 'https://api.github.com/users/net1957/following{/other_user}', 'gists_url': 'https://api.github.com/users/net1957/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/net1957/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/net1957/subscriptions', 'organizations_url': 'https://api.github.com/users/net1957/orgs', 'repos_url': 'https://api.github.com/users/net1957/repos', 'events_url': 'https://api.github.com/users/net1957/events{/privacy}', 'received_events_url': 'https://api.github.com/users/net1957/received_events', 'type': 'User', 'site_admin': False}",2022-07-11T18:42:49Z,2022-07-11T18:43:56Z,NONE,"The problem appear after adding database_tasks: false to all databases not fully managed by Rails.
This was added to prevent any Rails modifications.
Before this change the task to migrate the primary DB was: 
  rails db:migrate:primary
After the change the task to migrate the primary DB is :
  rails db:migrate

The script that run the migration (managed by  the DB teams) failed and we did have a long time to understand.

This application is often changed to add or remove DB and it happens sometimes that we add a new table managed by rails to this new DB (with a migration file). In this case the migration task name change for the first DB ans this disturb us.

I can understand it's a corner case but perhaps AR should have a parameter to generate the xx:db in all case, off by default.

Regards

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1180742879/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45552
https://api.github.com/repos/rails/rails/issues/comments/1181727243,https://github.com/rails/rails/issues/45552#issuecomment-1181727243,https://api.github.com/repos/rails/rails/issues/45552,1181727243,IC_kwDNIULORm-6Cw,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2022-07-12T12:55:53Z,2022-07-12T13:07:02Z,MEMBER,"> The problem appear after adding database_tasks: false to all databases not fully managed by Rails

Yes but you're essentially telling Rails there's only one database so we never create the task for `db:migrate:primary`.

Basically the problem is that we can't know at this point in the Rails code whether you have a single db app or you have 2 databases and one of them has `database_tasks` set to false.

I considered just hiding the tasks from `rake -T` instead of skipping generating them at all but that would have the risk that someone types a destructive command and ends up confused why it ran the command.

> I can understand it's a corner case but perhaps AR should have a parameter to generate the xx:db in all case, off by default.

I think there's a PR to add an environment variable for the database name in addition to the named tasks. It ended up stale because of conflicts and my availability at the time but it's still on my radar to merge when I get around to it. I think this would solve your case. It would be something like `DATABASE_NAME=primary rake db:migrate`. Let me know what you think. 

EDIT: PR I'm talking about here https://github.com/rails/rails/pull/41387. If it will fix this issue I will prioritize getting it completed this week.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1181727243/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45552
https://api.github.com/repos/rails/rails/issues/comments/1181958480,https://github.com/rails/rails/issues/45552#issuecomment-1181958480,https://api.github.com/repos/rails/rails/issues/45552,1181958480,IC_kwDNIULORnNBUA,"{'login': 'net1957', 'id': 17736, 'node_id': 'MDQ6VXNlcjE3NzM2', 'avatar_url': 'https://avatars.githubusercontent.com/u/17736?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/net1957', 'html_url': 'https://github.com/net1957', 'followers_url': 'https://api.github.com/users/net1957/followers', 'following_url': 'https://api.github.com/users/net1957/following{/other_user}', 'gists_url': 'https://api.github.com/users/net1957/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/net1957/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/net1957/subscriptions', 'organizations_url': 'https://api.github.com/users/net1957/orgs', 'repos_url': 'https://api.github.com/users/net1957/repos', 'events_url': 'https://api.github.com/users/net1957/events{/privacy}', 'received_events_url': 'https://api.github.com/users/net1957/received_events', 'type': 'User', 'site_admin': False}",2022-07-12T16:06:57Z,2022-07-12T16:07:15Z,NONE,"Sometime ago we also did have a dynamic database.yml.erb, but without a good support from Rails we managed to use a more standard database.yml.

So, yes, this change would solve my case.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1181958480/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45552
https://api.github.com/repos/rails/rails/issues/comments/1273539954,https://github.com/rails/rails/issues/45552#issuecomment-1273539954,https://api.github.com/repos/rails/rails/issues/45552,1273539954,IC_kwDNIULOS-itcg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-10-10T16:10:14Z,2022-10-10T16:10:14Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1273539954/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45552
https://api.github.com/repos/rails/rails/issues/comments/1179351528,https://github.com/rails/rails/pull/45549#issuecomment-1179351528,https://api.github.com/repos/rails/rails/issues/45549,1179351528,IC_kwDNIULORkt56A,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2022-07-08T20:51:56Z,2022-07-08T20:51:56Z,CONTRIBUTOR,"@georgeclaghorn since you created this in https://github.com/rails/rails/commit/b2b634137402a82a7dfd60b5646dbd0860a822ca, I'm curious if omitting it from the `:_field` filter set was intentional.

Does this feel like an appropriate improvement?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1179351528/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45549
https://api.github.com/repos/rails/rails/issues/comments/1179354507,https://github.com/rails/rails/pull/45549#issuecomment-1179354507,https://api.github.com/repos/rails/rails/issues/45549,1179354507,IC_kwDNIULORkuFiw,"{'login': 'georgeclaghorn', 'id': 94129, 'node_id': 'MDQ6VXNlcjk0MTI5', 'avatar_url': 'https://avatars.githubusercontent.com/u/94129?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/georgeclaghorn', 'html_url': 'https://github.com/georgeclaghorn', 'followers_url': 'https://api.github.com/users/georgeclaghorn/followers', 'following_url': 'https://api.github.com/users/georgeclaghorn/following{/other_user}', 'gists_url': 'https://api.github.com/users/georgeclaghorn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/georgeclaghorn/subscriptions', 'organizations_url': 'https://api.github.com/users/georgeclaghorn/orgs', 'repos_url': 'https://api.github.com/users/georgeclaghorn/repos', 'events_url': 'https://api.github.com/users/georgeclaghorn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/georgeclaghorn/received_events', 'type': 'User', 'site_admin': False}",2022-07-08T20:56:54Z,2022-07-08T20:56:54Z,CONTRIBUTOR,Not intentional that I remember.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1179354507/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 1, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45549
https://api.github.com/repos/rails/rails/issues/comments/1180664678,https://github.com/rails/rails/pull/45549#issuecomment-1180664678,https://api.github.com/repos/rails/rails/issues/45549,1180664678,IC_kwDNIULORl-DZg,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2022-07-11T17:16:23Z,2022-07-11T17:16:23Z,CONTRIBUTOR,"> @seanpdoyle You are more knowledgeable about Capybara than I. Would you mind elaborating on the mechanisms at play here? 😃
> 
> I cannot [find any documentation](https://github.com/teamcapybara/capybara/search?q=filter_set) for [`filter_set`](https://github.com/teamcapybara/capybara/blob/552842fc5849480715ed66ec4b6eb67014063dfb/lib/capybara/queries/selector_query.rb#L313). I am not sure if that's simply due to a lack of documentation, or because `filter_set` is not a public API. And it is [implemented as a `private` method](https://github.com/teamcapybara/capybara/blob/34493f0386d8f7f7963eab58a3f416dfacfc9028/lib/capybara/queries/selector_query.rb#L186-L313) (though that could just be an implementation detail). Likewise, is the `:_field` set meant to be part of the public API (in terms of relying on / appending to)?

The distinction between public and private and the nature of the `_` prefix in `:_fields` might be a question better suited for @twalpole.

My gut was that the nature of `<trix-editor>` Custom element as a label-friendly field that can be `disabled:`, receive focus, etc. put it squarely into the ""field"" group. If neither `filter_set` nor `:_field` are meant to be consumed outside of Capybara itself, I wonder if there's a more conventional way to extend the `:field` selector.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1180664678/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45549
https://api.github.com/repos/rails/rails/issues/comments/1180667743,https://github.com/rails/rails/pull/45549#issuecomment-1180667743,https://api.github.com/repos/rails/rails/issues/45549,1180667743,IC_kwDNIULORl-PXw,"{'login': 'seanpdoyle', 'id': 2575027, 'node_id': 'MDQ6VXNlcjI1NzUwMjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2575027?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/seanpdoyle', 'html_url': 'https://github.com/seanpdoyle', 'followers_url': 'https://api.github.com/users/seanpdoyle/followers', 'following_url': 'https://api.github.com/users/seanpdoyle/following{/other_user}', 'gists_url': 'https://api.github.com/users/seanpdoyle/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/seanpdoyle/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/seanpdoyle/subscriptions', 'organizations_url': 'https://api.github.com/users/seanpdoyle/orgs', 'repos_url': 'https://api.github.com/users/seanpdoyle/repos', 'events_url': 'https://api.github.com/users/seanpdoyle/events{/privacy}', 'received_events_url': 'https://api.github.com/users/seanpdoyle/received_events', 'type': 'User', 'site_admin': False}",2022-07-11T17:19:31Z,2022-07-11T17:19:31Z,CONTRIBUTOR,"If we're able to incorporate `<trix-editor>` into the rest of Capybara's `field` selector functionality (maybe even [:fillable_field](https://rubydoc.info/github/teamcapybara/capybara/master/Capybara/Selector)), there might be potential to also integrate with the [`fill_in`](https://rubydoc.info/github/teamcapybara/capybara/master/Capybara/Node/Actions:fill_in) action and others like it.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1180667743/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45549
https://api.github.com/repos/rails/rails/issues/comments/1182669169,https://github.com/rails/rails/pull/45549#issuecomment-1182669169,https://api.github.com/repos/rails/rails/issues/45549,1182669169,IC_kwDNIULORn4ZcQ,"{'login': 'twalpole', 'id': 16556, 'node_id': 'MDQ6VXNlcjE2NTU2', 'avatar_url': 'https://avatars.githubusercontent.com/u/16556?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/twalpole', 'html_url': 'https://github.com/twalpole', 'followers_url': 'https://api.github.com/users/twalpole/followers', 'following_url': 'https://api.github.com/users/twalpole/following{/other_user}', 'gists_url': 'https://api.github.com/users/twalpole/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/twalpole/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/twalpole/subscriptions', 'organizations_url': 'https://api.github.com/users/twalpole/orgs', 'repos_url': 'https://api.github.com/users/twalpole/repos', 'events_url': 'https://api.github.com/users/twalpole/events{/privacy}', 'received_events_url': 'https://api.github.com/users/twalpole/received_events', 'type': 'User', 'site_admin': False}",2022-07-13T01:48:54Z,2022-07-13T01:53:51Z,CONTRIBUTOR,Nothing is being added to the :_field filter set here -- `filter_set :_field` just lets the :rich_text_area selector use filters that are already defined in `:_field`. With no array passed as the second parameter to `filter_set` it's copying all the filters from _field into the rich_text_area selector.  If an array is passed as the second parameter only the specified filters would be copied into the rich_text_area selector.  I have no idea how the tests as added here would be passing.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1182669169/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45549
https://api.github.com/repos/rails/rails/issues/comments/1179550848,https://github.com/rails/rails/issues/45548#issuecomment-1179550848,https://api.github.com/repos/rails/rails/issues/45548,1179550848,IC_kwDNIULORk6EgA,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-07-09T14:08:42Z,2022-07-09T14:08:42Z,MEMBER,"I think this is a remnant of upstream `Time` not having proper timezone support: when it was only possible for a `Time` to exist in one of two zones (UTC and ""local""), returning a ""wrong"" UTC time was the only way to have a method that would return the correct hh:mm:ss values (e.g. for string formatting), even though it refers to a different actual moment in time.

Assuming that's right, now that upstream allows specifying a timezone for `localtime`, perhaps we can change `time` to return something more like `utc.dup.localtime(@time_zone)`.

@shouichi would you be interested in looking into this? It sounds to me like it would be a good result, but will need close examination of any compatibility concerns.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1179550848/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45548
https://api.github.com/repos/rails/rails/issues/comments/1179841231,https://github.com/rails/rails/issues/45548#issuecomment-1179841231,https://api.github.com/repos/rails/rails/issues/45548,1179841231,IC_kwDNIULORlLyzw,"{'login': 'shouichi', 'id': 99586, 'node_id': 'MDQ6VXNlcjk5NTg2', 'avatar_url': 'https://avatars.githubusercontent.com/u/99586?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/shouichi', 'html_url': 'https://github.com/shouichi', 'followers_url': 'https://api.github.com/users/shouichi/followers', 'following_url': 'https://api.github.com/users/shouichi/following{/other_user}', 'gists_url': 'https://api.github.com/users/shouichi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/shouichi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/shouichi/subscriptions', 'organizations_url': 'https://api.github.com/users/shouichi/orgs', 'repos_url': 'https://api.github.com/users/shouichi/repos', 'events_url': 'https://api.github.com/users/shouichi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/shouichi/received_events', 'type': 'User', 'site_admin': False}",2022-07-11T00:45:12Z,2022-07-11T00:45:12Z,CONTRIBUTOR,"@matthewd Thank you for the explanation! I opened https://github.com/rails/rails/pull/45558, why don't we continue discussing compatibility concerns with failed tests?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1179841231/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45548
https://api.github.com/repos/rails/rails/issues/comments/1192431281,https://github.com/rails/rails/issues/45548#issuecomment-1192431281,https://api.github.com/repos/rails/rails/issues/45548,1192431281,IC_kwDNIULORxMOsQ,"{'login': 'shouichi', 'id': 99586, 'node_id': 'MDQ6VXNlcjk5NTg2', 'avatar_url': 'https://avatars.githubusercontent.com/u/99586?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/shouichi', 'html_url': 'https://github.com/shouichi', 'followers_url': 'https://api.github.com/users/shouichi/followers', 'following_url': 'https://api.github.com/users/shouichi/following{/other_user}', 'gists_url': 'https://api.github.com/users/shouichi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/shouichi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/shouichi/subscriptions', 'organizations_url': 'https://api.github.com/users/shouichi/orgs', 'repos_url': 'https://api.github.com/users/shouichi/repos', 'events_url': 'https://api.github.com/users/shouichi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/shouichi/received_events', 'type': 'User', 'site_admin': False}",2022-07-22T10:33:09Z,2022-07-22T10:33:09Z,CONTRIBUTOR,Fixing tests and realized that this change affects marshaling which could be dangerous.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1192431281/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45548
https://api.github.com/repos/rails/rails/issues/comments/1180897925,https://github.com/rails/rails/pull/45545#issuecomment-1180897925,https://api.github.com/repos/rails/rails/issues/45545,1180897925,IC_kwDNIULORmMShQ,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-07-11T21:41:17Z,2022-07-12T10:36:42Z,MEMBER,"Thanks for reviewing this!

Enhancing lambdas would be a less drastic change, and I don't think we need to support defining allowed parameters with nested keys like: ""credit_card.code"" or lambdas to modify the values.

Another option for lambdas could be adding the case for arity of 1, which would allow us to rely on the return value.
As we only need to look at the key, the API for lambdas becomes more similar to passing string and regexs [/foo/, ""bar""]:
filter the params if it matches or returns true.

```ruby
Rails.application.config.filter_parameters += [
  lambda { |key| !(key == :id || key.match?(/_id\z/) }
]
```

```ruby
blocks.each do |b|
   case b.arity
   when 1 
     value = @mask if b.call(key)
   when 2
     b.call(key, value)
   when 3
     b.call(key, value, original_params)
   end
end
```

I won't have time to work on this PR for the coming weeks, but I'm happy to continue in August.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1180897925/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45545
https://api.github.com/repos/rails/rails/issues/comments/1182312136,https://github.com/rails/rails/pull/45545#issuecomment-1182312136,https://api.github.com/repos/rails/rails/issues/45545,1182312136,IC_kwDNIULORnimyA,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-07-12T19:10:46Z,2022-07-12T19:10:46Z,MEMBER,"That could work too.  Though branching on `arity == 1` effectively creates two ""classes"" of callables — one where the return value matters and one where it doesn't.  Also, branching on arity can be tricky to get right:

```ruby
proc { |key = ""default_key""| }.arity
# => 0

lambda { |key = ""default_key""| }.arity
# => -1

proc { |key, value = ""ignore me""| }.arity
# => 1

lambda { |key, value = ""ignore me""| }.arity
# => -2

proc { |key, *| }.arity
# => -2

lambda { |key, *| }.arity
# => -2

proc { |*args| key = args.first }.arity
# => -1

lambda { |*args| key = args.first }.arity
# => -1
```
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1182312136/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45545
https://api.github.com/repos/rails/rails/issues/comments/1275971028,https://github.com/rails/rails/pull/45545#issuecomment-1275971028,https://api.github.com/repos/rails/rails/issues/45545,1275971028,IC_kwDNIULOTA3F1A,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-10-12T10:53:43Z,2022-10-12T10:53:43Z,MEMBER,"Hey @jonathanhefner,
Found some time to continue with this...

The current implementation already does some branching on arity, although this doesn't change behaviour in the branches:
https://github.com/rails/rails/blob/f95c0b7e96eb36bc3efc0c5beffbb9e84ea664e4/activesupport/lib/active_support/parameter_filter.rb#L131

Also `ActiveSupport::Notifications.subscribe` will return an `event` object for a single argument proc or methods on that event for multi argument procs:
https://guides.rubyonrails.org/active_support_instrumentation.html#subscribing-to-an-event
But we do some Ruby black magic there it seems, and I'm not sure we want to go there.
https://github.com/rails/rails/blob/main/activesupport/lib/active_support/notifications/fanout.rb#L323-L325

My main concern with the following is that I think it's a bit difficult to reason about with the negation of the match.
And I'm not sure many developers are familiar with the second argument to `throw`.
```ruby
Rails.application.config.filter_parameters += [
  lambda { |key, value| throw :filter, !key.match?(/(\Aid|_id)\z/) }
]
```

Maybe inverting it makes it simpler?
```ruby
Rails.application.config.filter_parameters += [
  lambda { |key, value| throw :allow, key.match?(/(\Aid|_id)\z/) }
]
```

Another option could be a new config setting to enable looking at the return value of the proc.
This would not be a new default, but would allow apps to use it if they want to do allow lists.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1275971028/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45545
https://api.github.com/repos/rails/rails/issues/comments/1310946771,https://github.com/rails/rails/pull/45545#issuecomment-1310946771,https://api.github.com/repos/rails/rails/issues/45545,1310946771,IC_kwDNIULOTiN10w,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-11-10T21:47:25Z,2022-11-10T21:47:25Z,MEMBER,"> Maybe inverting it makes it simpler?
>
> ```ruby
> Rails.application.config.filter_parameters += [
>   lambda { |key, value| throw :allow, key.match?(/(\Aid|_id)\z/) }
> ]
> ```

Syntactically, I like it.  But it implies that the key will be allowed / not filtered regardless of any subsequent filters, and I think that might be difficult to support, because procs are grouped together and processed separately from the other filters.

Thinking about this more, I notice that the example with `id` and `_id` could also be implemented with a negative lookahead or lookbehind regexp:

```ruby
Rails.application.config.filter_parameters = [/\A(?!id\z|.*_id\z)/]
# OR
Rails.application.config.filter_parameters = [/(?<!\Aid|_id)\z/]
```

Though I'm not sure whether other examples would be as simple.  Do you have additional examples of ""allow only"" filters?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1310946771/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45545
https://api.github.com/repos/rails/rails/issues/comments/1193180825,https://github.com/rails/rails/pull/45529#issuecomment-1193180825,https://api.github.com/repos/rails/rails/issues/45529,1193180825,IC_kwDNIULORx5-mQ,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-07-23T20:00:28Z,2022-07-23T21:01:53Z,MEMBER,"I'll add that there is one case I found that I'm not sure of a good way to fix: non-sprockets railties are skipped (so `sprockets/railtie` is required and not `rails/all`) and the application doesn't have a transitive dependency on `sprockets-rails` in their Gemfile.

When they update Rails in the Gemfile and `bundle update`, they will be unable to run `bin/rails app:update` because `require ""sprockets/railtie""` will fail when the update task tries to boot the application.

Edit:
``` 
bin/rails app:update
rails aborted!
LoadError: cannot load such file -- sprockets/railtie
/home/hartley/test/six_one/config/application.rb:15:in `require'
/home/hartley/test/six_one/config/application.rb:15:in `<top (required)>'
/home/hartley/test/six_one/Rakefile:4:in `require_relative'
/home/hartley/test/six_one/Rakefile:4:in `<top (required)>'
/home/hartley/src/github.com/skipkayhil/rails/railties/lib/rails/commands/rake/rake_command.rb:20:in `block in perform'
/home/hartley/src/github.com/skipkayhil/rails/railties/lib/rails/commands/rake/rake_command.rb:18:in `perform'
/home/hartley/src/github.com/skipkayhil/rails/railties/lib/rails/command.rb:51:in `invoke'
/home/hartley/src/github.com/skipkayhil/rails/railties/lib/rails/commands.rb:18:in `<top (required)>'
bin/rails:4:in `require'
bin/rails:4:in `<main>'
(See full trace by running task with --trace)
```

Throwing out an idea: we could try rescuing a `LoadError` in `RakeCommand#perform` or similar and then adding the gem then, but its definitely not clean.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1193180825/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45529
https://api.github.com/repos/rails/rails/issues/comments/1270852397,https://github.com/rails/rails/issues/45500#issuecomment-1270852397,https://api.github.com/repos/rails/rails/issues/45500,1270852397,IC_kwDNIULOS7-rLQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-10-06T23:54:31Z,2022-10-06T23:54:31Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1270852397/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45500
https://api.github.com/repos/rails/rails/issues/comments/1586248296,https://github.com/rails/rails/issues/45500#issuecomment-1586248296,https://api.github.com/repos/rails/rails/issues/45500,1586248296,IC_kwDNIULOXow6aA,"{'login': 'Auralcat', 'id': 20464770, 'node_id': 'MDQ6VXNlcjIwNDY0Nzcw', 'avatar_url': 'https://avatars.githubusercontent.com/u/20464770?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Auralcat', 'html_url': 'https://github.com/Auralcat', 'followers_url': 'https://api.github.com/users/Auralcat/followers', 'following_url': 'https://api.github.com/users/Auralcat/following{/other_user}', 'gists_url': 'https://api.github.com/users/Auralcat/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Auralcat/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Auralcat/subscriptions', 'organizations_url': 'https://api.github.com/users/Auralcat/orgs', 'repos_url': 'https://api.github.com/users/Auralcat/repos', 'events_url': 'https://api.github.com/users/Auralcat/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Auralcat/received_events', 'type': 'User', 'site_admin': False}",2023-06-11T17:03:50Z,2023-06-11T17:03:50Z,NONE,"@ghiculescu @brandoncc @gmcgibbon I'm working on a fix for this issue, I'm polishing the initial solution a bit and preparing the PR description, I should have it opened until tomorrow.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1586248296/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45500
https://api.github.com/repos/rails/rails/issues/comments/1169694199,https://github.com/rails/rails/pull/45488#issuecomment-1169694199,https://api.github.com/repos/rails/rails/issues/45488,1169694199,IC_kwDNIULORbgd9w,"{'login': 'zenspider', 'id': 9832, 'node_id': 'MDQ6VXNlcjk4MzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9832?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zenspider', 'html_url': 'https://github.com/zenspider', 'followers_url': 'https://api.github.com/users/zenspider/followers', 'following_url': 'https://api.github.com/users/zenspider/following{/other_user}', 'gists_url': 'https://api.github.com/users/zenspider/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zenspider/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zenspider/subscriptions', 'organizations_url': 'https://api.github.com/users/zenspider/orgs', 'repos_url': 'https://api.github.com/users/zenspider/repos', 'events_url': 'https://api.github.com/users/zenspider/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zenspider/received_events', 'type': 'User', 'site_admin': False}",2022-06-29T08:36:40Z,2022-06-29T08:36:40Z,CONTRIBUTOR,This is apparently NOT the place to put the env... halp,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1169694199/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45488
https://api.github.com/repos/rails/rails/issues/comments/1169918821,https://github.com/rails/rails/pull/45488#issuecomment-1169918821,https://api.github.com/repos/rails/rails/issues/45488,1169918821,IC_kwDNIULORbuLZQ,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2022-06-29T12:27:31Z,2022-06-29T12:27:31Z,MEMBER,The CI implementation is done in https://github.com/rails/buildkite-config. I can try to get to that later today - I need to figure out how to set the env var for just Ruby 2.7,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1169918821/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45488
https://api.github.com/repos/rails/rails/issues/comments/1170316927,https://github.com/rails/rails/pull/45488#issuecomment-1170316927,https://api.github.com/repos/rails/rails/issues/45488,1170316927,IC_kwDNIULORcGefw,"{'login': 'zenspider', 'id': 9832, 'node_id': 'MDQ6VXNlcjk4MzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9832?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zenspider', 'html_url': 'https://github.com/zenspider', 'followers_url': 'https://api.github.com/users/zenspider/followers', 'following_url': 'https://api.github.com/users/zenspider/following{/other_user}', 'gists_url': 'https://api.github.com/users/zenspider/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zenspider/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zenspider/subscriptions', 'organizations_url': 'https://api.github.com/users/zenspider/orgs', 'repos_url': 'https://api.github.com/users/zenspider/repos', 'events_url': 'https://api.github.com/users/zenspider/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zenspider/received_events', 'type': 'User', 'site_admin': False}",2022-06-29T18:02:50Z,2022-06-29T18:02:50Z,CONTRIBUTOR,"If you'd rather, I can push the env into the subproject's test helper...

The other possibility is to push the circle config into a yml file so changes to it can be part of a PR.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1170316927/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45488
https://api.github.com/repos/rails/rails/issues/comments/1170323205,https://github.com/rails/rails/pull/45488#issuecomment-1170323205,https://api.github.com/repos/rails/rails/issues/45488,1170323205,IC_kwDNIULORcG3BQ,"{'login': 'zenspider', 'id': 9832, 'node_id': 'MDQ6VXNlcjk4MzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9832?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zenspider', 'html_url': 'https://github.com/zenspider', 'followers_url': 'https://api.github.com/users/zenspider/followers', 'following_url': 'https://api.github.com/users/zenspider/following{/other_user}', 'gists_url': 'https://api.github.com/users/zenspider/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zenspider/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zenspider/subscriptions', 'organizations_url': 'https://api.github.com/users/zenspider/orgs', 'repos_url': 'https://api.github.com/users/zenspider/repos', 'events_url': 'https://api.github.com/users/zenspider/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zenspider/received_events', 'type': 'User', 'site_admin': False}",2022-06-29T18:07:58Z,2022-06-29T18:07:58Z,CONTRIBUTOR,"ACTUALLY... I'm a bit confused... that central location should have worked because both abstract_unit.rb and test_common.rb require it so it should have taken.

I just put a ruby version check on it as well and pushed
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1170323205/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45488
https://api.github.com/repos/rails/rails/issues/comments/1170327755,https://github.com/rails/rails/pull/45488#issuecomment-1170327755,https://api.github.com/repos/rails/rails/issues/45488,1170327755,IC_kwDNIULORcHIyw,"{'login': 'zenspider', 'id': 9832, 'node_id': 'MDQ6VXNlcjk4MzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9832?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zenspider', 'html_url': 'https://github.com/zenspider', 'followers_url': 'https://api.github.com/users/zenspider/followers', 'following_url': 'https://api.github.com/users/zenspider/following{/other_user}', 'gists_url': 'https://api.github.com/users/zenspider/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zenspider/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zenspider/subscriptions', 'organizations_url': 'https://api.github.com/users/zenspider/orgs', 'repos_url': 'https://api.github.com/users/zenspider/repos', 'events_url': 'https://api.github.com/users/zenspider/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zenspider/received_events', 'type': 'User', 'site_admin': False}",2022-06-29T18:12:01Z,2022-06-29T18:12:01Z,CONTRIBUTOR,aaand now it won't run my changes... GHA has been having outages all day today... I'm plagued by bad CI,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1170327755/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45488
https://api.github.com/repos/rails/rails/issues/comments/1173178053,https://github.com/rails/rails/pull/45488#issuecomment-1173178053,https://api.github.com/repos/rails/rails/issues/45488,1173178053,IC_kwDNIULORe1GxQ,"{'login': 'zenspider', 'id': 9832, 'node_id': 'MDQ6VXNlcjk4MzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9832?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zenspider', 'html_url': 'https://github.com/zenspider', 'followers_url': 'https://api.github.com/users/zenspider/followers', 'following_url': 'https://api.github.com/users/zenspider/following{/other_user}', 'gists_url': 'https://api.github.com/users/zenspider/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zenspider/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zenspider/subscriptions', 'organizations_url': 'https://api.github.com/users/zenspider/orgs', 'repos_url': 'https://api.github.com/users/zenspider/repos', 'events_url': 'https://api.github.com/users/zenspider/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zenspider/received_events', 'type': 'User', 'site_admin': False}",2022-07-03T21:52:44Z,2022-07-03T21:52:44Z,CONTRIBUTOR,I've released 5.16.2. I don't think that is necessary for the issues I was pointed at as they seem to be fixed via the `MT_KWARGS_HACK` env... fixing buildkite is out of my hands,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1173178053/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45488
https://api.github.com/repos/rails/rails/issues/comments/1331626895,https://github.com/rails/rails/pull/45488#issuecomment-1331626895,https://api.github.com/repos/rails/rails/issues/45488,1331626895,IC_kwDNIULOT18Djw,"{'login': 'zenspider', 'id': 9832, 'node_id': 'MDQ6VXNlcjk4MzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9832?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zenspider', 'html_url': 'https://github.com/zenspider', 'followers_url': 'https://api.github.com/users/zenspider/followers', 'following_url': 'https://api.github.com/users/zenspider/following{/other_user}', 'gists_url': 'https://api.github.com/users/zenspider/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zenspider/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zenspider/subscriptions', 'organizations_url': 'https://api.github.com/users/zenspider/orgs', 'repos_url': 'https://api.github.com/users/zenspider/repos', 'events_url': 'https://api.github.com/users/zenspider/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zenspider/received_events', 'type': 'User', 'site_admin': False}",2022-11-30T04:22:02Z,2022-11-30T04:22:02Z,CONTRIBUTOR,@eileencodes bump?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1331626895/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45488
https://api.github.com/repos/rails/rails/issues/comments/1165629203,https://github.com/rails/rails/pull/45458#issuecomment-1165629203,https://api.github.com/repos/rails/rails/issues/45458,1165629203,IC_kwDNIULORXoXEw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-06-24T14:26:03Z,2022-06-24T14:26:23Z,MEMBER,"I found that `:unknown` service is tested in Active Storage:
https://github.com/rails/rails/blob/d51b17184932f54d60e2098fccbdcceaa76ba753/activestorage/test/models/attached/many_test.rb#L890-L898

That's not _really_ what we want to be testing but it may work okay? It's also possible that Active Storage itself could use some tests for changing the service per attachment and we can figure out something that would work for both","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1165629203/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45458
https://api.github.com/repos/rails/rails/issues/comments/1169203559,https://github.com/rails/rails/pull/45458#issuecomment-1169203559,https://api.github.com/repos/rails/rails/issues/45458,1169203559,IC_kwDNIULORbChZw,"{'login': 'mihaic195', 'id': 34626017, 'node_id': 'MDQ6VXNlcjM0NjI2MDE3', 'avatar_url': 'https://avatars.githubusercontent.com/u/34626017?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mihaic195', 'html_url': 'https://github.com/mihaic195', 'followers_url': 'https://api.github.com/users/mihaic195/followers', 'following_url': 'https://api.github.com/users/mihaic195/following{/other_user}', 'gists_url': 'https://api.github.com/users/mihaic195/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mihaic195/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mihaic195/subscriptions', 'organizations_url': 'https://api.github.com/users/mihaic195/orgs', 'repos_url': 'https://api.github.com/users/mihaic195/repos', 'events_url': 'https://api.github.com/users/mihaic195/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mihaic195/received_events', 'type': 'User', 'site_admin': False}",2022-06-28T20:29:28Z,2022-06-28T20:29:28Z,CONTRIBUTOR,"@skipkayhil I made some updates including tests. Not sure if it's the right way to test it. Probably need to update docs around this if this is accepted. Additionally, when running the tests, the console is screaming with warnings due to redefinitions. Not sure if that is a problem. What do you think?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1169203559/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45458
https://api.github.com/repos/rails/rails/issues/comments/1664605589,https://github.com/rails/rails/pull/45458#issuecomment-1664605589,https://api.github.com/repos/rails/rails/issues/45458,1664605589,IC_kwDNIULOYzfdlQ,"{'login': 'palladius', 'id': 132802, 'node_id': 'MDQ6VXNlcjEzMjgwMg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/132802?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/palladius', 'html_url': 'https://github.com/palladius', 'followers_url': 'https://api.github.com/users/palladius/followers', 'following_url': 'https://api.github.com/users/palladius/following{/other_user}', 'gists_url': 'https://api.github.com/users/palladius/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/palladius/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/palladius/subscriptions', 'organizations_url': 'https://api.github.com/users/palladius/orgs', 'repos_url': 'https://api.github.com/users/palladius/repos', 'events_url': 'https://api.github.com/users/palladius/events{/privacy}', 'received_events_url': 'https://api.github.com/users/palladius/received_events', 'type': 'User', 'site_admin': False}",2023-08-03T20:27:57Z,2023-08-03T20:27:57Z,NONE,Any update here? I love this fix. ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1664605589/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45458
https://api.github.com/repos/rails/rails/issues/comments/1164700391,https://github.com/rails/rails/pull/45442#issuecomment-1164700391,https://api.github.com/repos/rails/rails/issues/45442,1164700391,IC_kwDNIULORWvq5w,"{'login': 'songjiz', 'id': 3747961, 'node_id': 'MDQ6VXNlcjM3NDc5NjE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3747961?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/songjiz', 'html_url': 'https://github.com/songjiz', 'followers_url': 'https://api.github.com/users/songjiz/followers', 'following_url': 'https://api.github.com/users/songjiz/following{/other_user}', 'gists_url': 'https://api.github.com/users/songjiz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/songjiz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/songjiz/subscriptions', 'organizations_url': 'https://api.github.com/users/songjiz/orgs', 'repos_url': 'https://api.github.com/users/songjiz/repos', 'events_url': 'https://api.github.com/users/songjiz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/songjiz/received_events', 'type': 'User', 'site_admin': False}",2022-06-23T17:48:53Z,2022-06-23T17:48:53Z,NONE,related pr https://github.com/rails/rails/pull/33791 and https://github.com/rails/rails/pull/35146,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1164700391/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45442
https://api.github.com/repos/rails/rails/issues/comments/1165411656,https://github.com/rails/rails/pull/45442#issuecomment-1165411656,https://api.github.com/repos/rails/rails/issues/45442,1165411656,IC_kwDNIULORXbFSA,"{'login': 'virolea', 'id': 3525369, 'node_id': 'MDQ6VXNlcjM1MjUzNjk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3525369?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/virolea', 'html_url': 'https://github.com/virolea', 'followers_url': 'https://api.github.com/users/virolea/followers', 'following_url': 'https://api.github.com/users/virolea/following{/other_user}', 'gists_url': 'https://api.github.com/users/virolea/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/virolea/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/virolea/subscriptions', 'organizations_url': 'https://api.github.com/users/virolea/orgs', 'repos_url': 'https://api.github.com/users/virolea/repos', 'events_url': 'https://api.github.com/users/virolea/events{/privacy}', 'received_events_url': 'https://api.github.com/users/virolea/received_events', 'type': 'User', 'site_admin': False}",2022-06-24T09:57:49Z,2022-06-24T09:57:58Z,NONE,"Thanks for point those out @songjiz 
Do you know why it didn't move forward? I can't see any explanation in the linked PRs. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1165411656/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45442
https://api.github.com/repos/rails/rails/issues/comments/1165473240,https://github.com/rails/rails/pull/45442#issuecomment-1165473240,https://api.github.com/repos/rails/rails/issues/45442,1165473240,IC_kwDNIULORXe12A,"{'login': 'songjiz', 'id': 3747961, 'node_id': 'MDQ6VXNlcjM3NDc5NjE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3747961?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/songjiz', 'html_url': 'https://github.com/songjiz', 'followers_url': 'https://api.github.com/users/songjiz/followers', 'following_url': 'https://api.github.com/users/songjiz/following{/other_user}', 'gists_url': 'https://api.github.com/users/songjiz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/songjiz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/songjiz/subscriptions', 'organizations_url': 'https://api.github.com/users/songjiz/orgs', 'repos_url': 'https://api.github.com/users/songjiz/repos', 'events_url': 'https://api.github.com/users/songjiz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/songjiz/received_events', 'type': 'User', 'site_admin': False}",2022-06-24T11:16:48Z,2022-06-24T11:16:48Z,NONE,"@virolea  It's wild, the conversation has been lost. 😅
I seem to remember these methods are to be deprecated. Maybe georgeclaghorn can help with more information","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1165473240/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45442
https://api.github.com/repos/rails/rails/issues/comments/1165487444,https://github.com/rails/rails/pull/45442#issuecomment-1165487444,https://api.github.com/repos/rails/rails/issues/45442,1165487444,IC_kwDNIULORXftVA,"{'login': 'songjiz', 'id': 3747961, 'node_id': 'MDQ6VXNlcjM3NDc5NjE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3747961?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/songjiz', 'html_url': 'https://github.com/songjiz', 'followers_url': 'https://api.github.com/users/songjiz/followers', 'following_url': 'https://api.github.com/users/songjiz/following{/other_user}', 'gists_url': 'https://api.github.com/users/songjiz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/songjiz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/songjiz/subscriptions', 'organizations_url': 'https://api.github.com/users/songjiz/orgs', 'repos_url': 'https://api.github.com/users/songjiz/repos', 'events_url': 'https://api.github.com/users/songjiz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/songjiz/received_events', 'type': 'User', 'site_admin': False}",2022-06-24T11:35:50Z,2022-06-24T11:35:50Z,NONE,"OK, found it https://github.com/rails/rails/pull/33791#issuecomment-418363698","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1165487444/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 1, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45442
https://api.github.com/repos/rails/rails/issues/comments/1165510493,https://github.com/rails/rails/pull/45442#issuecomment-1165510493,https://api.github.com/repos/rails/rails/issues/45442,1165510493,IC_kwDNIULORXhHXQ,"{'login': 'virolea', 'id': 3525369, 'node_id': 'MDQ6VXNlcjM1MjUzNjk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3525369?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/virolea', 'html_url': 'https://github.com/virolea', 'followers_url': 'https://api.github.com/users/virolea/followers', 'following_url': 'https://api.github.com/users/virolea/following{/other_user}', 'gists_url': 'https://api.github.com/users/virolea/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/virolea/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/virolea/subscriptions', 'organizations_url': 'https://api.github.com/users/virolea/orgs', 'repos_url': 'https://api.github.com/users/virolea/repos', 'events_url': 'https://api.github.com/users/virolea/events{/privacy}', 'received_events_url': 'https://api.github.com/users/virolea/received_events', 'type': 'User', 'site_admin': False}",2022-06-24T12:09:05Z,2022-06-24T12:09:05Z,NONE,"Thanks! Looks like George was advocating for a `DirectUpload` object to replace the `*_for_direct_upload` methods in the `Service` class for which I concur. 

I don't see any objections to this in the conversation so Im gonna carry on with George suggestion 🙂","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1165510493/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45442
https://api.github.com/repos/rails/rails/issues/comments/1164201118,https://github.com/rails/rails/pull/45437#issuecomment-1164201118,https://api.github.com/repos/rails/rails/issues/45437,1164201118,IC_kwDNIULORWRMng,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-06-23T09:55:37Z,2022-06-23T09:55:37Z,MEMBER,"These methods are the most egregiously confusing, but I wonder if we should go further, and deprecate the `method_missing` entirely, carving out an explicit delegation for any specific methods we think are worth keeping. I'm inclined to claim that any time a duration silently acts like an integer is similarly surprising. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1164201118/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45437
https://api.github.com/repos/rails/rails/issues/comments/1164457305,https://github.com/rails/rails/pull/45437#issuecomment-1164457305,https://api.github.com/repos/rails/rails/issues/45437,1164457305,IC_kwDNIULORWg1WQ,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-06-23T14:10:43Z,2022-06-23T14:10:53Z,MEMBER,"I had that thought as well. Just running Active Support tests the following methods are used:

`abs` is used when finding time zones, but it could easily be rewritten to not conflate `Numeric` and `Duration`:
https://github.com/rails/rails/blob/b55e8347485e3d8d75b3b5901c2faa3e05c4ebe3/activesupport/lib/active_support/values/time_zone.rb#L242-L245

`in_milliseconds` is defined on the numeric/time core_ext (should it be moved into Duration?):
https://github.com/rails/rails/blob/b55e8347485e3d8d75b3b5901c2faa3e05c4ebe3/activesupport/lib/active_support/core_ext/numeric/time.rb#L63-L65

`to_f` is used to normalize the `expires_at` param in the cache:
https://github.com/rails/rails/blob/b55e8347485e3d8d75b3b5901c2faa3e05c4ebe3/activesupport/lib/active_support/cache.rb#L958

`times` is one of the weirdest, but its also specifically tested for:
https://github.com/rails/rails/blob/b55e8347485e3d8d75b3b5901c2faa3e05c4ebe3/activesupport/test/core_ext/duration_test.rb#L346-L352

`zero?` is used in calculating message expiry but that's pretty easy to change to use `in_seconds`:
https://github.com/rails/rails/blob/b55e8347485e3d8d75b3b5901c2faa3e05c4ebe3/activesupport/lib/active_support/messages/metadata.rb#L35

but its also tested explicitly:
https://github.com/rails/rails/blob/b55e8347485e3d8d75b3b5901c2faa3e05c4ebe3/activesupport/test/core_ext/duration_test.rb#L373


I think `in_milliseconds` and `to_f` may be worth keeping with an explicit delegation but the rest are not. How does that sound?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1164457305/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45437
https://api.github.com/repos/rails/rails/issues/comments/1164672147,https://github.com/rails/rails/pull/45437#issuecomment-1164672147,https://api.github.com/repos/rails/rails/issues/45437,1164672147,IC_kwDNIULORWt8kw,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-06-23T17:18:09Z,2022-06-23T17:18:09Z,MEMBER,"`abs` and `zero?` both sound reasonable to me too: a duration isn't an integer, but is (loosely, though not literally) numeric, so it has the concept of a ""zero"" value, and of being positive/negative.

That `times` test just sounds like it's an arbitrary choice of delegated method, not an affirmative expectation that a duration is countable (which goes to the idea that it's the bad sort of method: unlike the above that [can] treat the duration as a self-defining quantity, `times` is treating it as a count of seconds.

Given it's always been a full delegation, we'll probably need to go through the full list of methods on Integer... there's no historical reason this class would have comprehensive test coverage of its API.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1164672147/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45437
https://api.github.com/repos/rails/rails/issues/comments/1166803654,https://github.com/rails/rails/pull/45437#issuecomment-1166803654,https://api.github.com/repos/rails/rails/issues/45437,1166803654,IC_kwDNIULORYwCxg,"{'login': 'natematykiewicz', 'id': 5104186, 'node_id': 'MDQ6VXNlcjUxMDQxODY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5104186?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/natematykiewicz', 'html_url': 'https://github.com/natematykiewicz', 'followers_url': 'https://api.github.com/users/natematykiewicz/followers', 'following_url': 'https://api.github.com/users/natematykiewicz/following{/other_user}', 'gists_url': 'https://api.github.com/users/natematykiewicz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/natematykiewicz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/natematykiewicz/subscriptions', 'organizations_url': 'https://api.github.com/users/natematykiewicz/orgs', 'repos_url': 'https://api.github.com/users/natematykiewicz/repos', 'events_url': 'https://api.github.com/users/natematykiewicz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/natematykiewicz/received_events', 'type': 'User', 'site_admin': False}",2022-06-27T03:43:39Z,2022-06-27T03:43:39Z,CONTRIBUTOR,"I spotted this like a month ago and should have done something about it. I don't understand the purpose of the method_missing. I feel like it only causes problems.

https://twitter.com/natematykiewicz/status/1529710207059779586","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1166803654/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45437
https://api.github.com/repos/rails/rails/issues/comments/1166804632,https://github.com/rails/rails/pull/45437#issuecomment-1166804632,https://api.github.com/repos/rails/rails/issues/45437,1166804632,IC_kwDNIULORYwGmA,"{'login': 'natematykiewicz', 'id': 5104186, 'node_id': 'MDQ6VXNlcjUxMDQxODY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5104186?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/natematykiewicz', 'html_url': 'https://github.com/natematykiewicz', 'followers_url': 'https://api.github.com/users/natematykiewicz/followers', 'following_url': 'https://api.github.com/users/natematykiewicz/following{/other_user}', 'gists_url': 'https://api.github.com/users/natematykiewicz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/natematykiewicz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/natematykiewicz/subscriptions', 'organizations_url': 'https://api.github.com/users/natematykiewicz/orgs', 'repos_url': 'https://api.github.com/users/natematykiewicz/repos', 'events_url': 'https://api.github.com/users/natematykiewicz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/natematykiewicz/received_events', 'type': 'User', 'site_admin': False}",2022-06-27T03:46:08Z,2022-06-27T03:46:08Z,CONTRIBUTOR,"Also, I was never able to track down when it was added. All I know is it's at least 15 years old and was added when the repo was SVN. Here's the oldest git commit I could find with the method missing in it.

https://github.com/rails/rails/commit/887870f20c347179aef0545ee2019c02ed9f74d1","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1166804632/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45437
https://api.github.com/repos/rails/rails/issues/comments/1169490452,https://github.com/rails/rails/pull/45437#issuecomment-1169490452,https://api.github.com/repos/rails/rails/issues/45437,1169490452,IC_kwDNIULORbUCFA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-06-29T03:19:40Z,2022-06-29T03:19:40Z,MEMBER,"@matthewd updated to implement all of the methods we discussed, I still need to write more tests and documentation but figured I'd ask for another round of feedback first

> Also, I was never able to track down when it was added. All I know is it's at least 15 years old and was added when the repo was SVN. Here's the oldest git commit I could find with the method missing in it.
> 
> [887870f](https://github.com/rails/rails/commit/887870f20c347179aef0545ee2019c02ed9f74d1)

@natematykiewicz  It looks to be part of the original implementation when `Duration` was added in 276c9f29cde80fafa23814b0039f67504255e0fd. My understanding is that since `1.days` and friends previously returned integers, `method_missing` was chosen at the time to reduce the friction of that change.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1169490452/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45437
https://api.github.com/repos/rails/rails/issues/comments/1169504143,https://github.com/rails/rails/pull/45437#issuecomment-1169504143,https://api.github.com/repos/rails/rails/issues/45437,1169504143,IC_kwDNIULORbU3jw,"{'login': 'natematykiewicz', 'id': 5104186, 'node_id': 'MDQ6VXNlcjUxMDQxODY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5104186?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/natematykiewicz', 'html_url': 'https://github.com/natematykiewicz', 'followers_url': 'https://api.github.com/users/natematykiewicz/followers', 'following_url': 'https://api.github.com/users/natematykiewicz/following{/other_user}', 'gists_url': 'https://api.github.com/users/natematykiewicz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/natematykiewicz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/natematykiewicz/subscriptions', 'organizations_url': 'https://api.github.com/users/natematykiewicz/orgs', 'repos_url': 'https://api.github.com/users/natematykiewicz/repos', 'events_url': 'https://api.github.com/users/natematykiewicz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/natematykiewicz/received_events', 'type': 'User', 'site_admin': False}",2022-06-29T03:50:43Z,2022-06-29T03:50:43Z,CONTRIBUTOR,"@skipkayhil Ahh, that makes sense. But nowadays there's no real expectation that it's numeric, so the `method_missing` can do a deprecation cycle and eventually get removed. Nice!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1169504143/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 1, 'eyes': 0}",,45437
https://api.github.com/repos/rails/rails/issues/comments/1264558085,https://github.com/rails/rails/pull/45437#issuecomment-1264558085,https://api.github.com/repos/rails/rails/issues/45437,1264558085,IC_kwDNIULOS1-gBQ,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-10-02T05:44:14Z,2023-03-15T04:44:17Z,MEMBER,"Finally got back around to this, updated to add more deprecations and tests for the new methods.

> I think `*(Duration)` is silently treating `other` as Just A Number, so should probably be deprecated too.

Based on this comment, I thought more about what other operations don't make sense without implicit conversion and added deprecations for the following: 
- comparing Durations and Numerics (`5 > 2.seconds`)
- adding/subtracting Durations and Numerics (`5 + 2.seconds`)
- dividing a Numeric by a Duration (`3 / 2.seconds`)
- Numeric % Duration (`3 % 2.seconds`)
- Duration * Duration (`3.seconds * 2.seconds`)
- `Duration#is_a?` returning true for `value`'s class
- `Duration#instance_of?` returning true for `value`'s class
- equality of Duration and Numeric (`1.minute == 60`)

Something I'm not entirely sure what to do with is `%` and related methods (`modulo`, `divmod`). `%` currently always implicitly treats the caller as a number of seconds:

```ruby
5.minutes % 120 # => 1.minute
7.seconds % 3.seconds # => 1.second

7.minutes % 3 # => 0 seconds
# because 420 seconds is divisible by 3
```

Should `Duration % Numeric` just be deprecated? Or maybe we try to fix it so `7.minutes % 3 # => 1.minute`? I've thought about this for a bit but definitely need to think some more.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1264558085/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45437
https://api.github.com/repos/rails/rails/issues/comments/1163599991,https://github.com/rails/rails/issues/45433#issuecomment-1163599991,https://api.github.com/repos/rails/rails/issues/45433,1163599991,IC_kwDNIULORVsgdw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-06-22T21:05:44Z,2022-06-22T21:26:05Z,MEMBER,"So digging into the `Duration` class it looks like the correct way to do what you want is `in_days`. However, I agree that being able to call `days` on a `Duration` is kind of confusing (it delegates any missing methods to the value, which is the integer number of seconds as you found). I'll dig into the tests to see if there is anything that could be changed, but the `method_missing` behavior is as old as the `Duration` class so it may be difficult.

Edit: yeah `Duration` is treated as a ""number of seconds"" in multiple places in Active Support tests: `abs`, `in_milliseconds`, `times`, `to_f`, and `zero?` are all used in the tests and I imagine even more methods are used in apps. I think the best path forward here is updating the documentation of `Duration` to try to make this behavior more clear.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1163599991/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45433
https://api.github.com/repos/rails/rails/issues/comments/1163628687,https://github.com/rails/rails/issues/45433#issuecomment-1163628687,https://api.github.com/repos/rails/rails/issues/45433,1163628687,IC_kwDNIULORVuQjw,"{'login': 'db00m', 'id': 85647423, 'node_id': 'MDQ6VXNlcjg1NjQ3NDIz', 'avatar_url': 'https://avatars.githubusercontent.com/u/85647423?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/db00m', 'html_url': 'https://github.com/db00m', 'followers_url': 'https://api.github.com/users/db00m/followers', 'following_url': 'https://api.github.com/users/db00m/following{/other_user}', 'gists_url': 'https://api.github.com/users/db00m/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/db00m/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/db00m/subscriptions', 'organizations_url': 'https://api.github.com/users/db00m/orgs', 'repos_url': 'https://api.github.com/users/db00m/repos', 'events_url': 'https://api.github.com/users/db00m/events{/privacy}', 'received_events_url': 'https://api.github.com/users/db00m/received_events', 'type': 'User', 'site_admin': False}",2022-06-22T21:35:14Z,2022-06-22T21:38:51Z,NONE,"Is there a way to remove the ability to call `days` and other methods on `Duration`? I agree that updating the docs would help clear this up, but removing the ability to call those broken methods will help clear up even more confusion.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1163628687/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45433
https://api.github.com/repos/rails/rails/issues/comments/1163780799,https://github.com/rails/rails/issues/45433#issuecomment-1163780799,https://api.github.com/repos/rails/rails/issues/45433,1163780799,IC_kwDNIULORV3ivw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-06-23T00:00:56Z,2022-06-23T00:00:56Z,MEMBER,"> Is there a way to remove the ability to call `days` and other methods on `Duration`?

I also wasn't sure, but got confirmation that we should be able to deprecate them so I opened a PR","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1163780799/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45433
https://api.github.com/repos/rails/rails/issues/comments/1485997599,https://github.com/rails/rails/pull/45432#issuecomment-1485997599,https://api.github.com/repos/rails/rails/issues/45432,1485997599,IC_kwDNIULOWJKGHw,"{'login': 'zzak', 'id': 277819, 'node_id': 'MDQ6VXNlcjI3NzgxOQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/277819?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/zzak', 'html_url': 'https://github.com/zzak', 'followers_url': 'https://api.github.com/users/zzak/followers', 'following_url': 'https://api.github.com/users/zzak/following{/other_user}', 'gists_url': 'https://api.github.com/users/zzak/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/zzak/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/zzak/subscriptions', 'organizations_url': 'https://api.github.com/users/zzak/orgs', 'repos_url': 'https://api.github.com/users/zzak/repos', 'events_url': 'https://api.github.com/users/zzak/events{/privacy}', 'received_events_url': 'https://api.github.com/users/zzak/received_events', 'type': 'User', 'site_admin': False}",2023-03-27T23:34:04Z,2023-03-27T23:34:04Z,MEMBER,"Looks like there is a syntax error causing the build to fail:

```
Unmatched keyword, missing `end' ?
[19](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:20)
    3  module ActionController
[20](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:21)
>  22    class Renderer
[21](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:22)
>  23      attr_reader :controller
[22](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:23)
> 135      def render(*args, &block)
[23](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:24)
> 149      private
[24](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:25)
> 169    end
[25](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:26)
  170  end
[26](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:27)
/home/runner/work/rails/rails/actionpack/lib/action_controller/renderer.rb:150: dynamic constant assignment (SyntaxError)
[27](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:28)
      RACK_KEY_TRANSLATION = {
[28](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:29)
      ^~~~~~~~~~~~~~~~~~~~
[29](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:30)
/home/runner/work/rails/rails/actionpack/lib/action_controller/renderer.rb:158: dynamic constant assignment
[30](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:31)
      DEFAULT_ENV = normalize_env(DEFAULTS).fr...
[31](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:32)
      ^~~~~~~~~~~
[32](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:33)
/home/runner/work/rails/rails/actionpack/lib/action_controller/renderer.rb:170: syntax error, unexpected end-of-input
[33](https://github.com/rails/rails/actions/runs/4386882052/jobs/7681492220?pr=45432#step:6:34)
```

Could you take a look?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1485997599/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45432
https://api.github.com/repos/rails/rails/issues/comments/1252841808,https://github.com/rails/rails/issues/45431#issuecomment-1252841808,https://api.github.com/repos/rails/rails/issues/45431,1252841808,IC_kwDNIULOSqzZUA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-09-20T19:59:43Z,2022-09-20T19:59:43Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1252841808/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45431
https://api.github.com/repos/rails/rails/issues/comments/1252872884,https://github.com/rails/rails/issues/45431#issuecomment-1252872884,https://api.github.com/repos/rails/rails/issues/45431,1252872884,IC_kwDNIULOSq1StA,"{'login': 'simmerz', 'id': 24327, 'node_id': 'MDQ6VXNlcjI0MzI3', 'avatar_url': 'https://avatars.githubusercontent.com/u/24327?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simmerz', 'html_url': 'https://github.com/simmerz', 'followers_url': 'https://api.github.com/users/simmerz/followers', 'following_url': 'https://api.github.com/users/simmerz/following{/other_user}', 'gists_url': 'https://api.github.com/users/simmerz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simmerz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simmerz/subscriptions', 'organizations_url': 'https://api.github.com/users/simmerz/orgs', 'repos_url': 'https://api.github.com/users/simmerz/repos', 'events_url': 'https://api.github.com/users/simmerz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simmerz/received_events', 'type': 'User', 'site_admin': False}",2022-09-20T20:24:49Z,2022-09-20T20:24:49Z,NONE,Is this something that can be looked at?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1252872884/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45431
https://api.github.com/repos/rails/rails/issues/comments/1252911330,https://github.com/rails/rails/issues/45431#issuecomment-1252911330,https://api.github.com/repos/rails/rails/issues/45431,1252911330,IC_kwDNIULOSq3o4g,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2022-09-20T21:05:26Z,2022-09-20T21:05:26Z,MEMBER,Feel free to send a PR.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1252911330/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45431
https://api.github.com/repos/rails/rails/issues/comments/1163301453,https://github.com/rails/rails/pull/45422#issuecomment-1163301453,https://api.github.com/repos/rails/rails/issues/45422,1163301453,IC_kwDNIULORVaSTQ,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-06-22T15:58:55Z,2022-06-22T15:58:55Z,MEMBER,"> I'm not sure a large list of versions is a problem that justify a new extra page

Although this PR does prevent the ""welcome"" message from growing too long, the intent is more about providing a dedicated page to link to.

Whenever I visit a guide and see the version badge displaying the wrong version (i.e. not the version I want), my instinct is to click the badge.  I believe the thought process is ""this thing is wrong"" => ""click it to change it"".  We could link the version badge to https://guides.rubyonrails.org/index.html instead, and let the user navigate from there, but I feel like a dedicated versions page is more natural.

Also, having a dedicated page will avoid incomplete version listings in older guides.  For example, https://guides.rubyonrails.org/v6.1/index.html lists guides for Rails <= 6.0 only.  It does state ""earlier releases"", so it is technically correct.  But, if a user doesn't know that Rails 7.0 exists, they might misunderstand it as an exhaustive list of versions.

Also, I would like to submit another PR that versions the ""API"" link in the top nav bar (e.g. link to https://api.rubyonrails.org/v6.1.5.1/ when visiting https://guides.rubyonrails.org/v6.1.5.1/).  But it is right next to an unversioned ""Guides"" link.  I would like to also remove that ""Guides"" link, but it currently provides the only way to click from e.g. https://guides.rubyonrails.org/v6.0/ => https://guides.rubyonrails.org/ => https://guides.rubyonrails.org/v6.1/.  A versions page link in the ""welcome"" message could change that flow to https://guides.rubyonrails.org/v6.0/ => https://guides.rubyonrails.org/versions.html => https://guides.rubyonrails.org/v6.1/, and allow me to remove the ""Guides"" link in the nav bar.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1163301453/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45422
https://api.github.com/repos/rails/rails/issues/comments/1193278755,https://github.com/rails/rails/pull/45413#issuecomment-1193278755,https://api.github.com/repos/rails/rails/issues/45413,1193278755,IC_kwDNIULORx_9Iw,"{'login': 'OuYangJinTing', 'id': 33079237, 'node_id': 'MDQ6VXNlcjMzMDc5MjM3', 'avatar_url': 'https://avatars.githubusercontent.com/u/33079237?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OuYangJinTing', 'html_url': 'https://github.com/OuYangJinTing', 'followers_url': 'https://api.github.com/users/OuYangJinTing/followers', 'following_url': 'https://api.github.com/users/OuYangJinTing/following{/other_user}', 'gists_url': 'https://api.github.com/users/OuYangJinTing/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OuYangJinTing/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OuYangJinTing/subscriptions', 'organizations_url': 'https://api.github.com/users/OuYangJinTing/orgs', 'repos_url': 'https://api.github.com/users/OuYangJinTing/repos', 'events_url': 'https://api.github.com/users/OuYangJinTing/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OuYangJinTing/received_events', 'type': 'User', 'site_admin': False}",2022-07-24T09:16:25Z,2022-07-24T09:23:41Z,CONTRIBUTOR,"This is a good feature. If it be merged main, I will try to use it instead of [goldiloader](https://github.com/salsify/goldiloader) gem.
But this seems to break [`ActiveRecord::Associations::Preloader::Branch` feature](https://github.com/rails/rails/pull/41596), maybe should to leave a note in guides.

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1193278755/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45413
https://api.github.com/repos/rails/rails/issues/comments/1165526122,https://github.com/rails/rails/issues/45405#issuecomment-1165526122,https://api.github.com/repos/rails/rails/issues/45405,1165526122,IC_kwDNIULORXiEag,"{'login': 'mihaic195', 'id': 34626017, 'node_id': 'MDQ6VXNlcjM0NjI2MDE3', 'avatar_url': 'https://avatars.githubusercontent.com/u/34626017?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mihaic195', 'html_url': 'https://github.com/mihaic195', 'followers_url': 'https://api.github.com/users/mihaic195/followers', 'following_url': 'https://api.github.com/users/mihaic195/following{/other_user}', 'gists_url': 'https://api.github.com/users/mihaic195/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mihaic195/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mihaic195/subscriptions', 'organizations_url': 'https://api.github.com/users/mihaic195/orgs', 'repos_url': 'https://api.github.com/users/mihaic195/repos', 'events_url': 'https://api.github.com/users/mihaic195/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mihaic195/received_events', 'type': 'User', 'site_admin': False}",2022-06-24T12:29:15Z,2022-06-24T12:29:15Z,CONTRIBUTOR,"How could this be tested? In a test environment, when writing the test, you need to create a blob first and then create the rich text with the blob inside it. When creating the blob in tests, it would automatically use the ActiveStorage config which uses `test` service. Any ideas?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1165526122/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45405
https://api.github.com/repos/rails/rails/issues/comments/1165570321,https://github.com/rails/rails/issues/45405#issuecomment-1165570321,https://api.github.com/repos/rails/rails/issues/45405,1165570321,IC_kwDNIULORXkxEQ,"{'login': 'simmerz', 'id': 24327, 'node_id': 'MDQ6VXNlcjI0MzI3', 'avatar_url': 'https://avatars.githubusercontent.com/u/24327?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simmerz', 'html_url': 'https://github.com/simmerz', 'followers_url': 'https://api.github.com/users/simmerz/followers', 'following_url': 'https://api.github.com/users/simmerz/following{/other_user}', 'gists_url': 'https://api.github.com/users/simmerz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simmerz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simmerz/subscriptions', 'organizations_url': 'https://api.github.com/users/simmerz/orgs', 'repos_url': 'https://api.github.com/users/simmerz/repos', 'events_url': 'https://api.github.com/users/simmerz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simmerz/received_events', 'type': 'User', 'site_admin': False}",2022-06-24T13:22:07Z,2022-06-24T13:22:07Z,NONE,"Hmm. In the real world, when using `has_rich_text` and inserting a file, it does a direct upload, which broadly does the same thing right? It uses the ActiveStorage config that is default, in the absence of anything specified, just as it would if it were a normal `has_x_attached` without a specified service.

On the plus side, the implementation would be really no different to how it would need to be tested.

How does direct upload for a has_x_attached currently deal with the relevant config for the service? Could this be an approach we could take?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1165570321/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45405
https://api.github.com/repos/rails/rails/issues/comments/1165572124,https://github.com/rails/rails/issues/45405#issuecomment-1165572124,https://api.github.com/repos/rails/rails/issues/45405,1165572124,IC_kwDNIULORXk4HA,"{'login': 'sedubois', 'id': 4217871, 'node_id': 'MDQ6VXNlcjQyMTc4NzE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4217871?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sedubois', 'html_url': 'https://github.com/sedubois', 'followers_url': 'https://api.github.com/users/sedubois/followers', 'following_url': 'https://api.github.com/users/sedubois/following{/other_user}', 'gists_url': 'https://api.github.com/users/sedubois/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sedubois/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sedubois/subscriptions', 'organizations_url': 'https://api.github.com/users/sedubois/orgs', 'repos_url': 'https://api.github.com/users/sedubois/repos', 'events_url': 'https://api.github.com/users/sedubois/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sedubois/received_events', 'type': 'User', 'site_admin': False}",2022-06-24T13:23:55Z,2022-06-24T13:25:29Z,CONTRIBUTOR,"> Not sure of the best way to go about passing that through though, so it’s configurable per rich text, rather than globally.

Maybe one option could be to pass the service name as a property of a specialized `ActionText::RichText` subclass (NB: I did not test at all).

```rb
# actiontext/lib/action_text/attribute.rb
module ActionText
  module Attribute
    # ...
    class_methods do
      def has_rich_text(name, encrypted: false, service: nil)
        # ...
        rich_text_class_name = if service
          Object.const_set(""ActionText::#{service.capitalize}ServiceRichText"", Class.new(ActionText::RichText) do
            self.embeds_service_name = service
          end.name unless ActionText.const_defined?(""#{service.capitalize}ServiceRichText"")
        elsif encrypted
          ""ActionText::EncryptedRichText""
        else
          ""ActionText::RichText""
        end
      end
    end
  end
end

# actiontext/app/models/actiontext/rich_text.rb
module ActionText
  class RichText < Record
    has_many_attached :embeds, service: self.embeds_service_name
    # ...
  end
end

# app/models/post.rb
class Post
  has_rich_text :body, service: :public
end
```

Alternately, require the class to be defined in userland:

```rb
# actiontext/lib/action_text/attribute.rb
module ActionText
  module Attribute
    # ...
    class_methods do
      # maybe keep encrypted param too, for backwards compatibility, but deprecate it?
      def has_rich_text(name, class_name: ""ActionText::RichText"", encrypted: false)
        # ...
      end
    end
  end
end

# app/models/action_text/public_service_rich_text.rb
module ActionText
  class PublicServiceRichText < RichText
    self.embeds_service_name = :public
  end
end

# app/models/post.rb
class Post
  has_rich_text :body, class_name: ""ActionText::PublicServiceRichText""
end
```
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1165572124/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45405
https://api.github.com/repos/rails/rails/issues/comments/1165586196,https://github.com/rails/rails/issues/45405#issuecomment-1165586196,https://api.github.com/repos/rails/rails/issues/45405,1165586196,IC_kwDNIULORXlvFA,"{'login': 'mihaic195', 'id': 34626017, 'node_id': 'MDQ6VXNlcjM0NjI2MDE3', 'avatar_url': 'https://avatars.githubusercontent.com/u/34626017?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/mihaic195', 'html_url': 'https://github.com/mihaic195', 'followers_url': 'https://api.github.com/users/mihaic195/followers', 'following_url': 'https://api.github.com/users/mihaic195/following{/other_user}', 'gists_url': 'https://api.github.com/users/mihaic195/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/mihaic195/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/mihaic195/subscriptions', 'organizations_url': 'https://api.github.com/users/mihaic195/orgs', 'repos_url': 'https://api.github.com/users/mihaic195/repos', 'events_url': 'https://api.github.com/users/mihaic195/events{/privacy}', 'received_events_url': 'https://api.github.com/users/mihaic195/received_events', 'type': 'User', 'site_admin': False}",2022-06-24T13:39:30Z,2022-06-24T13:39:30Z,CONTRIBUTOR,"I came up with something like this, but not sure how to test it. All current tests seem to be green.

```ruby
def has_rich_text(name, encrypted: false, **options)
        class_eval <<-CODE, __FILE__, __LINE__ + 1
          def #{name}
            rich_text_#{name} || build_rich_text_#{name}
          end

          def #{name}?
            rich_text_#{name}.present?
          end

          def #{name}=(body)
            self.#{name}.body = body
          end
        CODE

        rich_text_class_name = encrypted ? ""ActionText::EncryptedRichText"" : ""ActionText::RichText""

        raise ""Can't use strict_loading on attachment when rich text attribute is encrypted"" if encrypted && options[:attachment_strict_loading]

        rich_text_class_name.safe_constantize.class_eval do
          if encrypted
            has_many_attached :embeds, service: options[:attachment_service]
          else
            has_many_attached :embeds, service: options[:attachment_service], strict_loading: options[:attachment_strict_loading] || false
          end
        end

        has_one :""rich_text_#{name}"", -> { where(name: name) },
          class_name: rich_text_class_name, as: :record, inverse_of: :record, autosave: true, dependent: :destroy

        scope :""with_rich_text_#{name}"", -> { includes(""rich_text_#{name}"") }
        scope :""with_rich_text_#{name}_and_embeds"", -> { includes(""rich_text_#{name}"": { embeds_attachments: :blob }) }
      end
```

Basically, you can pass `attachment_service` and `attachment_strict_loading` argument when defining the `has_rich_text` attribute.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1165586196/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45405
https://api.github.com/repos/rails/rails/issues/comments/1165615116,https://github.com/rails/rails/issues/45405#issuecomment-1165615116,https://api.github.com/repos/rails/rails/issues/45405,1165615116,IC_kwDNIULORXngDA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-06-24T14:10:49Z,2022-06-24T14:10:49Z,MEMBER,"> I came up with something like this, but not sure how to test it. All current tests seem to be green.

Feel free to open a PR with what you have. Tests can be discussed over there and its easier to review code in the context","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1165615116/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45405
https://api.github.com/repos/rails/rails/issues/comments/1255167336,https://github.com/rails/rails/issues/45405#issuecomment-1255167336,https://api.github.com/repos/rails/rails/issues/45405,1255167336,IC_kwDNIULOStBVaA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-09-22T15:09:37Z,2022-09-22T15:09:37Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1255167336/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45405
https://api.github.com/repos/rails/rails/issues/comments/1208239095,https://github.com/rails/rails/pull/45403#issuecomment-1208239095,https://api.github.com/repos/rails/rails/issues/45403,1208239095,IC_kwDNIULOSARD9w,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-08-08T14:57:04Z,2022-08-08T14:57:04Z,MEMBER,"I haven't taken the time to actually invent examples, but my recollection is that ordering of left joins can affect the query results (at least, I have strong memories that the PostgreSQL optimizer is more limited in how it can reorder a LEFT JOIN-using query plan over an otherwise equivalent JOIN version). @sampatbadhe  are you certain this is safe?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1208239095/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45403
https://api.github.com/repos/rails/rails/issues/comments/1208268791,https://github.com/rails/rails/pull/45403#issuecomment-1208268791,https://api.github.com/repos/rails/rails/issues/45403,1208268791,IC_kwDNIULOSAS39w,"{'login': 'sampatbadhe', 'id': 5279284, 'node_id': 'MDQ6VXNlcjUyNzkyODQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5279284?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sampatbadhe', 'html_url': 'https://github.com/sampatbadhe', 'followers_url': 'https://api.github.com/users/sampatbadhe/followers', 'following_url': 'https://api.github.com/users/sampatbadhe/following{/other_user}', 'gists_url': 'https://api.github.com/users/sampatbadhe/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sampatbadhe/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sampatbadhe/subscriptions', 'organizations_url': 'https://api.github.com/users/sampatbadhe/orgs', 'repos_url': 'https://api.github.com/users/sampatbadhe/repos', 'events_url': 'https://api.github.com/users/sampatbadhe/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sampatbadhe/received_events', 'type': 'User', 'site_admin': False}",2022-08-08T15:20:54Z,2022-08-08T15:20:54Z,CONTRIBUTOR,"@matthewd Thank you for your review. 

> I haven't taken the time to actually invent examples, but my recollection is that ordering of left joins can affect the query results (at least, I have strong memories that the PostgreSQL optimizer is more limited in how it can reorder a LEFT JOIN-using query plan over an otherwise equivalent JOIN version). @sampatbadhe are you certain this is safe?

I'll re-verify with LEFT-JOIN on local and share the result.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1208268791/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45403
https://api.github.com/repos/rails/rails/issues/comments/1161311212,https://github.com/rails/rails/pull/45393#issuecomment-1161311212,https://api.github.com/repos/rails/rails/issues/45393,1161311212,IC_kwDNIULORTgz7A,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-06-21T06:17:31Z,2022-06-21T06:17:31Z,MEMBER,"> Note that many clients make an exception for POST, and will use GET to follow a 302 redirect in that case.

I think this is probably worth specific discussion.

The version of this change that I had pictured after seeing hotwired/turbo#84 (via #45383) had us retaining the legacy 302 status for ""legacy HTTP actions"", rather than safe/idempotent ones... which leaves us joining in the codification of existing non-conforming practice, but seems like it gives a decent reduction in potential surprise?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1161311212/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45393
https://api.github.com/repos/rails/rails/issues/comments/1162025297,https://github.com/rails/rails/pull/45393#issuecomment-1162025297,https://api.github.com/repos/rails/rails/issues/45393,1162025297,IC_kwDNIULORUMZUQ,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-06-21T17:06:58Z,2022-06-21T17:06:58Z,MEMBER,"> The version of this change that I had pictured after seeing hotwired/turbo#84 (via #45383) had us retaining the legacy 302 status for ""legacy HTTP actions"", rather than safe/idempotent ones... which leaves us joining in the codification of existing non-conforming practice, but seems like it gives a decent reduction in potential surprise?

One potential issue with excluding `POST` is that [form helper forms always use `POST`](https://github.com/rails/rails/blob/3ea99f53fafbcacfda58b11e2c0537fc043742f2/actionview/lib/action_view/helpers/form_tag_helper.rb#L941-L947).  The intended HTTP method is then exposed via [`request_method`](https://api.rubyonrails.org/v7.0.3/classes/ActionDispatch/Request.html#method-i-request_method).  But since we are using [`method`](https://api.rubyonrails.org/v7.0.3/classes/ActionDispatch/Request.html#method-i-method) (which I believe is correct), a submitted form would get 302, but an API call or [controller test](https://github.com/rails/rails/blob/3ea99f53fafbcacfda58b11e2c0537fc043742f2/railties/lib/rails/generators/test_unit/scaffold/templates/functional_test.rb.tt#L41-L52) would get 303.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1162025297/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45393
https://api.github.com/repos/rails/rails/issues/comments/1157793280,https://github.com/rails/rails/pull/45381#issuecomment-1157793280,https://api.github.com/repos/rails/rails/issues/45381,1157793280,IC_kwDNIULORQKGAA,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-06-16T15:25:45Z,2022-06-16T15:25:45Z,CONTRIBUTOR,Is getting all indexes the most common usage? Can't we make it into 1 query and iterate over the result safely (in batches)?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1157793280/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45381
https://api.github.com/repos/rails/rails/issues/comments/1157797002,https://github.com/rails/rails/pull/45381#issuecomment-1157797002,https://api.github.com/repos/rails/rails/issues/45381,1157797002,IC_kwDNIULORQKUig,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-06-16T15:29:09Z,2022-06-16T15:29:31Z,CONTRIBUTOR,"> Is getting all indexes the most common usage? Can't we make it into 1 query and iterate over the result safely (in batches)?

I didn't get it. We do not get all indexes in a *single* query, we get all indexes during the execution of the program (like in `active_record_doctor`, mentioned in the PR description). We get all indexes per table at a time.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1157797002/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45381
https://api.github.com/repos/rails/rails/issues/comments/1157798002,https://github.com/rails/rails/pull/45381#issuecomment-1157798002,https://api.github.com/repos/rails/rails/issues/45381,1157798002,IC_kwDNIULORQKYcg,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-06-16T15:30:06Z,2022-06-16T15:30:06Z,CONTRIBUTOR,"> > Is getting all indexes the most common usage? Can't we make it into 1 query and iterate over the result safely (in batches)?
> 
> I didn't get it. We do not get all indexes in a _single_ query, we get all indexes during the execution of the program (like in `active_record_doctor`, mentioned in the PR description). We get all indexes per table at a time.

Is for example `active_record_doctor` getting info for all tables?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1157798002/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45381
https://api.github.com/repos/rails/rails/issues/comments/1157800170,https://github.com/rails/rails/pull/45381#issuecomment-1157800170,https://api.github.com/repos/rails/rails/issues/45381,1157800170,IC_kwDNIULORQKg6g,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-06-16T15:32:05Z,2022-06-16T15:32:05Z,CONTRIBUTOR,"You *can* disable specific tables for specific checks, but usually all tables in the db are checked.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1157800170/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45381
https://api.github.com/repos/rails/rails/issues/comments/1217864243,https://github.com/rails/rails/pull/45381#issuecomment-1217864243,https://api.github.com/repos/rails/rails/issues/45381,1217864243,IC_kwDNIULOSJciMw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-08-17T11:06:30Z,2022-08-17T11:06:30Z,CONTRIBUTOR,"@yahonda Can you, please, take a look at this PR?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1217864243/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45381
https://api.github.com/repos/rails/rails/issues/comments/1224165846,https://github.com/rails/rails/pull/45381#issuecomment-1224165846,https://api.github.com/repos/rails/rails/issues/45381,1224165846,IC_kwDNIULOSPdJ1g,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2022-08-23T14:35:21Z,2022-08-23T14:35:21Z,MEMBER,I'd like https://github.com/rails/rails/pull/45381/files#r899190812 discussion to be resolved between @fatkodima and @matthewd . ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1224165846/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45381
https://api.github.com/repos/rails/rails/issues/comments/1157568063,https://github.com/rails/rails/pull/45379#issuecomment-1157568063,https://api.github.com/repos/rails/rails/issues/45379,1157568063,IC_kwDNIULORP8WPw,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-06-16T11:48:46Z,2022-06-16T11:48:46Z,MEMBER,Can we use existing `Arel.sql` for this purpose?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1157568063/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45379
https://api.github.com/repos/rails/rails/issues/comments/1157571850,https://github.com/rails/rails/pull/45379#issuecomment-1157571850,https://api.github.com/repos/rails/rails/issues/45379,1157571850,IC_kwDNIULORP8lCg,"{'login': 'kmcphillips', 'id': 84159, 'node_id': 'MDQ6VXNlcjg0MTU5', 'avatar_url': 'https://avatars.githubusercontent.com/u/84159?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kmcphillips', 'html_url': 'https://github.com/kmcphillips', 'followers_url': 'https://api.github.com/users/kmcphillips/followers', 'following_url': 'https://api.github.com/users/kmcphillips/following{/other_user}', 'gists_url': 'https://api.github.com/users/kmcphillips/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kmcphillips/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kmcphillips/subscriptions', 'organizations_url': 'https://api.github.com/users/kmcphillips/orgs', 'repos_url': 'https://api.github.com/users/kmcphillips/repos', 'events_url': 'https://api.github.com/users/kmcphillips/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kmcphillips/received_events', 'type': 'User', 'site_admin': False}",2022-06-16T11:53:13Z,2022-06-16T11:53:13Z,CONTRIBUTOR,"I do not believe so, as `.sql` also follows the same case statements for each adapter in quoting `?` values:

```
> ActiveRecord::Base.sanitize_sql([""LIMIT :offset, :per_page"", { offset: Arel.sql(12), per_page: Arel.sql(32) }])
/home/kevin/source/rails/activerecord/lib/arel.rb:40:in `initialize': no implicit conversion of Integer into String (TypeError)

> ActiveRecord::Base.sanitize_sql([""LIMIT :offset, :per_page"", { offset: Arel.sql(12.to_s), per_page: Arel.sql(32.to_s) }])
=> ""LIMIT '12', '32'""
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1157571850/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45379
https://api.github.com/repos/rails/rails/issues/comments/1157575760,https://github.com/rails/rails/pull/45379#issuecomment-1157575760,https://api.github.com/repos/rails/rails/issues/45379,1157575760,IC_kwDNIULORP80UA,"{'login': 'kmcphillips', 'id': 84159, 'node_id': 'MDQ6VXNlcjg0MTU5', 'avatar_url': 'https://avatars.githubusercontent.com/u/84159?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kmcphillips', 'html_url': 'https://github.com/kmcphillips', 'followers_url': 'https://api.github.com/users/kmcphillips/followers', 'following_url': 'https://api.github.com/users/kmcphillips/following{/other_user}', 'gists_url': 'https://api.github.com/users/kmcphillips/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kmcphillips/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kmcphillips/subscriptions', 'organizations_url': 'https://api.github.com/users/kmcphillips/orgs', 'repos_url': 'https://api.github.com/users/kmcphillips/repos', 'events_url': 'https://api.github.com/users/kmcphillips/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kmcphillips/received_events', 'type': 'User', 'site_admin': False}",2022-06-16T11:57:45Z,2022-06-16T11:57:45Z,CONTRIBUTOR,"The reason is that the case statements [here](https://github.com/rails/rails/blob/33e371070b06bea5edfdab7c2af518a7c968c832/activerecord/lib/active_record/connection_adapters/mysql/quoting.rb#L10-L23) and [here](https://github.com/rails/rails/blob/33e371070b06bea5edfdab7c2af518a7c968c832/activerecord/lib/active_record/connection_adapters/abstract/quoting.rb#L12-L26) are designed to not allow unquoted values through. We need to add some case, a wrapper class here, to prevent quoting from happening.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1157575760/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45379
https://api.github.com/repos/rails/rails/issues/comments/1157579922,https://github.com/rails/rails/pull/45379#issuecomment-1157579922,https://api.github.com/repos/rails/rails/issues/45379,1157579922,IC_kwDNIULORP9Ekg,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-06-16T12:02:16Z,2022-06-16T12:02:16Z,MEMBER,"> We need to add some case, a wrapper class here, to prevent quoting from happening

Right... but that's what `Arel.sql` is. It sounds like we should be adding handling for those values in these places, rather than inventing another wrapper class?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1157579922/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45379
https://api.github.com/repos/rails/rails/issues/comments/1158108309,https://github.com/rails/rails/pull/45379#issuecomment-1158108309,https://api.github.com/repos/rails/rails/issues/45379,1158108309,IC_kwDNIULORQdUlQ,"{'login': 'kmcphillips', 'id': 84159, 'node_id': 'MDQ6VXNlcjg0MTU5', 'avatar_url': 'https://avatars.githubusercontent.com/u/84159?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kmcphillips', 'html_url': 'https://github.com/kmcphillips', 'followers_url': 'https://api.github.com/users/kmcphillips/followers', 'following_url': 'https://api.github.com/users/kmcphillips/following{/other_user}', 'gists_url': 'https://api.github.com/users/kmcphillips/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kmcphillips/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kmcphillips/subscriptions', 'organizations_url': 'https://api.github.com/users/kmcphillips/orgs', 'repos_url': 'https://api.github.com/users/kmcphillips/repos', 'events_url': 'https://api.github.com/users/kmcphillips/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kmcphillips/received_events', 'type': 'User', 'site_admin': False}",2022-06-16T20:38:30Z,2022-06-16T20:38:30Z,CONTRIBUTOR,"@matthewd I think you are suggesting something like this? https://github.com/rails/rails/commit/f55c34f7a55f1aae48e42f283758644e1ae5683c

It may change the behaviour of `Arel.sql` slightly. And it means the `Arel::Nodes::SqlLiteral` now is referenced inside the abstract adapter. But maybe that's fine.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1158108309/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45379
https://api.github.com/repos/rails/rails/issues/comments/1159187279,https://github.com/rails/rails/pull/45379#issuecomment-1159187279,https://api.github.com/repos/rails/rails/issues/45379,1159187279,IC_kwDNIULORRfLTw,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2022-06-17T19:55:37Z,2022-06-17T19:55:37Z,CONTRIBUTOR,"> Can we use existing Arel.sql for this purpose?

I'm not sure it's the same thing. `Arel.sql` is a SQL fragment. The need here is for a value that still need to be serialized as SQL, just not escaped.

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1159187279/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45379
https://api.github.com/repos/rails/rails/issues/comments/1159192328,https://github.com/rails/rails/pull/45379#issuecomment-1159192328,https://api.github.com/repos/rails/rails/issues/45379,1159192328,IC_kwDNIULORRffCA,"{'login': 'kmcphillips', 'id': 84159, 'node_id': 'MDQ6VXNlcjg0MTU5', 'avatar_url': 'https://avatars.githubusercontent.com/u/84159?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kmcphillips', 'html_url': 'https://github.com/kmcphillips', 'followers_url': 'https://api.github.com/users/kmcphillips/followers', 'following_url': 'https://api.github.com/users/kmcphillips/following{/other_user}', 'gists_url': 'https://api.github.com/users/kmcphillips/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kmcphillips/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kmcphillips/subscriptions', 'organizations_url': 'https://api.github.com/users/kmcphillips/orgs', 'repos_url': 'https://api.github.com/users/kmcphillips/repos', 'events_url': 'https://api.github.com/users/kmcphillips/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kmcphillips/received_events', 'type': 'User', 'site_admin': False}",2022-06-17T20:03:52Z,2022-06-17T20:03:52Z,CONTRIBUTOR,"And you end up calling it at a different level of abstraction in the same statement, which I don't love:

```ruby
([Arel.sql(""field(id, ?)""), [Arel.sql(1), Arel.sql(3), Arel.sql(2)]])
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1159192328/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45379
https://api.github.com/repos/rails/rails/issues/comments/1159267477,https://github.com/rails/rails/pull/45379#issuecomment-1159267477,https://api.github.com/repos/rails/rails/issues/45379,1159267477,IC_kwDNIULORRkElQ,"{'login': 'gmcgibbon', 'id': 5162312, 'node_id': 'MDQ6VXNlcjUxNjIzMTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5162312?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gmcgibbon', 'html_url': 'https://github.com/gmcgibbon', 'followers_url': 'https://api.github.com/users/gmcgibbon/followers', 'following_url': 'https://api.github.com/users/gmcgibbon/following{/other_user}', 'gists_url': 'https://api.github.com/users/gmcgibbon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gmcgibbon/subscriptions', 'organizations_url': 'https://api.github.com/users/gmcgibbon/orgs', 'repos_url': 'https://api.github.com/users/gmcgibbon/repos', 'events_url': 'https://api.github.com/users/gmcgibbon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gmcgibbon/received_events', 'type': 'User', 'site_admin': False}",2022-06-17T22:11:13Z,2022-06-17T22:11:31Z,MEMBER,I think the concept of `Arel.sql` and `Arel.safe` are two similar but separate concerns assuming `Arel.sql` is only supposed to be used for fragments of raw SQL. Maybe we can just add an alias if the behaviour is the same?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1159267477/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45379
https://api.github.com/repos/rails/rails/issues/comments/1160545656,https://github.com/rails/rails/pull/45379#issuecomment-1160545656,https://api.github.com/repos/rails/rails/issues/45379,1160545656,IC_kwDNIULORSyFeA,"{'login': 'kmcphillips', 'id': 84159, 'node_id': 'MDQ6VXNlcjg0MTU5', 'avatar_url': 'https://avatars.githubusercontent.com/u/84159?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kmcphillips', 'html_url': 'https://github.com/kmcphillips', 'followers_url': 'https://api.github.com/users/kmcphillips/followers', 'following_url': 'https://api.github.com/users/kmcphillips/following{/other_user}', 'gists_url': 'https://api.github.com/users/kmcphillips/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kmcphillips/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kmcphillips/subscriptions', 'organizations_url': 'https://api.github.com/users/kmcphillips/orgs', 'repos_url': 'https://api.github.com/users/kmcphillips/repos', 'events_url': 'https://api.github.com/users/kmcphillips/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kmcphillips/received_events', 'type': 'User', 'site_admin': False}",2022-06-20T14:51:33Z,2022-06-20T14:51:33Z,CONTRIBUTOR,"Ok, this is green again.

I've taken @gmcgibbon 's suggested approach and aliased `.sql` to `.safe`. I've added a bunch of tests and updated docs to cover this.

Good?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1160545656/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45379
https://api.github.com/repos/rails/rails/issues/comments/1159532539,https://github.com/rails/rails/pull/45338#issuecomment-1159532539,https://api.github.com/repos/rails/rails/issues/45338,1159532539,IC_kwDNIULORR0P-w,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-06-18T18:24:34Z,2022-06-18T18:24:34Z,MEMBER,"Relevant context for why it used to work that way is here: https://github.com/rails/rails/blob/6e6764b3a1479523eb352ca2baeed0a508ce954b/activemodel/lib/active_model/conversion.rb#L43-L44

This seems like an improvement, though I am conscious of the fact that this could result in a model that previously passed the lint now failing it, because we're changing the _implemented_ expectation to better match what the documentation claimed (and, almost incidentally, what our default implementation does). Hopefully that's okay in practice? 🤷🏻‍♂️ ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1159532539/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45338
https://api.github.com/repos/rails/rails/issues/comments/1159536707,https://github.com/rails/rails/pull/45338#issuecomment-1159536707,https://api.github.com/repos/rails/rails/issues/45338,1159536707,IC_kwDNIULORR0gQw,"{'login': 'santib', 'id': 6373536, 'node_id': 'MDQ6VXNlcjYzNzM1MzY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6373536?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/santib', 'html_url': 'https://github.com/santib', 'followers_url': 'https://api.github.com/users/santib/followers', 'following_url': 'https://api.github.com/users/santib/following{/other_user}', 'gists_url': 'https://api.github.com/users/santib/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/santib/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/santib/subscriptions', 'organizations_url': 'https://api.github.com/users/santib/orgs', 'repos_url': 'https://api.github.com/users/santib/repos', 'events_url': 'https://api.github.com/users/santib/events{/privacy}', 'received_events_url': 'https://api.github.com/users/santib/received_events', 'type': 'User', 'site_admin': False}",2022-06-18T18:52:24Z,2022-06-18T18:52:24Z,CONTRIBUTOR,"> Relevant context for why it used to work that way is here:
> 
> https://github.com/rails/rails/blob/6e6764b3a1479523eb352ca2baeed0a508ce954b/activemodel/lib/active_model/conversion.rb#L43-L44
> 

Wow, very interesting, I wasn't aware of that. 

> This seems like an improvement, though I am conscious of the fact that this could result in a model that previously passed the lint now failing it, because we're changing the _implemented_ expectation to better match what the documentation claimed (and, almost incidentally, what our default implementation does). Hopefully that's okay in practice? 🤷🏻‍♂️

hmm yeah, that's a valid concern. Other options could be:
1. Making `ActiveModel::Conversion` use `persisted?` in the `to_key` method
2. Changing the `ActiveModel::Lint` test to mock both `persisted?` and `id` to return `false` and `nil` respectively

I guess the safest one is 2. ?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1159536707/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45338
https://api.github.com/repos/rails/rails/issues/comments/1155480001,https://github.com/rails/rails/issues/45320#issuecomment-1155480001,https://api.github.com/repos/rails/rails/issues/45320,1155480001,IC_kwDNIULORN85wQ,"{'login': 'muZk', 'id': 1679496, 'node_id': 'MDQ6VXNlcjE2Nzk0OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1679496?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/muZk', 'html_url': 'https://github.com/muZk', 'followers_url': 'https://api.github.com/users/muZk/followers', 'following_url': 'https://api.github.com/users/muZk/following{/other_user}', 'gists_url': 'https://api.github.com/users/muZk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/muZk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/muZk/subscriptions', 'organizations_url': 'https://api.github.com/users/muZk/orgs', 'repos_url': 'https://api.github.com/users/muZk/repos', 'events_url': 'https://api.github.com/users/muZk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/muZk/received_events', 'type': 'User', 'site_admin': False}",2022-06-14T17:13:50Z,2022-06-14T17:23:29Z,NONE,"Reproduction steps:

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :users, force: true do |t|
    t.string :name
  end

  create_table :projects, force: true do |t|
  end

  create_table :project_users, force: true do |t|
    t.integer :user_id
    t.integer :project_id
  end
end

class User < ActiveRecord::Base
  has_many :project_users, dependent: :destroy, inverse_of: :user
  has_many :projects, through: :project_users
  validates :name, presence: true
end

class Project < ActiveRecord::Base
  has_many :project_users, dependent: :destroy
  has_many :users, through: :project_users
end
  
class ProjectUser < ActiveRecord::Base
  belongs_to :project
  belongs_to :user
end

class BugTest < Minitest::Test
  def test_save_user_name
    user = User.new(name: nil)
    assert user.save(validate: false)
  end

  def test_create_project_with_invalid_user
    user = User.new(name: nil)
    user.save(validate: false)

    project = Project.new(user_ids: [user.id])
    assert project.save
  end

  def test_update_project_with_invalid_user
    user = User.new(name: nil)
    user.save(validate: false)

    project = Project.create
    project.user_ids = [user.id]

    assert project.save
  end
end

```

This assumes that creation should work when the associated record is invalid but persisted.

Those tests pass with the proposed changes in https://github.com/rails/rails/pull/45355","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1155480001/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45320
https://api.github.com/repos/rails/rails/issues/comments/1244120045,https://github.com/rails/rails/issues/45320#issuecomment-1244120045,https://api.github.com/repos/rails/rails/issues/45320,1244120045,IC_kwDNIULOSifD7Q,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-09-12T18:15:44Z,2022-09-12T18:15:44Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1244120045/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45320
https://api.github.com/repos/rails/rails/issues/comments/1244221285,https://github.com/rails/rails/issues/45320#issuecomment-1244221285,https://api.github.com/repos/rails/rails/issues/45320,1244221285,IC_kwDNIULOSilPZQ,"{'login': 'james-em', 'id': 63726983, 'node_id': 'MDQ6VXNlcjYzNzI2OTgz', 'avatar_url': 'https://avatars.githubusercontent.com/u/63726983?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/james-em', 'html_url': 'https://github.com/james-em', 'followers_url': 'https://api.github.com/users/james-em/followers', 'following_url': 'https://api.github.com/users/james-em/following{/other_user}', 'gists_url': 'https://api.github.com/users/james-em/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/james-em/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/james-em/subscriptions', 'organizations_url': 'https://api.github.com/users/james-em/orgs', 'repos_url': 'https://api.github.com/users/james-em/repos', 'events_url': 'https://api.github.com/users/james-em/events{/privacy}', 'received_events_url': 'https://api.github.com/users/james-em/received_events', 'type': 'User', 'site_admin': False}",2022-09-12T19:23:29Z,2022-09-12T19:23:29Z,NONE,Do we know why @muZk  proposition is not being looked into?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1244221285/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45320
https://api.github.com/repos/rails/rails/issues/comments/1345647444,https://github.com/rails/rails/issues/45320#issuecomment-1345647444,https://api.github.com/repos/rails/rails/issues/45320,1345647444,IC_kwDNIULOUDTzVA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-12-11T20:20:55Z,2022-12-11T20:20:55Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1345647444/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45320
https://api.github.com/repos/rails/rails/issues/comments/1362182144,https://github.com/rails/rails/issues/45320#issuecomment-1362182144,https://api.github.com/repos/rails/rails/issues/45320,1362182144,IC_kwDNIULOUTFAAA,"{'login': 'muZk', 'id': 1679496, 'node_id': 'MDQ6VXNlcjE2Nzk0OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1679496?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/muZk', 'html_url': 'https://github.com/muZk', 'followers_url': 'https://api.github.com/users/muZk/followers', 'following_url': 'https://api.github.com/users/muZk/following{/other_user}', 'gists_url': 'https://api.github.com/users/muZk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/muZk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/muZk/subscriptions', 'organizations_url': 'https://api.github.com/users/muZk/orgs', 'repos_url': 'https://api.github.com/users/muZk/repos', 'events_url': 'https://api.github.com/users/muZk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/muZk/received_events', 'type': 'User', 'site_admin': False}",2022-12-21T22:30:22Z,2022-12-21T22:30:22Z,NONE,"This was marked as completed, but #45355 is still open 🤔 what happened?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1362182144/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45320
https://api.github.com/repos/rails/rails/issues/comments/1156610769,https://github.com/rails/rails/pull/45317#issuecomment-1156610769,https://api.github.com/repos/rails/rails/issues/45317,1156610769,IC_kwDNIULORPB60Q,"{'login': 'berniechiu', 'id': 2749593, 'node_id': 'MDQ6VXNlcjI3NDk1OTM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2749593?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/berniechiu', 'html_url': 'https://github.com/berniechiu', 'followers_url': 'https://api.github.com/users/berniechiu/followers', 'following_url': 'https://api.github.com/users/berniechiu/following{/other_user}', 'gists_url': 'https://api.github.com/users/berniechiu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/berniechiu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/berniechiu/subscriptions', 'organizations_url': 'https://api.github.com/users/berniechiu/orgs', 'repos_url': 'https://api.github.com/users/berniechiu/repos', 'events_url': 'https://api.github.com/users/berniechiu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/berniechiu/received_events', 'type': 'User', 'site_admin': False}",2022-06-15T15:22:13Z,2022-06-15T15:22:13Z,CONTRIBUTOR,Should be updated by now : ),"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1156610769/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45317
https://api.github.com/repos/rails/rails/issues/comments/1151698894,https://github.com/rails/rails/pull/45313#issuecomment-1151698894,https://api.github.com/repos/rails/rails/issues/45313,1151698894,IC_kwDNIULORKWHzg,"{'login': 'poloka', 'id': 6907677, 'node_id': 'MDQ6VXNlcjY5MDc2Nzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6907677?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/poloka', 'html_url': 'https://github.com/poloka', 'followers_url': 'https://api.github.com/users/poloka/followers', 'following_url': 'https://api.github.com/users/poloka/following{/other_user}', 'gists_url': 'https://api.github.com/users/poloka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/poloka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/poloka/subscriptions', 'organizations_url': 'https://api.github.com/users/poloka/orgs', 'repos_url': 'https://api.github.com/users/poloka/repos', 'events_url': 'https://api.github.com/users/poloka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/poloka/received_events', 'type': 'User', 'site_admin': False}",2022-06-09T23:05:35Z,2022-06-09T23:05:35Z,NONE,There was also a read multi that I will move public as well to allow both reads to be publicly accessible. ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1151698894/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1152192015,https://github.com/rails/rails/pull/45313#issuecomment-1152192015,https://api.github.com/repos/rails/rails/issues/45313,1152192015,IC_kwDNIULORK0ODw,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-06-10T10:00:08Z,2022-06-10T10:00:08Z,CONTRIBUTOR,"I am sure this is not the way to go by making internal methods public. 

Have you tried `race_condition_ttl` setting? It will 1) save an expired entry for some amount of time before 2) getting and overwriting it with a new entry. And while step 2) will fail, step 1) will succeed and you get an entry from cache.  ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152192015/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1152422487,https://github.com/rails/rails/pull/45313#issuecomment-1152422487,https://api.github.com/repos/rails/rails/issues/45313,1152422487,IC_kwDNIULORLCSVw,"{'login': 'poloka', 'id': 6907677, 'node_id': 'MDQ6VXNlcjY5MDc2Nzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6907677?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/poloka', 'html_url': 'https://github.com/poloka', 'followers_url': 'https://api.github.com/users/poloka/followers', 'following_url': 'https://api.github.com/users/poloka/following{/other_user}', 'gists_url': 'https://api.github.com/users/poloka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/poloka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/poloka/subscriptions', 'organizations_url': 'https://api.github.com/users/poloka/orgs', 'repos_url': 'https://api.github.com/users/poloka/repos', 'events_url': 'https://api.github.com/users/poloka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/poloka/received_events', 'type': 'User', 'site_admin': False}",2022-06-10T14:28:45Z,2022-06-10T14:28:45Z,NONE,"@fatkodima that doesn't work if the yield block raises an error.  There is no opportunity to return the value.  I simply modified my provided example and you can see that when the block yields the error there is no opportunity to retrieve and/or use the previous value.
<img width=""858"" alt=""image"" src=""https://user-images.githubusercontent.com/6907677/173087474-0d992bab-8699-4270-bb94-7366b6bf89ea.png"">
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152422487/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1152449540,https://github.com/rails/rails/pull/45313#issuecomment-1152449540,https://api.github.com/repos/rails/rails/issues/45313,1152449540,IC_kwDNIULORLD8BA,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-06-10T14:54:49Z,2022-06-10T14:55:04Z,MEMBER,"@poloka which cache store are you using?

My questions are based on how the memcached store works, where if an entry is expired in the cache it's also expired in memcached (so it won't even get returned). Which is why I am confused by the idea that `fetch` wouldn't return an entry, but `read_entry` would, at the same time.

I'm guessing you're using the file store or memory store, because it seems like that situation is possible and sensible for you.

Using memcached store:

```ruby
> key = 'foo'
""foo""
> args = { expires_in: 10 }
{
    :expires_in => 10
}
> Rails.cache.fetch(key, args) { 'bing' }
# Dalli::Server#connect localhost:11211
""bing""
> sleep(10)
10
> entry = Rails.cache.send(:read_entry, key, args)
nil # whereas I think you expect this to return an entry
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152449540/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1152459454,https://github.com/rails/rails/pull/45313#issuecomment-1152459454,https://api.github.com/repos/rails/rails/issues/45313,1152459454,IC_kwDNIULORLEivg,"{'login': 'poloka', 'id': 6907677, 'node_id': 'MDQ6VXNlcjY5MDc2Nzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6907677?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/poloka', 'html_url': 'https://github.com/poloka', 'followers_url': 'https://api.github.com/users/poloka/followers', 'following_url': 'https://api.github.com/users/poloka/following{/other_user}', 'gists_url': 'https://api.github.com/users/poloka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/poloka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/poloka/subscriptions', 'organizations_url': 'https://api.github.com/users/poloka/orgs', 'repos_url': 'https://api.github.com/users/poloka/repos', 'events_url': 'https://api.github.com/users/poloka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/poloka/received_events', 'type': 'User', 'site_admin': False}",2022-06-10T15:05:04Z,2022-06-10T15:05:04Z,NONE,@ghiculescu my example is using the memcache.  You are correct that *if* you call `fetch` it deletes the entry if it is expired as I noted in my issue https://github.com/rails/rails/issues/45311.  So it would be completely expected that if you try to perform an execution on `read_entry` **afterwards** that the entry will be gone.  That is why I said you have to pull it via the `read_entry` prior to the `fetch` call in order to retain the value in an exception case in the yield block.  I am not expecting the value to be there after the fact.  ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152459454/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1152462872,https://github.com/rails/rails/pull/45313#issuecomment-1152462872,https://api.github.com/repos/rails/rails/issues/45313,1152462872,IC_kwDNIULORLEwGA,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-06-10T15:08:10Z,2022-06-10T15:08:10Z,MEMBER,"But in my example just above I don't call `fetch` after the sleep. I call `read_entry` and it returns `nil` because the value has expired in memcached. 

> That is why I said you have to pull it via the read_entry prior to the fetch call in order to retain the value in an exception case in the yield block.

Basically I have done this but you can't retain the value by doing this.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152462872/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1152528751,https://github.com/rails/rails/pull/45313#issuecomment-1152528751,https://api.github.com/repos/rails/rails/issues/45313,1152528751,IC_kwDNIULORLIxbw,"{'login': 'poloka', 'id': 6907677, 'node_id': 'MDQ6VXNlcjY5MDc2Nzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6907677?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/poloka', 'html_url': 'https://github.com/poloka', 'followers_url': 'https://api.github.com/users/poloka/followers', 'following_url': 'https://api.github.com/users/poloka/following{/other_user}', 'gists_url': 'https://api.github.com/users/poloka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/poloka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/poloka/subscriptions', 'organizations_url': 'https://api.github.com/users/poloka/orgs', 'repos_url': 'https://api.github.com/users/poloka/repos', 'events_url': 'https://api.github.com/users/poloka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/poloka/received_events', 'type': 'User', 'site_admin': False}",2022-06-10T16:19:39Z,2022-06-10T16:19:39Z,NONE,"@ghiculescu, I don't believe the use case in your console is the same and I did not experience this behavior within the rails application.  I initially thought I was a MemCacheStore but digging into what logic I drop into it looks as if I'm an `ActiveSupport::Cache::NullStore` object by default (`Rails.application.config.cache_store == :null_store`).  So here in the rails application the logic works:
<img width=""873"" alt=""image"" src=""https://user-images.githubusercontent.com/6907677/173103632-b7297ec9-cb3e-42f3-a1a9-055704cea28a.png"">

I took your example and I did the same code within the `rails c` and got your same result; however, I opted to test a boundary and tried retrieving the result immediately.
So with the following code
```ruby
key = 'foo'
args = { expires_in: 10 }
Rails.cache.fetch(key, args) { puts 'retrieving value'; 'bing' }
Rails.cache.fetch(key, args) { puts 'retrieving value'; 'bing' }
entry = Rails.cache.send(:read_entry, key, args)
puts entry
Rails.application.config.cache_store
```
It yielded the following:
```bash
2.7.2 :001 > key = 'foo'
 => ""foo""
2.7.2 :002 > args = { expires_in: 10 }
 => {:expires_in=>10}
2.7.2 :003 > Rails.cache.fetch(key, args) { puts 'retrieving value'; 'bing' }
retrieving value
 => ""bing""
2.7.2 :004 > Rails.cache.fetch(key, args) { puts 'retrieving value'; 'bing' }
retrieving value
 => ""bing""
2.7.2 :005 > entry = Rails.cache.send(:read_entry, key, args)
 => nil
2.7.2 :006 > puts entry

 => nil
2.7.2 :007 > Rails.application.config.cache_store
 => :null_store
```
As you can see, the following `fetch` still executed its yield block as noted by the `puts` statement and did not pull a cached value.  I would suggest attempting this on your console as well to double-check.  ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152528751/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1152546536,https://github.com/rails/rails/pull/45313#issuecomment-1152546536,https://api.github.com/repos/rails/rails/issues/45313,1152546536,IC_kwDNIULORLJ26A,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-06-10T16:42:23Z,2022-06-10T16:42:23Z,MEMBER,"> As you can see, the following `fetch` still executed its yield block as noted by the `puts` statement and did not pull a cached value. I would suggest attempting this on your console as well to double-check.

Yeah, that's to be expected in the Null store, as it doesn't do any actual caching. So it would always need to retrieve a value. But you probably shouldn't use the Null store in production :)

I would suggest `Rails.cache.class` to be sure of which cache store you're using btw.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152546536/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1152552957,https://github.com/rails/rails/pull/45313#issuecomment-1152552957,https://api.github.com/repos/rails/rails/issues/45313,1152552957,IC_kwDNIULORLKP_Q,"{'login': 'poloka', 'id': 6907677, 'node_id': 'MDQ6VXNlcjY5MDc2Nzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6907677?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/poloka', 'html_url': 'https://github.com/poloka', 'followers_url': 'https://api.github.com/users/poloka/followers', 'following_url': 'https://api.github.com/users/poloka/following{/other_user}', 'gists_url': 'https://api.github.com/users/poloka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/poloka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/poloka/subscriptions', 'organizations_url': 'https://api.github.com/users/poloka/orgs', 'repos_url': 'https://api.github.com/users/poloka/repos', 'events_url': 'https://api.github.com/users/poloka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/poloka/received_events', 'type': 'User', 'site_admin': False}",2022-06-10T16:50:57Z,2022-06-10T16:50:57Z,NONE,"Thanks @ghiculescu, yeah I wouldn't use `:null_store` in production.  My `production.rb` is setup for `:memory_store`.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152552957/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1152557589,https://github.com/rails/rails/pull/45313#issuecomment-1152557589,https://api.github.com/repos/rails/rails/issues/45313,1152557589,IC_kwDNIULORLKiFQ,"{'login': 'poloka', 'id': 6907677, 'node_id': 'MDQ6VXNlcjY5MDc2Nzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6907677?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/poloka', 'html_url': 'https://github.com/poloka', 'followers_url': 'https://api.github.com/users/poloka/followers', 'following_url': 'https://api.github.com/users/poloka/following{/other_user}', 'gists_url': 'https://api.github.com/users/poloka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/poloka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/poloka/subscriptions', 'organizations_url': 'https://api.github.com/users/poloka/orgs', 'repos_url': 'https://api.github.com/users/poloka/repos', 'events_url': 'https://api.github.com/users/poloka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/poloka/received_events', 'type': 'User', 'site_admin': False}",2022-06-10T16:56:08Z,2022-06-10T16:56:08Z,NONE,"And if I run the example with `RAILS_ENV=production rails c` I get the following as expected
```bash
 :001 >
 :002 > key = 'foo'
 => ""foo""
 :003 > args = { expires_in: 10 }
 => {:expires_in=>10}
 :004 > Rails.cache.fetch(key, args) { puts 'retrieving value'; 'bing' }
retrieving value
 => ""bing""
 :005 > Rails.cache.fetch(key, args) { puts 'retrieving value'; 'bing' }
 => ""bing""
 :006 > entry = Rails.cache.send(:read_entry, key, args)
 => #<ActiveSupport::Cache::Entry:0x00007f8afc844818 @value=""bing"", @version=nil, @created_at=1654880053.508685, @expires_in=10.0>
 :007 > puts entry
#<ActiveSupport::Cache::Entry:0x00007f8afc844818>
 => nil
 :008 > Rails.application.config.cache_store
 => :memory_store
 :009 >
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152557589/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1152572125,https://github.com/rails/rails/pull/45313#issuecomment-1152572125,https://api.github.com/repos/rails/rails/issues/45313,1152572125,IC_kwDNIULORLLa3Q,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-06-10T17:13:17Z,2022-06-10T17:13:17Z,MEMBER,"> Thanks @ghiculescu, yeah I wouldn't use `:null_store` in production. My `production.rb` is setup for `:memory_store`.

The memory store isn't the same as the memcached store FYI. I wouldn't recommend it for production either; https://api.rubyonrails.org/classes/ActiveSupport/Cache/MemoryStore.html talks about why.

But yeah what you're seeing makes sense for the memory store as it doesn't have a separate backend, similar to null store.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152572125/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1154261996,https://github.com/rails/rails/pull/45313#issuecomment-1154261996,https://api.github.com/repos/rails/rails/issues/45313,1154261996,IC_kwDNIULORMyj7A,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-06-13T18:49:12Z,2022-06-13T18:49:12Z,MEMBER,"I'm going to close this for now as the conversation's split between here and https://github.com/rails/rails/issues/45311 and that can get confusing.

We can re-open if it seems like there is a bug here or something that requires a PR.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1154261996/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1154275409,https://github.com/rails/rails/pull/45313#issuecomment-1154275409,https://api.github.com/repos/rails/rails/issues/45313,1154275409,IC_kwDNIULORMzYUQ,"{'login': 'poloka', 'id': 6907677, 'node_id': 'MDQ6VXNlcjY5MDc2Nzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6907677?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/poloka', 'html_url': 'https://github.com/poloka', 'followers_url': 'https://api.github.com/users/poloka/followers', 'following_url': 'https://api.github.com/users/poloka/following{/other_user}', 'gists_url': 'https://api.github.com/users/poloka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/poloka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/poloka/subscriptions', 'organizations_url': 'https://api.github.com/users/poloka/orgs', 'repos_url': 'https://api.github.com/users/poloka/repos', 'events_url': 'https://api.github.com/users/poloka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/poloka/received_events', 'type': 'User', 'site_admin': False}",2022-06-13T19:05:13Z,2022-06-13T19:05:13Z,NONE,@ghiculescu I do not agree that this PR should be closed.  Please reopen this PR as the functionality being requested is still valid.  ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1154275409/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1154275958,https://github.com/rails/rails/pull/45313#issuecomment-1154275958,https://api.github.com/repos/rails/rails/issues/45313,1154275958,IC_kwDNIULORMzadg,"{'login': 'poloka', 'id': 6907677, 'node_id': 'MDQ6VXNlcjY5MDc2Nzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6907677?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/poloka', 'html_url': 'https://github.com/poloka', 'followers_url': 'https://api.github.com/users/poloka/followers', 'following_url': 'https://api.github.com/users/poloka/following{/other_user}', 'gists_url': 'https://api.github.com/users/poloka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/poloka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/poloka/subscriptions', 'organizations_url': 'https://api.github.com/users/poloka/orgs', 'repos_url': 'https://api.github.com/users/poloka/repos', 'events_url': 'https://api.github.com/users/poloka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/poloka/received_events', 'type': 'User', 'site_admin': False}",2022-06-13T19:05:48Z,2022-06-13T19:05:48Z,NONE,The conversations that have been going on the PR should have been on the issue in the first place but I continued the conversation wherever it was occurring.  ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1154275958/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1154279895,https://github.com/rails/rails/pull/45313#issuecomment-1154279895,https://api.github.com/repos/rails/rails/issues/45313,1154279895,IC_kwDNIULORMzp1w,"{'login': 'poloka', 'id': 6907677, 'node_id': 'MDQ6VXNlcjY5MDc2Nzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6907677?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/poloka', 'html_url': 'https://github.com/poloka', 'followers_url': 'https://api.github.com/users/poloka/followers', 'following_url': 'https://api.github.com/users/poloka/following{/other_user}', 'gists_url': 'https://api.github.com/users/poloka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/poloka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/poloka/subscriptions', 'organizations_url': 'https://api.github.com/users/poloka/orgs', 'repos_url': 'https://api.github.com/users/poloka/repos', 'events_url': 'https://api.github.com/users/poloka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/poloka/received_events', 'type': 'User', 'site_admin': False}",2022-06-13T19:09:52Z,2022-06-13T19:09:52Z,NONE,Thanks @ghiculescu for reopening!,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1154279895/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45313
https://api.github.com/repos/rails/rails/issues/comments/1153156492,https://github.com/rails/rails/pull/45305#issuecomment-1153156492,https://api.github.com/repos/rails/rails/issues/45305,1153156492,IC_kwDNIULORLvFjA,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-06-12T12:51:11Z,2022-06-12T12:51:11Z,CONTRIBUTOR,"@fatkodima looks good. I did quick check and this syntax is supported for all PostgreSQL versions supported by ActiveRecord (9.3+). :muscle: 

_Btw. I did some checks locally with your example script and I got `2s` vs `2ms`. Are you using some super slow disk? :thinking:_ ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1153156492/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45305
https://api.github.com/repos/rails/rails/issues/comments/1153187329,https://github.com/rails/rails/pull/45305#issuecomment-1153187329,https://api.github.com/repos/rails/rails/issues/45305,1153187329,IC_kwDNIULORLw-AQ,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2022-06-12T14:23:45Z,2022-06-12T14:23:45Z,CONTRIBUTOR,"Rerun again: got `13s` this time. I am on a Mac from 2015 😄 
But thats a time on a laptop, with bigger tables and more loaded env the time will be bigger. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1153187329/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45305
https://api.github.com/repos/rails/rails/issues/comments/1437655271,https://github.com/rails/rails/pull/45305#issuecomment-1437655271,https://api.github.com/repos/rails/rails/issues/45305,1437655271,IC_kwDNIULOVbDg5w,"{'login': 'fatkodima', 'id': 5657035, 'node_id': 'MDQ6VXNlcjU2NTcwMzU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5657035?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fatkodima', 'html_url': 'https://github.com/fatkodima', 'followers_url': 'https://api.github.com/users/fatkodima/followers', 'following_url': 'https://api.github.com/users/fatkodima/following{/other_user}', 'gists_url': 'https://api.github.com/users/fatkodima/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fatkodima/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fatkodima/subscriptions', 'organizations_url': 'https://api.github.com/users/fatkodima/orgs', 'repos_url': 'https://api.github.com/users/fatkodima/repos', 'events_url': 'https://api.github.com/users/fatkodima/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fatkodima/received_events', 'type': 'User', 'site_admin': False}",2023-02-20T23:08:00Z,2023-02-20T23:08:00Z,CONTRIBUTOR,@yahonda Can you please take a look when you have time?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1437655271/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45305
https://api.github.com/repos/rails/rails/issues/comments/1149355751,https://github.com/rails/rails/issues/45295#issuecomment-1149355751,https://api.github.com/repos/rails/rails/issues/45295,1149355751,IC_kwDNIULORIHG5w,"{'login': 'josh-m-sharpe', 'id': 39473, 'node_id': 'MDQ6VXNlcjM5NDcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/39473?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/josh-m-sharpe', 'html_url': 'https://github.com/josh-m-sharpe', 'followers_url': 'https://api.github.com/users/josh-m-sharpe/followers', 'following_url': 'https://api.github.com/users/josh-m-sharpe/following{/other_user}', 'gists_url': 'https://api.github.com/users/josh-m-sharpe/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/josh-m-sharpe/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/josh-m-sharpe/subscriptions', 'organizations_url': 'https://api.github.com/users/josh-m-sharpe/orgs', 'repos_url': 'https://api.github.com/users/josh-m-sharpe/repos', 'events_url': 'https://api.github.com/users/josh-m-sharpe/events{/privacy}', 'received_events_url': 'https://api.github.com/users/josh-m-sharpe/received_events', 'type': 'User', 'site_admin': False}",2022-06-08T01:42:14Z,2022-06-08T01:42:14Z,CONTRIBUTOR,"Hmm, I guess this is related: https://github.com/rails/rails/issues/43793
...but very unexpected.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1149355751/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45295
https://api.github.com/repos/rails/rails/issues/comments/1149359662,https://github.com/rails/rails/issues/45295#issuecomment-1149359662,https://api.github.com/repos/rails/rails/issues/45295,1149359662,IC_kwDNIULORIHWLg,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-06-08T01:48:15Z,2022-06-08T01:48:15Z,MEMBER,Is there somewhere you think making it more clear would have helped? Its currently mentioned in the upgrading docs here: https://guides.rubyonrails.org/upgrading_ruby_on_rails.html#sprockets-is-now-an-optional-dependency,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1149359662/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45295
https://api.github.com/repos/rails/rails/issues/comments/1149368809,https://github.com/rails/rails/issues/45295#issuecomment-1149368809,https://api.github.com/repos/rails/rails/issues/45295,1149368809,IC_kwDNIULORIH56Q,"{'login': 'josh-m-sharpe', 'id': 39473, 'node_id': 'MDQ6VXNlcjM5NDcz', 'avatar_url': 'https://avatars.githubusercontent.com/u/39473?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/josh-m-sharpe', 'html_url': 'https://github.com/josh-m-sharpe', 'followers_url': 'https://api.github.com/users/josh-m-sharpe/followers', 'following_url': 'https://api.github.com/users/josh-m-sharpe/following{/other_user}', 'gists_url': 'https://api.github.com/users/josh-m-sharpe/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/josh-m-sharpe/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/josh-m-sharpe/subscriptions', 'organizations_url': 'https://api.github.com/users/josh-m-sharpe/orgs', 'repos_url': 'https://api.github.com/users/josh-m-sharpe/repos', 'events_url': 'https://api.github.com/users/josh-m-sharpe/events{/privacy}', 'received_events_url': 'https://api.github.com/users/josh-m-sharpe/received_events', 'type': 'User', 'site_admin': False}",2022-06-08T02:03:27Z,2022-06-08T02:03:27Z,CONTRIBUTOR,"Maybe detect that sprockets-rails has been removed due to lack of explicit inclusion? Or alternatively, maybe capture `NoMethodError: undefined method 'assets'` in the load path somewhere and point to https://guides.rubyonrails.org/upgrading_ruby_on_rails.html#sprockets-is-now-an-optional-dependency

I'm not sure, I think this is unique to this version of rails, and is the exception not the rule..  I don't think rails has dropped such an (previously) important dependency before.  Typical configuration changes are well-handled by the default config system and the new initializer that gets loaded.  This missing gem comes before all of that in the load order and is therefore unhandled.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1149368809/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45295
https://api.github.com/repos/rails/rails/issues/comments/1151847917,https://github.com/rails/rails/issues/45295#issuecomment-1151847917,https://api.github.com/repos/rails/rails/issues/45295,1151847917,IC_kwDNIULORKfN7Q,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-06-10T02:22:17Z,2022-06-10T02:22:17Z,MEMBER,"> Or alternatively, maybe capture `NoMethodError: undefined method 'assets'` in the load path somewhere

This seems like an interesting idea, would you be interested in exploring this/creating a PR?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1151847917/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45295
https://api.github.com/repos/rails/rails/issues/comments/1175835579,https://github.com/rails/rails/issues/45295#issuecomment-1175835579,https://api.github.com/repos/rails/rails/issues/45295,1175835579,IC_kwDNIULORhXTuw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-07-06T06:34:38Z,2022-07-06T06:34:38Z,MEMBER,"@josh-m-sharpe I created a PR that should fix the error you were seeing, if you are able to test it out and provide feedback I would really appreciate it!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1175835579/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45295
https://api.github.com/repos/rails/rails/issues/comments/1266475980,https://github.com/rails/rails/issues/45295#issuecomment-1266475980,https://api.github.com/repos/rails/rails/issues/45295,1266475980,IC_kwDNIULOS3zjzA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-10-04T06:46:54Z,2022-10-04T06:46:54Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1266475980/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45295
https://api.github.com/repos/rails/rails/issues/comments/1276493892,https://github.com/rails/rails/pull/45294#issuecomment-1276493892,https://api.github.com/repos/rails/rails/issues/45294,1276493892,IC_kwDNIULOTBXARA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-10-12T17:15:02Z,2022-10-12T17:15:02Z,MEMBER,Hey @keoghpe are you still working on this?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1276493892/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45294
https://api.github.com/repos/rails/rails/issues/comments/1152407652,https://github.com/rails/rails/pull/45288#issuecomment-1152407652,https://api.github.com/repos/rails/rails/issues/45288,1152407652,IC_kwDNIULORLBYZA,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-06-10T14:13:51Z,2022-06-10T14:13:51Z,MEMBER,"I agree adding a clarification seems helpful, though I am wary that this weights the bulk of the method description to the already-unusual case of a non-block argument 🤔 

I wonder if we can avoid the example by leaning on a more explicit parallel to other Hash behaviours that do the same thing, like a non-block `default`, and thereby keep it to just a sentence?

Even the existing example didn't ring particularly true for me as a frequently-encounterable usage pattern... really the only non-block values I'd expect to regularly see here are `true`, `false`, `nil`, and at the outside, `0` or `1` (though `tally` is likely a better way to get the latter result). ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152407652/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45288
https://api.github.com/repos/rails/rails/issues/comments/1152475114,https://github.com/rails/rails/pull/45288#issuecomment-1152475114,https://api.github.com/repos/rails/rails/issues/45288,1152475114,IC_kwDNIULORLFf6g,"{'login': 'dsusviela', 'id': 18326941, 'node_id': 'MDQ6VXNlcjE4MzI2OTQx', 'avatar_url': 'https://avatars.githubusercontent.com/u/18326941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dsusviela', 'html_url': 'https://github.com/dsusviela', 'followers_url': 'https://api.github.com/users/dsusviela/followers', 'following_url': 'https://api.github.com/users/dsusviela/following{/other_user}', 'gists_url': 'https://api.github.com/users/dsusviela/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dsusviela/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dsusviela/subscriptions', 'organizations_url': 'https://api.github.com/users/dsusviela/orgs', 'repos_url': 'https://api.github.com/users/dsusviela/repos', 'events_url': 'https://api.github.com/users/dsusviela/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dsusviela/received_events', 'type': 'User', 'site_admin': False}",2022-06-10T15:20:33Z,2022-06-10T15:20:33Z,CONTRIBUTOR,"@matthewd What would you suggest to avoid weighing too much of the bulk of the description into that use case? I think we could remove the last sentence ""If this is not desired, use the block variant instead."" as that's pretty much a given. I agree with you that compared to other methods in this same doc page, this proposition can get it to be too verbose.

However I do see the value in the example for this case. In the `Hash,new([""value""])` case I think you can get away with not going too deep into the matter because it's kind of expected that the fallback value changes if I change the variable as its the only intuitive way of achieving this:

```ruby
names = [""ruby""]
languages = Hash.new(names) # languages = {} <- hash is empty

languages[:awesome]  # [""ruby""]

names << ""elixir""
languages[:awesome] # [""ruby"", ""elixir""] <- i changed the default so i expected this
```

Granted, you can do the following

```ruby
names = [""ruby""]
languages = Hash.new(names) # languages = {} <- hash is empty

languages[:awesome]  << ""elixir""
languages[:awesome] # [""ruby"", ""elixir""], the hash is still empty
```

But its not intuitive because the hash does not really contain that key.

When doing `index_with` I'm not passing in a *fallback value* but a *value* for the resulting hash. 

```ruby
names = [""ruby""]
languages = [:awesome].index_with(names) # { :awesome => [""ruby""] }

languages[:boring] # nil <- the array is not the fallback
```

Therefore changing the value under one of the keys for the resulting hash of `index_with` is not something I would call surprising. Specially if the dev is inexperienced in the intricacies of ruby/rails and sees the argument variant as the ""simple form"" of calling the method.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152475114/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45288
https://api.github.com/repos/rails/rails/issues/comments/1205498582,https://github.com/rails/rails/pull/45288#issuecomment-1205498582,https://api.github.com/repos/rails/rails/issues/45288,1205498582,IC_kwDNIULOR9py1g,"{'login': 'dsusviela', 'id': 18326941, 'node_id': 'MDQ6VXNlcjE4MzI2OTQx', 'avatar_url': 'https://avatars.githubusercontent.com/u/18326941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dsusviela', 'html_url': 'https://github.com/dsusviela', 'followers_url': 'https://api.github.com/users/dsusviela/followers', 'following_url': 'https://api.github.com/users/dsusviela/following{/other_user}', 'gists_url': 'https://api.github.com/users/dsusviela/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dsusviela/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dsusviela/subscriptions', 'organizations_url': 'https://api.github.com/users/dsusviela/orgs', 'repos_url': 'https://api.github.com/users/dsusviela/repos', 'events_url': 'https://api.github.com/users/dsusviela/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dsusviela/received_events', 'type': 'User', 'site_admin': False}",2022-08-04T16:32:45Z,2022-08-04T16:32:45Z,CONTRIBUTOR,Hey @matthewd have you had the chance to review my message?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1205498582/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45288
https://api.github.com/repos/rails/rails/issues/comments/1148874533,https://github.com/rails/rails/issues/45286#issuecomment-1148874533,https://api.github.com/repos/rails/rails/issues/45286,1148874533,IC_kwDNIULORHpvJQ,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2022-06-07T16:09:14Z,2022-06-07T16:09:14Z,CONTRIBUTOR,"It's it as expected as the default Hash value?
For example, if you do
```ruby
my_hash = Hash.new({})
my_hash[:a][:b] = ""a""
my_hash[:non_exisitng][:b] == ""a"" # true
```
then it's totally expected for the default value to be shared, if you want the default value to be a newly allocated hash, than we should use the block syntax like: 

```ruby
my_hash = Hash.new { Hash.new }
my_hash[:a][:b] = ""a""
my_hash[:non_exisitng][:b] == ""a"" # false
```

Or, for the `index_with` case:
```ruby
keys.index_with { Hash.new }
``` 
So every key gets a new hash allocated","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1148874533/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45286
https://api.github.com/repos/rails/rails/issues/comments/1148893280,https://github.com/rails/rails/issues/45286#issuecomment-1148893280,https://api.github.com/repos/rails/rails/issues/45286,1148893280,IC_kwDNIULORHq4YA,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2022-06-07T16:24:37Z,2022-06-07T16:33:22Z,CONTRIBUTOR,"For a string the ""reproduction"" would look like:
```ruby
my_hash = [:a, :b].index_with(""Hello"")
my_hash[:a] << "" World""
p my_hash
=> {:a=>""Hello World"", :b=>""Hello World""}
```
But to me it's totally expected as you are basically modifying the same object, the same string. For example:

```ruby
my_hash_string = [:a, :b].index_with(""Hello"")
p my_hash_string.values.map(&:object_id)
# => [151980, 151980]
my_hash_hash = [:a, :b].index_with({})
p my_hash_hash.values.map(&:object_id)
# => [152000, 152000]
my_hash_new_hash = [:a, :b].index_with { Hash.new }
p my_hash_new_hash.values.map(&:object_id)
# => [152020, 152040]
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1148893280/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45286
https://api.github.com/repos/rails/rails/issues/comments/1148904537,https://github.com/rails/rails/issues/45286#issuecomment-1148904537,https://api.github.com/repos/rails/rails/issues/45286,1148904537,IC_kwDNIULORHrkWQ,"{'login': 'dsusviela', 'id': 18326941, 'node_id': 'MDQ6VXNlcjE4MzI2OTQx', 'avatar_url': 'https://avatars.githubusercontent.com/u/18326941?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dsusviela', 'html_url': 'https://github.com/dsusviela', 'followers_url': 'https://api.github.com/users/dsusviela/followers', 'following_url': 'https://api.github.com/users/dsusviela/following{/other_user}', 'gists_url': 'https://api.github.com/users/dsusviela/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dsusviela/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dsusviela/subscriptions', 'organizations_url': 'https://api.github.com/users/dsusviela/orgs', 'repos_url': 'https://api.github.com/users/dsusviela/repos', 'events_url': 'https://api.github.com/users/dsusviela/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dsusviela/received_events', 'type': 'User', 'site_admin': False}",2022-06-07T16:33:08Z,2022-06-07T16:33:08Z,CONTRIBUTOR,"Aha I understand why it doesn't behave the way I thought it would. It doesn't help that `+` creates a new object, but I was able to get it with a `gsub!` 😅 .

However, do you think that the difference in behavior between the `block` version and the `parameter` version could be better explained in the docs?

I personally don't find [the current description](https://api.rubyonrails.org/v6.1.4/classes/Enumerable.html#method-i-index_with) detailed enough to make me aware of this.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1148904537/reactions', 'total_count': 5, '+1': 3, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 1, 'eyes': 0}",,45286
https://api.github.com/repos/rails/rails/issues/comments/1148906871,https://github.com/rails/rails/issues/45286#issuecomment-1148906871,https://api.github.com/repos/rails/rails/issues/45286,1148906871,IC_kwDNIULORHrtdw,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2022-06-07T16:35:37Z,2022-06-07T16:35:37Z,CONTRIBUTOR,"Personally I think the doc could definitely benefit from at least a little note, at least because, as I mentioned, it's very similar to a fairly common confusion with `Hash` default value","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1148906871/reactions', 'total_count': 4, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 4, 'eyes': 0}",,45286
https://api.github.com/repos/rails/rails/issues/comments/1144918930,https://github.com/rails/rails/pull/45241#issuecomment-1144918930,https://api.github.com/repos/rails/rails/issues/45241,1144918930,IC_kwDNIULORD4Tkg,"{'login': 'Diogomartf', 'id': 5664434, 'node_id': 'MDQ6VXNlcjU2NjQ0MzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5664434?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Diogomartf', 'html_url': 'https://github.com/Diogomartf', 'followers_url': 'https://api.github.com/users/Diogomartf/followers', 'following_url': 'https://api.github.com/users/Diogomartf/following{/other_user}', 'gists_url': 'https://api.github.com/users/Diogomartf/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Diogomartf/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Diogomartf/subscriptions', 'organizations_url': 'https://api.github.com/users/Diogomartf/orgs', 'repos_url': 'https://api.github.com/users/Diogomartf/repos', 'events_url': 'https://api.github.com/users/Diogomartf/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Diogomartf/received_events', 'type': 'User', 'site_admin': False}",2022-06-02T14:16:05Z,2022-06-02T14:16:50Z,NONE,I would love to see this merged 🙌   Such a nice detail. ❤️,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1144918930/reactions', 'total_count': 4, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 4, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1144949000,https://github.com/rails/rails/pull/45241#issuecomment-1144949000,https://api.github.com/repos/rails/rails/issues/45241,1144949000,IC_kwDNIULORD6JCA,"{'login': 'alessandrapereyra', 'id': 24547664, 'node_id': 'MDQ6VXNlcjI0NTQ3NjY0', 'avatar_url': 'https://avatars.githubusercontent.com/u/24547664?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/alessandrapereyra', 'html_url': 'https://github.com/alessandrapereyra', 'followers_url': 'https://api.github.com/users/alessandrapereyra/followers', 'following_url': 'https://api.github.com/users/alessandrapereyra/following{/other_user}', 'gists_url': 'https://api.github.com/users/alessandrapereyra/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/alessandrapereyra/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/alessandrapereyra/subscriptions', 'organizations_url': 'https://api.github.com/users/alessandrapereyra/orgs', 'repos_url': 'https://api.github.com/users/alessandrapereyra/repos', 'events_url': 'https://api.github.com/users/alessandrapereyra/events{/privacy}', 'received_events_url': 'https://api.github.com/users/alessandrapereyra/received_events', 'type': 'User', 'site_admin': False}",2022-06-02T14:42:47Z,2022-06-02T14:42:47Z,NONE,"Shared this on Twitter as well, but I think it'd be cool if we could separate PUT/PATCH from the actual POST requests for ease of readability. 

This is already doing it with DELETE, so it does make sense to me to have it as different categories. 

Great addition, it makes things better to easily parse 🎉 .","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1144949000/reactions', 'total_count': 3, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 3, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1145009144,https://github.com/rails/rails/pull/45241#issuecomment-1145009144,https://api.github.com/repos/rails/rails/issues/45241,1145009144,IC_kwDNIULORD9z-A,"{'login': 'natematykiewicz', 'id': 5104186, 'node_id': 'MDQ6VXNlcjUxMDQxODY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5104186?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/natematykiewicz', 'html_url': 'https://github.com/natematykiewicz', 'followers_url': 'https://api.github.com/users/natematykiewicz/followers', 'following_url': 'https://api.github.com/users/natematykiewicz/following{/other_user}', 'gists_url': 'https://api.github.com/users/natematykiewicz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/natematykiewicz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/natematykiewicz/subscriptions', 'organizations_url': 'https://api.github.com/users/natematykiewicz/orgs', 'repos_url': 'https://api.github.com/users/natematykiewicz/repos', 'events_url': 'https://api.github.com/users/natematykiewicz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/natematykiewicz/received_events', 'type': 'User', 'site_admin': False}",2022-06-02T15:39:09Z,2022-06-02T15:39:55Z,CONTRIBUTOR,"> Shared this on Twitter as well, but I think it'd be cool if we could separate PUT/PATCH from the actual POST requests for ease of readability.
> 
> This is already doing it with DELETE, so it does make sense to me to have it as different categories.
> 
> Great addition, it makes things better to easily parse 🎉 .

Yeah, I've commonly seen orange used for the PUT/PATCH in other REST clients.
For example: https://swagger.io/tools/swagger-ui/","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1145009144/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1145409868,https://github.com/rails/rails/pull/45241#issuecomment-1145409868,https://api.github.com/repos/rails/rails/issues/45241,1145409868,IC_kwDNIULOREWRTA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-06-02T22:38:02Z,2022-06-02T22:38:02Z,MEMBER,"I think instead of `--colorized` I would love to see a more general `--format` option, and an API to register formatters. Then applications/gems could define new formatters and it wouldn't require patches to Rails to use them. I think this would also prevent unexpected results if someone were to pass both `--expanded` and `--colorized`, since `expanded` is checked first in the `formatter` method.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1145409868/reactions', 'total_count': 4, '+1': 4, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1145412017,https://github.com/rails/rails/pull/45241#issuecomment-1145412017,https://api.github.com/repos/rails/rails/issues/45241,1145412017,IC_kwDNIULOREWZsQ,"{'login': 'natematykiewicz', 'id': 5104186, 'node_id': 'MDQ6VXNlcjUxMDQxODY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5104186?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/natematykiewicz', 'html_url': 'https://github.com/natematykiewicz', 'followers_url': 'https://api.github.com/users/natematykiewicz/followers', 'following_url': 'https://api.github.com/users/natematykiewicz/following{/other_user}', 'gists_url': 'https://api.github.com/users/natematykiewicz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/natematykiewicz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/natematykiewicz/subscriptions', 'organizations_url': 'https://api.github.com/users/natematykiewicz/orgs', 'repos_url': 'https://api.github.com/users/natematykiewicz/repos', 'events_url': 'https://api.github.com/users/natematykiewicz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/natematykiewicz/received_events', 'type': 'User', 'site_admin': False}",2022-06-02T22:42:13Z,2022-06-02T22:47:55Z,CONTRIBUTOR,"@skipkayhil By implementing what you're saying, `--expanded --colorized` would actually colorize the ""expanded"" format, right?

The current `--colorized` really looks like both ""colorized"" AND ""justified"".

So, is ""colorized"" an option, but then ""sheet"", ""expanded"" and ""justified"" are formats? Perhaps these screenshots should actually be `--colorized --justified`?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1145412017/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1145414166,https://github.com/rails/rails/pull/45241#issuecomment-1145414166,https://api.github.com/repos/rails/rails/issues/45241,1145414166,IC_kwDNIULOREWiFg,"{'login': 'natematykiewicz', 'id': 5104186, 'node_id': 'MDQ6VXNlcjUxMDQxODY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5104186?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/natematykiewicz', 'html_url': 'https://github.com/natematykiewicz', 'followers_url': 'https://api.github.com/users/natematykiewicz/followers', 'following_url': 'https://api.github.com/users/natematykiewicz/following{/other_user}', 'gists_url': 'https://api.github.com/users/natematykiewicz/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/natematykiewicz/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/natematykiewicz/subscriptions', 'organizations_url': 'https://api.github.com/users/natematykiewicz/orgs', 'repos_url': 'https://api.github.com/users/natematykiewicz/repos', 'events_url': 'https://api.github.com/users/natematykiewicz/events{/privacy}', 'received_events_url': 'https://api.github.com/users/natematykiewicz/received_events', 'type': 'User', 'site_admin': False}",2022-06-02T22:46:05Z,2022-06-02T22:46:36Z,CONTRIBUTOR,"FWIW, most CLI things I've seen that have a ""colorized"" option do not change any other formatting. They just add color codes when you colorize the output. Having a colorized flag that also rearranges the output is a bit nonstandard. That's why I'm thinking that ""colorized"" should apply to all formatters, and then if you want a new formatter for this justified output, that makes sense to me too.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1145414166/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1145426444,https://github.com/rails/rails/pull/45241#issuecomment-1145426444,https://api.github.com/repos/rails/rails/issues/45241,1145426444,IC_kwDNIULOREXSDA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-06-02T23:10:14Z,2022-06-02T23:10:14Z,MEMBER,"> @skipkayhil By implementing what you're saying, `--expanded --colorized` would actually colorize the ""expanded"" format, right?
> 
> The current `--colorized` really looks like both ""colorized"" AND ""justified"".
> 
> So, is ""colorized"" an option, but then ""sheet"", ""expanded"" and ""justified"" are formats? Perhaps these screenshots should actually be `--colorized --justified`?

Yep, that all seems reasonable to me. If the implementation was changed to just colorize the existing format I think that would provide justification for a `--colorized` flag.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1145426444/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1146797574,https://github.com/rails/rails/pull/45241#issuecomment-1146797574,https://api.github.com/repos/rails/rails/issues/45241,1146797574,IC_kwDNIULORFq-Bg,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-06-05T12:41:35Z,2022-06-05T12:41:35Z,MEMBER,"Can you perhaps expand on what's better about this layout, colours aside?

At first look, to me, it seems to put all the emphasis on the path patterns, and makes it hard to match them up with their corresponding helpers. Most of the time I would expect users to want the opposite: for most purposes, one should be thinking in and using path helpers, and only occasionally need to deal with exactly which URLs they generate/match.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1146797574/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1149374956,https://github.com/rails/rails/pull/45241#issuecomment-1149374956,https://api.github.com/repos/rails/rails/issues/45241,1149374956,IC_kwDNIULORIIR7A,"{'login': 'faqndo97', 'id': 16840674, 'node_id': 'MDQ6VXNlcjE2ODQwNjc0', 'avatar_url': 'https://avatars.githubusercontent.com/u/16840674?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/faqndo97', 'html_url': 'https://github.com/faqndo97', 'followers_url': 'https://api.github.com/users/faqndo97/followers', 'following_url': 'https://api.github.com/users/faqndo97/following{/other_user}', 'gists_url': 'https://api.github.com/users/faqndo97/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/faqndo97/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/faqndo97/subscriptions', 'organizations_url': 'https://api.github.com/users/faqndo97/orgs', 'repos_url': 'https://api.github.com/users/faqndo97/repos', 'events_url': 'https://api.github.com/users/faqndo97/events{/privacy}', 'received_events_url': 'https://api.github.com/users/faqndo97/received_events', 'type': 'User', 'site_admin': False}",2022-06-08T02:13:48Z,2022-06-08T02:13:48Z,NONE,"Ok, I have been thinking about how to continue with this based on all the feedback received here and on [Twitter](https://twitter.com/faqndoE97/status/1532156233045745666).

@matthewd I think this new layout is more natural to find what we're looking for in the output. From my experience, when we run the command, most of the time, the information we have is the path, and we're looking for the helper or controller/action or both. So, how we read from left to right, display the information we tend to have on the left side, and put the information we're looking for on the right side matches that. Again, this is from my POV and experience.

Related to what @skipkayhil and @natematykiewicz were talking about, I agree that maybe the ""colorize"" concept should be a modifier of all formatters and not a formatter itself. 

I didn't want to jump directly and replace the default one (`Sheet`) because probably some people will continue using it.

So maybe the best approach to continue with this, as @natematykiewicz proposed, is to rename this formatter to `Justified` and refactor the remind formatters to accept the `colorized` modifier. What do you think?

Related to other comments for improvements that I received, the notes I took are:

* Use a different color for `post`. 
* Use a grayish color for `(.:format)`.
* Use a different color for the path helper instead of gray to highlight it more.
* Improve the separator between helper name and formatter.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1149374956/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1152988341,https://github.com/rails/rails/pull/45241#issuecomment-1152988341,https://api.github.com/repos/rails/rails/issues/45241,1152988341,IC_kwDNIULORLk0tQ,"{'login': 'phendrick', 'id': 218674, 'node_id': 'MDQ6VXNlcjIxODY3NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/218674?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/phendrick', 'html_url': 'https://github.com/phendrick', 'followers_url': 'https://api.github.com/users/phendrick/followers', 'following_url': 'https://api.github.com/users/phendrick/following{/other_user}', 'gists_url': 'https://api.github.com/users/phendrick/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/phendrick/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/phendrick/subscriptions', 'organizations_url': 'https://api.github.com/users/phendrick/orgs', 'repos_url': 'https://api.github.com/users/phendrick/repos', 'events_url': 'https://api.github.com/users/phendrick/events{/privacy}', 'received_events_url': 'https://api.github.com/users/phendrick/received_events', 'type': 'User', 'site_admin': False}",2022-06-11T19:49:04Z,2022-06-11T19:49:04Z,NONE,"Hey @faqndo97 this looks awesome! As mentioned above, i've opened #45330 which allows for registering custom formatters; maybe there's a combination of these two PR's we can work on? ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1152988341/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1246045430,https://github.com/rails/rails/pull/45241#issuecomment-1246045430,https://api.github.com/repos/rails/rails/issues/45241,1246045430,IC_kwDNIULOSkUk9g,"{'login': 'Diogomartf', 'id': 5664434, 'node_id': 'MDQ6VXNlcjU2NjQ0MzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5664434?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Diogomartf', 'html_url': 'https://github.com/Diogomartf', 'followers_url': 'https://api.github.com/users/Diogomartf/followers', 'following_url': 'https://api.github.com/users/Diogomartf/following{/other_user}', 'gists_url': 'https://api.github.com/users/Diogomartf/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Diogomartf/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Diogomartf/subscriptions', 'organizations_url': 'https://api.github.com/users/Diogomartf/orgs', 'repos_url': 'https://api.github.com/users/Diogomartf/repos', 'events_url': 'https://api.github.com/users/Diogomartf/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Diogomartf/received_events', 'type': 'User', 'site_admin': False}",2022-09-13T23:18:49Z,2022-09-13T23:18:49Z,NONE,"Is this branch still alive?

 Would love to see this feature shipped. 🚀

Happy to help.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1246045430/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1430192897,https://github.com/rails/rails/pull/45241#issuecomment-1430192897,https://api.github.com/repos/rails/rails/issues/45241,1430192897,IC_kwDNIULOVT8DAQ,"{'login': 'Diogomartf', 'id': 5664434, 'node_id': 'MDQ6VXNlcjU2NjQ0MzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5664434?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Diogomartf', 'html_url': 'https://github.com/Diogomartf', 'followers_url': 'https://api.github.com/users/Diogomartf/followers', 'following_url': 'https://api.github.com/users/Diogomartf/following{/other_user}', 'gists_url': 'https://api.github.com/users/Diogomartf/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Diogomartf/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Diogomartf/subscriptions', 'organizations_url': 'https://api.github.com/users/Diogomartf/orgs', 'repos_url': 'https://api.github.com/users/Diogomartf/repos', 'events_url': 'https://api.github.com/users/Diogomartf/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Diogomartf/received_events', 'type': 'User', 'site_admin': False}",2023-02-14T18:31:01Z,2023-02-14T18:31:01Z,NONE,"would be great to see this PR merged on the main branch, what does it take to get there?  Or there is no interest on the community to have this merged?

Either way would be good to know where we stand. 

I think rails routes command needs a lift up and this is a step in the right direction.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1430192897/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1430242243,https://github.com/rails/rails/pull/45241#issuecomment-1430242243,https://api.github.com/repos/rails/rails/issues/45241,1430242243,IC_kwDNIULOVT_Dww,"{'login': 'faqndo97', 'id': 16840674, 'node_id': 'MDQ6VXNlcjE2ODQwNjc0', 'avatar_url': 'https://avatars.githubusercontent.com/u/16840674?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/faqndo97', 'html_url': 'https://github.com/faqndo97', 'followers_url': 'https://api.github.com/users/faqndo97/followers', 'following_url': 'https://api.github.com/users/faqndo97/following{/other_user}', 'gists_url': 'https://api.github.com/users/faqndo97/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/faqndo97/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/faqndo97/subscriptions', 'organizations_url': 'https://api.github.com/users/faqndo97/orgs', 'repos_url': 'https://api.github.com/users/faqndo97/repos', 'events_url': 'https://api.github.com/users/faqndo97/events{/privacy}', 'received_events_url': 'https://api.github.com/users/faqndo97/received_events', 'type': 'User', 'site_admin': False}",2023-02-14T19:05:43Z,2023-02-14T19:05:43Z,NONE,"@Diogomartf Thanks for being interested on this. I couldn't come back here for some time, but I'll think what can be the best next steps here and continue working + communicating next week hopefully","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1430242243/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45241
https://api.github.com/repos/rails/rails/issues/comments/1143599223,https://github.com/rails/rails/pull/45236#issuecomment-1143599223,https://api.github.com/repos/rails/rails/issues/45236,1143599223,IC_kwDNIULORCnwdw,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2022-06-01T13:15:55Z,2022-06-01T13:15:55Z,MEMBER,"Thanks for the PR @amartinfraguas. It looks like ActionText has related failures, can you take a look?

> This is a change in the API, so the minor version of Rails should be increased

Rails doesn't follow semver, but I'm not sure which version this would be released in until I better understand the impact to existing applications.

> Since browsers may not support the HTML standard completely, it may be a good idea to have these changes merged in main for a while before releasing them.

Is this change a feature or a bugfix? It sounds like this isn't a change that fixes the security fix we merged from you a few weeks ago. If it's a feature it will only go to main and be released in 7.1. If it's a bugfix for the security fix you sent and followup changes I made, we might release it in all of the last bugfix versions, however 5.2 is now EOL as of today. I would consider doing one more release of 5.2 if the current state was severely broken but I would rather apps upgrade. 

It sounds like this PR is trying to get closer to the standard and doesn't necessarily need to be backported to the prior released versions. Can you help me better understand the impact to existing Rails applications that may be on 5.2, 6.0, 6.1, and 7.0? Thanks!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1143599223/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45236
https://api.github.com/repos/rails/rails/issues/comments/1143667712,https://github.com/rails/rails/pull/45236#issuecomment-1143667712,https://api.github.com/repos/rails/rails/issues/45236,1143667712,IC_kwDNIULORCr8AA,"{'login': 'amartinfraguas', 'id': 481882, 'node_id': 'MDQ6VXNlcjQ4MTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/481882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/amartinfraguas', 'html_url': 'https://github.com/amartinfraguas', 'followers_url': 'https://api.github.com/users/amartinfraguas/followers', 'following_url': 'https://api.github.com/users/amartinfraguas/following{/other_user}', 'gists_url': 'https://api.github.com/users/amartinfraguas/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/amartinfraguas/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/amartinfraguas/subscriptions', 'organizations_url': 'https://api.github.com/users/amartinfraguas/orgs', 'repos_url': 'https://api.github.com/users/amartinfraguas/repos', 'events_url': 'https://api.github.com/users/amartinfraguas/events{/privacy}', 'received_events_url': 'https://api.github.com/users/amartinfraguas/received_events', 'type': 'User', 'site_admin': False}",2022-06-01T14:14:08Z,2022-06-01T14:14:08Z,CONTRIBUTOR,"Thank you for the quick response, @eileencodes :-) I have fixed the test failure in ActionText, there is now a small change in actiontext/app/helpers/action_text/tag_helper.rb

> Is this change a feature or a bugfix?

The change is a bugfix. Without it, we are filtering the wrong characters and that breaks the applications that use them. The security issue was probably fixed with the initial release as it included commonly used characters in XSS attacks, though I am not sure if it was a complete fix. In that regard, the changes in this pull request are more complete.

> It sounds like this PR is trying to get closer to the standard and doesn't necessarily need to be backported to the prior released versions. Can you help me better understand the impact to existing Rails applications that may be on 5.2, 6.0, 6.1, and 7.0?

Backporting this PR would mean disabling HTML4 and XHTML support. The deprecation note in the documentation was very old and maybe few applications still use those standards, though maybe it would be a bit surprising for Rails users to apply this change to older versions. Another option would be to keep supporting those standards with separate new filtering functionality, which would increase the complexity (especially considering there are several versions of XHTML) and may take a long time to develop.

The summary is that I think it is a choice between security and stability:
- Rails versions that had the previous fix applied gained some level of security with it. Backporting this PR may help security further but disable support for old standards that was going to be deprecated.

With all of this in mind, I am more inclined to backport this (maybe not to 5.2) after having it in the main branch for a while so that possible issues come up and are fixed. But your judgement is probably better than mine, what do you think? My background is that I have worked as a Rails application developer for 10 years followed by 2 years in security.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1143667712/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45236
https://api.github.com/repos/rails/rails/issues/comments/1144224280,https://github.com/rails/rails/pull/45236#issuecomment-1144224280,https://api.github.com/repos/rails/rails/issues/45236,1144224280,IC_kwDNIULORDN6GA,"{'login': 'amartinfraguas', 'id': 481882, 'node_id': 'MDQ6VXNlcjQ4MTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/481882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/amartinfraguas', 'html_url': 'https://github.com/amartinfraguas', 'followers_url': 'https://api.github.com/users/amartinfraguas/followers', 'following_url': 'https://api.github.com/users/amartinfraguas/following{/other_user}', 'gists_url': 'https://api.github.com/users/amartinfraguas/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/amartinfraguas/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/amartinfraguas/subscriptions', 'organizations_url': 'https://api.github.com/users/amartinfraguas/orgs', 'repos_url': 'https://api.github.com/users/amartinfraguas/repos', 'events_url': 'https://api.github.com/users/amartinfraguas/events{/privacy}', 'received_events_url': 'https://api.github.com/users/amartinfraguas/received_events', 'type': 'User', 'site_admin': False}",2022-06-01T22:58:26Z,2022-06-01T22:58:26Z,CONTRIBUTOR,"My last push only changes my regexp in actiontext/app/helpers/action_text/tag_helper.rb, as I have just noticed a mistake that was still passing the DOM-equal assertion in the tests.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1144224280/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45236
https://api.github.com/repos/rails/rails/issues/comments/1156764375,https://github.com/rails/rails/pull/45236#issuecomment-1156764375,https://api.github.com/repos/rails/rails/issues/45236,1156764375,IC_kwDNIULORPLS1w,"{'login': 'amartinfraguas', 'id': 481882, 'node_id': 'MDQ6VXNlcjQ4MTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/481882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/amartinfraguas', 'html_url': 'https://github.com/amartinfraguas', 'followers_url': 'https://api.github.com/users/amartinfraguas/followers', 'following_url': 'https://api.github.com/users/amartinfraguas/following{/other_user}', 'gists_url': 'https://api.github.com/users/amartinfraguas/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/amartinfraguas/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/amartinfraguas/subscriptions', 'organizations_url': 'https://api.github.com/users/amartinfraguas/orgs', 'repos_url': 'https://api.github.com/users/amartinfraguas/repos', 'events_url': 'https://api.github.com/users/amartinfraguas/events{/privacy}', 'received_events_url': 'https://api.github.com/users/amartinfraguas/received_events', 'type': 'User', 'site_admin': False}",2022-06-15T17:51:37Z,2022-06-15T17:51:37Z,CONTRIBUTOR,"Hi, @eileencodes . I had not noticed that a couple of tests were failing in the railties and I have fixed them. However, now there are some failed tests in many different Rails components in buildkite that pass successfully in my environment. Could you check what may be happening? Maybe they are random failures? Thank you :slightly_smiling_face: ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1156764375/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45236
https://api.github.com/repos/rails/rails/issues/comments/1157539724,https://github.com/rails/rails/pull/45236#issuecomment-1157539724,https://api.github.com/repos/rails/rails/issues/45236,1157539724,IC_kwDNIULORP6njA,"{'login': 'amartinfraguas', 'id': 481882, 'node_id': 'MDQ6VXNlcjQ4MTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/481882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/amartinfraguas', 'html_url': 'https://github.com/amartinfraguas', 'followers_url': 'https://api.github.com/users/amartinfraguas/followers', 'following_url': 'https://api.github.com/users/amartinfraguas/following{/other_user}', 'gists_url': 'https://api.github.com/users/amartinfraguas/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/amartinfraguas/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/amartinfraguas/subscriptions', 'organizations_url': 'https://api.github.com/users/amartinfraguas/orgs', 'repos_url': 'https://api.github.com/users/amartinfraguas/repos', 'events_url': 'https://api.github.com/users/amartinfraguas/events{/privacy}', 'received_events_url': 'https://api.github.com/users/amartinfraguas/received_events', 'type': 'User', 'site_admin': False}",2022-06-16T11:16:09Z,2022-06-16T11:16:09Z,CONTRIBUTOR,"Hi, @eileencodes . I have rebased on main and I have made a small change and now the tests pass, so my changes seem to be OK. The previous failures may be related to https://github.com/rails/rails/pull/45370 (see https://buildkite.com/rails/rails/builds/87312 ).","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1157539724/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45236
https://api.github.com/repos/rails/rails/issues/comments/1143991277,https://github.com/rails/rails/pull/45231#issuecomment-1143991277,https://api.github.com/repos/rails/rails/issues/45231,1143991277,IC_kwDNIULORC_r7Q,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2022-06-01T18:27:05Z,2022-06-01T18:27:05Z,CONTRIBUTOR,"I'm really curious about this feature! 

Correct me if I'm wrong, but I assume currently we would prevent n+1 queries by explicitly preloading associations like
```ruby
developers = Developer.includes(contracts: :company).order(:id).limit(2).to_a
```
And with the proposed change we will basically defer db queries to a later time whenever the association get's accessed without forcing developer to know in advance what kind of data they need later in the code. I can definitely see how it would prevent unintentional n+1 issues, however, and it may be my personal and a bit conservative point of view but I can see benefits in defining preloads explicitly and well in advance. Let's consider an example like:

```ruby
# developers_controller.rb
def index
  @developers = Developer.order(:id).automatic_preloading.limit(2).to_a
end
```

```erb
# developers/index.html.erb

<h1>Developers list</h1>
<% @developers.each do |developer| %>
  <div id=<%= developer.id %>>
    <h2>Contracts for developer <%developer.name%></h2>
    <ul>
    <% developer.contracts.each do |contract| %>
      <li>Contract <%=contract.title%> with company <%= contract.company.name %></li>
    <% end %>
    </ul>
  </div>
<% end %>
```

Which, as per my understanding, will basically cause the view layer to execute db queries, which doesn't generally sound like a good practice.

We could probably avoid making queries in the view layer by having some kind of a presenter that explicitly loads objects, but having a presenter is not always necessary and it would be an overkill to have a separate object that explicitly loads records. Kind of goes against the whole idea of automatic preloads. 

So what I'm trying to say, I'm just worrying that such feature will make more appealing to build such implicit designs and perhaps complicate query debugging. I personally prefer to design classes in such way to load data from datastores as early as possible and make every other part of the system almost query-less which makes it really easy to write fast unit tests that don't require to communicate with any datastore.

Again, I may be just too conservative in regards to this particular feature, but it feels like I'd still prefer explicit preloads and some separate tooling to prevent n+1 queries in the system, for example https://github.com/palkan/n_plus_one_control





","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1143991277/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1144008429,https://github.com/rails/rails/pull/45231#issuecomment-1144008429,https://api.github.com/repos/rails/rails/issues/45231,1144008429,IC_kwDNIULORDAu7Q,"{'login': 'doliveirakn', 'id': 1671796, 'node_id': 'MDQ6VXNlcjE2NzE3OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1671796?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/doliveirakn', 'html_url': 'https://github.com/doliveirakn', 'followers_url': 'https://api.github.com/users/doliveirakn/followers', 'following_url': 'https://api.github.com/users/doliveirakn/following{/other_user}', 'gists_url': 'https://api.github.com/users/doliveirakn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/doliveirakn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/doliveirakn/subscriptions', 'organizations_url': 'https://api.github.com/users/doliveirakn/orgs', 'repos_url': 'https://api.github.com/users/doliveirakn/repos', 'events_url': 'https://api.github.com/users/doliveirakn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/doliveirakn/received_events', 'type': 'User', 'site_admin': False}",2022-06-01T18:46:51Z,2022-06-01T18:46:51Z,NONE,"@nvasilevski 

You are correct that currently how to prevent an N+1 query would be to explicitly use the `includes` and that it would cause the view layer to execute db queries. This could be a big change from how N+1 queries have been handled in the past. 

That being said, there are few points here that I'd like to make
1) This feature doesn't interfere with the ability to add `includes`/`preload`/`eager_load` on the query ahead of time. That can still happen.
2) If somehow you missed an `includes`, the view layer would still be the place where db queries are being executed. 
3) When using `includes` as part of the query, a developer needs to know both where the query is being used, and where it is being setup. In some cases like the example you outline, if could be really straightforward (the view's controller), but if it was a partial, or if the query came from some kind of service object, suddenly this is no longer clear. 
4) For simple examples it is often easy, but consider something complicated like a GraphQL API where users can specify what kind of responses they want back. Preloading that could require a lot of work (pulling apart the user's request, and figuring out the associations required). With something like this, Rails would take care of the heavy lifting and only preload associations as needed. 

I think, with this feature, organizations can experiment with it being enabled by default, and can view for themselves what kind of performance improvement they would see. Anecdotally, I've set this up in two organizations at scale, that the performance improvement has been extremely noticeable

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1144008429/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1144744173,https://github.com/rails/rails/pull/45231#issuecomment-1144744173,https://api.github.com/repos/rails/rails/issues/45231,1144744173,IC_kwDNIULORDto7Q,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-06-02T11:16:18Z,2022-06-02T11:16:18Z,MEMBER,"At a glance this seems to have some strong overlap with #45071, which is perhaps a good sign that it's an idea whose time has come.

Can you (cc @gwincr11) explore the similarities and differences in the proposed APIs and implementations? Don't focus on ending up with a single unified approach -- I imagine we'll have some strong opinions on the best fit for the framework -- but anything you can do to help ensure we're thinking about and considering all the right things would be great!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1144744173/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1145135980,https://github.com/rails/rails/pull/45231#issuecomment-1145135980,https://api.github.com/repos/rails/rails/issues/45231,1145135980,IC_kwDNIULOREFjbA,"{'login': 'doliveirakn', 'id': 1671796, 'node_id': 'MDQ6VXNlcjE2NzE3OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1671796?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/doliveirakn', 'html_url': 'https://github.com/doliveirakn', 'followers_url': 'https://api.github.com/users/doliveirakn/followers', 'following_url': 'https://api.github.com/users/doliveirakn/following{/other_user}', 'gists_url': 'https://api.github.com/users/doliveirakn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/doliveirakn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/doliveirakn/subscriptions', 'organizations_url': 'https://api.github.com/users/doliveirakn/orgs', 'repos_url': 'https://api.github.com/users/doliveirakn/repos', 'events_url': 'https://api.github.com/users/doliveirakn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/doliveirakn/received_events', 'type': 'User', 'site_admin': False}",2022-06-02T17:46:37Z,2022-06-02T17:46:37Z,NONE,"I can see some similarities between the two approaches. maybe @gwincr11 can correct anything that I have incorrect after trying to get up to speed with that PR.

General approachs:
| | This branch | #45071 |
|-|---|---|
| Enabling point | Uses either a global flag or a method called on an ActiveRecord relation to enable it | Wraps queries in a block to enable it |
| Record storage | Stores the array of records in `ActiveRecord::Base#automatic_preloader` | Stores the array of records in `ActiveRecord::Base#_load_tree` |
 
Some things I notice:
- The block style approach does require constantly adjusting global state in order to determine if it is active. This approach can set a value in the global state initially, but otherwise only interacts with records pulled from a relation.
- With the block style approach, it would mean that query execution, and association access need to be located close to each other. (Consider the [above example](https://github.com/rails/rails/pull/45231#issuecomment-1143991277) where the initial query is executed in a controller, but associations are accessed in the view). The approach in this PR will allow those queries to not be tied to each other. 
- The block approach does give a way to explicitly disable it, whereas with this PR, once it is on for a set of records, it stays on
- The `_load_tree` concept is more generic and could theoretically be applied in other places. Knowing things like the object parent could be useful for further tooling.  However, it does appear that the `_load_tree` is always created (even if it isn't in a dynamic preloading block)
- The globally enabled aspect of this branch doesn't appear to be present with the other approach yet. I think this is really important. Turning it on globally has been a major performance improvement in the past. It also reduces developer overwhere where they no longer need to think about when to utilize it, Rails will handle it for them. 

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1145135980/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1147776521,https://github.com/rails/rails/pull/45231#issuecomment-1147776521,https://api.github.com/repos/rails/rails/issues/45231,1147776521,IC_kwDNIULORGmuCQ,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2022-06-06T18:51:59Z,2022-06-06T18:54:15Z,CONTRIBUTOR,"👋 Hi All,

Excited to see another idea in this area. Kudos! This actually looks remarkably similar to where I started with work on my branch. I iterated a few times and ended up in a slightly different spot but spiritually the same. I am happy to see some one else hacking in this area! ❤️ I am not sure what kind of feedback cycles you have gone through with your approach, below I am going to outline some interesting things I have learned along my path of talking to people about my implementation perhaps we can find some ideal api based on our approaches.

> The block style approach does require constantly adjusting global state in order to determine if it is active. This approach can set a value in the global state initially, but otherwise only interacts with records pulled from a relation.

The first implementation I put together was turned on globally, much like yours. When I showed this to other developers I encountered a lot of push back around, the thought being it is pretty dangerous to have this just work everywhere and that people did not trust the magic. The preference expressed seemed to be allowing for a more slow opt-in roll out when working in complex applications.

One other thing I learned that suprised me, there are some scenarios where developers do not want dynamic include behavior and instead being able to turn it on and off at will is desired for performance reasons. Mainly this happens when there is a a need to pull an array of models into memory select only certain things out of the array and then only load a relation just for the selected items. 

All that being said it is possible to turn on my implementation globally https://github.com/rails/rails/pull/45071/files#diff-31163cd511366615dd55b9ccefa35413065237f0d3b5d7bd8a60b9adb3d6e602R8-R10
`ActiveRecord.dynamic_includes_enabled = true`

I think having both is important.

> With the block style approach, it would mean that query execution, and association access need to be located close to each other. (Consider the https://github.com/rails/rails/pull/45231#issuecomment-1143991277 where the initial query is executed in a controller, but associations are accessed in the view). The approach in this PR will allow those queries to not be tied to each other.

So this one is interesting, if the user wraps the render call from the controller in the block the render call happens with the setting in scope:
```
class User
  def show
    ActiveRecord.enable_dynamic_includes do
      @user = User.find(params[:id])
      @microposts = @user.microposts.paginate(page: params[:page])

      render ""users/show""
    end
  end
end
  ```

 If doing implicit rendering then the scope is incorrect.

```
class User
  def show
    ActiveRecord.enable_dynamic_includes do
      @user = User.find(params[:id])
      @microposts = @user.microposts.paginate(page: params[:page])
    end
    # render actually happens here
  end
end
```

However if you use an around action filter, it will again work.
```
class User
  around_action :dynamic_includes
  def show
    
      @user = User.find(params[:id])
      @microposts = @user.microposts.paginate(page: params[:page])
    end
  end

  private
 
  def dynamic_includes 
    ActiveRecord.enable_dynamic_includes do
      yield
    end
  end
end
```

I did play around with passing state between objects like you have, but it became confusing when a developer wanted to turn it off somewhere in the method chaining and then some one else wanted it on else where. Since we have complex depth of calls, setting it at the call site was the most understandable pattern we could find as it allows developers to set the performance need at the place of need, and once that place of need is exited the performance tuning goes back to what it was prior. For example if I have:

```
class User
  def some_slow_method
    ActiveRecord.disable_dynamic_includes do 
       posts.select(:user).each do |user|
         # this is some slow db query that we only want to happen when really neccesary
         user.slow_association.update
      end
  end
end

ActiveRecord.enable_dynamic_includes do 
  User.all.each do |u|
     u.some_slow_method # N+1 by design
     u.someother_relation # dynamic include fixes n+1
  end
end
```

We will not incur the full cost of loading all the slow associations, only the ones that are selected.

> The block approach does give a way to explicitly disable it, whereas with this PR, once it is on for a set of records, it stays on

I also tried this approach and it was put us in a position of sometimes over fetching records that were not used on the page, allowing developers to turn it off can lead to more performant usage in some scenarios as mentioned above. Also interestingly the developer manually adding the includes can sometimes help the performance because there is more context available during preloading ahead of time, leading to more optimizations. Dynamic includes should be viewed as a sane default, that may at this time not be as performant as using the includes option has been my finding.

> The _load_tree concept is more generic and could theoretically be applied in other places. Knowing things like the object parent could be useful for further tooling. However, it does appear that the _load_tree is always created (even if it isn't in a dynamic preloading block)

In order for dynamic includes to work it must be present. However, I have been splitting up that larger pr and have a new version that allows the developer to turn it on and off. As for the load tree implementation, we would prefer to have a more open API so that we can tie together other services and gems such as Prelude and our Twirp service layer.

> The globally enabled aspect of this branch doesn't appear to be present with the other approach yet. I think this is really important. Turning it on globally has been a major performance improvement in the past. It also reduces developer overwhere where they no longer need to think about when to utilize it, Rails will handle it for them.

As I mentioned above my proposed approach allow for both a global approach and a block based approach.


Thanks again for working in this area ❤️ ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1147776521/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1148082233,https://github.com/rails/rails/pull/45231#issuecomment-1148082233,https://api.github.com/repos/rails/rails/issues/45231,1148082233,IC_kwDNIULORG5YOQ,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2022-06-07T00:58:36Z,2022-06-07T00:58:36Z,CONTRIBUTOR,I am also excited that you have ran this on other code bases and seen big improvements. In my tests I have seen really large N+1 queries get fixed I added some logging to my pr to output when it happens and it's a bit shocking in practice how frequently you see the fixes occur and also where. ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1148082233/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1148146148,https://github.com/rails/rails/pull/45231#issuecomment-1148146148,https://api.github.com/repos/rails/rails/issues/45231,1148146148,IC_kwDNIULORG9R5A,"{'login': 'doliveirakn', 'id': 1671796, 'node_id': 'MDQ6VXNlcjE2NzE3OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1671796?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/doliveirakn', 'html_url': 'https://github.com/doliveirakn', 'followers_url': 'https://api.github.com/users/doliveirakn/followers', 'following_url': 'https://api.github.com/users/doliveirakn/following{/other_user}', 'gists_url': 'https://api.github.com/users/doliveirakn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/doliveirakn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/doliveirakn/subscriptions', 'organizations_url': 'https://api.github.com/users/doliveirakn/orgs', 'repos_url': 'https://api.github.com/users/doliveirakn/repos', 'events_url': 'https://api.github.com/users/doliveirakn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/doliveirakn/received_events', 'type': 'User', 'site_admin': False}",2022-06-07T03:13:31Z,2022-06-07T03:13:31Z,NONE,"I've encountered something similar with developer resistance because of the magic. However, once people been using it while it is enabled globally, they typically don't want to go back to manually handling it. But it is good to allow people to make their own choices. 

> One other thing I learned that suprised me, there are some scenarios where developers do not want dynamic include behavior and instead being able to turn it on and off at will is desired for performance reasons. Mainly this happens when there is a a need to pull an array of models into memory select only certain things out of the array and then only load a relation just for the selected items.

If they are wanting to load all of the records into memory and select certain ones out, I think it would still be advantageous to preload the association. Though this is different if they are querying the relation for a subset of data. I can imagine everyones setup is different. 

Having a way to disable it for a records or an association could be pretty useful and I think that could be pretty straightforward to add if we wanted to. 



Also I don't think I noted it earlier, but my work has stemmed from this [gem](https://github.com/clio/jit_preloader/) that I made several years ago. 

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1148146148/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1148621283,https://github.com/rails/rails/pull/45231#issuecomment-1148621283,https://api.github.com/repos/rails/rails/issues/45231,1148621283,IC_kwDNIULORHaR4w,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2022-06-07T12:47:19Z,2022-06-07T12:47:19Z,CONTRIBUTOR,"> If they are wanting to load all of the records into memory and select certain ones out, I think it would still be advantageous to preload the association. Though this is different if they are querying the relation for a subset of data. I can imagine everyones setup is different.

I also felt this way, I was suprised to learn that people where so strongly opposed to this. 

> Having a way to disable it for a records or an association could be pretty useful and I think that could be pretty straightforward to add if we wanted to.

I agree it is easy to do, I think getting the api right is hard. Some things I think are worth considering:

- The association may need to be used differently in different contexts.
- Developers should be able to define a method that sets up preferred performance characteristics for all callers.
- As a method developer I should be able to define how I want my loading behavior to work, but when it interacts with a method I do not know the performance characteristics of that method should work in the optimum way and then revert back to the performance characteristic my code needs. 

> Also I don't think I noted it earlier, but my work has stemmed from this [gem](https://github.com/clio/jit_preloader/) that I made several years ago.

Nice I did not know this existed. I wonder if we could use this to get some more metrics around how this affects memory usage and performance in some real world applications?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1148621283/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1150465037,https://github.com/rails/rails/pull/45231#issuecomment-1150465037,https://api.github.com/repos/rails/rails/issues/45231,1150465037,IC_kwDNIULORJK0DQ,"{'login': 'doliveirakn', 'id': 1671796, 'node_id': 'MDQ6VXNlcjE2NzE3OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1671796?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/doliveirakn', 'html_url': 'https://github.com/doliveirakn', 'followers_url': 'https://api.github.com/users/doliveirakn/followers', 'following_url': 'https://api.github.com/users/doliveirakn/following{/other_user}', 'gists_url': 'https://api.github.com/users/doliveirakn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/doliveirakn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/doliveirakn/subscriptions', 'organizations_url': 'https://api.github.com/users/doliveirakn/orgs', 'repos_url': 'https://api.github.com/users/doliveirakn/repos', 'events_url': 'https://api.github.com/users/doliveirakn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/doliveirakn/received_events', 'type': 'User', 'site_admin': False}",2022-06-08T22:09:48Z,2022-06-08T22:09:48Z,NONE,"So currently in this PR we have the `automatic_preloading` method that can be used both to enable or disable (very similar to how `strict_loading` works)

So someone could do `Developer.order(:id).automatic_preloading(false)` to disable it (if we was already enabled on a scope or it was globally enabled)

The only thing around disabling that is missing is for individual objects after the initial query has been made. (Theoretically they could disable it by modifying `Record#automatic_preloader` in this PR, but we could make it much more explicit.) 


Re: Memory usage. 

I don't have any information on memory usage. My argument that it wouldn't really matter that much is that most of the time, we would have loaded the same amount of objects anyways. However, there are situations, like @gwincr11 outlined, where there may be a really slow associations that we would only load on one object that would now be loaded on multiple records. Anecdotally, we have noticed no significant memory impact. 

Re: Performance. 
 
I've measured the performance of globally enabling this in two organization. Here is the changes in general response times across the latest codebase from before/after globally enabling the N+1 automatic loading. (this codebase was roughly getting about 1M requests per hour at the time)

| | Before | After |
| --- | --- | --- | 
| P50 | 55.56ms | 57.61 |  
| P75 | 101.66ms | 93.26ms | 
| P90 | 215.75ms | 166.81ms | 
| P95 | 349.52ms | 239.83ms | 
| P99 | 1.08s | 669.54ms | 
  
This data was also consistent with the previous code base I set it up on though I no longer have access to the raw numbers. The requests per hour were also well into the millions)

This to me has been really strong signal that N+1 constantly sneak through and into production, and the benefits of being able to globally remove them is really huge. 
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1150465037/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1179359464,https://github.com/rails/rails/pull/45231#issuecomment-1179359464,https://api.github.com/repos/rails/rails/issues/45231,1179359464,IC_kwDNIULORkuY6A,"{'login': 'doliveirakn', 'id': 1671796, 'node_id': 'MDQ6VXNlcjE2NzE3OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1671796?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/doliveirakn', 'html_url': 'https://github.com/doliveirakn', 'followers_url': 'https://api.github.com/users/doliveirakn/followers', 'following_url': 'https://api.github.com/users/doliveirakn/following{/other_user}', 'gists_url': 'https://api.github.com/users/doliveirakn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/doliveirakn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/doliveirakn/subscriptions', 'organizations_url': 'https://api.github.com/users/doliveirakn/orgs', 'repos_url': 'https://api.github.com/users/doliveirakn/repos', 'events_url': 'https://api.github.com/users/doliveirakn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/doliveirakn/received_events', 'type': 'User', 'site_admin': False}",2022-07-08T21:05:22Z,2022-07-08T21:05:22Z,NONE,@matthewd Any additional thoughts you have here?,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1179359464/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1182397432,https://github.com/rails/rails/pull/45231#issuecomment-1182397432,https://api.github.com/repos/rails/rails/issues/45231,1182397432,IC_kwDNIULORnnz-A,"{'login': 'nvasilevski', 'id': 5512772, 'node_id': 'MDQ6VXNlcjU1MTI3NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5512772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nvasilevski', 'html_url': 'https://github.com/nvasilevski', 'followers_url': 'https://api.github.com/users/nvasilevski/followers', 'following_url': 'https://api.github.com/users/nvasilevski/following{/other_user}', 'gists_url': 'https://api.github.com/users/nvasilevski/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nvasilevski/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nvasilevski/subscriptions', 'organizations_url': 'https://api.github.com/users/nvasilevski/orgs', 'repos_url': 'https://api.github.com/users/nvasilevski/repos', 'events_url': 'https://api.github.com/users/nvasilevski/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nvasilevski/received_events', 'type': 'User', 'site_admin': False}",2022-07-12T19:47:15Z,2022-07-12T19:47:15Z,CONTRIBUTOR,"Hey folks, I just wanted to share an opinion that may sound a little defensive in regards to this feature. Luckily I'm not making decisions so it's just an opinion and I'm definitely open for changing my mind  :)

First of all I wanted to mention that I consider this feature useful and no doubt there are a lot of application that can immediately benefit from enabling/utilizing automatic preloading by not producing unnecessary queries.
However, I feel like it's not completely suitable to be a ""core"" Rails feature. Let me quote something from the gem that, as far as I understood, was used as a foundation for the feature (https://github.com/clio/jit_preloader/):

>When doing the preload, you have to understand what the code does in order to properly load the associations. When this is a brand new method or a simple method this may be simple, but sometimes it can be difficult or time-consuming to figure this out.

I find this argument reasonable to justify the usage of the new feature or the gem, however In my opinion automatic preloading won't solve the root cause: It's still hard to understand the code, hard to maintain it, hard to make assumptions about it and data loading is spread across multiple layers. The n+1 as a concept is still hidden somewhere deep in the code, even if it's not performing any sql queries. To me that's still a tech debt that needs to be addressed by refactoring the code in a meaningful way.

In other words, I don't believe `automatic_preloading` is something that can be recommended or required for a new application yet to be built, thus it's not suitable to be a part of the core capabilities.
For a new application what I would recommend instead is:
- Load data at a proper layer which is easy to extend and easy to make assumptions on what queries are going to be performed in order to fetch data required for a particular unit of work
- Write code that is easy to read and not time-consuming to extend
- Use tooling in development & test environments to **prevent** n+1 queries 
- Use monitoring in production to **react** on any performance regressions 


However, as I mentioned, this is still a great feature to work as a temporary (in my opinion) solution for applications that are struggling with n+1 queries. Which makes me thinking, is there anything in the Rails framework that could be changed in a way so the feature could stay as a separate library, but be ""pluggable"" into Rails as a preloader strategy (or some other abstraction) so the library itself shouldn't require any monkeypatches to be compatible with Rails and only rely on public API instead. At first glance it seems like that `jit_preloader` gem has some patches which, I assume, makes it harder to maintain especially to keep compatibility between Active Record versions

_*This opinion is based on the assumption that all cases that produce n+1 could be refactored in a way that completely eliminates n+1 using existing Rails capabilities_","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1182397432/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1182518830,https://github.com/rails/rails/pull/45231#issuecomment-1182518830,https://api.github.com/repos/rails/rails/issues/45231,1182518830,IC_kwDNIULORnvOLg,"{'login': 'doliveirakn', 'id': 1671796, 'node_id': 'MDQ6VXNlcjE2NzE3OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1671796?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/doliveirakn', 'html_url': 'https://github.com/doliveirakn', 'followers_url': 'https://api.github.com/users/doliveirakn/followers', 'following_url': 'https://api.github.com/users/doliveirakn/following{/other_user}', 'gists_url': 'https://api.github.com/users/doliveirakn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/doliveirakn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/doliveirakn/subscriptions', 'organizations_url': 'https://api.github.com/users/doliveirakn/orgs', 'repos_url': 'https://api.github.com/users/doliveirakn/repos', 'events_url': 'https://api.github.com/users/doliveirakn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/doliveirakn/received_events', 'type': 'User', 'site_admin': False}",2022-07-12T21:30:58Z,2022-07-12T21:30:58Z,NONE,"@nvasilevski It's not always easy to voice (or to hear) comments in opposition to feature, but in the spirit of building the best thing, I think it is really important. Thanks for your opinion!

I have a few comments/thoughts from your post

1) 
> The n+1 as a concept is still hidden somewhere deep in the code, even if it's not performing any sql queries

I would argue that if the code is not making any SQL queries or degrading performance, then it isn't an N+1 query. Thus there is no further need to dig into the root cause. The root cause (Data isn't preloaded), and its symptoms (Lots of queries + performance impact) are solved.

2) Re: your recommendation flow
I think in a vacuum this is ideal. However I don't think it really captures what is the case for non-trivial apps. Making assumptions about what code further down stream does with the queries is often not an easy activity. This is especially troublesome if some behaviour is conditional. 

Already as well, additional non-rails tools are required to prevent N+1 queries, and doing this requires a lot of work. I actually think this is still something that we'd want to encourage because even if all of the current tools were used perfectly, there will still be N+1 queries (more in the next section)

In my experience with large Rails codebases, monitoring is something that developers are actively trying to do, but there are so many priorities. They will put lots of effort in, and still N+1 queries sneak through, and when they try to fix it, it does require a fair amount of time to investigate and fix. If it fix was provided by the framework so that this work didn't need to be done, that would be huge win for everyone. 

Rather than require developers to be perfect in monitoring this subtle but impactful issue, we can give them the tools to focus on behaviours that are really important. 

3) Future thoughts

> This opinion is based on the assumption that all cases that produce n+1 could be refactored in a way that completely eliminates n+1 using existing Rails capabilities

Not all N+1 queries currently can be solved with existing Rails capabilities. There are a handful that I can think of such as:
```
developers = Developer.order(:id).limit(2).to_a
developers.each do |developer|
  developer.contacts.maximum(:created_at) # any kind of aggregation (sum, min)
  developer.contacts.exists? # Existence checks
  developer.contacts.where(company_id: 1) # Any kind of further query
  developer.contacts.reload # Any explicit reloads of the association
end
```

I don't believe there is any current Built in way to handle this. With the addition of some object that collects records from queries (the `automatic_preloader` object in this PR, it was the `_load_tree` in https://github.com/rails/rails/pull/45071) these start to also be solvable as well. They wouldn't be automatically solvable in the way the standard query associations are, but tools can still be there so developers can opt into using them (with the aid of tooling in development & production)

By taking this first step, we are also laying some groundwork for how Rails could also provide solutions. And then utilizing the flow you outlined, the remaining N+1 queries can also be resolved. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1182518830/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1182547297,https://github.com/rails/rails/pull/45231#issuecomment-1182547297,https://api.github.com/repos/rails/rails/issues/45231,1182547297,IC_kwDNIULORnw9YQ,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-07-12T22:13:06Z,2022-07-12T22:13:06Z,CONTRIBUTOR,"> > If they are wanting to load all of the records into memory and select certain ones out, I think it would still be advantageous to preload the association. Though this is different if they are querying the relation for a subset of data. I can imagine everyones setup is different.
> 
> I also felt this way, I was suprised to learn that people where so strongly opposed to this.

@gwincr11 Per my experience, this ""smart"" handling of DB queries is almost impossible to be done in 100% correct way for all use-cases and that's maybe the reason. Anyone since this new feature is `opt-in`, I don't see any reason to be against it.

> So currently in this PR we have the automatic_preloading method that can be used both to enable or disable (very similar to how strict_loading works)

@doliveirakn is there any particular reason to not make it similar to `strict_loading` (global flip - already present, relation method - already present, and per relation setup - missing) and call it `smart_loading`?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1182547297/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1182558968,https://github.com/rails/rails/pull/45231#issuecomment-1182558968,https://api.github.com/repos/rails/rails/issues/45231,1182558968,IC_kwDNIULORnxq-A,"{'login': 'doliveirakn', 'id': 1671796, 'node_id': 'MDQ6VXNlcjE2NzE3OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1671796?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/doliveirakn', 'html_url': 'https://github.com/doliveirakn', 'followers_url': 'https://api.github.com/users/doliveirakn/followers', 'following_url': 'https://api.github.com/users/doliveirakn/following{/other_user}', 'gists_url': 'https://api.github.com/users/doliveirakn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/doliveirakn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/doliveirakn/subscriptions', 'organizations_url': 'https://api.github.com/users/doliveirakn/orgs', 'repos_url': 'https://api.github.com/users/doliveirakn/repos', 'events_url': 'https://api.github.com/users/doliveirakn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/doliveirakn/received_events', 'type': 'User', 'site_admin': False}",2022-07-12T22:33:50Z,2022-07-12T22:33:50Z,NONE,"@simi Naming wise, I'm not against `smart_loading`. I do like how `automatic` does imply a little of what is does whereas `smart` may be a little unclear. That said, my opinion on the naming is not strong. 

re: Per relation setup, I see no reason that couldn't be there. I initially didn't think of use cases where you'd want to enable it when setting up a particular association, but I'm open to adding that as required. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1182558968/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1182614429,https://github.com/rails/rails/pull/45231#issuecomment-1182614429,https://api.github.com/repos/rails/rails/issues/45231,1182614429,IC_kwDNIULORn1DnQ,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2022-07-13T00:10:58Z,2022-07-13T00:10:58Z,CONTRIBUTOR,"This is a great conversation, I am glad it is happening.

I started building the alternate [proposed implementation](https://github.com/rails/rails/pull/45071) at GitHub because we could not keep up with the number of performance issues N+1 queries we were experiencing, this was exacerbated by the introduction of GraphQL and the fact that Active Record is not the only data source we use. We have some parts of our code base that are over 400 lines of preload code that is tying together different datasources data or is loading data based on  state machines. It seemed reasonable to me that Rails default solution should be the fastest possible data fetch and not the worst possible scenario, which it is today.

When I started building automatic preloading(dynamic preloading, smart preloading, fancy loading, magic loading) I thought our application would be in pretty all right shape as we have a lot of developers who have been dedicating a lot of time to performance recently and lots of tooling. When I turned it on the first time and ran just a portion of our controller tests I was shocked to see it fix thousands of N+1 queries that we missed, many in odd places most people do not look, some common places included:
 
- Deletion flows
- ActiveRecord callbacks 
- When reaching across areas of responsibility into code that a developer maybe less likely to know about their is an increased chance of performance problems, for example our billing pages show data from all areas of the application and many times the developer does not know how to properly load data.
- Pages that do not get much attention.

These sorts of places do not benefit from the ideal performance work outlined above, many times people also make alterations to these pages unknowingly because of overlapping models leading to unintentional performance regressions.

We use a number of N+1 checking tools and I was also surprised that these are frequently incorrect or missing N+1's that the autoload tool I built  and this proposal fixed. We had over 200 tests that listed out the number of queries that a developer set as ideal, in most cases the tool cut them in half if not more.

GitHub does have some completely different data needs than most Rails applications which increases the complexity of loading this data, especially since we jump between RPC calls, API's, Files systems and Active Record tying all this data together as if it where an association, using tools like Prelude and Platform Loaders. My implementation deals with this by offering an api that can be shared between any data loading tooling, I feel it is important to Active Record and GitHub that the ActiveRecord data used for this preloading methodology be extendable to allow for other gems to work with it and add their own needs. 

Here is the original PR I opened which @eileencodes asked me to break up:
https://github.com/rails/rails/pull/45071

And the subsequent 3 pr's I created from her request:
- Load Tree, the abstraction that makes dynamic includes and the debugging view possible https://github.com/rails/rails/pull/45161
- Dynamic Includes: https://github.com/rails/rails/pull/45413
- A new Active Record Debugging tool based on Load Tree: https://github.com/rails/rails/pull/45565
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1182614429/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1196178731,https://github.com/rails/rails/pull/45231#issuecomment-1196178731,https://api.github.com/repos/rails/rails/issues/45231,1196178731,IC_kwDNIULOR0w9Kw,"{'login': 'lsylvester', 'id': 191128, 'node_id': 'MDQ6VXNlcjE5MTEyOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/191128?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lsylvester', 'html_url': 'https://github.com/lsylvester', 'followers_url': 'https://api.github.com/users/lsylvester/followers', 'following_url': 'https://api.github.com/users/lsylvester/following{/other_user}', 'gists_url': 'https://api.github.com/users/lsylvester/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lsylvester/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lsylvester/subscriptions', 'organizations_url': 'https://api.github.com/users/lsylvester/orgs', 'repos_url': 'https://api.github.com/users/lsylvester/repos', 'events_url': 'https://api.github.com/users/lsylvester/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lsylvester/received_events', 'type': 'User', 'site_admin': False}",2022-07-27T01:53:39Z,2022-07-27T01:53:39Z,CONTRIBUTOR,"I would be very excited to see this land in Rails in some form. 

There are couple of cases that I think need to be carefully considered when designing auto-preloading behavior.

First - when performing queries in batches - we should be careful that we do not contain references to the full batch of records after we have finished processing the batch.

For example, in 

```ruby
rare_models = SomeModel.find_each.select(&:some_rare_condition?)

rare_models.first.some_association.load
```

If each record in rare_models contains a reference to an AutomaticPreloader that has a reference to 1000 other records - then we are going to see some memory bloat.

If loading an association on such a model loads it on the full batch - then we are starting to look at very large numbers of unexpected ActiveRecord instances.

I would suggest that we should clear out the AutomaticPreloader for each record when we complete running a batch so that we don't see memory bloat or start loading excessive numbers of records. It would still be useful to be able to auto preload while processing the batch.

The second case is when using multifetch caches. When we use a multifetch cache in the view - then the records that hit the cache no longer need to have the associations loaded as they are no longer likely to be referenced from the view. Depending on the hit rate - it may be more performant to load the individual associations instead of loading for all the associations for all of the records. Ideally - we should be able to set a new AutomaticPreloader for the records that missed the cache so that they can preload together - but we would also need to consider how we handle nested cache checks where only a subset of the records are being checked in the cache. There is currently a behavior to only preload associations for records that miss the cache (implemented in #31250 - and having this auto preloading behavior would make it possible to make a much more elegant solution for this - as long as we expose APIs to manipulate the AutomaticPreloader.

I don't think that this should be an issue for implementing automatically preloading that is opt in at the point of call - but I think that it would be good to have robust solutions for these cases before we start enabling it by default (which I really would love to have at some point).


","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1196178731/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1287312487,https://github.com/rails/rails/pull/45231#issuecomment-1287312487,https://api.github.com/repos/rails/rails/issues/45231,1287312487,IC_kwDNIULOTLrUZw,"{'login': 'doliveirakn', 'id': 1671796, 'node_id': 'MDQ6VXNlcjE2NzE3OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1671796?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/doliveirakn', 'html_url': 'https://github.com/doliveirakn', 'followers_url': 'https://api.github.com/users/doliveirakn/followers', 'following_url': 'https://api.github.com/users/doliveirakn/following{/other_user}', 'gists_url': 'https://api.github.com/users/doliveirakn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/doliveirakn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/doliveirakn/subscriptions', 'organizations_url': 'https://api.github.com/users/doliveirakn/orgs', 'repos_url': 'https://api.github.com/users/doliveirakn/repos', 'events_url': 'https://api.github.com/users/doliveirakn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/doliveirakn/received_events', 'type': 'User', 'site_admin': False}",2022-10-21T18:35:58Z,2022-10-21T18:35:58Z,NONE,"Just pinging more here as it has been a few months with no further activity. Is there anything I can do to help move this forward more?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1287312487/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1438875065,https://github.com/rails/rails/pull/45231#issuecomment-1438875065,https://api.github.com/repos/rails/rails/issues/45231,1438875065,IC_kwDNIULOVcN9uQ,"{'login': 'doliveirakn', 'id': 1671796, 'node_id': 'MDQ6VXNlcjE2NzE3OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1671796?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/doliveirakn', 'html_url': 'https://github.com/doliveirakn', 'followers_url': 'https://api.github.com/users/doliveirakn/followers', 'following_url': 'https://api.github.com/users/doliveirakn/following{/other_user}', 'gists_url': 'https://api.github.com/users/doliveirakn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/doliveirakn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/doliveirakn/subscriptions', 'organizations_url': 'https://api.github.com/users/doliveirakn/orgs', 'repos_url': 'https://api.github.com/users/doliveirakn/repos', 'events_url': 'https://api.github.com/users/doliveirakn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/doliveirakn/received_events', 'type': 'User', 'site_admin': False}",2023-02-21T17:46:36Z,2023-02-21T17:46:36Z,NONE,"cc: @eileencodes I figured I'd ping you on this as you were also looking at https://github.com/rails/rails/pull/45071 which was aiming to solve a similar problem and I'd be interested in your feedback and getting this PR moving again.  

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1438875065/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1522267654,https://github.com/rails/rails/pull/45231#issuecomment-1522267654,https://api.github.com/repos/rails/rails/issues/45231,1522267654,IC_kwDNIULOWrv2Bg,"{'login': 'gmcgibbon', 'id': 5162312, 'node_id': 'MDQ6VXNlcjUxNjIzMTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5162312?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gmcgibbon', 'html_url': 'https://github.com/gmcgibbon', 'followers_url': 'https://api.github.com/users/gmcgibbon/followers', 'following_url': 'https://api.github.com/users/gmcgibbon/following{/other_user}', 'gists_url': 'https://api.github.com/users/gmcgibbon/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gmcgibbon/subscriptions', 'organizations_url': 'https://api.github.com/users/gmcgibbon/orgs', 'repos_url': 'https://api.github.com/users/gmcgibbon/repos', 'events_url': 'https://api.github.com/users/gmcgibbon/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gmcgibbon/received_events', 'type': 'User', 'site_admin': False}",2023-04-25T18:57:10Z,2023-04-25T18:57:10Z,MEMBER,"Can you provide a benchmark of what a smart loaded and manually preloaded association looks like? What are the performance implications of smart preloading, and why wouldn't we just use it by default?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1522267654/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1522283729,https://github.com/rails/rails/pull/45231#issuecomment-1522283729,https://api.github.com/repos/rails/rails/issues/45231,1522283729,IC_kwDNIULOWrw00Q,"{'login': 'doliveirakn', 'id': 1671796, 'node_id': 'MDQ6VXNlcjE2NzE3OTY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1671796?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/doliveirakn', 'html_url': 'https://github.com/doliveirakn', 'followers_url': 'https://api.github.com/users/doliveirakn/followers', 'following_url': 'https://api.github.com/users/doliveirakn/following{/other_user}', 'gists_url': 'https://api.github.com/users/doliveirakn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/doliveirakn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/doliveirakn/subscriptions', 'organizations_url': 'https://api.github.com/users/doliveirakn/orgs', 'repos_url': 'https://api.github.com/users/doliveirakn/repos', 'events_url': 'https://api.github.com/users/doliveirakn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/doliveirakn/received_events', 'type': 'User', 'site_admin': False}",2023-04-25T19:10:27Z,2023-04-25T19:10:27Z,NONE,"So here is a performance graph from a single endpoint that I used this smart/automatic preloading on. 

<img width=""1323"" alt=""image"" src=""https://user-images.githubusercontent.com/1671796/234376614-d36a4626-582d-4ca1-9c21-d338340bcadc.png"">

The red line is when I turned it on. The graph shows aggregate time used by the request. You can see that controller action was taking between 80-240s worth of time per increment. This is because the usage of the data varied wildly. Sometimes there would be few records and few associations, and other times, there would be many of each. There was still N+1 queries even though there was efforts put in to do preloading. The N+1 queries is why the time usage is all over the map. 

After this was turned on, it dropped very significantly to the 35-40s area and was fairly consistent. 

---

This image is of the total number of N+1 queries in happening in the app. Unfortunately the y-axis is cutoff and I no longer have access to the original data source, but you can see that at the time it was turned off, the number of N+1 queries dropped off very significantly. 

<img width=""1323"" alt=""image"" src=""https://user-images.githubusercontent.com/1671796/234377621-c3c134ec-cef6-4290-adc5-90bf3f4089c2.png"">

(If you are curious why the number isn't 0, there are examples back in this [comment](https://github.com/rails/rails/pull/45231#issuecomment-1182518830) that explains how N+1 could still exist)

---

I also have some sample P95/P99  times that were measured an hour prior and an hour after the change was applied

<img width=""1323"" alt=""image"" src=""https://user-images.githubusercontent.com/1671796/234378059-a640bed2-148d-4823-a18c-794ccb49275d.png"">

<img width=""1323"" alt=""image"" src=""https://user-images.githubusercontent.com/1671796/234378092-165ab635-9ec2-4cbc-b3f2-10afb4136d84.png"">

---

To be honest, I cannot think of a reason why we wouldn't want to turn it on by default, though having it off by default is the safer option. I've successfully rolled this strategy out at 2 large organizations and the performance improvements from each were very noticeable and I haven't seen any lingering issues with this tactic","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1522283729/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1522353539,https://github.com/rails/rails/pull/45231#issuecomment-1522353539,https://api.github.com/repos/rails/rails/issues/45231,1522353539,IC_kwDNIULOWr1Fgw,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2023-04-25T20:09:28Z,2023-04-25T20:25:10Z,CONTRIBUTOR,"Excited to see more movement on this and some real world metrics ❤️ 

I would still love a consideration of the load tree version I offered up if this is being considered for 7.1.0 as it allows us to extend the N+1 loading to tools like Prelude and Twirp. I see @eileencodes just self assigned this she should be very familiar with these tools and how we use them at GitHub.

As requested I split up my initial pr into 3
https://github.com/rails/rails/pull/45161 - The Data structure
https://github.com/rails/rails/pull/45413 - Preloading
https://github.com/rails/rails/pull/45565 - New active record debugging tools.

These work in a fairly similar way to this pr but offer points for extension.

Here is the original PR Eileen asked me to spilt up https://github.com/rails/rails/pull/45071
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1522353539/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1522404422,https://github.com/rails/rails/pull/45231#issuecomment-1522404422,https://api.github.com/repos/rails/rails/issues/45231,1522404422,IC_kwDNIULOWr4MRg,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2023-04-25T20:56:02Z,2023-04-25T20:58:19Z,CONTRIBUTOR,"For the folks not familiar with twirp or prelude. I am proposing an alternative implementation that makes the data structure which allows for preloading to occur to be a public api open for extension. This pr will keep the loading data structure private.

Also for consideration this implementation does not allow for certain queries to opt out which was a concern raised to me.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1522404422/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45231
https://api.github.com/repos/rails/rails/issues/comments/1144166386,https://github.com/rails/rails/issues/45209#issuecomment-1144166386,https://api.github.com/repos/rails/rails/issues/45209,1144166386,IC_kwDNIULORDKX8g,"{'login': 'martinjaimem', 'id': 50113670, 'node_id': 'MDQ6VXNlcjUwMTEzNjcw', 'avatar_url': 'https://avatars.githubusercontent.com/u/50113670?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/martinjaimem', 'html_url': 'https://github.com/martinjaimem', 'followers_url': 'https://api.github.com/users/martinjaimem/followers', 'following_url': 'https://api.github.com/users/martinjaimem/following{/other_user}', 'gists_url': 'https://api.github.com/users/martinjaimem/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/martinjaimem/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/martinjaimem/subscriptions', 'organizations_url': 'https://api.github.com/users/martinjaimem/orgs', 'repos_url': 'https://api.github.com/users/martinjaimem/repos', 'events_url': 'https://api.github.com/users/martinjaimem/events{/privacy}', 'received_events_url': 'https://api.github.com/users/martinjaimem/received_events', 'type': 'User', 'site_admin': False}",2022-06-01T21:40:53Z,2022-06-01T21:40:53Z,CONTRIBUTOR,"If I’m not mistaken, validations are run for the associated record if **the associated record is loaded and either: the associated record changed, or there is a custom validation context**.

[code](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/autosave_association.rb#L308-L314)

So in this case when we are reloading, the validations in the associated record are not run given that the association is no longer cached.

As an example, these two tests pass:
```ruby
def test_only_validations_of_matching_custom_validation_context_fire_without_reload
    prisoner = Prisoner.new
    prisoner.build_ship

    assert prisoner.save(validate: false)
    assert_predicate prisoner.ship, :persisted?
    assert prisoner.association_cached?(:ship) # ship is loaded
    assert_not prisoner.save(context: :non_existent_context) # validations over ship are run
  end

  def test_only_validations_of_matching_custom_validation_context_fire_with_reload
    prisoner = Prisoner.new
    prisoner.build_ship

    assert prisoner.save(validate: false)
    assert_predicate prisoner.ship, :persisted?
    assert prisoner.association_cached?(:ship) # ship is loaded
    
    prisoner.reload

    assert_not prisoner.association_cached?(:ship) # ship is not loaded
    assert prisoner.save(context: :non_existent_context) # validations over ship are not run
  end
  ```

[Maybe we could reword the caveats:](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/autosave_association.rb#L131-L137)
```ruby
  # === Caveats
  #
  # Note that autosave will only trigger for already-persisted association records
  # if the records themselves have been changed. This is to protect against
  # <tt>SystemStackError</tt> caused by circular association validations. The one
  # exception is if a custom validation context is used, in which case the validations
  # will always fire on the associated record.
  ```
  
  to:
  
  ```ruby
  # will always fire on the loaded associated record.
  ```
  
  But I'm not quite sure it is the best rewording.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1144166386/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45209
https://api.github.com/repos/rails/rails/issues/comments/1144263206,https://github.com/rails/rails/issues/45209#issuecomment-1144263206,https://api.github.com/repos/rails/rails/issues/45209,1144263206,IC_kwDNIULORDQSJg,"{'login': 'shouichi', 'id': 99586, 'node_id': 'MDQ6VXNlcjk5NTg2', 'avatar_url': 'https://avatars.githubusercontent.com/u/99586?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/shouichi', 'html_url': 'https://github.com/shouichi', 'followers_url': 'https://api.github.com/users/shouichi/followers', 'following_url': 'https://api.github.com/users/shouichi/following{/other_user}', 'gists_url': 'https://api.github.com/users/shouichi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/shouichi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/shouichi/subscriptions', 'organizations_url': 'https://api.github.com/users/shouichi/orgs', 'repos_url': 'https://api.github.com/users/shouichi/repos', 'events_url': 'https://api.github.com/users/shouichi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/shouichi/received_events', 'type': 'User', 'site_admin': False}",2022-06-02T00:01:12Z,2022-06-02T00:01:12Z,CONTRIBUTOR,"Thanks for the detailed explanation! If the current behavior is intentional (though it's somewhat counter-intuitive IMO), we can improve the doc as you pointed out :+1: ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1144263206/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 1, 'eyes': 0}",,45209
https://api.github.com/repos/rails/rails/issues/comments/1232311404,https://github.com/rails/rails/issues/45209#issuecomment-1232311404,https://api.github.com/repos/rails/rails/issues/45209,1232311404,IC_kwDNIULOSXOUbA,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-08-31T00:31:54Z,2022-08-31T00:31:54Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1232311404/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45209
https://api.github.com/repos/rails/rails/issues/comments/1232334584,https://github.com/rails/rails/issues/45209#issuecomment-1232334584,https://api.github.com/repos/rails/rails/issues/45209,1232334584,IC_kwDNIULOSXPu-A,"{'login': 'shouichi', 'id': 99586, 'node_id': 'MDQ6VXNlcjk5NTg2', 'avatar_url': 'https://avatars.githubusercontent.com/u/99586?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/shouichi', 'html_url': 'https://github.com/shouichi', 'followers_url': 'https://api.github.com/users/shouichi/followers', 'following_url': 'https://api.github.com/users/shouichi/following{/other_user}', 'gists_url': 'https://api.github.com/users/shouichi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/shouichi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/shouichi/subscriptions', 'organizations_url': 'https://api.github.com/users/shouichi/orgs', 'repos_url': 'https://api.github.com/users/shouichi/repos', 'events_url': 'https://api.github.com/users/shouichi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/shouichi/received_events', 'type': 'User', 'site_admin': False}",2022-08-31T01:10:52Z,2022-08-31T01:10:52Z,CONTRIBUTOR,Opened a PR that adds an example a while ago https://github.com/rails/rails/pull/45583.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1232334584/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45209
https://api.github.com/repos/rails/rails/issues/comments/1217186029,https://github.com/rails/rails/pull/45201#issuecomment-1217186029,https://api.github.com/repos/rails/rails/issues/45201,1217186029,IC_kwDNIULOSIzI7Q,"{'login': 'hahmed', 'id': 658005, 'node_id': 'MDQ6VXNlcjY1ODAwNQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/658005?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hahmed', 'html_url': 'https://github.com/hahmed', 'followers_url': 'https://api.github.com/users/hahmed/followers', 'following_url': 'https://api.github.com/users/hahmed/following{/other_user}', 'gists_url': 'https://api.github.com/users/hahmed/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hahmed/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hahmed/subscriptions', 'organizations_url': 'https://api.github.com/users/hahmed/orgs', 'repos_url': 'https://api.github.com/users/hahmed/repos', 'events_url': 'https://api.github.com/users/hahmed/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hahmed/received_events', 'type': 'User', 'site_admin': False}",2022-08-16T21:30:00Z,2022-08-16T21:30:00Z,CONTRIBUTOR,"I'm not sure this change should be upstreamed, I feel like this change is more relevant to some apps but not others. Any ideas why upstreaming this is good?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1217186029/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45201
https://api.github.com/repos/rails/rails/issues/comments/1217493694,https://github.com/rails/rails/pull/45201#issuecomment-1217493694,https://api.github.com/repos/rails/rails/issues/45201,1217493694,IC_kwDNIULOSJF6vg,"{'login': 'sandip-mane', 'id': 9862943, 'node_id': 'MDQ6VXNlcjk4NjI5NDM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/9862943?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sandip-mane', 'html_url': 'https://github.com/sandip-mane', 'followers_url': 'https://api.github.com/users/sandip-mane/followers', 'following_url': 'https://api.github.com/users/sandip-mane/following{/other_user}', 'gists_url': 'https://api.github.com/users/sandip-mane/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sandip-mane/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sandip-mane/subscriptions', 'organizations_url': 'https://api.github.com/users/sandip-mane/orgs', 'repos_url': 'https://api.github.com/users/sandip-mane/repos', 'events_url': 'https://api.github.com/users/sandip-mane/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sandip-mane/received_events', 'type': 'User', 'site_admin': False}",2022-08-17T05:54:57Z,2022-08-17T05:54:57Z,CONTRIBUTOR,"@hahmed `has_one_attached` delegates `byte_size` to the attachment and it works. 
So, Rails magic works with `has_one_attached` but does not work in `has_many_attached` case does not seem right to me.

Added this PR in order to make it consistent. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1217493694/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45201
https://api.github.com/repos/rails/rails/issues/comments/1189749076,https://github.com/rails/rails/pull/45195#issuecomment-1189749076,https://api.github.com/repos/rails/rails/issues/45195,1189749076,IC_kwDNIULORuohVA,"{'login': 'texas-delaney', 'id': 100537396, 'node_id': 'U_kgDOBf4UNA', 'avatar_url': 'https://avatars.githubusercontent.com/u/100537396?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/texas-delaney', 'html_url': 'https://github.com/texas-delaney', 'followers_url': 'https://api.github.com/users/texas-delaney/followers', 'following_url': 'https://api.github.com/users/texas-delaney/following{/other_user}', 'gists_url': 'https://api.github.com/users/texas-delaney/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/texas-delaney/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/texas-delaney/subscriptions', 'organizations_url': 'https://api.github.com/users/texas-delaney/orgs', 'repos_url': 'https://api.github.com/users/texas-delaney/repos', 'events_url': 'https://api.github.com/users/texas-delaney/events{/privacy}', 'received_events_url': 'https://api.github.com/users/texas-delaney/received_events', 'type': 'User', 'site_admin': False}",2022-07-20T02:54:17Z,2022-07-20T02:54:17Z,NONE,"Bump, is there any reason this isn't here? Seems like an oversight to me.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1189749076/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45195
https://api.github.com/repos/rails/rails/issues/comments/1135143402,https://github.com/rails/rails/pull/45166#issuecomment-1135143402,https://api.github.com/repos/rails/rails/issues/45166,1135143402,IC_kwDNIULOQ6jp6g,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-05-23T21:13:28Z,2022-05-23T21:13:28Z,MEMBER,"Ok, there are other tests that assert `Hash#to_param` *does* escape its result.  I will give this further thought.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1135143402/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45166
https://api.github.com/repos/rails/rails/issues/comments/1136257350,https://github.com/rails/rails/pull/45161#issuecomment-1136257350,https://api.github.com/repos/rails/rails/issues/45161,1136257350,IC_kwDNIULOQ7npRg,"{'login': 'jhawthorn', 'id': 131752, 'node_id': 'MDQ6VXNlcjEzMTc1Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/131752?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhawthorn', 'html_url': 'https://github.com/jhawthorn', 'followers_url': 'https://api.github.com/users/jhawthorn/followers', 'following_url': 'https://api.github.com/users/jhawthorn/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhawthorn/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhawthorn/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhawthorn/subscriptions', 'organizations_url': 'https://api.github.com/users/jhawthorn/orgs', 'repos_url': 'https://api.github.com/users/jhawthorn/repos', 'events_url': 'https://api.github.com/users/jhawthorn/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhawthorn/received_events', 'type': 'User', 'site_admin': True}",2022-05-24T17:47:24Z,2022-05-24T17:47:24Z,MEMBER,"> I considered adding a setting for this, maybe something in ActiveRecord to only setup the load trees if it is on? @matthewd and @jhawthorn have both suggested alternate implementations of how to hold the siblings, should they be weakrefs or not is an open question.

I'm concerned about using a weakref here. If any behaviour changes based on the weakref being alive we're going to end up with inconsistent behaviour because we don't know when GC will run (or even what will be collected during a GC if it does run). If behaviour changes based on what is collected I think that's unacceptable.

On the other hand, I don't think we can have a structure that grows unbounded (this is already a problem we sometimes run into and have worked around with the query cache). But IMO if we're only selectively enabling the load tree (for a block?) that may make it acceptable?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1136257350/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45161
https://api.github.com/repos/rails/rails/issues/comments/1138851197,https://github.com/rails/rails/pull/45161#issuecomment-1138851197,https://api.github.com/repos/rails/rails/issues/45161,1138851197,IC_kwDNIULOQ-F9fQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2022-05-26T17:51:44Z,2022-05-26T17:51:44Z,MEMBER,"Why is this in Active Model? It seems to be private API, and only used on Active Record.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1138851197/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45161
https://api.github.com/repos/rails/rails/issues/comments/1138864098,https://github.com/rails/rails/pull/45161#issuecomment-1138864098,https://api.github.com/repos/rails/rails/issues/45161,1138864098,IC_kwDNIULOQ-Gv4g,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2022-05-26T18:01:47Z,2022-05-26T18:07:45Z,CONTRIBUTOR,"> Why is this in Active Model? It seems to be private API, and only used on Active Record.

At GitHub we load a lot of data off file servers, remote services and other places, putting it into ActiveModel will let us easily extend our other model like layers that eventually tie together data with ActiveRecord.

For example, a commit will come from our Git RPC system, we will batch those up and then apply the appropriate commit comments to them from ActiveRecord, then those commit comments get a user etc... So if we have a load tree available on the commit objects we can then use it to help load the commit comments from ActiveRecord.

> It seems to be private API

It could be public, not sure we want to start there though.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1138864098/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45161
https://api.github.com/repos/rails/rails/issues/comments/1138870831,https://github.com/rails/rails/pull/45161#issuecomment-1138870831,https://api.github.com/repos/rails/rails/issues/45161,1138870831,IC_kwDNIULOQ-HKLw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2022-05-26T18:09:39Z,2022-05-26T18:09:39Z,MEMBER,"I'm not sure those methods that starts with `_` should be public API for other people to use and extend. `_` tells me those methods are private API, so should not be used, or even called in applications.

Even the concept of load tree seems like something users should not need to know about.

Before committing to make this public API and defined in Active Model I think I'd be more comfortable with we ironing out the approach and API first inside Active Record.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1138870831/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45161
https://api.github.com/repos/rails/rails/issues/comments/1139819434,https://github.com/rails/rails/pull/45161#issuecomment-1139819434,https://api.github.com/repos/rails/rails/issues/45161,1139819434,IC_kwDNIULOQ_BDqg,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2022-05-27T17:12:42Z,2022-05-27T17:12:42Z,CONTRIBUTOR,@rafaelfranca thanks so much for the review ❤️ I have moved this back into ActiveRecord and addressed most of your feedback. Let me know what else needs to be changed and I will try my best to accommodate. 🙇 ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1139819434/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45161
https://api.github.com/repos/rails/rails/issues/comments/1160750088,https://github.com/rails/rails/pull/45161#issuecomment-1160750088,https://api.github.com/repos/rails/rails/issues/45161,1160750088,IC_kwDNIULORS-kCA,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2022-06-20T18:49:22Z,2022-06-20T18:49:22Z,CONTRIBUTOR,I setup a new branch based on this branch that does dynamic includes https://github.com/rails/rails/pull/45413,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1160750088/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45161
https://api.github.com/repos/rails/rails/issues/comments/1180767230,https://github.com/rails/rails/pull/45161#issuecomment-1180767230,https://api.github.com/repos/rails/rails/issues/45161,1180767230,IC_kwDNIULORmET_g,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2022-07-11T19:11:33Z,2022-07-11T19:11:33Z,CONTRIBUTOR,"I have opened 2 pr's that build on this pr:

[Dynamic Includes](https://github.com/rails/rails/pull/45413)
[Debugging View](https://github.com/rails/rails/pull/45565)

It would also be nice to pull in @seejohnrun's prelude Gem at some point if this approach is accepted.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1180767230/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45161
https://api.github.com/repos/rails/rails/issues/comments/1289047892,https://github.com/rails/rails/pull/45161#issuecomment-1289047892,https://api.github.com/repos/rails/rails/issues/45161,1289047892,IC_kwDNIULOTNVPVA,"{'login': 'gwincr11', 'id': 289882, 'node_id': 'MDQ6VXNlcjI4OTg4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/289882?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/gwincr11', 'html_url': 'https://github.com/gwincr11', 'followers_url': 'https://api.github.com/users/gwincr11/followers', 'following_url': 'https://api.github.com/users/gwincr11/following{/other_user}', 'gists_url': 'https://api.github.com/users/gwincr11/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/gwincr11/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/gwincr11/subscriptions', 'organizations_url': 'https://api.github.com/users/gwincr11/orgs', 'repos_url': 'https://api.github.com/users/gwincr11/repos', 'events_url': 'https://api.github.com/users/gwincr11/events{/privacy}', 'received_events_url': 'https://api.github.com/users/gwincr11/received_events', 'type': 'User', 'site_admin': True}",2022-10-24T13:36:31Z,2022-10-24T13:36:31Z,CONTRIBUTOR,👋 @rafaelfranca I just wanted to check in about this since it has been a while. Any thing we can do to help move this forward? Thanks ❤️ ,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1289047892/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45161
https://api.github.com/repos/rails/rails/issues/comments/1130184202,https://github.com/rails/rails/pull/45122#issuecomment-1130184202,https://api.github.com/repos/rails/rails/issues/45122,1130184202,IC_kwDNIULOQ10-Cg,"{'login': 'casperisfine', 'id': 19192189, 'node_id': 'MDQ6VXNlcjE5MTkyMTg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/19192189?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/casperisfine', 'html_url': 'https://github.com/casperisfine', 'followers_url': 'https://api.github.com/users/casperisfine/followers', 'following_url': 'https://api.github.com/users/casperisfine/following{/other_user}', 'gists_url': 'https://api.github.com/users/casperisfine/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/casperisfine/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/casperisfine/subscriptions', 'organizations_url': 'https://api.github.com/users/casperisfine/orgs', 'repos_url': 'https://api.github.com/users/casperisfine/repos', 'events_url': 'https://api.github.com/users/casperisfine/events{/privacy}', 'received_events_url': 'https://api.github.com/users/casperisfine/received_events', 'type': 'User', 'site_admin': False}",2022-05-18T15:42:24Z,2022-05-18T15:42:24Z,CONTRIBUTOR,"Not that it change the usefulness of this PR, but quick ref: https://bugs.ruby-lang.org/issues/18285

","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1130184202/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45122
https://api.github.com/repos/rails/rails/issues/comments/1195436422,https://github.com/rails/rails/pull/45122#issuecomment-1195436422,https://api.github.com/repos/rails/rails/issues/45122,1195436422,IC_kwDNIULOR0Dphg,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-07-26T12:46:36Z,2022-07-26T12:47:57Z,MEMBER,"> What is missing here?

API. I have some ideas, but haven't had a chance to revisit this yet.

I really like the compactness for simple definitions I achieved here, but as I worked through applying it to some of the trickier edge cases in our existing needs (e.g. most of https://github.com/rails/rails/commit/044b959d3e6585c14f934021779db5f33bb0099b), I found them much less pleasant to define. My loose plan is to switch to a two-layer API, with a possibly-cut-down version of the current one for easy mode, and some sort of block/builder API for complex ones.

(I definitely do intend to return to this: it was floating in my head for a while before I even opened this, so it's not a quick throw-away thought... I've just been distracted with other things lately.)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1195436422/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45122
https://api.github.com/repos/rails/rails/issues/comments/1135251009,https://github.com/rails/rails/issues/45112#issuecomment-1135251009,https://api.github.com/repos/rails/rails/issues/45112,1135251009,IC_kwDNIULOQ6qOQQ,"{'login': 'palkan', 'id': 1516722, 'node_id': 'MDQ6VXNlcjE1MTY3MjI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1516722?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/palkan', 'html_url': 'https://github.com/palkan', 'followers_url': 'https://api.github.com/users/palkan/followers', 'following_url': 'https://api.github.com/users/palkan/following{/other_user}', 'gists_url': 'https://api.github.com/users/palkan/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/palkan/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/palkan/subscriptions', 'organizations_url': 'https://api.github.com/users/palkan/orgs', 'repos_url': 'https://api.github.com/users/palkan/repos', 'events_url': 'https://api.github.com/users/palkan/events{/privacy}', 'received_events_url': 'https://api.github.com/users/palkan/received_events', 'type': 'User', 'site_admin': False}",2022-05-23T23:53:39Z,2022-05-23T23:53:39Z,CONTRIBUTOR,"Hey @Jeremy!

Thanks for the detailed explanation. That's an interesting problem to solve) 

I've been trying to model what's going on at the networking (TCP) layer. Here are my thoughts.

>  a proxy or load balancer sitting in front of the app can accumulate all these indeterminate maybe-dead NATted connections ... so it hangs onto all the connections until the client side is surely closed.

Clients disconnect without a proper closing handshake (no FIN sent).
We can only detect the failure by trying to write some data (for example, by sending pings). And that's where TCP retransmission mechanism takes the stage: depending on the `tcp_retries2` kernel setting, **it could take minutes** to detect a broken connection (here is [a good article](https://pracucci.com/linux-tcp-rto-min-max-and-tcp-retries2.html) showing some numbers).

> Shifting the heartbeat responsibility from the server → client to client → server neatly resolves this... The proxy at the old destination no longer sees client or server traffic on the connection, so it gracefully & expeditiously closes it out

How does ""no traffic"" leads to closing a connection? Is it a proxy-specific feature? (TCP doesn't care about the presence or absence of the traffic). In general, without any traffic, only the TCP keep-alive mechanism could detect a failure (and that also could take minutes depending on the OS settings). 

-------

We can not really rely on OS-level broken connection detection mechanism (retransmissions, keep-alive), since the default settings don't fit our use case (and tuning them is not always possible).

Thus, we should think of an application-level heartbeat implementation, which would allow us to track failures quicker. I'd suggest to consider **enhancing the current PING functionality with the client-server PONG**. How this could help? Whenever a server sends a PING message, it configures a read timeout\* for the socket; if no message has been received, we consider the connection broken and close it.

\* We can implement read timeout by adding a `#read_deadline` information to the [Stream](https://github.com/rails/rails/blob/40272988cec849c734ec02cfa89ff830ae019d9e/actioncable/lib/action_cable/connection/stream.rb#L35) object during PING writes (or any writes?) and checking for it [in the `select` loop](https://github.com/rails/rails/blob/40272988cec849c734ec02cfa89ff830ae019d9e/actioncable/lib/action_cable/connection/stream_event_loop.rb#L112).

P.S. The server-client PING-PONG+Read deadline approach is used by, for example, SocketIO and [Centrifugo](https://centrifugal.dev).
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1135251009/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45112
https://api.github.com/repos/rails/rails/issues/comments/1221653553,https://github.com/rails/rails/issues/45112#issuecomment-1221653553,https://api.github.com/repos/rails/rails/issues/45112,1221653553,IC_kwDNIULOSND0MQ,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-08-22T00:15:10Z,2022-08-22T00:15:10Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1221653553/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45112
https://api.github.com/repos/rails/rails/issues/comments/1124051504,https://github.com/rails/rails/pull/45070#issuecomment-1124051504,https://api.github.com/repos/rails/rails/issues/45070,1124051504,IC_kwDNIULOQv-qMA,"{'login': 'kddnewton', 'id': 5093358, 'node_id': 'MDQ6VXNlcjUwOTMzNTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5093358?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kddnewton', 'html_url': 'https://github.com/kddnewton', 'followers_url': 'https://api.github.com/users/kddnewton/followers', 'following_url': 'https://api.github.com/users/kddnewton/following{/other_user}', 'gists_url': 'https://api.github.com/users/kddnewton/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kddnewton/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kddnewton/subscriptions', 'organizations_url': 'https://api.github.com/users/kddnewton/orgs', 'repos_url': 'https://api.github.com/users/kddnewton/repos', 'events_url': 'https://api.github.com/users/kddnewton/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kddnewton/received_events', 'type': 'User', 'site_admin': False}",2022-05-11T17:29:23Z,2022-05-11T17:29:23Z,CONTRIBUTOR,cc @gmcgibbon since you kindly merged the last one,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1124051504/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45070
https://api.github.com/repos/rails/rails/issues/comments/1210729795,https://github.com/rails/rails/pull/45070#issuecomment-1210729795,https://api.github.com/repos/rails/rails/issues/45070,1210729795,IC_kwDNIULOSCpFQw,"{'login': 'ezekg', 'id': 6979737, 'node_id': 'MDQ6VXNlcjY5Nzk3Mzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6979737?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ezekg', 'html_url': 'https://github.com/ezekg', 'followers_url': 'https://api.github.com/users/ezekg/followers', 'following_url': 'https://api.github.com/users/ezekg/following{/other_user}', 'gists_url': 'https://api.github.com/users/ezekg/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ezekg/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ezekg/subscriptions', 'organizations_url': 'https://api.github.com/users/ezekg/orgs', 'repos_url': 'https://api.github.com/users/ezekg/repos', 'events_url': 'https://api.github.com/users/ezekg/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ezekg/received_events', 'type': 'User', 'site_admin': False}",2022-08-10T14:10:45Z,2022-08-10T14:10:45Z,CONTRIBUTOR,What's the status of this? Still blocked? I've been using this in production and it's working great.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1210729795/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45070
https://api.github.com/repos/rails/rails/issues/comments/1210766495,https://github.com/rails/rails/pull/45070#issuecomment-1210766495,https://api.github.com/repos/rails/rails/issues/45070,1210766495,IC_kwDNIULOSCrUnw,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2022-08-10T14:35:39Z,2022-08-10T14:35:39Z,MEMBER,Here you can read the status of this https://github.com/rails/rails/pull/45553#issuecomment-1179568855,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1210766495/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45070
https://api.github.com/repos/rails/rails/issues/comments/1210778589,https://github.com/rails/rails/pull/45070#issuecomment-1210778589,https://api.github.com/repos/rails/rails/issues/45070,1210778589,IC_kwDNIULOSCsD3Q,"{'login': 'ezekg', 'id': 6979737, 'node_id': 'MDQ6VXNlcjY5Nzk3Mzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6979737?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ezekg', 'html_url': 'https://github.com/ezekg', 'followers_url': 'https://api.github.com/users/ezekg/followers', 'following_url': 'https://api.github.com/users/ezekg/following{/other_user}', 'gists_url': 'https://api.github.com/users/ezekg/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ezekg/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ezekg/subscriptions', 'organizations_url': 'https://api.github.com/users/ezekg/orgs', 'repos_url': 'https://api.github.com/users/ezekg/repos', 'events_url': 'https://api.github.com/users/ezekg/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ezekg/received_events', 'type': 'User', 'site_admin': False}",2022-08-10T14:44:35Z,2022-08-10T14:50:38Z,CONTRIBUTOR,"@rafaelfranca, I saw that but @kddnewton hasn't gotten a response in nearly a month. I agree with his reasoning.

Would hate to see this get lost. I don't see a problem with the current API.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1210778589/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45070
https://api.github.com/repos/rails/rails/issues/comments/1210908013,https://github.com/rails/rails/pull/45070#issuecomment-1210908013,https://api.github.com/repos/rails/rails/issues/45070,1210908013,IC_kwDNIULOSCz9bQ,"{'login': 'rafaelfranca', 'id': 47848, 'node_id': 'MDQ6VXNlcjQ3ODQ4', 'avatar_url': 'https://avatars.githubusercontent.com/u/47848?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rafaelfranca', 'html_url': 'https://github.com/rafaelfranca', 'followers_url': 'https://api.github.com/users/rafaelfranca/followers', 'following_url': 'https://api.github.com/users/rafaelfranca/following{/other_user}', 'gists_url': 'https://api.github.com/users/rafaelfranca/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rafaelfranca/subscriptions', 'organizations_url': 'https://api.github.com/users/rafaelfranca/orgs', 'repos_url': 'https://api.github.com/users/rafaelfranca/repos', 'events_url': 'https://api.github.com/users/rafaelfranca/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rafaelfranca/received_events', 'type': 'User', 'site_admin': False}",2022-08-10T15:56:50Z,2022-08-10T15:56:50Z,MEMBER,"We don't need to rush a decision here. Rails 7.1 isn't due any time soon and this feature would only be release in Rails 7.1. Rushing a making the wrong decision will just cause trouble for us maintainers, so it is better to make sure we have considered all possibilities.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1210908013/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45070
https://api.github.com/repos/rails/rails/issues/comments/1211000472,https://github.com/rails/rails/pull/45070#issuecomment-1211000472,https://api.github.com/repos/rails/rails/issues/45070,1211000472,IC_kwDNIULOSC5mmA,"{'login': 'ezekg', 'id': 6979737, 'node_id': 'MDQ6VXNlcjY5Nzk3Mzc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6979737?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ezekg', 'html_url': 'https://github.com/ezekg', 'followers_url': 'https://api.github.com/users/ezekg/followers', 'following_url': 'https://api.github.com/users/ezekg/following{/other_user}', 'gists_url': 'https://api.github.com/users/ezekg/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ezekg/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ezekg/subscriptions', 'organizations_url': 'https://api.github.com/users/ezekg/orgs', 'repos_url': 'https://api.github.com/users/ezekg/repos', 'events_url': 'https://api.github.com/users/ezekg/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ezekg/received_events', 'type': 'User', 'site_admin': False}",2022-08-10T17:03:08Z,2022-08-10T17:03:08Z,CONTRIBUTOR,"Understood, @rafaelfranca. Is there a location where this discussion is taking place?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1211000472/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45070
https://api.github.com/repos/rails/rails/issues/comments/1340307931,https://github.com/rails/rails/pull/45070#issuecomment-1340307931,https://api.github.com/repos/rails/rails/issues/45070,1340307931,IC_kwDNIULOT-N52w,"{'login': 'kddnewton', 'id': 5093358, 'node_id': 'MDQ6VXNlcjUwOTMzNTg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5093358?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/kddnewton', 'html_url': 'https://github.com/kddnewton', 'followers_url': 'https://api.github.com/users/kddnewton/followers', 'following_url': 'https://api.github.com/users/kddnewton/following{/other_user}', 'gists_url': 'https://api.github.com/users/kddnewton/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/kddnewton/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/kddnewton/subscriptions', 'organizations_url': 'https://api.github.com/users/kddnewton/orgs', 'repos_url': 'https://api.github.com/users/kddnewton/repos', 'events_url': 'https://api.github.com/users/kddnewton/events{/privacy}', 'received_events_url': 'https://api.github.com/users/kddnewton/received_events', 'type': 'User', 'site_admin': False}",2022-12-07T03:01:10Z,2022-12-07T03:01:10Z,CONTRIBUTOR,"In the meantime, I've released a gem https://github.com/kddnewton/rails-pattern_matching that encapsulates this pattern. Folks can maybe use that to prototype/test what they think is the right approach. Hopefully that will help aid in a decision.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1340307931/reactions', 'total_count': 3, '+1': 3, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45070
https://api.github.com/repos/rails/rails/issues/comments/1123655623,https://github.com/rails/rails/pull/45059#issuecomment-1123655623,https://api.github.com/repos/rails/rails/issues/45059,1123655623,IC_kwDNIULOQvmfxw,"{'login': 'eileencodes', 'id': 1080678, 'node_id': 'MDQ6VXNlcjEwODA2Nzg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1080678?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/eileencodes', 'html_url': 'https://github.com/eileencodes', 'followers_url': 'https://api.github.com/users/eileencodes/followers', 'following_url': 'https://api.github.com/users/eileencodes/following{/other_user}', 'gists_url': 'https://api.github.com/users/eileencodes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/eileencodes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/eileencodes/subscriptions', 'organizations_url': 'https://api.github.com/users/eileencodes/orgs', 'repos_url': 'https://api.github.com/users/eileencodes/repos', 'events_url': 'https://api.github.com/users/eileencodes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/eileencodes/received_events', 'type': 'User', 'site_admin': False}",2022-05-11T11:58:48Z,2022-05-11T11:59:05Z,MEMBER,"Hi @ernestns thanks for the PR and welcome to Rails!

I appreciate your work here but don't quite understand why this change is needed. Is this fixing a bug? Is it a performance improvement? We don't accept cosmetic changes (change to the code for personal reasons) that don't have an obvious impact on applications or the Rails codebase. If this is a bug fix, please explain the bug and add a failing test. If this is a performance improvement please include the benchmark script and results.

Thank you!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1123655623/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,45059
https://api.github.com/repos/rails/rails/issues/comments/1123831430,https://github.com/rails/rails/pull/45059#issuecomment-1123831430,https://api.github.com/repos/rails/rails/issues/45059,1123831430,IC_kwDNIULOQvxOhg,"{'login': 'ernestns', 'id': 1467153, 'node_id': 'MDQ6VXNlcjE0NjcxNTM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1467153?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ernestns', 'html_url': 'https://github.com/ernestns', 'followers_url': 'https://api.github.com/users/ernestns/followers', 'following_url': 'https://api.github.com/users/ernestns/following{/other_user}', 'gists_url': 'https://api.github.com/users/ernestns/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ernestns/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ernestns/subscriptions', 'organizations_url': 'https://api.github.com/users/ernestns/orgs', 'repos_url': 'https://api.github.com/users/ernestns/repos', 'events_url': 'https://api.github.com/users/ernestns/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ernestns/received_events', 'type': 'User', 'site_admin': False}",2022-05-11T14:16:48Z,2022-05-11T14:16:48Z,NONE,"Hi @eileencodes, I appreciate that you took the time to write out your explanation so clearly which helps me understand my misstep for this PR, I'll add a test and improve the PR summary","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1123831430/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45059
https://api.github.com/repos/rails/rails/issues/comments/1150072374,https://github.com/rails/rails/pull/45059#issuecomment-1150072374,https://api.github.com/repos/rails/rails/issues/45059,1150072374,IC_kwDNIULORIy2Ng,"{'login': 'ernestns', 'id': 1467153, 'node_id': 'MDQ6VXNlcjE0NjcxNTM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1467153?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ernestns', 'html_url': 'https://github.com/ernestns', 'followers_url': 'https://api.github.com/users/ernestns/followers', 'following_url': 'https://api.github.com/users/ernestns/following{/other_user}', 'gists_url': 'https://api.github.com/users/ernestns/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ernestns/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ernestns/subscriptions', 'organizations_url': 'https://api.github.com/users/ernestns/orgs', 'repos_url': 'https://api.github.com/users/ernestns/repos', 'events_url': 'https://api.github.com/users/ernestns/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ernestns/received_events', 'type': 'User', 'site_admin': False}",2022-06-08T15:30:13Z,2022-06-08T15:30:13Z,NONE,"Ran into some difficultly executing tests locally, I need to spend some time getting my environment set up correctly. Changes were intended to leverage `validate_index_length` within `rename_index` so that `execute ""ALTER INDEX #{quote_table_name(idx)} RENAME TO #{quote_table_name(new_idx)}""` would return a **rails validation error** instead of an **error from Postgres**

Should I close this PR for now to reduce the number of open PRs and reopen a improved version later?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1150072374/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45059
https://api.github.com/repos/rails/rails/issues/comments/1150155115,https://github.com/rails/rails/pull/45059#issuecomment-1150155115,https://api.github.com/repos/rails/rails/issues/45059,1150155115,IC_kwDNIULORI35aw,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-06-08T16:47:57Z,2022-06-08T16:47:57Z,MEMBER,That change sounds sensible. I think it's fine to keep the PR open while you keep working on it.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1150155115/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,45059
https://api.github.com/repos/rails/rails/issues/comments/1190796968,https://github.com/rails/rails/pull/45059#issuecomment-1190796968,https://api.github.com/repos/rails/rails/issues/45059,1190796968,IC_kwDNIULORvoeqA,"{'login': 'ernestns', 'id': 1467153, 'node_id': 'MDQ6VXNlcjE0NjcxNTM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1467153?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ernestns', 'html_url': 'https://github.com/ernestns', 'followers_url': 'https://api.github.com/users/ernestns/followers', 'following_url': 'https://api.github.com/users/ernestns/following{/other_user}', 'gists_url': 'https://api.github.com/users/ernestns/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ernestns/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ernestns/subscriptions', 'organizations_url': 'https://api.github.com/users/ernestns/orgs', 'repos_url': 'https://api.github.com/users/ernestns/repos', 'events_url': 'https://api.github.com/users/ernestns/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ernestns/received_events', 'type': 'User', 'site_admin': False}",2022-07-20T21:50:17Z,2022-07-20T21:50:17Z,NONE,"This change might not be needed anymore, there's a better solution provided in #45136 that prevents primary key index names from exceeding the limit","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1190796968/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45059
https://api.github.com/repos/rails/rails/issues/comments/1190864711,https://github.com/rails/rails/pull/45059#issuecomment-1190864711,https://api.github.com/repos/rails/rails/issues/45059,1190864711,IC_kwDNIULORvsnRw,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-07-20T23:25:29Z,2022-07-20T23:25:29Z,CONTRIBUTOR,"> This change might not be needed anymore, there's a better solution provided in #45136 that prevents primary key index names from exceeding the limit

IMHO it is still worth it to DRY `ALTER INDEX` statement construction and reuse `rename_index` whenever possible.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1190864711/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45059
https://api.github.com/repos/rails/rails/issues/comments/1138023510,https://github.com/rails/rails/issues/45056#issuecomment-1138023510,https://api.github.com/repos/rails/rails/issues/45056,1138023510,IC_kwDNIULOQ9TcVg,"{'login': 'cgunther', 'id': 107416, 'node_id': 'MDQ6VXNlcjEwNzQxNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/107416?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/cgunther', 'html_url': 'https://github.com/cgunther', 'followers_url': 'https://api.github.com/users/cgunther/followers', 'following_url': 'https://api.github.com/users/cgunther/following{/other_user}', 'gists_url': 'https://api.github.com/users/cgunther/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/cgunther/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/cgunther/subscriptions', 'organizations_url': 'https://api.github.com/users/cgunther/orgs', 'repos_url': 'https://api.github.com/users/cgunther/repos', 'events_url': 'https://api.github.com/users/cgunther/events{/privacy}', 'received_events_url': 'https://api.github.com/users/cgunther/received_events', 'type': 'User', 'site_admin': False}",2022-05-26T00:50:36Z,2022-05-26T00:50:36Z,CONTRIBUTOR,"I think I'm seeing a similar regression in Rails v7. My reproduction script fails with 7.0.3, but passes with 6.1.6, both with Ruby 3.0.3.

In my case, it's a `has_one` association, so the regression may not be specific to `has_many`. In my case, the association is assigned `nil`, likely due to the `has_one`, as opposed to the empty set from `has_many`. What seems crucial, however, is the double-`through` as well as STI, trying to remove either no longer reproduces.

I bisected and #43137 seemed to be the culprit.

I tried to at least create a failing test within the activerecord suite, however got stuck trying to re-create the unique model structure seemingly required by using the existing test models.

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""activerecord"", ""7.0.3""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :customers, force: true do |t|
  end

  create_table :abstract_orders, force: true do |t|
    t.string :type
    t.integer :customer_id
  end

  create_table :shipments, force: true do |t|
    t.integer :order_id
  end

  create_table :invoices, force: true do |t|
    t.integer :shipment_id
  end

  create_table :complaints, force: true do |t|
    t.integer :invoice_id
  end
end

class Customer < ActiveRecord::Base
end

class AbstractOrder < ActiveRecord::Base
  belongs_to :customer
end

class Order < AbstractOrder
end

class Shipment < ActiveRecord::Base
  belongs_to :order
end

class Invoice < ActiveRecord::Base # Sponsor
  belongs_to :shipment

  has_one :order, through: :shipment
end

class Complaint < ActiveRecord::Base
  belongs_to :invoice

  has_one :order, through: :invoice
  has_one :customer, through: :order
end

class BugTest < Minitest::Test
  def test_preload
    customer = Customer.create!
    order = Order.create!(customer: customer)
    shipment = Shipment.create!(order: order)
    invoice = Invoice.create!(shipment: shipment)
    Complaint.create!(invoice: invoice)

    complaint = Complaint.preload(:customer).to_a.first

    assert_equal customer, complaint.customer
    # Expected: #<Customer id: 1>
    #   Actual: nil
  end
end
```","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1138023510/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45056
https://api.github.com/repos/rails/rails/issues/comments/1225075810,https://github.com/rails/rails/issues/45056#issuecomment-1225075810,https://api.github.com/repos/rails/rails/issues/45056,1225075810,IC_kwDNIULOSQUsYg,"{'login': 'rails-bot[bot]', 'id': 28418009, 'node_id': 'MDM6Qm90Mjg0MTgwMDk=', 'avatar_url': 'https://avatars.githubusercontent.com/in/2272?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rails-bot%5Bbot%5D', 'html_url': 'https://github.com/apps/rails-bot', 'followers_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/followers', 'following_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/following{/other_user}', 'gists_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/subscriptions', 'organizations_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/orgs', 'repos_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/repos', 'events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rails-bot%5Bbot%5D/received_events', 'type': 'Bot', 'site_admin': False}",2022-08-24T01:45:03Z,2022-08-24T01:45:03Z,NONE,"This issue has been automatically marked as stale because it has not been commented on for at least three months.
The resources of the Rails team are limited, and so we are asking for your help.
If you can still reproduce this error on the `7-0-stable` branch or on `main`, please reply with all of the information you have about it in order to keep the issue open.
Thank you for all your contributions.
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1225075810/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45056
https://api.github.com/repos/rails/rails/issues/comments/1225780409,https://github.com/rails/rails/issues/45056#issuecomment-1225780409,https://api.github.com/repos/rails/rails/issues/45056,1225780409,IC_kwDNIULOSQ_suQ,"{'login': 'cgunther', 'id': 107416, 'node_id': 'MDQ6VXNlcjEwNzQxNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/107416?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/cgunther', 'html_url': 'https://github.com/cgunther', 'followers_url': 'https://api.github.com/users/cgunther/followers', 'following_url': 'https://api.github.com/users/cgunther/following{/other_user}', 'gists_url': 'https://api.github.com/users/cgunther/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/cgunther/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/cgunther/subscriptions', 'organizations_url': 'https://api.github.com/users/cgunther/orgs', 'repos_url': 'https://api.github.com/users/cgunther/repos', 'events_url': 'https://api.github.com/users/cgunther/events{/privacy}', 'received_events_url': 'https://api.github.com/users/cgunther/received_events', 'type': 'User', 'site_admin': False}",2022-08-24T14:10:13Z,2022-08-24T14:10:13Z,CONTRIBUTOR,"This still an issue on v7.0.3.1, 7-0-stable, as well as main. My reproduction script demonstrates the failure on each. The reproduction test passes on v6.1.6.1.

Thanks in advance!","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1225780409/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45056
https://api.github.com/repos/rails/rails/issues/comments/1120161971,https://github.com/rails/rails/pull/45022#issuecomment-1120161971,https://api.github.com/repos/rails/rails/issues/45022,1120161971,IC_kwDNIULOQsRQsw,"{'login': 'bpaquet', 'id': 337117, 'node_id': 'MDQ6VXNlcjMzNzExNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/337117?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bpaquet', 'html_url': 'https://github.com/bpaquet', 'followers_url': 'https://api.github.com/users/bpaquet/followers', 'following_url': 'https://api.github.com/users/bpaquet/following{/other_user}', 'gists_url': 'https://api.github.com/users/bpaquet/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bpaquet/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bpaquet/subscriptions', 'organizations_url': 'https://api.github.com/users/bpaquet/orgs', 'repos_url': 'https://api.github.com/users/bpaquet/repos', 'events_url': 'https://api.github.com/users/bpaquet/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bpaquet/received_events', 'type': 'User', 'site_admin': False}",2022-05-07T08:09:42Z,2022-05-07T08:09:42Z,NONE,@eileencodes Do you have any opinion here? Thx,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1120161971/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45022
https://api.github.com/repos/rails/rails/issues/comments/1156195156,https://github.com/rails/rails/pull/45022#issuecomment-1156195156,https://api.github.com/repos/rails/rails/issues/45022,1156195156,IC_kwDNIULOROojVA,"{'login': 'yahonda', 'id': 73684, 'node_id': 'MDQ6VXNlcjczNjg0', 'avatar_url': 'https://avatars.githubusercontent.com/u/73684?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/yahonda', 'html_url': 'https://github.com/yahonda', 'followers_url': 'https://api.github.com/users/yahonda/followers', 'following_url': 'https://api.github.com/users/yahonda/following{/other_user}', 'gists_url': 'https://api.github.com/users/yahonda/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/yahonda/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/yahonda/subscriptions', 'organizations_url': 'https://api.github.com/users/yahonda/orgs', 'repos_url': 'https://api.github.com/users/yahonda/repos', 'events_url': 'https://api.github.com/users/yahonda/events{/privacy}', 'received_events_url': 'https://api.github.com/users/yahonda/received_events', 'type': 'User', 'site_admin': False}",2022-06-15T09:00:13Z,2022-06-15T09:00:13Z,MEMBER,"Thanks for opening a pull request.

Would you explain some more detail about ""a PG reader crash for example""?

As far as I know `PG::UnableToSend` is raised when the database port is wrong (setting 54320, not 5432).
https://github.com/ged/ruby-pg/blob/26cd0f750ffb266a956828ad43e99eafecafcfbf/spec/pg/result_spec.rb

However, ""a PG reader crash for example"" does not look like this case. 
Therefore, I'm not confident to rescue this PG::UnableToSend` exception here, handling this exception here may introduce unexpected behaviors, like attempting to connect to non-existent databases.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1156195156/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45022
https://api.github.com/repos/rails/rails/issues/comments/1156231199,https://github.com/rails/rails/pull/45022#issuecomment-1156231199,https://api.github.com/repos/rails/rails/issues/45022,1156231199,IC_kwDNIULOROqwHw,"{'login': 'simi', 'id': 193936, 'node_id': 'MDQ6VXNlcjE5MzkzNg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/193936?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/simi', 'html_url': 'https://github.com/simi', 'followers_url': 'https://api.github.com/users/simi/followers', 'following_url': 'https://api.github.com/users/simi/following{/other_user}', 'gists_url': 'https://api.github.com/users/simi/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/simi/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/simi/subscriptions', 'organizations_url': 'https://api.github.com/users/simi/orgs', 'repos_url': 'https://api.github.com/users/simi/repos', 'events_url': 'https://api.github.com/users/simi/events{/privacy}', 'received_events_url': 'https://api.github.com/users/simi/received_events', 'type': 'User', 'site_admin': False}",2022-06-15T09:29:20Z,2022-06-15T09:29:20Z,CONTRIBUTOR,@yahonda `PG::UnableToSend` is raised on various problems. From my experience it is raised on network problems (`PG::UnableToSend no connection to the server` and `ActiveRecord::StatementInvalid PG::UnableToSend: no connection to the server`). Also I have seen it like this `PG::UnableToSend: SSL SYSCALL error: EOF detected (ActiveRecord::StatementInvalid)... exec_params': SSL SYSCALL error: EOF detected (PG::UnableToSend)`.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1156231199/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45022
https://api.github.com/repos/rails/rails/issues/comments/1156240085,https://github.com/rails/rails/pull/45022#issuecomment-1156240085,https://api.github.com/repos/rails/rails/issues/45022,1156240085,IC_kwDNIULOROrS1Q,"{'login': 'bpaquet', 'id': 337117, 'node_id': 'MDQ6VXNlcjMzNzExNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/337117?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bpaquet', 'html_url': 'https://github.com/bpaquet', 'followers_url': 'https://api.github.com/users/bpaquet/followers', 'following_url': 'https://api.github.com/users/bpaquet/following{/other_user}', 'gists_url': 'https://api.github.com/users/bpaquet/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bpaquet/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bpaquet/subscriptions', 'organizations_url': 'https://api.github.com/users/bpaquet/orgs', 'repos_url': 'https://api.github.com/users/bpaquet/repos', 'events_url': 'https://api.github.com/users/bpaquet/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bpaquet/received_events', 'type': 'User', 'site_admin': False}",2022-06-15T09:37:57Z,2022-06-15T09:37:57Z,NONE,"> @yahonda `PG::UnableToSend` is raised on various problems. From my experience it is raised on network problems (`PG::UnableToSend no connection to the server` and `ActiveRecord::StatementInvalid PG::UnableToSend: no connection to the server`). Also I have seen it like this `PG::UnableToSend: SSL SYSCALL error: EOF detected (ActiveRecord::StatementInvalid)... exec_params': SSL SYSCALL error: EOF detected (PG::UnableToSend)`.

We are experiencing `PG::UnableToSend` when an aurora postgres reader restart, for example when the lad between the writer and the reader is to high. ","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1156240085/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45022
https://api.github.com/repos/rails/rails/issues/comments/1156449305,https://github.com/rails/rails/pull/45022#issuecomment-1156449305,https://api.github.com/repos/rails/rails/issues/45022,1156449305,IC_kwDNIULORO4EGQ,"{'login': 'matthewd', 'id': 1034, 'node_id': 'MDQ6VXNlcjEwMzQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1034?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/matthewd', 'html_url': 'https://github.com/matthewd', 'followers_url': 'https://api.github.com/users/matthewd/followers', 'following_url': 'https://api.github.com/users/matthewd/following{/other_user}', 'gists_url': 'https://api.github.com/users/matthewd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/matthewd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/matthewd/subscriptions', 'organizations_url': 'https://api.github.com/users/matthewd/orgs', 'repos_url': 'https://api.github.com/users/matthewd/repos', 'events_url': 'https://api.github.com/users/matthewd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/matthewd/received_events', 'type': 'User', 'site_admin': True}",2022-06-15T13:07:14Z,2022-06-15T13:07:14Z,MEMBER,Sorry I haven't responded to this! I think it sounds fine... I've just been sitting on it to save myself a rebase on #44576 / #44591.,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1156449305/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}",,45022
https://api.github.com/repos/rails/rails/issues/comments/1180337723,https://github.com/rails/rails/pull/45022#issuecomment-1180337723,https://api.github.com/repos/rails/rails/issues/45022,1180337723,IC_kwDNIULORlqGOw,"{'login': 'bpaquet', 'id': 337117, 'node_id': 'MDQ6VXNlcjMzNzExNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/337117?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bpaquet', 'html_url': 'https://github.com/bpaquet', 'followers_url': 'https://api.github.com/users/bpaquet/followers', 'following_url': 'https://api.github.com/users/bpaquet/following{/other_user}', 'gists_url': 'https://api.github.com/users/bpaquet/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bpaquet/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bpaquet/subscriptions', 'organizations_url': 'https://api.github.com/users/bpaquet/orgs', 'repos_url': 'https://api.github.com/users/bpaquet/repos', 'events_url': 'https://api.github.com/users/bpaquet/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bpaquet/received_events', 'type': 'User', 'site_admin': False}",2022-07-11T12:16:21Z,2022-07-11T12:16:21Z,NONE,Ping :),"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1180337723/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45022
https://api.github.com/repos/rails/rails/issues/comments/1120146815,https://github.com/rails/rails/pull/45021#issuecomment-1120146815,https://api.github.com/repos/rails/rails/issues/45021,1120146815,IC_kwDNIULOQsQVfw,"{'login': 'ghiculescu', 'id': 509837, 'node_id': 'MDQ6VXNlcjUwOTgzNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/509837?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghiculescu', 'html_url': 'https://github.com/ghiculescu', 'followers_url': 'https://api.github.com/users/ghiculescu/followers', 'following_url': 'https://api.github.com/users/ghiculescu/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghiculescu/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghiculescu/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghiculescu/subscriptions', 'organizations_url': 'https://api.github.com/users/ghiculescu/orgs', 'repos_url': 'https://api.github.com/users/ghiculescu/repos', 'events_url': 'https://api.github.com/users/ghiculescu/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghiculescu/received_events', 'type': 'User', 'site_admin': False}",2022-05-07T06:36:51Z,2022-05-07T06:38:14Z,MEMBER,"> Is there a reason not to leave original values?

I've seen this behaviour too and also find it confusing. In this case I'm assuming it's because otherwise `options.each { |k, v| send(""#{k}="", v) }` will raise. But there's surely a less confusing way to write this.

cc @byroot as this kinda relates to the broader thoughts around how configuration should work - if you add `config.freeze` it's probably going to break in all these unrelated cases.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1120146815/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45021
https://api.github.com/repos/rails/rails/issues/comments/1120148696,https://github.com/rails/rails/pull/45021#issuecomment-1120148696,https://api.github.com/repos/rails/rails/issues/45021,1120148696,IC_kwDNIULOQsQc2A,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-05-07T06:50:35Z,2022-05-07T06:50:35Z,MEMBER,"Yep, It's also something I don't really like.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1120148696/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,45021
https://api.github.com/repos/rails/rails/issues/comments/1120768765,https://github.com/rails/rails/pull/44991#issuecomment-1120768765,https://api.github.com/repos/rails/rails/issues/44991,1120768765,IC_kwDNIULOQs2S_Q,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-05-09T07:57:53Z,2022-05-09T07:57:53Z,MEMBER,"To be honest I don't like that we're requiring it last minute like this, it's really no good for performance.

Isn't there a way we could require it as part of boot?
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1120768765/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,44991
https://api.github.com/repos/rails/rails/issues/comments/1121709708,https://github.com/rails/rails/pull/44991#issuecomment-1121709708,https://api.github.com/repos/rails/rails/issues/44991,1121709708,IC_kwDNIULOQtvujA,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-05-10T00:23:00Z,2022-05-10T00:23:00Z,MEMBER,"> To be honest I don't like that we're requiring it last minute like this, it's really no good for performance.
> 
> Isn't there a way we could require it as part of boot?

I agree that its not ideal. The issue is that any early require for `ruby-vips` would suddenly lead to errors requiring `rails/all` without the `libvips` library. 

If you have any ideas or want to discuss I'm definitely open to suggestions.

My only thought right now is making `variant_processor` `nil` by default and only loading the `vips`/`minimagick` specific files if `variant_processor` gets configured in an app, but that would be strange because the default `variant_processor` just changed in `load_defaults 7.0`.","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1121709708/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,44991
https://api.github.com/repos/rails/rails/issues/comments/1122230484,https://github.com/rails/rails/pull/44991#issuecomment-1122230484,https://api.github.com/repos/rails/rails/issues/44991,1122230484,IC_kwDNIULOQuPg1A,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-05-10T10:50:23Z,2022-05-10T10:50:23Z,MEMBER,"I'm really not very familiar with active storage, but I see we have `config.active_storage.variant_processor = :vips`, so that means we can require it from an initializer block. That should do, no?","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1122230484/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,44991
https://api.github.com/repos/rails/rails/issues/comments/1122303495,https://github.com/rails/rails/pull/44991#issuecomment-1122303495,https://api.github.com/repos/rails/rails/issues/44991,1122303495,IC_kwDNIULOQuT-Bw,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-05-10T12:07:13Z,2022-05-10T12:07:13Z,MEMBER,"> I'm really not very familiar with active storage, but I see we have `config.active_storage.variant_processor = :vips`, so that means we can require it from an initializer block. That should do, no?

Right, we could use that to require `ImageAnalyzer::Vips` or `ImageProcessing::Vips` in the initializer. However, how do we differentiate between people that want to use Active Storage and those that don't when requiring `rails/all`? When `ImageProcessing::Vips` is required, it requires `ruby-vips`, which will throw the `Could not open library 'libvips.so.42': libvips.so.42: cannot open shared object file: No such file or directory` error unless the `libvips` library is installed. I don't think making people install `libvips` if they don't use Active Storage would be a good idea","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1122303495/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,44991
https://api.github.com/repos/rails/rails/issues/comments/1122325217,https://github.com/rails/rails/pull/44991#issuecomment-1122325217,https://api.github.com/repos/rails/rails/issues/44991,1122325217,IC_kwDNIULOQuVS4Q,"{'login': 'byroot', 'id': 44640, 'node_id': 'MDQ6VXNlcjQ0NjQw', 'avatar_url': 'https://avatars.githubusercontent.com/u/44640?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/byroot', 'html_url': 'https://github.com/byroot', 'followers_url': 'https://api.github.com/users/byroot/followers', 'following_url': 'https://api.github.com/users/byroot/following{/other_user}', 'gists_url': 'https://api.github.com/users/byroot/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/byroot/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/byroot/subscriptions', 'organizations_url': 'https://api.github.com/users/byroot/orgs', 'repos_url': 'https://api.github.com/users/byroot/repos', 'events_url': 'https://api.github.com/users/byroot/events{/privacy}', 'received_events_url': 'https://api.github.com/users/byroot/received_events', 'type': 'User', 'site_admin': False}",2022-05-10T12:27:44Z,2022-05-10T12:27:44Z,MEMBER,"Yeah, I get that it's a thought one, as there's basically no way to tell the difference during boot :/

That being said, I think failing to boot is always preferable to failing at runtime.

What would you think about trying to load `vips` from an initializers, and if it fails print a warning that tells to either fix it or disable transforms (is that even possible today? can we set `config.active_storage.variant_processor = nil` ?)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1122325217/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,44991
https://api.github.com/repos/rails/rails/issues/comments/1122356062,https://github.com/rails/rails/pull/44991#issuecomment-1122356062,https://api.github.com/repos/rails/rails/issues/44991,1122356062,IC_kwDNIULOQuXLXg,"{'login': 'skipkayhil', 'id': 6014046, 'node_id': 'MDQ6VXNlcjYwMTQwNDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6014046?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/skipkayhil', 'html_url': 'https://github.com/skipkayhil', 'followers_url': 'https://api.github.com/users/skipkayhil/followers', 'following_url': 'https://api.github.com/users/skipkayhil/following{/other_user}', 'gists_url': 'https://api.github.com/users/skipkayhil/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/skipkayhil/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/skipkayhil/subscriptions', 'organizations_url': 'https://api.github.com/users/skipkayhil/orgs', 'repos_url': 'https://api.github.com/users/skipkayhil/repos', 'events_url': 'https://api.github.com/users/skipkayhil/events{/privacy}', 'received_events_url': 'https://api.github.com/users/skipkayhil/received_events', 'type': 'User', 'site_admin': False}",2022-05-10T12:57:54Z,2022-05-10T12:57:54Z,MEMBER,"> What would you think about trying to load `vips` from an initializers, and if it fails print a warning that tells to either fix it or disable transforms (is that even possible today? can we set `config.active_storage.variant_processor = nil` ?)

Got it, I think something like that should work (probably going to get around to this tomorrow as it will be a bigger change)","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1122356062/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,44991
https://api.github.com/repos/rails/rails/issues/comments/1112679084,https://github.com/rails/rails/pull/44976#issuecomment-1112679084,https://api.github.com/repos/rails/rails/issues/44976,1112679084,IC_kwDNIULOQlIirA,"{'login': 'p8', 'id': 28561, 'node_id': 'MDQ6VXNlcjI4NTYx', 'avatar_url': 'https://avatars.githubusercontent.com/u/28561?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/p8', 'html_url': 'https://github.com/p8', 'followers_url': 'https://api.github.com/users/p8/followers', 'following_url': 'https://api.github.com/users/p8/following{/other_user}', 'gists_url': 'https://api.github.com/users/p8/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/p8/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/p8/subscriptions', 'organizations_url': 'https://api.github.com/users/p8/orgs', 'repos_url': 'https://api.github.com/users/p8/repos', 'events_url': 'https://api.github.com/users/p8/events{/privacy}', 'received_events_url': 'https://api.github.com/users/p8/received_events', 'type': 'User', 'site_admin': False}",2022-04-28T21:40:56Z,2022-04-28T21:40:56Z,MEMBER,Nice! Seems like @kaspth is working on something similar: https://github.com/kaspth/action_controller-stashed_redirects,"{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1112679084/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}",,44976
https://api.github.com/repos/rails/rails/issues/comments/1113468039,https://github.com/rails/rails/pull/44976#issuecomment-1113468039,https://api.github.com/repos/rails/rails/issues/44976,1113468039,IC_kwDNIULOQl4shw,"{'login': 'jonathanhefner', 'id': 771968, 'node_id': 'MDQ6VXNlcjc3MTk2OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/771968?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jonathanhefner', 'html_url': 'https://github.com/jonathanhefner', 'followers_url': 'https://api.github.com/users/jonathanhefner/followers', 'following_url': 'https://api.github.com/users/jonathanhefner/following{/other_user}', 'gists_url': 'https://api.github.com/users/jonathanhefner/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jonathanhefner/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jonathanhefner/subscriptions', 'organizations_url': 'https://api.github.com/users/jonathanhefner/orgs', 'repos_url': 'https://api.github.com/users/jonathanhefner/repos', 'events_url': 'https://api.github.com/users/jonathanhefner/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jonathanhefner/received_events', 'type': 'User', 'site_admin': False}",2022-04-29T15:48:35Z,2022-04-29T15:48:35Z,MEMBER,"> Seems like kaspth is working on something similar: https://github.com/kaspth/action_controller-stashed_redirects

Indeed!  Though it uses a different approach.  I discussed the difference a bit in kaspth/action_controller-stashed_redirects#3.  Based on that discussion, I decided to submit this PR. :smiley:
","{'url': 'https://api.github.com/repos/rails/rails/issues/comments/1113468039/reactions', 'total_count': 2, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}",,44976
